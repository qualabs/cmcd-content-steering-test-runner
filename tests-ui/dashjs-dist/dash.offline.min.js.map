{"version":3,"file":"dash.offline.min.js","mappings":"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,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,KAAM,CAAC,OAAQ,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,UAAW,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,QAAS,CAAC,MAAO,CAAC,KAAM,CAAC,MAAO,CAAC,KAAM,CAAC,SAAU,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,WAAY,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,WAAY,CAAC,QAAS,CAAC,SAAU,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,UAAW,CAAC,OAAQ,CAAC,WAAY,CAAC,QAAS,CAAC,SAAU,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,UAAW,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,SAAU,CAAC,QAAS,CAAC,KAAM,CAAC,OAAQ,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,KAAM,CAAC,gBAAiB,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,WAAY,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CA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AC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,QAAS,CAAC,MAAO,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,SAAU,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,OAAU,CAAC,QAAS,CAAC,OAAQ,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,WAAY,CAAC,QAAS,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,SAAU,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,aAAc,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,OAAQ,CAAC,UAAW,CAAC,QAAS,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,QAAS,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,QAAS,CAAC,UAAW,CAAC,QAAS,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,QAAS,CAAC,SAAU,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,QAAS,CA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AC,KAAM,OAAQ,CAAC,SAAU,CAAC,QAAS,CAAC,UAAW,CAAC,KAAM,OAAQ,CAAC,QAAS,CAAC,KAAM,OAAQ,CAAC,SAAU,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,UAAW,CAAC,OAAQ,CAAC,SAAU,CAAC,QAAS,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,QAAS,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,QAAS,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,OAAQ,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,MAAO,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,MAAO,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,QAAS,CAAC,UAAW,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,MAAO,CAAC,QAAS,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,UAAW,CAAC,MAAO,CAAC,UAAW,CAAC,MAAO,CAAC,OAAQ,CAAC,QAAS,CAAC,SAAU,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,QAAS,CAAC,uBAAwB,CAAC,OAAQ,CAAC,iBAAkB,CAAC,OAAQ,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,KAAM,CAAC,QAAS,CAAC,KAAM,CAAC,OAAQ,CAAC,MAAO,CAAC,QAAS,CAAC,QAAS,CAA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M,CAAC,MAAO,CAAC,KAAM,CAAC,MAAO,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,QAAS,CAAC,OAAQ,CAAC,OAAQ,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,SAAU,CAAC,QAAS,CAAC,SAAU,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,SAAU,CAAC,QAAS,CAAC,SAAU,CAAC,QAAS,CAAC,QAAS,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,QAAS,CAAC,MAAO,CAAC,QAAS,CAAC,MAAO,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,MAAO,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,SAAU,CAAC,OAAQ,CAAC,iBAAkB,CAAC,OAAQ,CAAC,OAAQ,CAAC,MAAO,CAAC,OAAQ,CAAC,MAAO,CAAC,MAAO,CAAC,SAAU,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,UAAW,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,OAAQ,CAAC,OAAQ,CAAC,SAAU,CAAC,OAAQ,CAAC,SAAU,CAAC,MAAO,CAAC,OAAQ,CAAC,OAAQ,CAAC,QAEvi3Cb,EAAa,CAAC,EACdc,EAAY,CAAC,EAOjB,SAASlB,IAAiB,EA2J1B,SAAuBI,EAAYc,GAG/B,IAFA,IAAI1J,EAAIyJ,EAASnQ,OACbqQ,EAAW,GACR3J,KAAK,CACR,IAKI4J,EALAC,EAAIJ,EAASzJ,GACbqJ,EAAQQ,EAAE,GACVC,EAAQD,EAAE,GACVb,EAAMc,EAAM,GACZC,EAAWf,EAAM,IAAMA,EAAM,KAAgB,KAARA,GAAsB,KAARA,GAAsB,KAARA,GAAsB,KAARA,GAAsB,KAARA,EAKjG,GAHIe,IACAH,EAAWF,EAAUV,GAAOU,EAAUV,IAAQ,CAAC,GAE/Cc,EAAM,GAAI,CACV,IAAIE,EAAOF,EAAM,GACjBlB,EAAWS,GAASnO,OAAOkF,aAAa4I,GAAO9N,OAAOkF,aAAa4J,GACnEL,EAASnQ,KAAKuQ,IAAYH,EAASI,GAAQX,GAC/C,MACIT,EAAWS,GAASnO,OAAOkF,aAAa4I,GACxCW,EAASnQ,KAAKuQ,IAAYH,EAAS,IAAMP,GAEjD,CACJ,CAtLAY,CAAcrB,EAAYc,GAW1BlB,EAAc1J,UAAUgB,OAAS,SAASuE,GACtC,OAAKA,GAAQA,EAAI/K,OAGV+K,EAAIhJ,QAAQ,mBAAmB,SAASyN,EAAGC,GAC9C,IAAIC,EACJ,GAAyB,MAArBD,EAAOzO,OAAO,GAAY,CAC1B,IAAI+D,EAA4B,MAArB0K,EAAOzO,OAAO,GACrB2O,SAASF,EAAOG,OAAO,GAAG3P,cAAe,IACzC0P,SAASF,EAAOG,OAAO,IAErBC,MAAM9K,IAASA,GAAQ,OAASA,EAAO,QACzC2K,EAAM9N,OAAOkF,aAAa/B,GAElC,MACI2K,EAAMJ,EAAWG,GAErB,OAAOC,GAAOF,CAClB,IAhBW,EAiBf,EAMCN,EAAc1I,OAAS,SAASuE,GAC7B,OAAO,IAAImE,GAAgB1I,OAAOuE,EACrC,EAMDmE,EAAc1J,UAAU2B,OAAS,SAAS4D,GACtC,IAAKA,IAAQA,EAAI/K,OACb,MAAO,GAKX,IAHA,IAAI8P,EAAY/E,EAAI/K,OAChB4D,EAAS,GACT8C,EAAI,EACDA,EAAIoJ,GAAW,CAClB,IAAIQ,EAAWF,EAAUrF,EAAIlG,WAAW6B,IACxC,GAAI4J,EAAU,CACV,IAAIP,EAAQO,EAASvF,EAAIlG,WAAW6B,EAAI,IAMxC,GALIqJ,EACArJ,IAEAqJ,EAAQO,EAAS,IAEjBP,EAAO,CACPnM,GAAU,IAAMmM,EAAQ,IACxBrJ,IACA,QACJ,CACJ,CACA9C,GAAUmH,EAAI/J,OAAO0F,GACrBA,GACJ,CACA,OAAO9C,CACX,EAMCsL,EAAc/H,OAAS,SAAS4D,GAC7B,OAAO,IAAImE,GAAgB/H,OAAO4D,EACrC,EAMDmE,EAAc1J,UAAUwK,aAAe,SAASjF,GAC5C,IAAKA,IAAQA,EAAI/K,OACb,MAAO,GAKX,IAHA,IAAI8P,EAAY/E,EAAI/K,OAChB4D,EAAS,GACT8C,EAAI,EACDA,EAAIoJ,GAAW,CAClB,IAAIlJ,EAAImE,EAAIlG,WAAW6B,GACnB4J,EAAWF,EAAUxJ,GACzB,GAAI0J,EAAU,CACV,IAAIP,EAAQO,EAASvF,EAAIlG,WAAW6B,EAAI,IAMxC,GALIqJ,EACArJ,IAEAqJ,EAAQO,EAAS,IAEjBP,EAAO,CACPnM,GAAU,IAAMmM,EAAQ,IACxBrJ,IACA,QACJ,CACJ,CAEI9C,GADAgD,EAAI,IAAMA,EAAI,IACJ,KAAOA,EAAI,IAEXmE,EAAI/J,OAAO0F,GAEzBA,GACJ,CACA,OAAO9C,CACX,EAMCsL,EAAcc,aAAe,SAASjF,GACnC,OAAO,IAAImE,GAAgBc,aAAajF,EAC3C,EAMDmE,EAAc1J,UAAU0K,eAAiB,SAASnF,GAC9C,IAAKA,IAAQA,EAAI/K,OACb,MAAO,GAKX,IAHA,IAAI8P,EAAY/E,EAAI/K,OAChB4D,EAAS,GACT8C,EAAI,EACDA,EAAIoJ,GAAW,CAClB,IAAIlJ,EAAImE,EAAIlG,WAAW6B,GACnBE,GAAK,IACLhD,GAAUmH,EAAIrE,MAGlB9C,GAAU,KAAOgD,EAAI,IACrBF,IACJ,CACA,OAAO9C,CACX,EAMCsL,EAAcgB,eAAiB,SAASnF,GACrC,OAAO,IAAImE,GAAgBgB,eAAenF,EAC7C,EA8BD/L,EAAOD,QAAUmQ,oBC7LjB,IAAI0B,EAAc,CACd,MAAO,IACP,MAAO,IACP,QAAS,IACT,QAAS,IACT,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,SAAU,IACV,SAAU,IACV,QAAS,KAGTC,EAAa,CACb,GAAI,KACJ,GAAI,KACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OAGJC,EAAe,CACf,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAM,SACN,IAAK,SAMT,SAAS9B,IAAe,CAMxBA,EAAYxJ,UAAU2B,OAAS,SAAS4D,GACpC,OAAKA,GAAQA,EAAI/K,OAGV+K,EAAIhJ,QAAQ,cAAc,SAASyN,GACtC,OAAOsB,EAAatB,EACxB,IAJW,EAKf,EAMCR,EAAY7H,OAAS,SAAS4D,GAC3B,OAAO,IAAIiE,GAAc7H,OAAO4D,EACnC,EAMDiE,EAAYxJ,UAAUgB,OAAS,SAASuE,GACpC,OAAKA,GAAQA,EAAI/K,OAGV+K,EAAIhJ,QAAQ,sBAAsB,SAASyN,GAC9C,GAAoB,MAAhBA,EAAExO,OAAO,GAAY,CACrB,IAAI+D,EAAqC,MAA9ByK,EAAExO,OAAO,GAAGf,cACnB0P,SAASH,EAAEI,OAAO,GAAI,IACtBD,SAASH,EAAEI,OAAO,IAEtB,OAAIC,MAAM9K,IAASA,GAAQ,OAASA,EAAO,MAChC,GAEJnD,OAAOkF,aAAa/B,EAC/B,CACA,OAAO6L,EAAYpB,IAAMA,CAC7B,IAdW,EAef,EAMCR,EAAYxI,OAAS,SAASuE,GAC3B,OAAO,IAAIiE,GAAcxI,OAAOuE,EACnC,EAMDiE,EAAYxJ,UAAUwK,aAAe,SAASjF,GAC1C,IAAKA,IAAQA,EAAI/K,OACb,MAAO,GAKX,IAHA,IAAI8P,EAAY/E,EAAI/K,OAChB4D,EAAS,GACT8C,EAAI,EACDA,EAAIoJ,GAAW,CAClB,IAAIlJ,EAAImE,EAAIlG,WAAW6B,GACnBqJ,EAAQc,EAAWjK,GACnBmJ,GACAnM,GAAU,IAAMmM,EAAQ,IACxBrJ,MAIA9C,GADAgD,EAAI,IAAMA,EAAI,IACJ,KAAOA,EAAI,IAEXmE,EAAI/J,OAAO0F,GAEzBA,IACJ,CACA,OAAO9C,CACX,EAMCoL,EAAYgB,aAAe,SAASjF,GACjC,OAAO,IAAIiE,GAAcgB,aAAajF,EACzC,EAMDiE,EAAYxJ,UAAU0K,eAAiB,SAASnF,GAC5C,IAAKA,IAAQA,EAAI/K,OACb,MAAO,GAKX,IAHA,IAAI+Q,EAAYhG,EAAI/K,OAChB4D,EAAS,GACT8C,EAAI,EACDA,EAAIqK,GAAW,CAClB,IAAInK,EAAImE,EAAIlG,WAAW6B,GACnBE,GAAK,IACLhD,GAAUmH,EAAIrE,MAGlB9C,GAAU,KAAOgD,EAAI,IACrBF,IACJ,CACA,OAAO9C,CACX,EAMCoL,EAAYkB,eAAiB,SAASnF,GACnC,OAAO,IAAIiE,GAAckB,eAAenF,EAC3C,EAED/L,EAAOD,QAAUiQ,iCCxJjBhQ,EAAOD,QAIP,SAAsBiS,GACpB,IAAIjM,EAA4B,iBAAdiM,EAAyBA,EAAUnM,WAAW,GAAKmM,EAErE,OACGjM,GAAQ,IAAMA,GAAQ,KACtBA,GAAQ,IAAMA,GAAQ,EAE3B,qCCXA,IAAIZ,EAAe,EAAQ,MACvBC,EAAU,EAAQ,KAEtBpF,EAAOD,QAIP,SAAwBiS,GACtB,OAAO7M,EAAa6M,IAAc5M,EAAQ4M,EAC5C,gCCTAhS,EAAOD,QAIP,SAAiBiS,GACf,IAAIjM,EAA4B,iBAAdiM,EAAyBA,EAAUnM,WAAW,GAAKmM,EAErE,OAAOjM,GAAQ,IAAMA,GAAQ,EAC/B,wBCJwE/F,EAAOD,QAAoS,SAAUwR,EAAEU,EAAEC,EAAEC,GAAG,SAAS3B,EAAE4B,EAAEnK,GAAG,IAAIiK,EAAEE,GAAG,CAAC,IAAIH,EAAEG,GAAG,CAAmE,GAAG1K,EAAE,OAAOA,EAAE0K,GAAE,GAAI,IAAIC,EAAE,IAAI9Q,MAAM,uBAAuB6Q,EAAE,KAAK,MAAOC,EAAEtM,KAAK,mBAAoBsM,CAAE,CAAC,IAAIC,EAAEJ,EAAEE,GAAG,CAACrS,QAAQ,CAAC,GAAGkS,EAAEG,GAAG,GAAGvO,KAAKyO,EAAEvS,SAAQ,SAASwR,GAAoB,OAAOf,EAAlByB,EAAEG,GAAG,GAAGb,IAAgBA,EAAE,GAAEe,EAAEA,EAAEvS,QAAQwR,EAAEU,EAAEC,EAAEC,EAAE,CAAC,OAAOD,EAAEE,GAAGrS,OAAO,CAA2C,IAA1C,IAAI2H,OAAE,EAA4C0K,EAAE,EAAEA,EAAED,EAAEnR,OAAOoR,IAAI5B,EAAE2B,EAAEC,IAAI,OAAO5B,CAAE,CAA5b,CAA8b,CAAC,EAAE,CAAC,SAAS+B,EAAQvS,EAAOD,IAC70B,SAAWyS,GACX,aACA,IAEIC,EAyCAC,EA3CAC,EAAWH,EAAOI,kBAAoBJ,EAAOK,uBAK/C,GAAIF,EAAU,CACZ,IAAIG,EAAS,EACTC,EAAW,IAAIJ,EAASK,GACxBC,EAAUT,EAAOU,SAASC,eAAe,IAC7CJ,EAASK,QAAQH,EAAS,CACxBI,eAAe,IAEjBZ,EAAgB,WACdQ,EAAQhH,KAAQ6G,IAAWA,EAAS,CACtC,CACF,MAAO,GAAKN,EAAOc,mBAAiD,IAA1Bd,EAAOe,eAO/Cd,EADS,aAAcD,GAAU,uBAAwBA,EAAOU,SAASM,cAAc,UACvE,WAId,IAAIC,EAAWjB,EAAOU,SAASM,cAAc,UAC7CC,EAASC,mBAAqB,WAC5BV,IAEAS,EAASC,mBAAqB,KAC9BD,EAASE,WAAWC,YAAYH,GAChCA,EAAW,IACb,EACAjB,EAAOU,SAASW,gBAAgBC,YAAYL,EAC9C,EAEgB,WACdM,WAAWf,EAAU,EACvB,MAxB+E,CAC/E,IAAIgB,EAAU,IAAIxB,EAAOe,eACzBS,EAAQC,MAAMC,UAAYlB,EAC1BP,EAAgB,WACduB,EAAQG,MAAMC,YAAY,EAC5B,CACF,CAuBF,IAAIC,EAAQ,GAEZ,SAASrB,IAEP,IAAItL,EAAG4M,EADP5B,GAAW,EAGX,IADA,IAAI6B,EAAMF,EAAMrT,OACTuT,GAAK,CAIV,IAHAD,EAAWD,EACXA,EAAQ,GACR3M,GAAK,IACIA,EAAI6M,GACXD,EAAS5M,KAEX6M,EAAMF,EAAMrT,MACd,CACA0R,GAAW,CACb,CAEA1S,EAAOD,QACP,SAAmByU,GACQ,IAArBH,EAAMnT,KAAKsT,IAAgB9B,GAC7BD,GAEJ,CAEC,GAAE5O,KAAKsF,UAAuB,IAAX,EAAAsL,EAAyB,EAAAA,EAAyB,oBAATtU,KAAuBA,KAAyB,oBAAXuU,OAAyBA,OAAS,CAAC,EACrI,EAAE,CAAC,GAAG,EAAE,CAAC,SAASnC,EAAQvS,EAAOD,GACjC,aACA,IAAI4U,EAAYpC,EAAQ,GAGxB,SAASqC,IAAY,CAErB,IAAIC,EAAW,CAAC,EAEZC,EAAW,CAAC,YACZC,EAAY,CAAC,aACbC,EAAU,CAAC,WAIf,SAASC,EAAQC,GACf,GAAwB,mBAAbA,EACT,MAAM,IAAIC,UAAU,+BAEtBhM,KAAKiM,MAAQJ,EACb7L,KAAKkL,MAAQ,GACblL,KAAKkM,aAAU,EACXH,IAAaN,GACfU,EAAsBnM,KAAM+L,EAEhC,CAoBA,SAASK,EAAUC,EAASC,EAAaC,GACvCvM,KAAKqM,QAAUA,EACY,mBAAhBC,IACTtM,KAAKsM,YAAcA,EACnBtM,KAAKwM,cAAgBxM,KAAKyM,oBAEF,mBAAfF,IACTvM,KAAKuM,WAAaA,EAClBvM,KAAK0M,aAAe1M,KAAK2M,kBAE7B,CAcA,SAASC,EAAOP,EAASQ,EAAM1U,GAC7BqT,GAAU,WACR,IAAIsB,EACJ,IACEA,EAAcD,EAAK1U,EAGrB,CAFE,MAAOiQ,GACP,OAAOsD,EAASqB,OAAOV,EAASjE,EAClC,CACI0E,IAAgBT,EAClBX,EAASqB,OAAOV,EAAS,IAAIL,UAAU,uCAEvCN,EAASsB,QAAQX,EAASS,EAE9B,GACF,CAiCA,SAASG,EAAQC,GAEf,IAAIC,EAAOD,GAAOA,EAAIC,KACtB,GAAID,IAAuB,iBAARA,GAAmC,mBAARA,IAAuC,mBAATC,EAC1E,OAAO,WACLA,EAAKC,MAAMF,EAAKG,UAClB,CAEJ,CAEA,SAASlB,EAAsBnV,EAAMsW,GAEnC,IAAI3D,GAAS,EACb,SAAS4D,EAAQpV,GACXwR,IAGJA,GAAS,EACT+B,EAASqB,OAAO/V,EAAMmB,GACxB,CAEA,SAASqV,EAAUrV,GACbwR,IAGJA,GAAS,EACT+B,EAASsB,QAAQhW,EAAMmB,GACzB,CAMA,IAAIsD,EAASgS,GAJb,WACEH,EAASE,EAAWD,EACtB,IAGsB,UAAlB9R,EAAOiS,QACTH,EAAQ9R,EAAOtD,MAEnB,CAEA,SAASsV,EAASZ,EAAM1U,GACtB,IAAIwV,EAAM,CAAC,EACX,IACEA,EAAIxV,MAAQ0U,EAAK1U,GACjBwV,EAAID,OAAS,SAIf,CAHE,MAAOtF,GACPuF,EAAID,OAAS,QACbC,EAAIxV,MAAQiQ,CACd,CACA,OAAOuF,CACT,CAxJA9W,EAAOD,QAAUkV,EAcjBA,EAAQzO,UAAiB,MAAI,SAAUkP,GACrC,OAAOvM,KAAKmN,KAAK,KAAMZ,EACzB,EACAT,EAAQzO,UAAU8P,KAAO,SAAUb,EAAaC,GAC9C,GAA2B,mBAAhBD,GAA8BtM,KAAKiM,QAAUL,GAChC,mBAAfW,GAA6BvM,KAAKiM,QAAUN,EACnD,OAAO3L,KAET,IAAIqM,EAAU,IAAIrM,KAAK4N,YAAYnC,GAQnC,OAPIzL,KAAKiM,QAAUJ,EAEjBe,EAAOP,EADQrM,KAAKiM,QAAUL,EAAYU,EAAcC,EAC9BvM,KAAKkM,SAE/BlM,KAAKkL,MAAMnT,KAAK,IAAIqU,EAAUC,EAASC,EAAaC,IAG/CF,CACT,EAYAD,EAAU/O,UAAUmP,cAAgB,SAAUrU,GAC5CuT,EAASsB,QAAQhN,KAAKqM,QAASlU,EACjC,EACAiU,EAAU/O,UAAUoP,mBAAqB,SAAUtU,GACjDyU,EAAO5M,KAAKqM,QAASrM,KAAKsM,YAAanU,EACzC,EACAiU,EAAU/O,UAAUqP,aAAe,SAAUvU,GAC3CuT,EAASqB,OAAO/M,KAAKqM,QAASlU,EAChC,EACAiU,EAAU/O,UAAUsP,kBAAoB,SAAUxU,GAChDyU,EAAO5M,KAAKqM,QAASrM,KAAKuM,WAAYpU,EACxC,EAkBAuT,EAASsB,QAAU,SAAUhW,EAAMmB,GACjC,IAAIsD,EAASgS,EAASR,EAAS9U,GAC/B,GAAsB,UAAlBsD,EAAOiS,OACT,OAAOhC,EAASqB,OAAO/V,EAAMyE,EAAOtD,OAEtC,IAAImV,EAAW7R,EAAOtD,MAEtB,GAAImV,EACFnB,EAAsBnV,EAAMsW,OACvB,CACLtW,EAAKiV,MAAQL,EACb5U,EAAKkV,QAAU/T,EAGf,IAFA,IAAIoG,GAAK,EACL6M,EAAMpU,EAAKkU,MAAMrT,SACZ0G,EAAI6M,GACXpU,EAAKkU,MAAM3M,GAAGiO,cAAcrU,EAEhC,CACA,OAAOnB,CACT,EACA0U,EAASqB,OAAS,SAAU/V,EAAM6W,GAChC7W,EAAKiV,MAAQN,EACb3U,EAAKkV,QAAU2B,EAGf,IAFA,IAAItP,GAAK,EACL6M,EAAMpU,EAAKkU,MAAMrT,SACZ0G,EAAI6M,GACXpU,EAAKkU,MAAM3M,GAAGmO,aAAamB,GAE7B,OAAO7W,CACT,EAqDA8U,EAAQkB,QACR,SAAiB7U,GACf,OAAIA,aAAiB6H,KACZ7H,EAEFuT,EAASsB,QAAQ,IAAIhN,KAAKyL,GAAWtT,EAC9C,EAEA2T,EAAQiB,OACR,SAAgBlQ,GACd,IAAIwP,EAAU,IAAIrM,KAAKyL,GACvB,OAAOC,EAASqB,OAAOV,EAASxP,EAClC,EAEAiP,EAAQgC,IACR,SAAaC,GACX,IAAI/W,EAAOgJ,KACX,GAAiD,mBAA7C/F,OAAOoD,UAAUuJ,SAASlM,KAAKqT,GACjC,OAAO/N,KAAK+M,OAAO,IAAIf,UAAU,qBAGnC,IAAIZ,EAAM2C,EAASlW,OACf8R,GAAS,EACb,IAAKyB,EACH,OAAOpL,KAAKgN,QAAQ,IAQtB,IALA,IAAI/U,EAAS,IAAIkM,MAAMiH,GACnB4C,EAAW,EACXzP,GAAK,EACL8N,EAAU,IAAIrM,KAAKyL,KAEdlN,EAAI6M,GACX6C,EAAYF,EAASxP,GAAIA,GAE3B,OAAO8N,EACP,SAAS4B,EAAY9V,EAAOoG,GAC1BvH,EAAKgW,QAAQ7U,GAAOgV,MAMpB,SAAwBe,GACtBjW,EAAOsG,GAAK2P,IACNF,IAAa5C,GAAQzB,IACzBA,GAAS,EACT+B,EAASsB,QAAQX,EAASpU,GAE9B,IAZyC,SAAU4V,GAC5ClE,IACHA,GAAS,EACT+B,EAASqB,OAAOV,EAASwB,GAE7B,GAQF,CACF,EAEA/B,EAAQqC,KACR,SAAcJ,GACZ,IAAI/W,EAAOgJ,KACX,GAAiD,mBAA7C/F,OAAOoD,UAAUuJ,SAASlM,KAAKqT,GACjC,OAAO/N,KAAK+M,OAAO,IAAIf,UAAU,qBAGnC,IAakB7T,EAbdiT,EAAM2C,EAASlW,OACf8R,GAAS,EACb,IAAKyB,EACH,OAAOpL,KAAKgN,QAAQ,IAMtB,IAHA,IAAIzO,GAAK,EACL8N,EAAU,IAAIrM,KAAKyL,KAEdlN,EAAI6M,GAIKjT,EAHP4V,EAASxP,GAIlBvH,EAAKgW,QAAQ7U,GAAOgV,MAAK,SAAUiB,GAC5BzE,IACHA,GAAS,EACT+B,EAASsB,QAAQX,EAAS+B,GAE9B,IAAG,SAAUP,GACNlE,IACHA,GAAS,EACT+B,EAASqB,OAAOV,EAASwB,GAE7B,IAZF,OAAOxB,CAcT,CAEA,EAAE,CAAC,EAAI,IAAI,EAAE,CAAC,SAASjD,EAAQvS,EAAOD,IACtC,SAAWyS,GACX,aAC8B,mBAAnBA,EAAOyC,UAChBzC,EAAOyC,QAAU1C,EAAQ,GAG1B,GAAE1O,KAAKsF,UAAuB,IAAX,EAAAsL,EAAyB,EAAAA,EAAyB,oBAATtU,KAAuBA,KAAyB,oBAAXuU,OAAyBA,OAAS,CAAC,EACrI,EAAE,CAAC,EAAI,IAAI,EAAE,CAAC,SAASnC,EAAQvS,EAAOD,GACtC,aAEA,IAAIyX,EAA4B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAwB,SAAUrB,GAAO,cAAcA,CAAK,EAAI,SAAUA,GAAO,OAAOA,GAAyB,mBAAXoB,QAAyBpB,EAAIU,cAAgBU,QAAUpB,IAAQoB,OAAOjR,UAAY,gBAAkB6P,CAAK,EA2B3Q,IAAIsB,EAvBJ,WAEI,IACI,GAAyB,oBAAdC,UACP,OAAOA,UAEX,GAA+B,oBAApBC,gBACP,OAAOA,gBAEX,GAA4B,oBAAjBC,aACP,OAAOA,aAEX,GAA0B,oBAAfC,WACP,OAAOA,WAEX,GAA2B,oBAAhBC,YACP,OAAOA,WAIf,CAFE,MAAOzG,GACL,MACJ,CACJ,CAEU0G,GAoCV,SAASC,EAAWC,EAAOC,GAEvBD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,CAAC,EAC5B,IACI,OAAO,IAAIC,KAAKF,EAAOC,EAW3B,CAVE,MAAO7G,GACL,GAAe,cAAXA,EAAElQ,KACF,MAAMkQ,EAIV,IAFA,IACI+G,EAAU,IADuB,oBAAhBC,YAA8BA,YAAuC,oBAAlBC,cAAgCA,cAA0C,oBAAnBC,eAAiCA,eAAiBC,mBAExKhR,EAAI,EAAGA,EAAIyQ,EAAMnX,OAAQ0G,GAAK,EACnC4Q,EAAQxR,OAAOqR,EAAMzQ,IAEzB,OAAO4Q,EAAQK,QAAQP,EAAW/R,KACtC,CACJ,CAIuB,oBAAZ4O,SAGP1C,EAAQ,GAEZ,IAAIqG,EAAY3D,QAEhB,SAAS4D,EAAgBrD,EAASsD,GAC1BA,GACAtD,EAAQc,MAAK,SAAU1R,GACnBkU,EAAS,KAAMlU,EACnB,IAAG,SAAUoS,GACT8B,EAAS9B,EACb,GAER,CAEA,SAAS+B,EAAoBvD,EAASsD,EAAUE,GACpB,mBAAbF,GACPtD,EAAQc,KAAKwC,GAGY,mBAAlBE,GACPxD,EAAe,MAAEwD,EAEzB,CAEA,SAASC,EAAazW,GAOlB,MALmB,iBAARA,IACP0W,QAAQC,KAAK3W,EAAM,2CACnBA,EAAMI,OAAOJ,IAGVA,CACX,CAEA,SAAS4W,IACL,GAAI5C,UAAUxV,QAAqD,mBAApCwV,UAAUA,UAAUxV,OAAS,GACxD,OAAOwV,UAAUA,UAAUxV,OAAS,EAE5C,CAKA,IAAIqY,EAA4B,mCAC5BC,OAAgB,EAChBC,EAAa,CAAC,EACdxJ,EAAW3M,OAAOoD,UAAUuJ,SAG5ByJ,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,GAI7B,IAHA,IAAI3Y,EAAS2Y,EAAI3Y,OACb4Y,EAAM,IAAIC,YAAY7Y,GACtB8Y,EAAM,IAAIlQ,WAAWgQ,GAChBlS,EAAI,EAAGA,EAAI1G,EAAQ0G,IACxBoS,EAAIpS,GAAKiS,EAAI9T,WAAW6B,GAE5B,OAAOkS,CACX,CA2CA,SAASG,EAAkBpC,GACvB,MAA6B,kBAAlB2B,EACAV,EAAUzC,QAAQmD,GA5BjC,SAAyC3B,GACrC,OAAO,IAAIiB,GAAU,SAAUzC,GAC3B,IAAI6D,EAAMrC,EAAIsC,YAAYZ,EAA2BI,GACjDS,EAAOhC,EAAW,CAAC,KACvB8B,EAAIG,YAAYd,GAA2Be,IAAIF,EAAM,OAErDF,EAAIK,QAAU,SAAU9I,GAGpBA,EAAE+I,iBACF/I,EAAEgJ,kBACFpE,GAAQ,EACZ,EAEA6D,EAAIQ,WAAa,WACb,IAAIC,EAAgBC,UAAUC,UAAUxY,MAAM,iBAC1CyY,EAAcF,UAAUC,UAAUxY,MAAM,UAG5CgU,EAAQyE,IAAgBH,GAAiB9J,SAAS8J,EAAc,GAAI,KAAO,GAC/E,CACJ,IAAU,OAAE,WACR,OAAO,CACX,GACJ,CAMWI,CAAgClD,GAAKrB,MAAK,SAAUhV,GAEvD,OADAgY,EAAgBhY,CAEpB,GACJ,CAEA,SAASwZ,EAAgBC,GACrB,IAAIC,EAAYzB,EAAWwB,EAAO1Z,MAG9B4Z,EAAoB,CAAC,EAEzBA,EAAkBzF,QAAU,IAAIoD,GAAU,SAAUzC,EAASD,GACzD+E,EAAkB9E,QAAUA,EAC5B8E,EAAkB/E,OAASA,CAC/B,IAGA8E,EAAUE,mBAAmBha,KAAK+Z,GAG7BD,EAAUG,QAGXH,EAAUG,QAAUH,EAAUG,QAAQ7E,MAAK,WACvC,OAAO2E,EAAkBzF,OAC7B,IAJAwF,EAAUG,QAAUF,EAAkBzF,OAM9C,CAEA,SAAS4F,EAAkBL,GACvB,IAGIE,EAHY1B,EAAWwB,EAAO1Z,MAGA6Z,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB9E,UACX8E,EAAkBzF,OAEjC,CAEA,SAAS8F,EAAiBP,EAAQQ,GAC9B,IAGIN,EAHY1B,EAAWwB,EAAO1Z,MAGA6Z,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB/E,OAAOqF,GAClBN,EAAkBzF,OAEjC,CAEA,SAASgG,EAAeT,EAAQU,GAC5B,OAAO,IAAI7C,GAAU,SAAUzC,EAASD,GAGpC,GAFAqD,EAAWwB,EAAO1Z,MAAQkY,EAAWwB,EAAO1Z,OAoNzC,CAEHqa,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IA1NhBH,EAAOY,GAAI,CACX,IAAIF,EAIA,OAAOtF,EAAQ4E,EAAOY,IAHtBb,EAAgBC,GAChBA,EAAOY,GAAGC,OAIlB,CAEA,IAAIC,EAAS,CAACd,EAAO1Z,MAEjBoa,GACAI,EAAO3a,KAAK6Z,EAAO/T,SAGvB,IAAI8U,EAAUnE,EAAIoE,KAAKxF,MAAMoB,EAAKkE,GAE9BJ,IACAK,EAAQE,gBAAkB,SAAUzK,GAChC,IAAIoK,EAAKG,EAAQlX,OACjB,IACI+W,EAAGM,kBAAkBlB,EAAOmB,WACxB3K,EAAE4K,YAAc,GAEhBR,EAAGM,kBAAkB5C,EAQ7B,CANE,MAAO+C,GACL,GAAgB,oBAAZA,EAAG/a,KAGH,MAAM+a,EAFNlD,QAAQC,KAAK,iBAAmB4B,EAAO1Z,KAA1B,oCAA4EkQ,EAAE4K,WAAa,eAAiB5K,EAAE8K,WAAa,sBAAwBtB,EAAOmB,UAAY,oBAI3L,CACJ,GAGJJ,EAAQQ,QAAU,SAAU/K,GACxBA,EAAE+I,iBACFpE,EAAO4F,EAAQ9E,MACnB,EAEA8E,EAAQS,UAAY,WAChBpG,EAAQ2F,EAAQlX,QAChBwW,EAAkBL,EACtB,CACJ,GACJ,CAEA,SAASyB,EAAuBzB,GAC5B,OAAOS,EAAeT,GAAQ,EAClC,CAEA,SAAS0B,EAAuB1B,GAC5B,OAAOS,EAAeT,GAAQ,EAClC,CAEA,SAAS2B,EAAiB3B,EAAQ4B,GAC9B,IAAK5B,EAAOY,GACR,OAAO,EAGX,IAAIiB,GAAc7B,EAAOY,GAAGkB,iBAAiBC,SAAS/B,EAAOmB,WACzDa,EAAchC,EAAO/T,QAAU+T,EAAOY,GAAG3U,QACzCgW,EAAYjC,EAAO/T,QAAU+T,EAAOY,GAAG3U,QAY3C,GAVI+V,IAGIhC,EAAO/T,UAAY2V,GACnBzD,QAAQC,KAAK,iBAAmB4B,EAAO1Z,KAA1B,uCAA8E0Z,EAAOY,GAAG3U,QAAU,eAAiB+T,EAAO/T,QAAU,KAGrJ+T,EAAO/T,QAAU+T,EAAOY,GAAG3U,SAG3BgW,GAAaJ,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIK,EAAalC,EAAOY,GAAG3U,QAAU,EACjCiW,EAAalC,EAAO/T,UACpB+T,EAAO/T,QAAUiW,EAEzB,CAEA,OAAO,CACX,CAEA,OAAO,CACX,CAoBA,SAASC,EAAYC,GAEjB,OAAOjF,EAAW,CADFwB,EAAwB0D,KAAKD,EAAYlR,QAC1B,CAAE5F,KAAM8W,EAAY9W,MACvD,CAGA,SAASgX,EAAe/b,GACpB,OAAOA,GAASA,EAAMgc,2BAC1B,CAMA,SAASC,EAAYzE,GACjB,IAAI3Y,EAAOgJ,KAEPqM,EAAUrV,EAAKqd,aAAalH,MAAK,WACjC,IAAI0E,EAAYzB,EAAWpZ,EAAKsd,QAAQpc,MAExC,GAAI2Z,GAAaA,EAAUG,QACvB,OAAOH,EAAUG,OAEzB,IAGA,OADApC,EAAoBvD,EAASsD,EAAUA,GAChCtD,CACX,CA0CA,SAASkI,EAAkB3C,EAAQ4C,EAAM7E,EAAU8E,QAC/Bzc,IAAZyc,IACAA,EAAU,GAGd,IACI,IAAIC,EAAK9C,EAAOY,GAAG1B,YAAYc,EAAOmB,UAAWyB,GACjD7E,EAAS,KAAM+E,EAoBnB,CAnBE,MAAOtC,GACL,GAAIqC,EAAU,KAAO7C,EAAOY,IAAmB,sBAAbJ,EAAIla,MAA6C,kBAAbka,EAAIla,MACtE,OAAOuX,EAAUzC,UAAUG,MAAK,WAC5B,IAAKyE,EAAOY,IAAmB,kBAAbJ,EAAIla,OAA6B0Z,EAAOY,GAAGkB,iBAAiBC,SAAS/B,EAAOmB,YAAcnB,EAAO/T,SAAW+T,EAAOY,GAAG3U,QAMpI,OAJI+T,EAAOY,KACPZ,EAAO/T,QAAU+T,EAAOY,GAAG3U,QAAU,GAGlCyV,EAAuB1B,EAEtC,IAAGzE,MAAK,WACJ,OAzDhB,SAAuByE,GACnBD,EAAgBC,GAKhB,IAHA,IAAIC,EAAYzB,EAAWwB,EAAO1Z,MAC9Bqa,EAAUV,EAAUU,QAEfhU,EAAI,EAAGA,EAAIgU,EAAQ1a,OAAQ0G,IAAK,CACrC,IAAIoW,EAASpC,EAAQhU,GACjBoW,EAAOL,QAAQ9B,KACfmC,EAAOL,QAAQ9B,GAAGC,QAClBkC,EAAOL,QAAQ9B,GAAK,KAE5B,CAGA,OAFAZ,EAAOY,GAAK,KAELa,EAAuBzB,GAAQzE,MAAK,SAAUqF,GAEjD,OADAZ,EAAOY,GAAKA,EACRe,EAAiB3B,GAEV0B,EAAuB1B,GAE3BY,CACX,IAAGrF,MAAK,SAAUqF,GAGdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3B,IAAK,IAAIjU,EAAI,EAAGA,EAAIgU,EAAQ1a,OAAQ0G,IAChCgU,EAAQhU,GAAG+V,QAAQ9B,GAAKA,CAEhC,IAAU,OAAE,SAAUJ,GAElB,MADAD,EAAiBP,EAAQQ,GACnBA,CACV,GACJ,CAwBuBwC,CAAchD,GAAQzE,MAAK,WAC9BoH,EAAkB3C,EAAQ4C,EAAM7E,EAAU8E,EAAU,EACxD,GACJ,IAAU,MAAE9E,GAGhBA,EAASyC,EACb,CACJ,CAulBA,IAAIyC,EAAe,CACfC,QAAS,eACTC,aAxkBJ,SAAsB3b,GAClB,IAAIpC,EAAOgJ,KACP4R,EAAS,CACTY,GAAI,MAGR,GAAIpZ,EACA,IAAK,IAAImF,KAAKnF,EACVwY,EAAOrT,GAAKnF,EAAQmF,GAK5B,IAAIsT,EAAYzB,EAAWwB,EAAO1Z,MAG7B2Z,IACDA,EA/BG,CAEHU,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IAyBpB3B,EAAWwB,EAAO1Z,MAAQ2Z,GAI9BA,EAAUU,QAAQxa,KAAKf,GAGlBA,EAAKqd,aACNrd,EAAKqd,WAAard,EAAKge,MACvBhe,EAAKge,MAAQZ,GAIjB,IAAIa,EAAe,GAEnB,SAASC,IAGL,OAAOzF,EAAUzC,SACrB,CAEA,IAAK,IAAImI,EAAI,EAAGA,EAAItD,EAAUU,QAAQ1a,OAAQsd,IAAK,CAC/C,IAAIR,EAAS9C,EAAUU,QAAQ4C,GAC3BR,IAAW3d,GAEXie,EAAald,KAAK4c,EAAON,aAAoB,MAAEa,GAEvD,CAGA,IAAI3C,EAAUV,EAAUU,QAAQzZ,MAAM,GAItC,OAAO2W,EAAU3B,IAAImH,GAAc9H,MAAK,WAGpC,OAFAyE,EAAOY,GAAKX,EAAUW,GAEfa,EAAuBzB,EAClC,IAAGzE,MAAK,SAAUqF,GAEd,OADAZ,EAAOY,GAAKA,EACRe,EAAiB3B,EAAQ5a,EAAKoe,eAAevX,SAEtCyV,EAAuB1B,GAE3BY,CACX,IAAGrF,MAAK,SAAUqF,GACdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3Bxb,EAAKsd,QAAU1C,EAEf,IAAK,IAAIyD,EAAI,EAAGA,EAAI9C,EAAQ1a,OAAQwd,IAAK,CACrC,IAAIV,EAASpC,EAAQ8C,GACjBV,IAAW3d,IAEX2d,EAAOL,QAAQ9B,GAAKZ,EAAOY,GAC3BmC,EAAOL,QAAQzW,QAAU+T,EAAO/T,QAExC,CACJ,GACJ,EA4fIyX,SAjhCJ,WACI,IAGI,IAAK9G,EACD,OAAO,EAMX,IAAI+G,EAAmC,oBAAjBC,cAAgC,4BAA4BC,KAAKlE,UAAUC,aAAe,SAASiE,KAAKlE,UAAUC,aAAe,aAAaiE,KAAKlE,UAAUmE,UAE/KC,EAA4B,mBAAVzV,QAAsE,IAA9CA,MAAM0G,WAAWrO,QAAQ,gBAIvE,QAASgd,GAAYI,IAAkC,oBAAdlH,WAKlB,oBAAhBmH,WAGX,CAFE,MAAOxN,GACL,OAAO,CACX,CACJ,CAu/BcyN,GACVC,QAjdJ,SAAiBvH,EAAUoB,GACvB,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACdoH,EAAkBvd,EAAKsd,QAASjE,GAAW,SAAU+B,EAAKtB,GACtD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IACI2D,EADQjF,EAAYE,YAAYha,EAAKsd,QAAQvB,WACjCiD,aACZC,EAAkB,EAEtBF,EAAI3C,UAAY,WACZ,IAAI8C,EAASH,EAAIta,OAEjB,GAAIya,EAAQ,CACR,IAAI/d,EAAQ+d,EAAO/d,MACf+b,EAAe/b,KACfA,EAAQ4b,EAAY5b,IAExB,IAAIsD,EAAS8S,EAASpW,EAAO+d,EAAO7c,IAAK4c,UAK1B,IAAXxa,EACAuR,EAAQvR,GAERya,EAAiB,UAEzB,MACIlJ,GAER,EAEA+I,EAAI5C,QAAU,WACVpG,EAAOgJ,EAAIlI,MACf,CAGJ,CAFE,MAAOzF,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAIA,OAFA2C,EAAgBrD,EAASsD,GAElBtD,CACX,EA+ZI8J,QA5fJ,SAAiB9c,EAAKsW,GAClB,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACdoH,EAAkBvd,EAAKsd,QAASjE,GAAW,SAAU+B,EAAKtB,GACtD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IACI2D,EADQjF,EAAYE,YAAYha,EAAKsd,QAAQvB,WACjCqD,IAAI/c,GAEpB0c,EAAI3C,UAAY,WACZ,IAAIjb,EAAQ4d,EAAIta,YACFzD,IAAVG,IACAA,EAAQ,MAER+b,EAAe/b,KACfA,EAAQ4b,EAAY5b,IAExB6U,EAAQ7U,EACZ,EAEA4d,EAAI5C,QAAU,WACVpG,EAAOgJ,EAAIlI,MACf,CAGJ,CAFE,MAAOzF,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAsdIgK,QA9ZJ,SAAiBhd,EAAKlB,EAAOwX,GACzB,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C,IAAI6E,EACJ5a,EAAKge,QAAQ7H,MAAK,WAEd,OADAyE,EAAS5a,EAAKsd,QACe,kBAAzB1N,EAASlM,KAAKvC,GACPyY,EAAkBgB,EAAOY,IAAIrF,MAAK,SAAUmJ,GAC/C,OAAIA,EACOne,GA7TV4Y,EA+TkB5Y,EA9T5B,IAAIsX,GAAU,SAAUzC,EAASD,GACpC,IAAIwJ,EAAS,IAAIC,WACjBD,EAAOpD,QAAUpG,EACjBwJ,EAAOE,UAAY,SAAUrO,GACzB,IAAIsO,EAASC,KAAKvO,EAAEwO,OAAOnb,QAAU,IACrCuR,EAAQ,CACJmH,6BAA6B,EAC7BrR,KAAM4T,EACNxZ,KAAM6T,EAAK7T,MAEnB,EACAqZ,EAAOM,mBAAmB9F,EAC9B,KAbJ,IAAqBA,CAgUL,IAEG5Y,CACX,IAAGgV,MAAK,SAAUhV,GACdoc,EAAkBvd,EAAKsd,QAAShE,GAAY,SAAU8B,EAAKtB,GACvD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IAAI0E,EAAQhG,EAAYE,YAAYha,EAAKsd,QAAQvB,WAMnC,OAAV5a,IACAA,OAAQH,GAGZ,IAAI+d,EAAMe,EAAM7F,IAAI9Y,EAAOkB,GAE3ByX,EAAYO,WAAa,gBAOPrZ,IAAVG,IACAA,EAAQ,MAGZ6U,EAAQ7U,EACZ,EACA2Y,EAAYI,QAAUJ,EAAYqC,QAAU,WACxC,IAAIf,EAAM2D,EAAIlI,MAAQkI,EAAIlI,MAAQkI,EAAIjF,YAAYjD,MAClDd,EAAOqF,EACX,CAGJ,CAFE,MAAOhK,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAgWI0K,WA9VJ,SAAoB1d,EAAKsW,GACrB,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACdoH,EAAkBvd,EAAKsd,QAAShE,GAAY,SAAU8B,EAAKtB,GACvD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IAMI2D,EANQjF,EAAYE,YAAYha,EAAKsd,QAAQvB,WAMzB,OAAE1Z,GAC1ByX,EAAYO,WAAa,WACrBrE,GACJ,EAEA8D,EAAYqC,QAAU,WAClBpG,EAAOgJ,EAAIlI,MACf,EAIAiD,EAAYI,QAAU,WAClB,IAAIkB,EAAM2D,EAAIlI,MAAQkI,EAAIlI,MAAQkI,EAAIjF,YAAYjD,MAClDd,EAAOqF,EACX,CAGJ,CAFE,MAAOhK,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAoTI2K,MAlTJ,SAAerH,GACX,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACdoH,EAAkBvd,EAAKsd,QAAShE,GAAY,SAAU8B,EAAKtB,GACvD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IACI2D,EADQjF,EAAYE,YAAYha,EAAKsd,QAAQvB,WACjCiE,QAEhBlG,EAAYO,WAAa,WACrBrE,GACJ,EAEA8D,EAAYI,QAAUJ,EAAYqC,QAAU,WACxC,IAAIf,EAAM2D,EAAIlI,MAAQkI,EAAIlI,MAAQkI,EAAIjF,YAAYjD,MAClDd,EAAOqF,EACX,CAGJ,CAFE,MAAOhK,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAoRIxU,OAlRJ,SAAgB8X,GACZ,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACdoH,EAAkBvd,EAAKsd,QAASjE,GAAW,SAAU+B,EAAKtB,GACtD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IACI2D,EADQjF,EAAYE,YAAYha,EAAKsd,QAAQvB,WACjCkE,QAEhBlB,EAAI3C,UAAY,WACZpG,EAAQ+I,EAAIta,OAChB,EAEAsa,EAAI5C,QAAU,WACVpG,EAAOgJ,EAAIlI,MACf,CAGJ,CAFE,MAAOzF,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAqPIhT,IAnPJ,SAAa0P,EAAG4G,GACZ,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GACvChE,EAAI,EACJiE,EAAQ,MAKZhW,EAAKge,QAAQ7H,MAAK,WACdoH,EAAkBvd,EAAKsd,QAASjE,GAAW,SAAU+B,EAAKtB,GACtD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IAAI0E,EAAQhG,EAAYE,YAAYha,EAAKsd,QAAQvB,WAC7CmE,GAAW,EACXnB,EAAMe,EAAMd,aAEhBD,EAAI3C,UAAY,WACZ,IAAI8C,EAASH,EAAIta,OACZya,EAOK,IAANnN,GAKKmO,EAFLlK,EAAQkJ,EAAO7c,MAKX6d,GAAW,EACXhB,EAAOiB,QAAQpO,IAdnBiE,EAAQ,KAoBhB,EAEA+I,EAAI5C,QAAU,WACVpG,EAAOgJ,EAAIlI,MACf,CAGJ,CAFE,MAAOzF,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAyLItG,KAvLJ,SAAc4J,GACV,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACdoH,EAAkBvd,EAAKsd,QAASjE,GAAW,SAAU+B,EAAKtB,GACtD,GAAIsB,EACA,OAAOrF,EAAOqF,GAGlB,IACI,IACI2D,EADQjF,EAAYE,YAAYha,EAAKsd,QAAQvB,WACjCiD,aACZjQ,EAAO,GAEXgQ,EAAI3C,UAAY,WACZ,IAAI8C,EAASH,EAAIta,OAEZya,GAKLnQ,EAAKhO,KAAKme,EAAO7c,KACjB6c,EAAiB,YALblJ,EAAQjH,EAMhB,EAEAgQ,EAAI5C,QAAU,WACVpG,EAAOgJ,EAAIlI,MACf,CAGJ,CAFE,MAAOzF,GACL2E,EAAO3E,EACX,CACJ,GACJ,IAAU,MAAE2E,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAiJI+K,aA/IJ,SAAsBhe,EAASuW,GAC3BA,EAAWM,EAAY7C,MAAMpN,KAAMqN,WAEnC,IAAIgK,EAAgBrX,KAAKsX,UACzBle,EAA6B,mBAAZA,GAA0BA,GAAW,CAAC,GAC1ClB,OACTkB,EAAQlB,KAAOkB,EAAQlB,MAAQmf,EAAcnf,KAC7CkB,EAAQ2Z,UAAY3Z,EAAQ2Z,WAAasE,EAActE,WAG3D,IACI1G,EADArV,EAAOgJ,KAEX,GAAK5G,EAAQlB,KAEN,CACH,IAEIqf,EAFcne,EAAQlB,OAASmf,EAAcnf,MAAQlB,EAAKsd,QAAQ9B,GAExC/C,EAAUzC,QAAQhW,EAAKsd,QAAQ9B,IAAMa,EAAuBja,GAAS+T,MAAK,SAAUqF,GAC9G,IAAIX,EAAYzB,EAAWhX,EAAQlB,MAC/Bqa,EAAUV,EAAUU,QACxBV,EAAUW,GAAKA,EACf,IAAK,IAAIjU,EAAI,EAAGA,EAAIgU,EAAQ1a,OAAQ0G,IAChCgU,EAAQhU,GAAG+V,QAAQ9B,GAAKA,EAE5B,OAAOA,CACX,IA+CInG,EA7CCjT,EAAQ2Z,UA6CCwE,EAAUpK,MAAK,SAAUqF,GAC/B,GAAKA,EAAGkB,iBAAiBC,SAASva,EAAQ2Z,WAA1C,CAIA,IAAIG,EAAaV,EAAG3U,QAAU,EAE9B8T,EAAgBvY,GAEhB,IAAIyY,EAAYzB,EAAWhX,EAAQlB,MAC/Bqa,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAIlU,EAAI,EAAGA,EAAIgU,EAAQ1a,OAAQ0G,IAAK,CACrC,IAAIoW,EAASpC,EAAQhU,GACrBoW,EAAOL,QAAQ9B,GAAK,KACpBmC,EAAOL,QAAQzW,QAAUqV,CAC7B,CAEA,IAAIsE,EAAoB,IAAI/H,GAAU,SAAUzC,EAASD,GACrD,IAAIgJ,EAAMvH,EAAIoE,KAAKxZ,EAAQlB,KAAMgb,GAEjC6C,EAAI5C,QAAU,SAAUf,GACX2D,EAAIta,OACVgX,QACH1F,EAAOqF,EACX,EAEA2D,EAAIlD,gBAAkB,WACTkD,EAAIta,OACVgc,kBAAkBre,EAAQ2Z,UACjC,EAEAgD,EAAI3C,UAAY,WACZ,IAAIZ,EAAKuD,EAAIta,OACb+W,EAAGC,QACHzF,EAAQwF,EACZ,CACJ,IAEA,OAAOgF,EAAkBrK,MAAK,SAAUqF,GACpCX,EAAUW,GAAKA,EACf,IAAK,IAAI2C,EAAI,EAAGA,EAAI5C,EAAQ1a,OAAQsd,IAAK,CACrC,IAAIuC,EAAWnF,EAAQ4C,GACvBuC,EAASpD,QAAQ9B,GAAKA,EACtBP,EAAkByF,EAASpD,QAC/B,CACJ,IAAU,OAAE,SAAUlC,GAElB,MADCD,EAAiB/Y,EAASgZ,IAAQ3C,EAAUzC,WAAkB,OAAE,WAAa,IACxEoF,CACV,GA/CA,CAgDJ,IA/FUmF,EAAUpK,MAAK,SAAUqF,GAC/Bb,EAAgBvY,GAEhB,IAAIyY,EAAYzB,EAAWhX,EAAQlB,MAC/Bqa,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAIlU,EAAI,EAAGA,EAAIgU,EAAQ1a,OAAQ0G,IACnBgU,EAAQhU,GACd+V,QAAQ9B,GAAK,KAGxB,IAAImF,EAAgB,IAAIlI,GAAU,SAAUzC,EAASD,GACjD,IAAIgJ,EAAMvH,EAAIoJ,eAAexe,EAAQlB,MAErC6d,EAAI5C,QAAU4C,EAAI8B,UAAY,SAAUzF,GACpC,IAAII,EAAKuD,EAAIta,OACT+W,GACAA,EAAGC,QAEP1F,EAAOqF,EACX,EAEA2D,EAAI3C,UAAY,WACZ,IAAIZ,EAAKuD,EAAIta,OACT+W,GACAA,EAAGC,QAEPzF,EAAQwF,EACZ,CACJ,IAEA,OAAOmF,EAAcxK,MAAK,SAAUqF,GAChCX,EAAUW,GAAKA,EACf,IAAK,IAAIjU,EAAI,EAAGA,EAAIgU,EAAQ1a,OAAQ0G,IAEhC0T,EADcM,EAAQhU,GACI+V,QAElC,IAAU,OAAE,SAAUlC,GAElB,MADCD,EAAiB/Y,EAASgZ,IAAQ3C,EAAUzC,WAAkB,OAAE,WAAa,IACxEoF,CACV,GACJ,GAuDR,MAhHI/F,EAAUoD,EAAU1C,OAAO,qBAmH/B,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,GAwBA,IAAIyL,EAAa,mEAGbC,EAAyB,gCAEzBC,EAAoB,YACpBC,EAA2BD,EAAkBngB,OAG7CqgB,EAAmB,OACnBC,EAAY,OACZC,EAAiB,OACjBC,EAAkB,OAClBC,EAAyB,OACzBC,EAAkB,OAClBC,EAAkB,OAClBC,EAAmB,OACnBC,EAAmB,OACnBC,EAAoB,OACpBC,EAAoB,OACpBC,EAAgCZ,EAA2BC,EAAiBrgB,OAE5EihB,EAAa7e,OAAOoD,UAAUuJ,SAElC,SAASmS,EAAeC,GAEpB,IAEIza,EAEA0a,EAAUC,EAAUC,EAAUC,EAJ9BC,EAAyC,IAA1BL,EAAiBnhB,OAChCuT,EAAM4N,EAAiBnhB,OAEvByhB,EAAI,EAG8C,MAAlDN,EAAiBA,EAAiBnhB,OAAS,KAC3CwhB,IACsD,MAAlDL,EAAiBA,EAAiBnhB,OAAS,IAC3CwhB,KAIR,IAAI1Y,EAAS,IAAI+P,YAAY2I,GACzB7Y,EAAQ,IAAIC,WAAWE,GAE3B,IAAKpC,EAAI,EAAGA,EAAI6M,EAAK7M,GAAK,EACtB0a,EAAWnB,EAAWvf,QAAQygB,EAAiBza,IAC/C2a,EAAWpB,EAAWvf,QAAQygB,EAAiBza,EAAI,IACnD4a,EAAWrB,EAAWvf,QAAQygB,EAAiBza,EAAI,IACnD6a,EAAWtB,EAAWvf,QAAQygB,EAAiBza,EAAI,IAGnDiC,EAAM8Y,KAAOL,GAAY,EAAIC,GAAY,EACzC1Y,EAAM8Y,MAAmB,GAAXJ,IAAkB,EAAIC,GAAY,EAChD3Y,EAAM8Y,MAAmB,EAAXH,IAAiB,EAAe,GAAXC,EAEvC,OAAOzY,CACX,CAIA,SAAS4Y,EAAe5Y,GAEpB,IAEIpC,EAFAiC,EAAQ,IAAIC,WAAWE,GACvB6Y,EAAe,GAGnB,IAAKjb,EAAI,EAAGA,EAAIiC,EAAM3I,OAAQ0G,GAAK,EAE/Bib,GAAgB1B,EAAWtX,EAAMjC,IAAM,GACvCib,GAAgB1B,GAAuB,EAAXtX,EAAMjC,KAAW,EAAIiC,EAAMjC,EAAI,IAAM,GACjEib,GAAgB1B,GAA2B,GAAftX,EAAMjC,EAAI,KAAY,EAAIiC,EAAMjC,EAAI,IAAM,GACtEib,GAAgB1B,EAA0B,GAAftX,EAAMjC,EAAI,IASzC,OANIiC,EAAM3I,OAAS,GAAM,EACrB2hB,EAAeA,EAAaC,UAAU,EAAGD,EAAa3hB,OAAS,GAAK,IAC7D2I,EAAM3I,OAAS,GAAM,IAC5B2hB,EAAeA,EAAaC,UAAU,EAAGD,EAAa3hB,OAAS,GAAK,MAGjE2hB,CACX,CAwIA,IAAIE,EAAwB,CACxBC,UApIJ,SAAmBxhB,EAAOwX,GACtB,IAAIiK,EAAY,GAShB,GARIzhB,IACAyhB,EAAYd,EAAWpe,KAAKvC,IAO5BA,IAAwB,yBAAdyhB,GAAwCzhB,EAAMwI,QAA4C,yBAAlCmY,EAAWpe,KAAKvC,EAAMwI,SAAqC,CAG7H,IAAIA,EACAkZ,EAAS7B,EAET7f,aAAiBuY,aACjB/P,EAASxI,EACT0hB,GAAU3B,IAEVvX,EAASxI,EAAMwI,OAEG,uBAAdiZ,EACAC,GAAUzB,EACW,wBAAdwB,EACPC,GAAUxB,EACW,+BAAduB,EACPC,GAAUvB,EACW,wBAAdsB,EACPC,GAAUtB,EACW,yBAAdqB,EACPC,GAAUpB,EACW,wBAAdmB,EACPC,GAAUrB,EACW,yBAAdoB,EACPC,GAAUnB,EACW,0BAAdkB,EACPC,GAAUlB,EACW,0BAAdiB,EACPC,GAAUjB,EAEVjJ,EAAS,IAAIvX,MAAM,wCAI3BuX,EAASkK,EAASN,EAAe5Y,GACrC,MAAO,GAAkB,kBAAdiZ,EAA+B,CAEtC,IAAIE,EAAa,IAAItD,WAErBsD,EAAWC,OAAS,WAEhB,IAAInX,EAtIO,uBAsIkBzK,EAAM+E,KAAO,IAAMqc,EAAevZ,KAAKvE,QAEpEkU,EAASqI,EAAoBG,EAAYvV,EAC7C,EAEAkX,EAAWE,kBAAkB7hB,EACjC,MACI,IACIwX,EAASsK,KAAKvgB,UAAUvB,GAK5B,CAJE,MAAOiQ,GACL2H,QAAQlC,MAAM,8CAA+C1V,GAE7DwX,EAAS,KAAMvH,EACnB,CAER,EAkEI8R,YAxDJ,SAAqB/hB,GAIjB,GAAIA,EAAMshB,UAAU,EAAGxB,KAA8BD,EACjD,OAAOiC,KAAKzgB,MAAMrB,GAMtB,IAGIgiB,EAHAnB,EAAmB7gB,EAAMshB,UAAUZ,GACnC3b,EAAO/E,EAAMshB,UAAUxB,EAA0BY,GAKrD,GAAI3b,IAASib,GAAaJ,EAAuBtC,KAAKuD,GAAmB,CACrE,IAAIoB,EAAUpB,EAAiBhgB,MAAM+e,GACrCoC,EAAWC,EAAQ,GACnBpB,EAAmBA,EAAiBS,UAAUW,EAAQ,GAAGviB,OAC7D,CACA,IAAI8I,EAASoY,EAAeC,GAI5B,OAAQ9b,GACJ,KAAKgb,EACD,OAAOvX,EACX,KAAKwX,EACD,OAAOpJ,EAAW,CAACpO,GAAS,CAAEzD,KAAMid,IACxC,KAAK/B,EACD,OAAO,IAAIiC,UAAU1Z,GACzB,KAAK0X,EACD,OAAO,IAAI5X,WAAWE,GAC1B,KAAK2X,EACD,OAAO,IAAIgC,kBAAkB3Z,GACjC,KAAK4X,EACD,OAAO,IAAIgC,WAAW5Z,GAC1B,KAAK8X,EACD,OAAO,IAAI+B,YAAY7Z,GAC3B,KAAK6X,EACD,OAAO,IAAIiC,WAAW9Z,GAC1B,KAAK+X,EACD,OAAO,IAAIgC,YAAY/Z,GAC3B,KAAKgY,EACD,OAAO,IAAIgC,aAAaha,GAC5B,KAAKiY,EACD,OAAO,IAAIgC,aAAaja,GAC5B,QACI,MAAM,IAAIvI,MAAM,gBAAkB8E,GAE9C,EAKI6b,eAAgBA,EAChBQ,eAAgBA,GAapB,SAASsB,EAAc/R,EAAG8I,EAAQjC,EAAUE,GACxC/G,EAAEgS,WAAW,8BAAgClJ,EAAOmB,UAAvC,+CAAwG,GAAIpD,EAAUE,EACvI,CAwCA,SAASkL,EAAcjS,EAAG8I,EAAQoJ,EAAcC,EAAMtL,EAAUE,GAC5D/G,EAAEgS,WAAWE,EAAcC,EAAMtL,GAAU,SAAU7G,EAAG+E,GAChDA,EAAMjR,OAASiR,EAAMqN,WACrBpS,EAAEgS,WAAW,iEAAuE,CAAClJ,EAAOmB,YAAY,SAAUjK,EAAGqS,GAC5GA,EAAQC,KAAKvjB,OAOdgY,EAAc/G,EAAG+E,GAJjBgN,EAAc/R,EAAG8I,GAAQ,WACrB9I,EAAEgS,WAAWE,EAAcC,EAAMtL,EAAUE,EAC/C,GAAGA,EAIX,GAAGA,GAEHA,EAAc/G,EAAG+E,EAEzB,GAAGgC,EACP,CA4EA,SAASwL,EAAShiB,EAAKlB,EAAOwX,EAAU2L,GACpC,IAAItkB,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,gBAIAnV,IAAVG,IACAA,EAAQ,MAIZ,IAAIojB,EAAgBpjB,EAEhByZ,EAAS5a,EAAKsd,QAClB1C,EAAO4J,WAAW7B,UAAUxhB,GAAO,SAAUA,EAAO0V,GAC5CA,EACAd,EAAOc,GAEP+D,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5BiS,EAAcjS,EAAG8I,EAAQ,0BAA4BA,EAAOmB,UAAnC,8BAAmF,CAAC1Z,EAAKlB,IAAQ,WACtH6U,EAAQuO,EACZ,IAAG,SAAUzS,EAAG+E,GACZd,EAAOc,EACX,GACJ,IAAG,SAAU4N,GAGT,GAAIA,EAAS7e,OAAS6e,EAASC,UAAW,CAQtC,GAAIJ,EAAc,EAEd,YADAtO,EAAQqO,EAASjO,MAAMpW,EAAM,CAACqC,EAAKkiB,EAAe5L,EAAU2L,EAAc,KAG9EvO,EAAO0O,EACX,CACJ,GAER,GACJ,IAAU,MAAE1O,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,CAkIA,SAASsP,GAAiBnJ,GACtB,OAAO,IAAI/C,GAAU,SAAUzC,EAASD,GACpCyF,EAAG1B,aAAY,SAAUhI,GACrBA,EAAEgS,WAAW,8FAAoG,IAAI,SAAUhS,EAAGqS,GAG9H,IAFA,IAAIS,EAAa,GAERrd,EAAI,EAAGA,EAAI4c,EAAQC,KAAKvjB,OAAQ0G,IACrCqd,EAAW7jB,KAAKojB,EAAQC,KAAK1f,KAAK6C,GAAGrG,MAGzC8U,EAAQ,CACJwF,GAAIA,EACJoJ,WAAYA,GAEpB,IAAG,SAAU9S,EAAG+E,GACZd,EAAOc,EACX,GACJ,IAAG,SAAU4N,GACT1O,EAAO0O,EACX,GACJ,GACJ,CAqEA,IAAII,GAAgB,CAChB/G,QAAS,gBACTC,aArZJ,SAAwB3b,GACpB,IAAIpC,EAAOgJ,KACP4R,EAAS,CACTY,GAAI,MAGR,GAAIpZ,EACA,IAAK,IAAImF,KAAKnF,EACVwY,EAAOrT,GAA2B,iBAAfnF,EAAQmF,GAAkBnF,EAAQmF,GAAGqI,WAAaxN,EAAQmF,GAIrF,IAAIud,EAAgB,IAAIrM,GAAU,SAAUzC,EAASD,GAGjD,IACI6E,EAAOY,GAAKgD,aAAa5D,EAAO1Z,KAAMuB,OAAOmY,EAAO/T,SAAU+T,EAAOmK,YAAanK,EAAO5Q,KAG7F,CAFE,MAAOoH,GACL,OAAO2E,EAAO3E,EAClB,CAGAwJ,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5B+R,EAAc/R,EAAG8I,GAAQ,WACrB5a,EAAKsd,QAAU1C,EACf5E,GACJ,IAAG,SAAUlE,EAAG+E,GACZd,EAAOc,EACX,GACJ,GAAGd,EACP,IAGA,OADA6E,EAAO4J,WAAa9B,EACboC,CACX,EAoXIxG,SA1oB+B,mBAAjBE,aA2oBdM,QAjUJ,SAAmBvH,EAAUoB,GACzB,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACd,IAAIyE,EAAS5a,EAAKsd,QAElB1C,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5BiS,EAAcjS,EAAG8I,EAAQ,iBAAmBA,EAAOmB,UAAW,IAAI,SAAUjK,EAAGqS,GAI3E,IAHA,IAAIC,EAAOD,EAAQC,KACfvjB,EAASujB,EAAKvjB,OAET0G,EAAI,EAAGA,EAAI1G,EAAQ0G,IAAK,CAC7B,IAAI7C,EAAO0f,EAAK1f,KAAK6C,GACjB9C,EAASC,EAAKvD,MAYlB,GARIsD,IACAA,EAASmW,EAAO4J,WAAWtB,YAAYze,SAO5B,KAJfA,EAAS8S,EAAS9S,EAAQC,EAAKrC,IAAKkF,EAAI,IAMpC,YADAyO,EAAQvR,EAGhB,CAEAuR,GACJ,IAAG,SAAUlE,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,IAAU,MAAEd,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAwRI8J,QAhWJ,SAAmB9c,EAAKsW,GACpB,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACd,IAAIyE,EAAS5a,EAAKsd,QAClB1C,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5BiS,EAAcjS,EAAG8I,EAAQ,iBAAmBA,EAAOmB,UAAY,yBAA0B,CAAC1Z,IAAM,SAAUyP,EAAGqS,GACzG,IAAI1f,EAAS0f,EAAQC,KAAKvjB,OAASsjB,EAAQC,KAAK1f,KAAK,GAAGvD,MAAQ,KAI5DsD,IACAA,EAASmW,EAAO4J,WAAWtB,YAAYze,IAG3CuR,EAAQvR,EACZ,IAAG,SAAUqN,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,IAAU,MAAEd,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAqUIgK,QAhOJ,SAAmBhd,EAAKlB,EAAOwX,GAC3B,OAAO0L,EAASjO,MAAMpN,KAAM,CAAC3G,EAAKlB,EAAOwX,EAAU,GACvD,EA+NIoH,WA7NJ,SAAsB1d,EAAKsW,GACvB,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACd,IAAIyE,EAAS5a,EAAKsd,QAClB1C,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5BiS,EAAcjS,EAAG8I,EAAQ,eAAiBA,EAAOmB,UAAY,iBAAkB,CAAC1Z,IAAM,WAClF2T,GACJ,IAAG,SAAUlE,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,IAAU,MAAEd,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EA0MI2K,MAtMJ,SAAiBrH,GACb,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACd,IAAIyE,EAAS5a,EAAKsd,QAClB1C,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5BiS,EAAcjS,EAAG8I,EAAQ,eAAiBA,EAAOmB,UAAW,IAAI,WAC5D/F,GACJ,IAAG,SAAUlE,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,IAAU,MAAEd,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAqLIxU,OAjLJ,SAAkB8X,GACd,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACd,IAAIyE,EAAS5a,EAAKsd,QAClB1C,EAAOY,GAAG1B,aAAY,SAAUhI,GAE5BiS,EAAcjS,EAAG8I,EAAQ,+BAAiCA,EAAOmB,UAAW,IAAI,SAAUjK,EAAGqS,GACzF,IAAI1f,EAAS0f,EAAQC,KAAK1f,KAAK,GAAG+C,EAClCuO,EAAQvR,EACZ,IAAG,SAAUqN,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,IAAU,MAAEd,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EA8JIhT,IArJJ,SAAe0P,EAAG4G,GACd,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACd,IAAIyE,EAAS5a,EAAKsd,QAClB1C,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5BiS,EAAcjS,EAAG8I,EAAQ,mBAAqBA,EAAOmB,UAAY,wBAAyB,CAAChK,EAAI,IAAI,SAAUD,EAAGqS,GAC5G,IAAI1f,EAAS0f,EAAQC,KAAKvjB,OAASsjB,EAAQC,KAAK1f,KAAK,GAAGrC,IAAM,KAC9D2T,EAAQvR,EACZ,IAAG,SAAUqN,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,IAAU,MAAEd,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EAmIItG,KAjIJ,SAAgB4J,GACZ,IAAI3Y,EAAOgJ,KAEPqM,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C/V,EAAKge,QAAQ7H,MAAK,WACd,IAAIyE,EAAS5a,EAAKsd,QAClB1C,EAAOY,GAAG1B,aAAY,SAAUhI,GAC5BiS,EAAcjS,EAAG8I,EAAQ,mBAAqBA,EAAOmB,UAAW,IAAI,SAAUjK,EAAGqS,GAG7E,IAFA,IAAIpV,EAAO,GAEFxH,EAAI,EAAGA,EAAI4c,EAAQC,KAAKvjB,OAAQ0G,IACrCwH,EAAKhO,KAAKojB,EAAQC,KAAK1f,KAAK6C,GAAGlF,KAGnC2T,EAAQjH,EACZ,IAAG,SAAU+C,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,IAAU,MAAEd,EAChB,IAGA,OADA2C,EAAgBrD,EAASsD,GAClBtD,CACX,EA0GI+K,aA/EJ,SAAwBhe,EAASuW,GAC7BA,EAAWM,EAAY7C,MAAMpN,KAAMqN,WAEnC,IAAIgK,EAAgBrX,KAAKsX,UACzBle,EAA6B,mBAAZA,GAA0BA,GAAW,CAAC,GAC1ClB,OACTkB,EAAQlB,KAAOkB,EAAQlB,MAAQmf,EAAcnf,KAC7CkB,EAAQ2Z,UAAY3Z,EAAQ2Z,WAAasE,EAActE,WAG3D,IACI1G,EADArV,EAAOgJ,KAsDX,OADA0P,EAhDIrD,EAHCjT,EAAQlB,KAGC,IAAIuX,GAAU,SAAUzC,GAC9B,IAAIwF,EAGAA,EAFApZ,EAAQlB,OAASmf,EAAcnf,KAE1BlB,EAAKsd,QAAQ9B,GAEbgD,aAAapc,EAAQlB,KAAM,GAAI,GAAI,GAGvCkB,EAAQ2Z,UAIT/F,EAAQ,CACJwF,GAAIA,EACJoJ,WAAY,CAACxiB,EAAQ2Z,aAJzB/F,EAAQ2O,GAAiBnJ,GAOjC,IAAGrF,MAAK,SAAU6O,GACd,OAAO,IAAIvM,GAAU,SAAUzC,EAASD,GACpCiP,EAAcxJ,GAAG1B,aAAY,SAAUhI,GACnC,SAASmT,EAAUlJ,GACf,OAAO,IAAItD,GAAU,SAAUzC,EAASD,GACpCjE,EAAEgS,WAAW,wBAA0B/H,EAAW,IAAI,WAClD/F,GACJ,IAAG,SAAUlE,EAAG+E,GACZd,EAAOc,EACX,GACJ,GACJ,CAGA,IADA,IAAIqO,EAAa,GACR3d,EAAI,EAAG6M,EAAM4Q,EAAcJ,WAAW/jB,OAAQ0G,EAAI6M,EAAK7M,IAC5D2d,EAAWnkB,KAAKkkB,EAAUD,EAAcJ,WAAWrd,KAGvDkR,EAAU3B,IAAIoO,GAAY/O,MAAK,WAC3BH,GACJ,IAAU,OAAE,SAAU5E,GAClB2E,EAAO3E,EACX,GACJ,IAAG,SAAUqT,GACT1O,EAAO0O,EACX,GACJ,GACJ,IA/CUhM,EAAU1C,OAAO,qBAkDN4C,GAClBtD,CACX,GA2BA,SAAS8P,GAAc/iB,EAASgjB,GAC5B,IAAIC,EAAYjjB,EAAQlB,KAAO,IAK/B,OAHIkB,EAAQ2Z,YAAcqJ,EAAcrJ,YACpCsJ,GAAajjB,EAAQ2Z,UAAY,KAE9BsJ,CACX,CAoBA,SAASC,KACL,OAlBJ,WACI,IAAIC,EAAsB,4BAE1B,IAII,OAHAC,aAAanG,QAAQkG,GAAqB,GAC1CC,aAAazF,WAAWwF,IAEjB,CAGX,CAFE,MAAOnU,GACL,OAAO,CACX,CACJ,CAOYqU,IAA+BD,aAAa3kB,OAAS,CACjE,CA4QA,IAAI6kB,GAAsB,CACtB5H,QAAS,sBACTC,aA3QJ,SAAwB3b,GACpB,IACIwY,EAAS,CAAC,EACd,GAAIxY,EACA,IAAK,IAAImF,KAAKnF,EACVwY,EAAOrT,GAAKnF,EAAQmF,GAM5B,OAFAqT,EAAOyK,UAAYF,GAAc/iB,EARtB4G,KAQoCoV,gBAE1CkH,MAVMtc,KAcNsU,QAAU1C,EACfA,EAAO4J,WAAa9B,EAEbjK,EAAUzC,WANNyC,EAAU1C,QAOzB,EAyPIuI,SAtTJ,WACI,IACI,MAA+B,oBAAjBkH,cAAgC,YAAaA,gBAEzDA,aAAanG,OAGnB,CAFE,MAAOjO,GACL,OAAO,CACX,CACJ,CA8ScuU,GACV7G,QAxMJ,SAAmBvH,EAAUoB,GACzB,IAAI3Y,EAAOgJ,KAEPqM,EAAUrV,EAAKge,QAAQ7H,MAAK,WAc5B,IAbA,IAAIyE,EAAS5a,EAAKsd,QACd+H,EAAYzK,EAAOyK,UACnBO,EAAkBP,EAAUxkB,OAC5BA,EAAS2kB,aAAa3kB,OAQtBoe,EAAkB,EAEb1X,EAAI,EAAGA,EAAI1G,EAAQ0G,IAAK,CAC7B,IAAIlF,EAAMmjB,aAAanjB,IAAIkF,GAC3B,GAA+B,IAA3BlF,EAAId,QAAQ8jB,GAAhB,CAGA,IAAIlkB,EAAQqkB,aAAarG,QAAQ9c,GAYjC,GANIlB,IACAA,EAAQyZ,EAAO4J,WAAWtB,YAAY/hB,SAK5B,KAFdA,EAAQoW,EAASpW,EAAOkB,EAAIogB,UAAUmD,GAAkB3G,MAGpD,OAAO9d,CAdX,CAgBJ,CACJ,IAGA,OADAuX,EAAgBrD,EAASsD,GAClBtD,CACX,EA+JI8J,QAlOJ,SAAmB9c,EAAKsW,GACpB,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAUrV,EAAKge,QAAQ7H,MAAK,WAC5B,IAAIyE,EAAS5a,EAAKsd,QACd7Y,EAAS+gB,aAAarG,QAAQvE,EAAOyK,UAAYhjB,GAUrD,OAJIoC,IACAA,EAASmW,EAAO4J,WAAWtB,YAAYze,IAGpCA,CACX,IAGA,OADAiU,EAAgBrD,EAASsD,GAClBtD,CACX,EA6MIgK,QAnFJ,SAAmBhd,EAAKlB,EAAOwX,GAC3B,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAUrV,EAAKge,QAAQ7H,MAAK,gBAGdnV,IAAVG,IACAA,EAAQ,MAIZ,IAAIojB,EAAgBpjB,EAEpB,OAAO,IAAIsX,GAAU,SAAUzC,EAASD,GACpC,IAAI6E,EAAS5a,EAAKsd,QAClB1C,EAAO4J,WAAW7B,UAAUxhB,GAAO,SAAUA,EAAO0V,GAChD,GAAIA,EACAd,EAAOc,QAEP,IACI2O,aAAanG,QAAQzE,EAAOyK,UAAYhjB,EAAKlB,GAC7C6U,EAAQuO,EAQZ,CAPE,MAAOnT,GAGU,uBAAXA,EAAElQ,MAA4C,+BAAXkQ,EAAElQ,MACrC6U,EAAO3E,GAEX2E,EAAO3E,EACX,CAER,GACJ,GACJ,IAGA,OADAsH,EAAgBrD,EAASsD,GAClBtD,CACX,EA6CI0K,WAtGJ,SAAsB1d,EAAKsW,GACvB,IAAI3Y,EAAOgJ,KAEX3G,EAAMyW,EAAazW,GAEnB,IAAIgT,EAAUrV,EAAKge,QAAQ7H,MAAK,WAC5B,IAAIyE,EAAS5a,EAAKsd,QAClBkI,aAAazF,WAAWnF,EAAOyK,UAAYhjB,EAC/C,IAGA,OADAqW,EAAgBrD,EAASsD,GAClBtD,CACX,EA2FI2K,MA1PJ,SAAiBrH,GACb,IAAI3Y,EAAOgJ,KACPqM,EAAUrV,EAAKge,QAAQ7H,MAAK,WAG5B,IAFA,IAAIkP,EAAYrlB,EAAKsd,QAAQ+H,UAEpB9d,EAAIie,aAAa3kB,OAAS,EAAG0G,GAAK,EAAGA,IAAK,CAC/C,IAAIlF,EAAMmjB,aAAanjB,IAAIkF,GAEI,IAA3BlF,EAAId,QAAQ8jB,IACZG,aAAazF,WAAW1d,EAEhC,CACJ,IAGA,OADAqW,EAAgBrD,EAASsD,GAClBtD,CACX,EA2OIxU,OAnHJ,SAAkB8X,GACd,IACItD,EADOrM,KACQ+F,OAAOoH,MAAK,SAAUpH,GACrC,OAAOA,EAAKlO,MAChB,IAGA,OADA6X,EAAgBrD,EAASsD,GAClBtD,CACX,EA4GIhT,IAjKJ,SAAe0P,EAAG4G,GACd,IAAI3Y,EAAOgJ,KACPqM,EAAUrV,EAAKge,QAAQ7H,MAAK,WAC5B,IACI1R,EADAmW,EAAS5a,EAAKsd,QAElB,IACI7Y,EAAS+gB,aAAanjB,IAAI0P,EAG9B,CAFE,MAAO8E,GACLpS,EAAS,IACb,CAOA,OAJIA,IACAA,EAASA,EAAOge,UAAU7H,EAAOyK,UAAUxkB,SAGxC4D,CACX,IAGA,OADAiU,EAAgBrD,EAASsD,GAClBtD,CACX,EA6IItG,KA3IJ,SAAgB4J,GACZ,IAAI3Y,EAAOgJ,KACPqM,EAAUrV,EAAKge,QAAQ7H,MAAK,WAK5B,IAJA,IAAIyE,EAAS5a,EAAKsd,QACdzc,EAAS2kB,aAAa3kB,OACtBkO,EAAO,GAEFxH,EAAI,EAAGA,EAAI1G,EAAQ0G,IAAK,CAC7B,IAAIse,EAAUL,aAAanjB,IAAIkF,GACW,IAAtCse,EAAQtkB,QAAQqZ,EAAOyK,YACvBtW,EAAKhO,KAAK8kB,EAAQpD,UAAU7H,EAAOyK,UAAUxkB,QAErD,CAEA,OAAOkO,CACX,IAGA,OADA2J,EAAgBrD,EAASsD,GAClBtD,CACX,EAyHI+K,aAhDJ,SAAwBhe,EAASuW,GAI7B,GAHAA,EAAWM,EAAY7C,MAAMpN,KAAMqN,aAEnCjU,EAA6B,mBAAZA,GAA0BA,GAAW,CAAC,GAC1ClB,KAAM,CACf,IAAImf,EAAgBrX,KAAKsX,SACzBle,EAAQlB,KAAOkB,EAAQlB,MAAQmf,EAAcnf,KAC7CkB,EAAQ2Z,UAAY3Z,EAAQ2Z,WAAasE,EAActE,SAC3D,CAEA,IACI1G,EADArV,EAAOgJ,KAuBX,OAlBIqM,EAHCjT,EAAQlB,KAGC,IAAIuX,GAAU,SAAUzC,GACzB5T,EAAQ2Z,UAGT/F,EAAQmP,GAAc/iB,EAASpC,EAAKoe,iBAFpCpI,EAAQ5T,EAAQlB,KAAO,IAI/B,IAAGiV,MAAK,SAAUkP,GACd,IAAK,IAAI9d,EAAIie,aAAa3kB,OAAS,EAAG0G,GAAK,EAAGA,IAAK,CAC/C,IAAIlF,EAAMmjB,aAAanjB,IAAIkF,GAEI,IAA3BlF,EAAId,QAAQ8jB,IACZG,aAAazF,WAAW1d,EAEhC,CACJ,IAhBUoW,EAAU1C,OAAO,qBAmB/B2C,EAAgBrD,EAASsD,GAClBtD,CACX,GAqBIyQ,GAAW,SAAkBC,EAAOC,GAGpC,IAFA,IAAI5R,EAAM2R,EAAMllB,OACZ0G,EAAI,EACDA,EAAI6M,GAAK,CACZ,IAR2B6R,EAQbF,EAAMxe,OARU2e,EAQNF,IAPG,iBAANC,GAA+B,iBAANC,GAAkBxV,MAAMuV,IAAMvV,MAAMwV,GAQ9E,OAAO,EAEX3e,GACJ,CAZY,IAAmB0e,EAAGC,EAclC,OAAO,CACX,EAEIrX,GAAU1B,MAAM0B,SAAW,SAAUsX,GACrC,MAA+C,mBAAxCljB,OAAOoD,UAAUuJ,SAASlM,KAAKyiB,EAC1C,EAIIC,GAAiB,CAAC,EAElBC,GAAgB,CAAC,EAEjBC,GAAiB,CACjBC,UAAW1I,EACX2I,OAAQ3B,GACR4B,aAAcf,IAGdgB,GAAqB,CAACJ,GAAeC,UAAUzI,QAASwI,GAAeE,OAAO1I,QAASwI,GAAeG,aAAa3I,SAEnH6I,GAAwB,CAAC,gBAEzBC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,WAAWhiB,OAAO+hB,IAE1GE,GAAgB,CAChB9B,YAAa,GACb+B,OAAQJ,GAAmB5kB,QAC3BZ,KAAM,cAGN8I,KAAM,QACN+R,UAAW,gBACXlV,QAAS,GAGb,SAASkgB,GAAcC,EAAqBC,GACxCD,EAAoBC,GAAiB,WACjC,IAAIC,EAAQ7Q,UACZ,OAAO2Q,EAAoBhJ,QAAQ7H,MAAK,WACpC,OAAO6Q,EAAoBC,GAAe7Q,MAAM4Q,EAAqBE,EACzE,GACJ,CACJ,CAEA,SAASC,KACL,IAAK,IAAI5f,EAAI,EAAGA,EAAI8O,UAAUxV,OAAQ0G,IAAK,CACvC,IAAI4e,EAAM9P,UAAU9O,GAEpB,GAAI4e,EACA,IAAK,IAAIiB,KAAQjB,EACTA,EAAIriB,eAAesjB,KACfvY,GAAQsX,EAAIiB,IACZ/Q,UAAU,GAAG+Q,GAAQjB,EAAIiB,GAAMtlB,QAE/BuU,UAAU,GAAG+Q,GAAQjB,EAAIiB,GAK7C,CAEA,OAAO/Q,UAAU,EACrB,CAEA,IAAIgR,GAAc,WACd,SAASA,EAAYjlB,GAGjB,IAAK,IAAIklB,KApmEjB,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIxS,UAAU,oCAAwC,CAkmEhJyS,CAAgBze,KAAMqe,GAEIf,GACtB,GAAIA,GAAexiB,eAAewjB,GAAgB,CAC9C,IAAIR,EAASR,GAAegB,GACxBI,EAAaZ,EAAOhJ,QACxB9U,KAAKse,GAAiBI,EAEjBtB,GAAesB,IAIhB1e,KAAK2e,aAAab,EAE1B,CAGJ9d,KAAKoV,eAAiB+I,GAAO,CAAC,EAAGN,IACjC7d,KAAK4e,QAAUT,GAAO,CAAC,EAAGne,KAAKoV,eAAgBhc,GAC/C4G,KAAK6e,WAAa,KAClB7e,KAAK8e,YAAc,KACnB9e,KAAK+e,QAAS,EACd/e,KAAKsU,QAAU,KAEftU,KAAKgf,+BACLhf,KAAKif,UAAUjf,KAAK4e,QAAQd,QAAe,OAAE,WAAa,GAC9D,CAyQA,OAjQAO,EAAYhhB,UAAUia,OAAS,SAAgBle,GAI3C,GAA0E,iBAAlD,IAAZA,EAA0B,YAAciV,EAAQjV,IAAwB,CAGhF,GAAI4G,KAAK+e,OACL,OAAO,IAAI3mB,MAAM,wDAGrB,IAAK,IAAImG,KAAKnF,EAAS,CAKnB,GAJU,cAANmF,IACAnF,EAAQmF,GAAKnF,EAAQmF,GAAG3E,QAAQ,MAAO,MAGjC,YAAN2E,GAAyC,iBAAfnF,EAAQmF,GAClC,OAAO,IAAInG,MAAM,sCAGrB4H,KAAK4e,QAAQrgB,GAAKnF,EAAQmF,EAC9B,CAIA,QAAI,WAAYnF,KAAWA,EAAQ0kB,QACxB9d,KAAKif,UAAUjf,KAAK4e,QAAQd,OAI3C,CAAO,MAAuB,iBAAZ1kB,EACP4G,KAAK4e,QAAQxlB,GAEb4G,KAAK4e,OAEpB,EAMAP,EAAYhhB,UAAUshB,aAAe,SAAsBO,EAAcvP,EAAUE,GAC/E,IAAIxD,EAAU,IAAIoD,GAAU,SAAUzC,EAASD,GAC3C,IACI,IAAI2R,EAAaQ,EAAapK,QAC1BqK,EAAkB,IAAI/mB,MAAM,wFAIhC,IAAK8mB,EAAapK,QAEd,YADA/H,EAAOoS,GAKX,IADA,IAAIC,EAAgBxB,GAAehiB,OAAO,gBACjC2C,EAAI,EAAG6M,EAAMgU,EAAcvnB,OAAQ0G,EAAI6M,EAAK7M,IAAK,CACtD,IAAI8gB,EAAmBD,EAAc7gB,GAKrC,KADkBue,GAASa,GAAuB0B,IAC/BH,EAAaG,KAAgE,mBAAnCH,EAAaG,GAEtE,YADAtS,EAAOoS,EAGf,EAE8B,WAU1B,IATA,IAAIG,EAA8B,SAAqCC,GACnE,OAAO,WACH,IAAI1R,EAAQ,IAAIzV,MAAM,UAAYmnB,EAAa,6CAC3ClT,EAAUoD,EAAU1C,OAAOc,GAE/B,OADA6B,EAAgBrD,EAASgB,UAAUA,UAAUxV,OAAS,IAC/CwU,CACX,CACJ,EAESmT,EAAK,EAAGC,EAAO9B,GAAsB9lB,OAAQ2nB,EAAKC,EAAMD,IAAM,CACnE,IAAIE,EAAuB/B,GAAsB6B,GAC5CN,EAAaQ,KACdR,EAAaQ,GAAwBJ,EAA4BI,GAEzE,CACJ,CAEAC,GAEA,IAAIC,EAAmB,SAA0BC,GACzCzC,GAAesB,IACf3O,QAAQ+P,KAAK,kCAAoCpB,GAErDtB,GAAesB,GAAcQ,EAC7B7B,GAAcqB,GAAcmB,EAI5B7S,GACJ,EAEI,aAAckS,EACVA,EAAa5J,UAA6C,mBAA1B4J,EAAa5J,SAC7C4J,EAAa5J,WAAWnI,KAAKyS,EAAkB7S,GAE/C6S,IAAmBV,EAAa5J,UAGpCsK,GAAiB,EAIzB,CAFE,MAAOxX,GACL2E,EAAO3E,EACX,CACJ,IAGA,OADAwH,EAAoBvD,EAASsD,EAAUE,GAChCxD,CACX,EAEAgS,EAAYhhB,UAAUygB,OAAS,WAC3B,OAAO9d,KAAK8U,SAAW,IAC3B,EAEAuJ,EAAYhhB,UAAU0iB,UAAY,SAAmBrB,EAAY/O,EAAUE,GACvE,IAAImQ,EAAmB5C,GAAesB,GAAcjP,EAAUzC,QAAQoQ,GAAesB,IAAejP,EAAU1C,OAAO,IAAI3U,MAAM,sBAG/H,OADAwX,EAAoBoQ,EAAkBrQ,EAAUE,GACzCmQ,CACX,EAEA3B,EAAYhhB,UAAU4iB,cAAgB,SAAuBtQ,GACzD,IAAIuQ,EAAoBzQ,EAAUzC,QAAQ0M,GAE1C,OADA9J,EAAoBsQ,EAAmBvQ,GAChCuQ,CACX,EAEA7B,EAAYhhB,UAAU2X,MAAQ,SAAerF,GACzC,IAAI3Y,EAAOgJ,KAEPqM,EAAUrV,EAAK6nB,WAAW1R,MAAK,WAK/B,OAJoB,OAAhBnW,EAAK+nB,SACL/nB,EAAK+nB,OAAS/nB,EAAK8nB,eAGhB9nB,EAAK+nB,MAChB,IAGA,OADAnP,EAAoBvD,EAASsD,EAAUA,GAChCtD,CACX,EAEAgS,EAAYhhB,UAAU4hB,UAAY,SAAmBkB,EAASxQ,EAAUE,GACpE,IAAI7Y,EAAOgJ,KAEN6F,GAAQsa,KACTA,EAAU,CAACA,IAGf,IAAIC,EAAmBpgB,KAAKqgB,qBAAqBF,GAEjD,SAASG,IACLtpB,EAAK4nB,QAAQd,OAAS9mB,EAAK8mB,QAC/B,CAEA,SAASyC,EAAqBzC,GAK1B,OAJA9mB,EAAKwpB,QAAQ1C,GACbwC,IAEAtpB,EAAK+nB,OAAS/nB,EAAK+d,aAAa/d,EAAK4nB,SAC9B5nB,EAAK+nB,MAChB,CA8BA,IAAI0B,EAAuC,OAApBzgB,KAAK6e,WAAsB7e,KAAK6e,WAAkB,OAAE,WACvE,OAAOpP,EAAUzC,SACrB,IAAKyC,EAAUzC,UAqBf,OAnBAhN,KAAK6e,WAAa4B,EAAiBtT,MAAK,WACpC,IAAIuR,EAAa0B,EAAiB,GAIlC,OAHAppB,EAAKsd,QAAU,KACftd,EAAK+nB,OAAS,KAEP/nB,EAAK+oB,UAAUrB,GAAYvR,MAAK,SAAU2Q,GAC7C9mB,EAAK8d,QAAUgJ,EAAOhJ,QACtBwL,IACAtpB,EAAKgoB,+BACLhoB,EAAK8nB,YAzCb,SAAoBsB,GAChB,OAAO,WACH,IAAIM,EAAqB,EAmBzB,OAjBA,SAASC,IACL,KAAOD,EAAqBN,EAAiBvoB,QAAQ,CACjD,IAAI6mB,EAAa0B,EAAiBM,GAMlC,OALAA,IAEA1pB,EAAKsd,QAAU,KACftd,EAAK+nB,OAAS,KAEP/nB,EAAK+oB,UAAUrB,GAAYvR,KAAKoT,GAA6B,MAAEI,EAC1E,CAEAL,IACA,IAAIzS,EAAQ,IAAIzV,MAAM,sCAEtB,OADApB,EAAK6nB,WAAapP,EAAU1C,OAAOc,GAC5B7W,EAAK6nB,UAChB,CAEO8B,EACX,CACJ,CAkB2BC,CAAWR,EAClC,GACJ,IAAU,OAAE,WACRE,IACA,IAAIzS,EAAQ,IAAIzV,MAAM,sCAEtB,OADApB,EAAK6nB,WAAapP,EAAU1C,OAAOc,GAC5B7W,EAAK6nB,UAChB,IAEAjP,EAAoB5P,KAAK6e,WAAYlP,EAAUE,GACxC7P,KAAK6e,UAChB,EAEAR,EAAYhhB,UAAUwjB,SAAW,SAAkBnC,GAC/C,QAASrB,GAAcqB,EAC3B,EAEAL,EAAYhhB,UAAUmjB,QAAU,SAAiBM,GAC7C3C,GAAOne,KAAM8gB,EACjB,EAEAzC,EAAYhhB,UAAUgjB,qBAAuB,SAA8BF,GAEvE,IADA,IAAIC,EAAmB,GACd7hB,EAAI,EAAG6M,EAAM+U,EAAQtoB,OAAQ0G,EAAI6M,EAAK7M,IAAK,CAChD,IAAImgB,EAAayB,EAAQ5hB,GACrByB,KAAK6gB,SAASnC,IACd0B,EAAiBroB,KAAK2mB,EAE9B,CACA,OAAO0B,CACX,EAEA/B,EAAYhhB,UAAU2hB,6BAA+B,WAKjD,IAAK,IAAIzgB,EAAI,EAAG6M,EAAMwS,GAAe/lB,OAAQ0G,EAAI6M,EAAK7M,IAClDwf,GAAc/d,KAAM4d,GAAerf,GAE3C,EAEA8f,EAAYhhB,UAAU0jB,eAAiB,SAAwB3nB,GAC3D,OAAO,IAAIilB,EAAYjlB,EAC3B,EAEOilB,CACX,CAtSkB,GA4Sd2C,GAAiB,IAAI3C,GAEzBxnB,EAAOD,QAAUoqB,EAEjB,EAAE,CAAC,EAAI,KAAK,CAAC,EAAE,CAAC,GAruFmW,CAquF/V,kCCjtFpB,SAASC,EAAWC,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAIlV,UAAU,mCAAqCiO,KAAKvgB,UAAUwnB,GAE5E,CAGA,SAASC,EAAqBD,EAAME,GAMlC,IALA,IAIIxkB,EAJAykB,EAAM,GACNC,EAAoB,EACpBC,GAAa,EACbC,EAAO,EAEFjjB,EAAI,EAAGA,GAAK2iB,EAAKrpB,SAAU0G,EAAG,CACrC,GAAIA,EAAI2iB,EAAKrpB,OACX+E,EAAOskB,EAAKxkB,WAAW6B,OACpB,IAAa,KAAT3B,EACP,MAEAA,EAAO,EAAQ,CACjB,GAAa,KAATA,EAAmB,CACrB,GAAI2kB,IAAchjB,EAAI,GAAc,IAATijB,QAEpB,GAAID,IAAchjB,EAAI,GAAc,IAATijB,EAAY,CAC5C,GAAIH,EAAIxpB,OAAS,GAA2B,IAAtBypB,GAA8D,KAAnCD,EAAI3kB,WAAW2kB,EAAIxpB,OAAS,IAAsD,KAAnCwpB,EAAI3kB,WAAW2kB,EAAIxpB,OAAS,GAC1H,GAAIwpB,EAAIxpB,OAAS,EAAG,CAClB,IAAI4pB,EAAiBJ,EAAIzoB,YAAY,KACrC,GAAI6oB,IAAmBJ,EAAIxpB,OAAS,EAAG,EACb,IAApB4pB,GACFJ,EAAM,GACNC,EAAoB,GAGpBA,GADAD,EAAMA,EAAIvoB,MAAM,EAAG2oB,IACK5pB,OAAS,EAAIwpB,EAAIzoB,YAAY,KAEvD2oB,EAAYhjB,EACZijB,EAAO,EACP,QACF,CACF,MAAO,GAAmB,IAAfH,EAAIxpB,QAA+B,IAAfwpB,EAAIxpB,OAAc,CAC/CwpB,EAAM,GACNC,EAAoB,EACpBC,EAAYhjB,EACZijB,EAAO,EACP,QACF,CAEEJ,IACEC,EAAIxpB,OAAS,EACfwpB,GAAO,MAEPA,EAAM,KACRC,EAAoB,EAExB,MACMD,EAAIxpB,OAAS,EACfwpB,GAAO,IAAMH,EAAKpoB,MAAMyoB,EAAY,EAAGhjB,GAEvC8iB,EAAMH,EAAKpoB,MAAMyoB,EAAY,EAAGhjB,GAClC+iB,EAAoB/iB,EAAIgjB,EAAY,EAEtCA,EAAYhjB,EACZijB,EAAO,CACT,MAAoB,KAAT5kB,IAA+B,IAAV4kB,IAC5BA,EAEFA,GAAQ,CAEZ,CACA,OAAOH,CACT,CAcA,IAAIK,EAAQ,CAEV1U,QAAS,WAKP,IAJA,IAEI2U,EAFAC,EAAe,GACfC,GAAmB,EAGdtjB,EAAI8O,UAAUxV,OAAS,EAAG0G,IAAM,IAAMsjB,EAAkBtjB,IAAK,CACpE,IAAI2iB,EACA3iB,GAAK,EACP2iB,EAAO7T,UAAU9O,SAELvG,IAAR2pB,IACFA,EAAMG,QAAQH,OAChBT,EAAOS,GAGTV,EAAWC,GAGS,IAAhBA,EAAKrpB,SAIT+pB,EAAeV,EAAO,IAAMU,EAC5BC,EAA0C,KAAvBX,EAAKxkB,WAAW,GACrC,CAQA,OAFAklB,EAAeT,EAAqBS,GAAeC,GAE/CA,EACED,EAAa/pB,OAAS,EACjB,IAAM+pB,EAEN,IACAA,EAAa/pB,OAAS,EACxB+pB,EAEA,GAEX,EAEAnlB,UAAW,SAAmBykB,GAG5B,GAFAD,EAAWC,GAES,IAAhBA,EAAKrpB,OAAc,MAAO,IAE9B,IAAIkqB,EAAoC,KAAvBb,EAAKxkB,WAAW,GAC7BslB,EAAyD,KAArCd,EAAKxkB,WAAWwkB,EAAKrpB,OAAS,GAQtD,OAHoB,KAFpBqpB,EAAOC,EAAqBD,GAAOa,IAE1BlqB,QAAiBkqB,IAAYb,EAAO,KACzCA,EAAKrpB,OAAS,GAAKmqB,IAAmBd,GAAQ,KAE9Ca,EAAmB,IAAMb,EACtBA,CACT,EAEAa,WAAY,SAAoBb,GAE9B,OADAD,EAAWC,GACJA,EAAKrpB,OAAS,GAA4B,KAAvBqpB,EAAKxkB,WAAW,EAC5C,EAEAtC,KAAM,WACJ,GAAyB,IAArBiT,UAAUxV,OACZ,MAAO,IAET,IADA,IAAIoqB,EACK1jB,EAAI,EAAGA,EAAI8O,UAAUxV,SAAU0G,EAAG,CACzC,IAAI4e,EAAM9P,UAAU9O,GACpB0iB,EAAW9D,GACPA,EAAItlB,OAAS,SACAG,IAAXiqB,EACFA,EAAS9E,EAET8E,GAAU,IAAM9E,EAEtB,CACA,YAAenlB,IAAXiqB,EACK,IACFP,EAAMjlB,UAAUwlB,EACzB,EAEAC,SAAU,SAAkBvoB,EAAME,GAIhC,GAHAonB,EAAWtnB,GACXsnB,EAAWpnB,GAEPF,IAASE,EAAI,MAAO,GAKxB,IAHAF,EAAO+nB,EAAM1U,QAAQrT,OACrBE,EAAK6nB,EAAM1U,QAAQnT,IAEF,MAAO,GAIxB,IADA,IAAIsoB,EAAY,EACTA,EAAYxoB,EAAK9B,QACa,KAA/B8B,EAAK+C,WAAWylB,KADYA,GASlC,IALA,IAAIC,EAAUzoB,EAAK9B,OACfwqB,EAAUD,EAAUD,EAGpBG,EAAU,EACPA,EAAUzoB,EAAGhC,QACa,KAA3BgC,EAAG6C,WAAW4lB,KADUA,GAW9B,IAPA,IACIC,EADQ1oB,EAAGhC,OACKyqB,EAGhBzqB,EAASwqB,EAAUE,EAAQF,EAAUE,EACrCC,GAAiB,EACjBjkB,EAAI,EACDA,GAAK1G,IAAU0G,EAAG,CACvB,GAAIA,IAAM1G,EAAQ,CAChB,GAAI0qB,EAAQ1qB,EAAQ,CAClB,GAAmC,KAA/BgC,EAAG6C,WAAW4lB,EAAU/jB,GAG1B,OAAO1E,EAAGf,MAAMwpB,EAAU/jB,EAAI,GACzB,GAAU,IAANA,EAGT,OAAO1E,EAAGf,MAAMwpB,EAAU/jB,EAE9B,MAAW8jB,EAAUxqB,IACoB,KAAnC8B,EAAK+C,WAAWylB,EAAY5jB,GAG9BikB,EAAgBjkB,EACD,IAANA,IAGTikB,EAAgB,IAGpB,KACF,CACA,IAAIC,EAAW9oB,EAAK+C,WAAWylB,EAAY5jB,GAE3C,GAAIkkB,IADS5oB,EAAG6C,WAAW4lB,EAAU/jB,GAEnC,MACoB,KAAbkkB,IACPD,EAAgBjkB,EACpB,CAEA,IAAIoP,EAAM,GAGV,IAAKpP,EAAI4jB,EAAYK,EAAgB,EAAGjkB,GAAK6jB,IAAW7jB,EAClDA,IAAM6jB,GAAkC,KAAvBzoB,EAAK+C,WAAW6B,KAChB,IAAfoP,EAAI9V,OACN8V,GAAO,KAEPA,GAAO,OAMb,OAAIA,EAAI9V,OAAS,EACR8V,EAAM9T,EAAGf,MAAMwpB,EAAUE,IAEhCF,GAAWE,EACoB,KAA3B3oB,EAAG6C,WAAW4lB,MACdA,EACGzoB,EAAGf,MAAMwpB,GAEpB,EAEAI,UAAW,SAAmBxB,GAC5B,OAAOA,CACT,EAEAyB,QAAS,SAAiBzB,GAExB,GADAD,EAAWC,GACS,IAAhBA,EAAKrpB,OAAc,MAAO,IAK9B,IAJA,IAAI+E,EAAOskB,EAAKxkB,WAAW,GACvBkmB,EAAmB,KAAThmB,EACVimB,GAAO,EACPC,GAAe,EACVvkB,EAAI2iB,EAAKrpB,OAAS,EAAG0G,GAAK,IAAKA,EAEtC,GAAa,MADb3B,EAAOskB,EAAKxkB,WAAW6B,KAEnB,IAAKukB,EAAc,CACjBD,EAAMtkB,EACN,KACF,OAGFukB,GAAe,EAInB,OAAa,IAATD,EAAmBD,EAAU,IAAM,IACnCA,GAAmB,IAARC,EAAkB,KAC1B3B,EAAKpoB,MAAM,EAAG+pB,EACvB,EAEAE,SAAU,SAAkB7B,EAAM8B,GAChC,QAAYhrB,IAARgrB,GAAoC,iBAARA,EAAkB,MAAM,IAAIhX,UAAU,mCACtEiV,EAAWC,GAEX,IAGI3iB,EAHApC,EAAQ,EACR0mB,GAAO,EACPC,GAAe,EAGnB,QAAY9qB,IAARgrB,GAAqBA,EAAInrB,OAAS,GAAKmrB,EAAInrB,QAAUqpB,EAAKrpB,OAAQ,CACpE,GAAImrB,EAAInrB,SAAWqpB,EAAKrpB,QAAUmrB,IAAQ9B,EAAM,MAAO,GACvD,IAAI+B,EAASD,EAAInrB,OAAS,EACtBqrB,GAAoB,EACxB,IAAK3kB,EAAI2iB,EAAKrpB,OAAS,EAAG0G,GAAK,IAAKA,EAAG,CACrC,IAAI3B,EAAOskB,EAAKxkB,WAAW6B,GAC3B,GAAa,KAAT3B,GAGA,IAAKkmB,EAAc,CACjB3mB,EAAQoC,EAAI,EACZ,KACF,OAEwB,IAAtB2kB,IAGFJ,GAAe,EACfI,EAAmB3kB,EAAI,GAErB0kB,GAAU,IAERrmB,IAASomB,EAAItmB,WAAWumB,IACR,KAAZA,IAGJJ,EAAMtkB,IAKR0kB,GAAU,EACVJ,EAAMK,GAId,CAGA,OADI/mB,IAAU0mB,EAAKA,EAAMK,GAAmC,IAATL,IAAYA,EAAM3B,EAAKrpB,QACnEqpB,EAAKpoB,MAAMqD,EAAO0mB,EAC3B,CACE,IAAKtkB,EAAI2iB,EAAKrpB,OAAS,EAAG0G,GAAK,IAAKA,EAClC,GAA2B,KAAvB2iB,EAAKxkB,WAAW6B,IAGhB,IAAKukB,EAAc,CACjB3mB,EAAQoC,EAAI,EACZ,KACF,OACkB,IAATskB,IAGXC,GAAe,EACfD,EAAMtkB,EAAI,GAId,OAAa,IAATskB,EAAmB,GAChB3B,EAAKpoB,MAAMqD,EAAO0mB,EAE7B,EAEAM,QAAS,SAAiBjC,GACxBD,EAAWC,GAQX,IAPA,IAAIkC,GAAY,EACZC,EAAY,EACZR,GAAO,EACPC,GAAe,EAGfQ,EAAc,EACT/kB,EAAI2iB,EAAKrpB,OAAS,EAAG0G,GAAK,IAAKA,EAAG,CACzC,IAAI3B,EAAOskB,EAAKxkB,WAAW6B,GAC3B,GAAa,KAAT3B,GASS,IAATimB,IAGFC,GAAe,EACfD,EAAMtkB,EAAI,GAEC,KAAT3B,GAEkB,IAAdwmB,EACFA,EAAW7kB,EACY,IAAhB+kB,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKR,EAAc,CACjBO,EAAY9kB,EAAI,EAChB,KACF,CAoBN,CAEA,OAAkB,IAAd6kB,IAA4B,IAATP,GAEH,IAAhBS,GAEgB,IAAhBA,GAAqBF,IAAaP,EAAM,GAAKO,IAAaC,EAAY,EACjE,GAEFnC,EAAKpoB,MAAMsqB,EAAUP,EAC9B,EAEAU,OAAQ,SAAgBC,GACtB,GAAmB,OAAfA,GAA6C,iBAAfA,EAChC,MAAM,IAAIxX,UAAU,0EAA4EwX,GAElG,OAvVJ,SAAiBC,EAAKD,GACpB,IAAIE,EAAMF,EAAWE,KAAOF,EAAW9sB,KACnCitB,EAAOH,EAAWG,OAASH,EAAWtrB,MAAQ,KAAOsrB,EAAWR,KAAO,IAC3E,OAAKU,EAGDA,IAAQF,EAAW9sB,KACdgtB,EAAMC,EAERD,EA8UU,IA9UEC,EALVA,CAMX,CA6UWC,CAAQ,EAAKJ,EACtB,EAEAhqB,MAAO,SAAe0nB,GACpBD,EAAWC,GAEX,IAAI2C,EAAM,CAAEntB,KAAM,GAAIgtB,IAAK,GAAIC,KAAM,GAAIX,IAAK,GAAI9qB,KAAM,IACxD,GAAoB,IAAhBgpB,EAAKrpB,OAAc,OAAOgsB,EAC9B,IAEI1nB,EAFAS,EAAOskB,EAAKxkB,WAAW,GACvBqlB,EAAsB,KAATnlB,EAEbmlB,GACF8B,EAAIntB,KAAO,IACXyF,EAAQ,GAERA,EAAQ,EAaV,IAXA,IAAIinB,GAAY,EACZC,EAAY,EACZR,GAAO,EACPC,GAAe,EACfvkB,EAAI2iB,EAAKrpB,OAAS,EAIlByrB,EAAc,EAGX/kB,GAAKpC,IAASoC,EAEnB,GAAa,MADb3B,EAAOskB,EAAKxkB,WAAW6B,KAUV,IAATskB,IAGFC,GAAe,EACfD,EAAMtkB,EAAI,GAEC,KAAT3B,GAEkB,IAAdwmB,EAAiBA,EAAW7kB,EAA2B,IAAhB+kB,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAlBb,IAAKR,EAAc,CACjBO,EAAY9kB,EAAI,EAChB,KACF,CAwCN,OArBkB,IAAd6kB,IAA4B,IAATP,GAEP,IAAhBS,GAEgB,IAAhBA,GAAqBF,IAAaP,EAAM,GAAKO,IAAaC,EAAY,GACvD,IAATR,IACiCgB,EAAIF,KAAOE,EAAI3rB,KAAhC,IAAdmrB,GAAmBtB,EAAkCb,EAAKpoB,MAAM,EAAG+pB,GAAgC3B,EAAKpoB,MAAMuqB,EAAWR,KAG7G,IAAdQ,GAAmBtB,GACrB8B,EAAI3rB,KAAOgpB,EAAKpoB,MAAM,EAAGsqB,GACzBS,EAAIF,KAAOzC,EAAKpoB,MAAM,EAAG+pB,KAEzBgB,EAAI3rB,KAAOgpB,EAAKpoB,MAAMuqB,EAAWD,GACjCS,EAAIF,KAAOzC,EAAKpoB,MAAMuqB,EAAWR,IAEnCgB,EAAIb,IAAM9B,EAAKpoB,MAAMsqB,EAAUP,IAG7BQ,EAAY,EAAGQ,EAAIH,IAAMxC,EAAKpoB,MAAM,EAAGuqB,EAAY,GAAYtB,IAAY8B,EAAIH,IAAM,KAElFG,CACT,EAEAJ,IAAK,IACLK,UAAW,IACXC,MAAO,KACPrC,MAAO,MAGTA,EAAMA,MAAQA,EAEd7qB,EAAOD,QAAU8qB,wBChhBjB,OAUA,SAAWnW,EAAQvT,GAEf,aAOA,IAGIgsB,EAAc,WACdC,EAAc,YACdC,EAAc,SACdC,EAAc,SACdC,EAAc,QACdC,EAAc,QACdC,EAAc,OACdC,EAAc,OACdC,EAAc,SACdC,EAAc,UACdC,EAAc,eACdC,EAAc,UACdC,EAAc,SACdC,EAAc,SACdC,EAAc,UACdC,EAAc,WACdC,EAAc,WAGdC,EAAU,SACVC,EAAU,QACVC,EAAU,OACVC,EAAa,aACbC,EAAU,UACVC,EAAU,SAEVC,EAAU,UACVC,EAAU,SACVC,EAAU,SACVC,EAAU,KACVC,EAAY,YACZC,EAAY,WACZC,EAAU,QACVC,EAAU,UACVC,EAAU,QACVC,EAAU,OACVC,EAAU,SACVC,EAAU,QACVC,EAAc,WACdC,EAAc,cACdC,EAAU,SAiBVC,EAAY,SAAU3V,GAElB,IADA,IAAI4V,EAAQ,CAAC,EACJhoB,EAAE,EAAGA,EAAEoS,EAAI9Y,OAAQ0G,IACxBgoB,EAAM5V,EAAIpS,GAAG3D,eAAiB+V,EAAIpS,GAEtC,OAAOgoB,CACX,EACAC,EAAM,SAAUC,EAAMC,GAClB,cAAcD,IAAStC,IAAuD,IAA5CwC,EAASD,GAAMnuB,QAAQouB,EAASF,GACtE,EACAE,EAAW,SAAU/jB,GACjB,OAAOA,EAAI9K,aACf,EAIA8uB,EAAO,SAAUhkB,EAAKwI,GAClB,UAAU,IAAU+Y,EAEhB,OADAvhB,EAAMA,EAAIhJ,QAAQ,SA7EZ,WA8EO,IAAUqqB,EAAarhB,EAAMA,EAAI6W,UAAU,EA3DhD,IA6DpB,EAMIoN,EAAY,SAAUC,EAAIC,GAKtB,IAHA,IAAW5R,EAAGE,EAAGiE,EAAG0N,EAAGrvB,EAASqB,EAA5BuF,EAAI,EAGDA,EAAIwoB,EAAOlvB,SAAWF,GAAS,CAElC,IAAIsvB,EAAQF,EAAOxoB,GACf2oB,EAAQH,EAAOxoB,EAAI,GAIvB,IAHA4W,EAAIE,EAAI,EAGDF,EAAI8R,EAAMpvB,SAAWF,GAEnBsvB,EAAM9R,IAGX,GAFAxd,EAAUsvB,EAAM9R,KAAKgS,KAAKL,GAGtB,IAAKxN,EAAI,EAAGA,EAAI4N,EAAMrvB,OAAQyhB,IAC1BtgB,EAAQrB,IAAU0d,UAClB2R,EAAIE,EAAM5N,MAEO4K,GAAY8C,EAAEnvB,OAAS,EACnB,IAAbmvB,EAAEnvB,cACSmvB,EAAE,IAAMhD,EAEfhkB,KAAKgnB,EAAE,IAAMA,EAAE,GAAGtsB,KAAKsF,KAAMhH,GAG7BgH,KAAKgnB,EAAE,IAAMA,EAAE,GAEC,IAAbA,EAAEnvB,cAEEmvB,EAAE,KAAOhD,GAAegD,EAAE,GAAGG,MAAQH,EAAE,GAAGvR,KAKjDzV,KAAKgnB,EAAE,IAAMhuB,EAAQA,EAAMY,QAAQotB,EAAE,GAAIA,EAAE,IAAMhvB,EAHjDgI,KAAKgnB,EAAE,IAAMhuB,EAAQguB,EAAE,GAAGtsB,KAAKsF,KAAMhH,EAAOguB,EAAE,IAAMhvB,EAKpC,IAAbgvB,EAAEnvB,SACLmI,KAAKgnB,EAAE,IAAMhuB,EAAQguB,EAAE,GAAGtsB,KAAKsF,KAAMhH,EAAMY,QAAQotB,EAAE,GAAIA,EAAE,KAAOhvB,GAG1EgI,KAAKgnB,GAAKhuB,GAAgBhB,EAK1CuG,GAAK,CACT,CACJ,EAEA6oB,EAAY,SAAUxkB,EAAKykB,GAEvB,IAAK,IAAI9oB,KAAK8oB,EAEV,UAAWA,EAAI9oB,KAAO2lB,GAAYmD,EAAI9oB,GAAG1G,OAAS,GAC9C,IAAK,IAAIsd,EAAI,EAAGA,EAAIkS,EAAI9oB,GAAG1G,OAAQsd,IAC/B,GAAIqR,EAAIa,EAAI9oB,GAAG4W,GAAIvS,GACf,MAjJN,MAiJcrE,EAAiBvG,EAAYuG,OAG1C,GAAIioB,EAAIa,EAAI9oB,GAAIqE,GACnB,MArJE,MAqJMrE,EAAiBvG,EAAYuG,EAG7C,OAAOqE,CACf,EAiBI0kB,EAAoB,CAChB,GAAc,OACd,UAAc,SACd,SAAc,QACd,IAAc,SACd,GAAc,CAAC,SAAU,UACzB,MAAc,SACd,EAAc,SACd,EAAc,SACd,IAAc,SACd,GAAc,CAAC,SAAU,WACzB,GAAc,OAOlBC,EAAU,CAEVC,QAAU,CAAC,CAEP,gCACG,CAAC/C,EAAS,CAACH,EAAM,WAAY,CAChC,+BACG,CAACG,EAAS,CAACH,EAAM,SAAU,CAG9B,4BACA,mDACA,2CACG,CAACA,EAAMG,GAAU,CACpB,yBACG,CAACA,EAAS,CAACH,EAAMuB,EAAM,UAAW,CACrC,qBACG,CAACpB,EAAS,CAACH,EAAMuB,IAAS,CAG7B,0DACG,CAACpB,EAAS,CAACH,EAAM,UAAW,CAC/B,uBACA,8DAEA,uDACA,2BAGA,+LAEA,kCACA,uBACG,CAACA,EAAMG,GAAU,CACpB,qDACG,CAACA,EAAS,CAACH,EAAM,KAAKe,IAAW,CACpC,+BACA,+BACA,8BACG,CAACZ,EAAS,CAACH,EAAM,WAAY,CAChC,yBACG,CAACG,EAAS,CAACH,EAAM,cAAe,CACnC,+CACG,CAACG,EAAS,CAACH,EAAM,OAAQ,CAC5B,oCACG,CAACG,EAAS,CAACH,EAAM,WAAY,CAChC,yBACG,CAACG,EAAS,CAACH,EAAM,gBAAgBe,IAAW,CAC/C,2BACG,CAAC,CAACf,EAAM,OAAQ,aAAae,GAAUZ,GAAU,CACpD,uBACG,CAACA,EAAS,CAACH,EAAMiB,EAAQ,WAAY,CACxC,qBACG,CAACd,EAAS,CAACH,EAAMuB,EAAM,WAAY,CACtC,0BACG,CAACpB,EAAS,CAACH,EAAM,YAAa,CACjC,sBACG,CAACG,EAAS,CAACH,EAAM,YAAa,CACjC,qBACG,CAACG,EAAS,CAACH,EAAMuB,EAAM,WAAY,CACtC,2BACG,CAACpB,EAAS,CAACH,EAAM,QAAQe,IAAW,CACvC,sBACG,CAACZ,EAAS,CAACH,EAAMiB,IAAW,CAC/B,iCACG,CAAC,CAACjB,EAAM,OAASe,IAAW,CAC/B,oDACG,CAAC,CAACf,EAAM,OAAQ,MAAQe,GAAUZ,GAAU,CAC/C,8BACG,CAACA,EAAS,CAACH,EAAMwB,EAAU,cAAe,CAC7C,+BACG,CAAC,CAACxB,EAAM,KAAM,KAAMG,GAAU,CACjC,0BACG,CAACA,EAAS,CAACH,EAAM,mBAAoB,CACxC,4BACG,CAAC,CAACA,EAAM,gBAAiBG,GAAU,CACtC,gCACA,iDACA,8CACG,CAACH,EAAMG,GAAU,CACpB,eACA,sBACG,CAACH,GAAO,CAGX,+DACG,CAAC,CAACA,EAAM6B,GAAW1B,GAAU,CAChC,uBACA,uCACA,kCACA,4BACA,4BACA,6BACA,iDACG,CAACH,EAAMG,GAAU,CACpB,gCACG,CAACA,EAAS,CAACH,EAAM,QAAS,CAC7B,8CACG,CAACG,EAAS,CAACH,EAAM,WAAY,CAEhC,oCACG,CAACG,EAAS,CAACH,EAAMgB,EAAO,cAAe,CAE1C,+BACG,CAAC,CAAChB,EAAMgB,EAAO,YAAab,GAAU,CAEzC,2DACG,CAACA,EAAS,CAACH,EAAM,WAAWe,IAAW,CAE1C,+DACG,CAACf,EAAMG,GAAU,CAEpB,gDACG,CAACA,EAAS,CAACH,EAAM,kBAAmB,CACvC,sDACG,CAACG,EAASH,GAAO,CACpB,gDACG,CAACA,EAAM,CAACG,EAAS2C,EAjJT,CACX,MAAU,KACV,IAAU,KACV,IAAU,KACV,MAAU,OACV,QAAU,OACV,QAAU,OACV,QAAU,OACV,IAAU,OAyIqC,CAE/C,8BACG,CAAC9C,EAAMG,GAAU,CAGpB,wCACG,CAAC,CAACH,EAAM,YAAaG,GAAU,CAClC,uCACG,CAACA,EAAS,CAACH,EAAMiB,EAAQ,aAAc,CAC1C,6BACA,cACA,mGAEA,+FAEA,wBACA,2CAGA,wHAEA,uBACA,sBACG,CAACjB,EAAMG,GAAU,CAEpB,wBACG,CAACH,EAAM,CAACG,EAAS,eAAgB,MAGxCgD,IAAM,CAAC,CAEH,iDACG,CAAC,CAAC/C,EAAc,UAAW,CAE9B,gBACG,CAAC,CAACA,EAAciC,IAAY,CAE/B,0BACG,CAAC,CAACjC,EAAc,SAAU,CAE7B,oCACG,CAAC,CAACA,EAAc,UAAW,CAE9B,mCACG,CAAC,CAACA,EAAc,UAAW,CAG9B,8BACG,CAAC,CAACA,EAAc,QAAS,CAE5B,0CACG,CAAC,CAACA,EAAc,OAtWT,GAsWwBiC,IAAY,CAE9C,kBACG,CAAC,CAACjC,EAAc,UAAW,CAE9B,2HAEG,CAAC,CAACA,EAAciC,KAGvBe,OAAS,CAAC,CAON,mFACG,CAACrD,EAAO,CAACG,EAAQsB,GAAU,CAACvB,EAAMM,IAAU,CAC/C,yDACA,uBACA,iBACG,CAACR,EAAO,CAACG,EAAQsB,GAAU,CAACvB,EAAMK,IAAU,CAG/C,4CACG,CAACP,EAAO,CAACG,EAAQU,GAAQ,CAACX,EAAMK,IAAU,CAC7C,6BACA,oCACA,kCACG,CAACP,EAAO,CAACG,EAAQU,GAAQ,CAACX,EAAMM,IAAU,CAC7C,iBACG,CAACR,EAAO,CAACG,EAAQU,IAAS,CAG7B,iCACG,CAACb,EAAO,CAACG,EAAQuB,GAAQ,CAACxB,EAAMK,IAAU,CAG7C,+DACG,CAACP,EAAO,CAACG,EAAQiB,GAAS,CAAClB,EAAMM,IAAU,CAC9C,kCACA,sEACG,CAACR,EAAO,CAACG,EAAQiB,GAAS,CAAClB,EAAMK,IAAU,CAG9C,kDACA,yBACA,uCACA,iDACA,4DACA,yGACG,CAAC,CAACP,EAAO,KAAM,KAAM,CAACG,EAAQyB,GAAS,CAAC1B,EAAMK,IAAU,CAC3D,+CACA,8CACE,CAAC,CAACP,EAAO,KAAM,KAAM,CAACG,EAAQyB,GAAS,CAAC1B,EAAMM,IAAU,CAG1D,sBACA,mEACG,CAACR,EAAO,CAACG,EAAQ,QAAS,CAACD,EAAMK,IAAU,CAG9C,yBACA,oCACG,CAACP,EAAO,CAACG,EAAQ,QAAS,CAACD,EAAMK,IAAU,CAG9C,mCACG,CAACP,EAAO,CAACG,EAAQ,UAAW,CAACD,EAAMK,IAAU,CAGhD,iFACA,4BACA,sDACG,CAACP,EAAO,CAACG,EAAQoB,GAAW,CAACrB,EAAMK,IAAU,CAChD,qCACG,CAACP,EAAO,CAACG,EAAQoB,GAAW,CAACrB,EAAMM,IAAU,CAGhD,iEACG,CAACR,EAAO,CAACG,EAAQkB,GAAK,CAACnB,EAAMM,IAAU,CAC1C,sDACA,oDACA,wBACG,CAACR,EAAO,CAACG,EAAQkB,GAAK,CAACnB,EAAMK,IAAU,CAG1C,oBACA,qEACG,CAACP,EAAO,CAACG,EAAQ,UAAW,CAACD,EAAMM,IAAU,CAGhD,qCACA,0BACG,CAAC,CAACR,EAAO,KAAM,KAAM,CAACG,EAAQ,SAAU,CAACD,EAAMK,IAAU,CAG5D,gBACG,CAACP,EAAO,CAACG,EAAQgB,GAAS,CAACjB,EAAMM,IAAU,CAC9C,6CACG,CAACR,EAAO,CAACG,EAAQgB,GAAS,CAACjB,EAAMK,IAAU,CAG9C,0GACG,CAACP,EAAO,CAACG,EAAQwB,GAAO,CAACzB,EAAMK,IAAU,CAC5C,oBACA,iCACG,CAAC,CAACP,EAAO,iBAAkB,CAACG,EAAQwB,GAAO,CAACzB,EAAMM,IAAU,CAG/D,sCACA,0CACG,CAACR,EAAO,CAACG,EAAQ,WAAY,CAACD,EAAMK,IAAU,CAGjD,eACA,uCACA,gCACG,CAACP,EAAO,CAACG,EAAQS,GAAS,CAACV,EAAMM,IAAU,CAC9C,iDACG,CAAC,CAACR,EAAO,QAAS,iBAAkB,CAACG,EAAQS,GAAS,CAACV,EAAMK,IAAU,CAG1E,gCACG,CAACP,EAAOG,EAAQ,CAACD,EAAMM,IAAU,CACpC,gCACA,kBACG,CAACR,EAAO,CAACG,EAAQY,GAAa,CAACb,EAAMK,IAAU,CAGlD,qFACG,CAACP,EAAO,CAACG,EAAQW,GAAO,CAACZ,EAAMM,IAAU,CAC5C,iDACG,CAACR,EAAO,CAACG,EAAQW,GAAO,CAACZ,EAAMK,IAAU,CAG5C,cACG,CAACP,EAAO,CAACG,EAAQ,OAAQ,CAACD,EAAMM,IAAU,CAC7C,2CAGA,oCACA,iFACG,CAACL,EAAQ,CAACH,EAAO,KAAM,KAAM,CAACE,EAAMK,IAAU,CAGjD,uCACG,CAACP,EAAO,CAACG,EAAQ,QAAS,CAACD,EAAMM,IAAU,CAG9C,8BACA,qBACG,CAACR,EAAO,CAACG,EAAQ,SAAU,CAACD,EAAMK,IAAU,CAG/C,kDACG,CAACP,EAAO,CAACG,EAAQ,WAAY,CAACD,EAAMK,IAAU,CAGjD,gHAEA,mBACA,iBACA,8BACA,0BACA,WACA,yBACG,CAACJ,EAAQH,EAAO,CAACE,EAAMK,IAAU,CAEpC,2BACA,wBACA,uCACA,uBACA,4BACA,iCACA,kCACA,8BACA,gCACA,mCACG,CAACJ,EAAQH,EAAO,CAACE,EAAMM,IAAU,CAEpC,kBACG,CAACR,EAAO,CAACG,EAAQmB,GAAY,CAACpB,EAAMM,IAAU,CACjD,qCACG,CAACR,EAAO,CAACG,EAAQ,aAAc,CAACD,EAAMK,IAAU,CACnD,aACG,CAACP,EAAO,CAACG,EAAQ,QAAS,CAACD,EAAMK,IAAU,CAC9C,gBACG,CAACP,EAAO,CAACG,EAAQ,WAAY,CAACD,EAAMK,IAAU,CACjD,iBACG,CAACP,EAAO,CAACG,EAAQ,OAAQ,CAACD,EAAMM,IAAU,CAC7C,0BACG,CAACR,EAAO,CAACG,EAAQ,QAAS,CAACD,EAAMM,IAAU,CAC9C,wBACG,CAACR,EAAO,CAACG,EAAQ,WAAY,CAACD,EAAMM,IAAU,CACjD,+CACG,CAACR,EAAO,CAACG,EAAQ,kBAAmB,CAACD,EAAMM,IAAU,CACxD,qBACG,CAACR,EAAO,CAACG,EAAQ,YAAa,CAACD,EAAMM,IAAU,CAClD,cACG,CAACR,EAAO,CAACG,EAAQ,OAAQ,CAACD,EAAMM,IAAU,CAC7C,mBACG,CAACR,EAAO,CAACG,EAAQ,OAAQ,CAACD,EAAMK,IAAU,CAC7C,wBACG,CAACP,EAAO,CAACG,EAAQ,SAAU,CAACD,EAAMK,IAAU,CAC/C,mBACG,CAACP,EAAO,CAACG,EAAQ,SAAU,CAACD,EAAMM,IAAU,CAC/C,wBACG,CAACR,EAAO,CAACG,EAAQ,QAAS,CAACD,EAAMM,IAAU,CAC9C,mBACA,sCACG,CAAC,CAACL,EAAQ,gBAAiBH,EAAO,CAACE,EAAMM,IAAU,CACtD,sBACG,CAACR,EAAO,CAACG,EAAQ,YAAa,CAACD,EAAMM,IAAU,CAClD,8BACG,CAACR,EAAO,CAACG,EAAQ,YAAa,CAACD,EAAMM,IAAU,CAClD,oDACG,CAAC,CAACL,EAAQ,SAAUH,EAAO,CAACE,EAAMK,IAAU,CAC/C,2BACG,CAAC,CAACJ,EAAQ,SAAUH,EAAO,CAACE,EAAMK,IAAU,CAC/C,cACG,CAACP,EAAO,CAACG,EAAQ,aAAc,CAACD,EAAMK,IAAU,CACnD,uCACG,CAACP,EAAO,CAACG,EAAQ,WAAY,CAACD,EAAMM,IAAU,CACjD,wBACG,CAACR,EAAO,CAACG,EAAQ,aAAc,CAACD,EAAMM,IAAU,CACnD,kBACG,CAACR,EAAO,CAACG,EAAQ,SAAU,CAACD,EAAMM,IAAU,CAC/C,qBACG,CAACR,EAAO,CAACG,EAAQ,UAAW,CAACD,EAAMM,IAAU,CAChD,mBACG,CAACL,EAAQH,EAAO,CAACE,EAAMK,IAAU,CACpC,sBACG,CAAC,CAACP,EAAO,MAAO,KAAM,CAACG,EAAQmB,GAAY,CAACpB,EAAMK,IAAU,CAC/D,yDACG,CAACP,EAAO,CAACG,EAAQ0B,GAAQ,CAAC3B,EAAMM,IAAU,CAC7C,yCACG,CAACR,EAAO,CAACG,EAAQ0B,GAAQ,CAAC3B,EAAMK,IAAU,CAM7C,wBACG,CAACJ,EAAQ,CAACD,EAAMO,IAAW,CAC9B,uBACG,CAAC,CAACT,EAAO,IAAK,WAAY,CAACG,EAAQsB,GAAU,CAACvB,EAAMO,IAAW,CAClE,8DACG,CAAC,CAACN,EAAQkB,GAAK,CAACnB,EAAMO,IAAW,CACpC,gBACG,CAACN,EAAQ,CAACH,EAAOa,EAAM,OAAQ,CAACX,EAAMO,IAAW,CACpD,UACG,CAAC,CAACT,EAAOiB,EAAO,QAAS,CAACd,EAAQgB,GAAS,CAACjB,EAAMO,IAAW,CAChE,6BACG,CAACT,EAAO,CAACG,EAAQS,GAAS,CAACV,EAAMO,IAAW,CAC/C,uBACA,uBACG,CAACT,EAAO,CAACG,EAAQuB,GAAQ,CAACxB,EAAMO,IAAU,CAC7C,4BACG,CAACT,EAAO,CAACG,EAAQwB,GAAO,CAACzB,EAAMO,IAAW,CAC7C,qBACG,CAACT,EAAO,CAACG,EAAQyB,GAAS,CAAC1B,EAAMO,IAAW,CAC/C,6BACG,CAACN,EAAQH,EAAO,CAACE,EAAMO,IAAW,CACrC,0CACA,6DACG,CAAC,CAACN,EAAQoC,GAAO,CAACvC,EAAOuC,GAAO,CAACrC,EAAMO,IAAW,CACrD,mDACG,CAAC,CAACP,EAAMO,IAAW,CAMtB,UACA,8BACG,CAACN,EAAQH,EAAO,CAACE,EAAMI,IAAW,CACrC,0BACG,CAACN,EAAO,CAACG,EAAQ,UAAW,CAACD,EAAMI,IAAW,CACjD,mCACG,CAACN,EAAO,CAACG,EAAQwB,GAAO,CAACzB,EAAMI,IAAW,CAC7C,sCACG,CAACN,EAAO,CAACG,EAAQmB,GAAY,CAACpB,EAAMI,IAAW,CAMlD,kBACG,CAACH,EAAQH,EAAO,CAACE,EAAMQ,IAAY,CACtC,wCACG,CAACV,EAAO,CAACG,EAAQU,GAAQ,CAACX,EAAMQ,IAAY,CAC/C,wBACG,CAACV,EAAO,CAACG,EAAQgB,GAAS,CAACjB,EAAMQ,IAAY,CAChD,6BACG,CAACV,EAAO,CAACG,EAAQ0B,GAAQ,CAAC3B,EAAMQ,IAAY,CAC/C,sBACG,CAACV,EAAO,CAACG,EAAQ2B,GAAW,CAAC5B,EAAMQ,IAAY,CAMlD,wCACG,CAACP,EAAQ,CAACD,EAAMS,IAAY,CAC/B,cACG,CAACX,EAAO,CAACG,EAAQS,GAAS,CAACV,EAAMS,IAAY,CAMhD,kEACG,CAACX,EAAO,CAACE,EAAMK,IAAU,CAC5B,+DACG,CAACP,EAAO,CAACE,EAAMM,IAAU,CAC5B,gDACG,CAAC,CAACN,EAAMM,IAAU,CACrB,kEACG,CAAC,CAACN,EAAMK,IAAU,CACrB,kCACG,CAACP,EAAO,CAACG,EAAQ,aAGxBmD,OAAS,CAAC,CAEN,8BACG,CAAClD,EAAS,CAACH,EAAMsD,aAAe,CAEnC,6CACG,CAACnD,EAAS,CAACH,EAAM,UAAW,CAE/B,uBACA,sEACA,0BACA,yCACA,8BACA,eACG,CAACA,EAAMG,GAAU,CAEpB,iCACG,CAACA,EAASH,IAGjBuD,GAAK,CAAC,CAGF,mCACG,CAACvD,EAAMG,GAAU,CACpB,yDACG,CAACH,EAAM,CAACG,EAAS2C,EAAWE,IAAqB,CACpD,0BACA,2CACA,wCACG,CAAC,CAAC7C,EAAS2C,EAAWE,GAAoB,CAAChD,EAAM,YAAa,CAGjE,sDACA,4CACA,wBACG,CAAC,CAACG,EAAS,KAAM,KAAM,CAACH,EAAM,QAAS,CAC1C,0BACA,yCACG,CAAC,CAACA,EAAM+B,GAAS,CAAC5B,EAAS,KAAM,MAAO,CAG3C,kDACG,CAACA,EAASH,GAAO,CACpB,+EACA,8BACA,+BACA,kBACG,CAACA,EAAMG,GAAU,CACpB,cACG,CAACA,EAAS,CAACH,EAAMc,IAAc,CAClC,6DACG,CAACX,EAAS,CAACH,EAAM,YAAa,CACjC,mFACG,CAACG,EAAS,CAACH,EAAMiB,EAAQ,QAAS,CACrC,kBACA,wCACG,CAACd,EAAS,CAACH,EAAM,UAAW,CAC/B,wCACG,CAACG,EAAS,CAACH,EAAM,YAAa,CAGjC,qBACG,CAACG,EAAS,CAACH,EAAMgB,EAAO,SAAU,CACrC,oCACG,CAAC,CAAChB,EAAM8B,GAAc3B,GAAS,CAGlC,qBACA,iBACA,2BAGA,mDACA,2BAGA,wCACA,yBACA,4BACA,8SAEA,2BACA,oBACA,6EACA,kBACG,CAACH,EAAMG,GAAU,CACpB,yBACG,CAAC,CAACH,EAAM,WAAYG,GAAU,CACjC,sCACA,kCACA,mEACA,sBACG,CAACH,EAAMG,KAQdqD,EAAW,SAAUhB,EAAIzsB,GAOzB,UALWysB,IAAO5C,IACd7pB,EAAaysB,EACbA,EAAK9uB,KAGHgI,gBAAgB8nB,GAClB,OAAO,IAAIA,EAAShB,EAAIzsB,GAAY0tB,YAGxC,IAAIC,SAAqBzc,IAAW0Y,GAAc1Y,EAAOgG,UAAahG,EAAOgG,UAAYvZ,EACrFiwB,EAAMnB,IAAQkB,GAAcA,EAAWxW,UAAawW,EAAWxW,UA5xBrD,IA6xBV0W,EAASF,GAAcA,EAAWG,cAAiBH,EAAWG,cAAgBnwB,EAC9EowB,EAAU/tB,EA9uBL,SAAUktB,EAASltB,GACxB,IAAIguB,EAAgB,CAAC,EACrB,IAAK,IAAI9pB,KAAKgpB,EACNltB,EAAWkE,IAAMlE,EAAWkE,GAAG1G,OAAS,GAAM,EAC9CwwB,EAAc9pB,GAAKlE,EAAWkE,GAAG3C,OAAO2rB,EAAQhpB,IAEhD8pB,EAAc9pB,GAAKgpB,EAAQhpB,GAGnC,OAAO8pB,CACX,CAouB2BlK,CAAOoJ,EAASltB,GAAcktB,EACrDe,EAAaN,GAAcA,EAAWxW,WAAayW,EAyEvD,OAvEAjoB,KAAKuoB,WAAa,WACd,IA1tBiB1qB,EA0tBb2qB,EAAW,CAAC,EAShB,OARAA,EAASlE,GAAQtsB,EACjBwwB,EAAS/D,GAAWzsB,EACpB6uB,EAAUnsB,KAAK8tB,EAAUP,EAAKG,EAAQZ,SACtCgB,EAASpE,UA9tBQvmB,EA8tBU2qB,EAAS/D,MA7tBTN,EAAWtmB,EAAQjE,QAAQ,WAzE5C,IAyE+DnB,MAAM,KAAK,GAAKT,EA+tBrFswB,GAAcN,GAAcA,EAAWS,cAAgBT,EAAWS,MAAMC,SAAW1E,IACnFwE,EAASlE,GAAQ,SAEdkE,CACX,EACAxoB,KAAK2oB,OAAS,WACV,IAAIC,EAAO,CAAC,EAGZ,OAFAA,EAAKlE,GAAgB1sB,EACrB6uB,EAAUnsB,KAAKkuB,EAAMX,EAAKG,EAAQX,KAC3BmB,CACX,EACA5oB,KAAK6oB,UAAY,WACb,IAAIC,EAAU,CAAC,EAaf,OAZAA,EAAQtE,GAAUxsB,EAClB8wB,EAAQzE,GAASrsB,EACjB8wB,EAAQvE,GAAQvsB,EAChB6uB,EAAUnsB,KAAKouB,EAASb,EAAKG,EAAQV,QACjCY,IAAeQ,EAAQvE,IAAS2D,GAASA,EAAMa,SAC/CD,EAAQvE,GAAQK,GAGhB0D,GAAgC,aAAlBQ,EAAQzE,IAAyB2D,UAAqBA,EAAWgB,aAAe/E,GAAc+D,EAAWiB,gBAAkBjB,EAAWiB,eAAiB,IACrKH,EAAQzE,GAAS,OACjByE,EAAQvE,GAAQM,GAEbiE,CACX,EACA9oB,KAAKkpB,UAAY,WACb,IAAIC,EAAU,CAAC,EAIf,OAHAA,EAAQ7E,GAAQtsB,EAChBmxB,EAAQ1E,GAAWzsB,EACnB6uB,EAAUnsB,KAAKyuB,EAASlB,EAAKG,EAAQT,QAC9BwB,CACX,EACAnpB,KAAKopB,MAAQ,WACT,IAAIC,EAAM,CAAC,EASX,OARAA,EAAI/E,GAAQtsB,EACZqxB,EAAI5E,GAAWzsB,EACf6uB,EAAUnsB,KAAK2uB,EAAKpB,EAAKG,EAAQP,IAC7BS,IAAee,EAAI/E,IAAS4D,GAA2B,WAAlBA,EAAMxS,WAC3C2T,EAAI/E,GAAQ4D,EAAMxS,SACG9b,QAAQ,aAAcwsB,GACtBxsB,QAAQ,SAAUysB,IAEpCgD,CACX,EACArpB,KAAK+nB,UAAY,WACb,MAAO,CACHjB,GAAU9mB,KAAKspB,QACf9B,QAAUxnB,KAAKuoB,aACfZ,OAAU3nB,KAAKkpB,YACfrB,GAAU7nB,KAAKopB,QACf1B,OAAU1nB,KAAK6oB,YACfpB,IAAUznB,KAAK2oB,SAEvB,EACA3oB,KAAKspB,MAAQ,WACT,OAAOrB,CACX,EACAjoB,KAAKupB,MAAQ,SAAUzC,GAEnB,OADAmB,SAAcnB,IAAO3C,GAAY2C,EAAGjvB,OAj1BxB,IAi1BkD+uB,EAAKE,EAj1BvD,KAi1B4EA,EACjF9mB,IACX,EACAA,KAAKupB,MAAMtB,GACJjoB,IACX,EAEA8nB,EAASrD,QA52BS,SA62BlBqD,EAASzC,QAAWiB,EAAU,CAAChC,EAAMG,EAASL,IAC9C0D,EAAS0B,IAAMlD,EAAU,CAAC5B,IAC1BoD,EAAS2B,OAASnD,EAAU,CAACjC,EAAOG,EAAQD,EAAMI,EAASC,EAAQE,EAASD,EAAQE,EAAUC,IAC9F8C,EAAS4B,OAAS5B,EAAS6B,GAAKrD,EAAU,CAAChC,EAAMG,WAOvC,IAAcR,GAEgBptB,EAAOD,UACvCA,EAAUC,EAAOD,QAAUkxB,GAE/BlxB,EAAQkxB,SAAWA,GAGiB,QAChC,aACI,OAAOA,CACV,2CACavc,IAAW0Y,IAEzB1Y,EAAOuc,SAAWA,GAS1B,IAAI8B,SAAWre,IAAW0Y,IAAe1Y,EAAOse,QAAUte,EAAOue,OACjE,GAAIF,IAAMA,EAAE9C,GAAI,CACZ,IAAI3pB,GAAS,IAAI2qB,EACjB8B,EAAE9C,GAAK3pB,GAAO4qB,YACd6B,EAAE9C,GAAG1Q,IAAM,WACP,OAAOjZ,GAAOmsB,OAClB,EACAM,EAAE9C,GAAG1iB,IAAM,SAAU0iB,GACjB3pB,GAAOosB,MAAMzC,GACb,IAAIrrB,EAAS0B,GAAO4qB,YACpB,IAAK,IAAIgC,KAAQtuB,EACbmuB,EAAE9C,GAAGiD,GAAQtuB,EAAOsuB,EAE5B,CACJ,CAEH,CAv6BD,CAu6BqB,iBAAXxe,OAAsBA,OAASvL,q4vCCh7BrCgqB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBlyB,IAAjBmyB,EACH,OAAOA,EAAavzB,QAGrB,IAAIC,EAASmzB,EAAyBE,GAAY,CAGjDtzB,QAAS,CAAC,GAOX,OAHAwzB,EAAoBF,GAAUxvB,KAAK7D,EAAOD,QAASC,EAAQA,EAAOD,QAASqzB,GAGpEpzB,EAAOD,OACf,CCtBAqzB,EAAoBI,KAAO,CAAC,ECC5BJ,EAAoBlhB,EAAI,SAASlS,GAChC,IAAIyzB,EAASzzB,GAAUA,EAAO0zB,WAC7B,WAAa,OAAO1zB,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAozB,EAAoBO,EAAEF,EAAQ,CAAEhsB,EAAGgsB,IAC5BA,CACR,ECNAL,EAAoBO,EAAI,SAAS5zB,EAAS6zB,GACzC,IAAI,IAAIpxB,KAAOoxB,EACXR,EAAoBhhB,EAAEwhB,EAAYpxB,KAAS4wB,EAAoBhhB,EAAErS,EAASyC,IAC5EY,OAAOywB,eAAe9zB,EAASyC,EAAK,CAAEsxB,YAAY,EAAMvU,IAAKqU,EAAWpxB,IAG3E,ECPA4wB,EAAoB3e,EAAI,WACvB,GAA0B,iBAAfsf,WAAyB,OAAOA,WAC3C,IACC,OAAO5qB,MAAQ,IAAI6qB,SAAS,cAAb,EAGhB,CAFE,MAAOziB,GACR,GAAsB,iBAAXmD,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB0e,EAAoBhhB,EAAI,SAASiE,EAAK6c,GAAQ,OAAO9vB,OAAOoD,UAAUvC,eAAeJ,KAAKwS,EAAK6c,EAAO,2PCsDtG,EADgB,IAjBVe,WAYF,0GAAc,SACV9qB,KAAK+qB,MACR,0CAZD,WACI/qB,KAAKgrB,eAAiB,oBACtBhrB,KAAKirB,kBAAoB,2BACzBjrB,KAAKkrB,uBAAyB,UAC9BlrB,KAAKmrB,uBAAyB,UAC9BnrB,KAAKorB,uBAAyB,UAC9BprB,KAAKqrB,wBAA0B,WAC/BrrB,KAAKsrB,qBAAuB,OAC/B,yBAVCR,ICFAS,EAAcC,EAAQ,MACtBC,EAAWD,EAAAA,MAAAA,YAEjB,SAASE,IAEL,IACIC,EACAC,EAiJJ,SAASC,EAAgBC,GACrB,OAAOC,IAAkB5e,MAAK,SAAU4P,GACpC,GAAIA,EAAO,CAEP,IADA,IAAIrhB,EAAO,KACF6C,EAAI,EAAGA,EAAIwe,EAAMiP,UAAUn0B,OAAQ0G,IACpCwe,EAAMiP,UAAUztB,GAAG0tB,aAAezkB,SAASskB,KAC3CpwB,EAAOqhB,EAAMiP,UAAUztB,IAG/B,OAAa,OAAT7C,GACAA,EAAKwwB,SAAWT,EAASptB,OAAO3C,EAAKwwB,UAC9BpgB,QAAQkB,QAAQtR,IAEhBoQ,QAAQiB,OAAO,gDAAkD+e,EAE/E,CACG,OAAOhgB,QAAQiB,OAAO,+BAE7B,IAjBM,OAiBE,SAAUqF,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,CAOD,SAAS2Z,IACL,OAAOJ,EAAcxV,QAAQ,YAAYhJ,MAAK,SAAU4P,GACpD,OAAOjR,QAAQkB,QAAQ+P,GAAgB,CACnC,UAAa,IAEpB,IAJM,OAIE,SAAU3K,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,CA+BD,SAAS+Z,EAAeD,GACpB,OAAOH,IAAkB5e,MAAK,SAAU4P,GACpC,IACI,IAAK,IAAIxe,EAAI,EAAGA,EAAIwe,EAAMiP,UAAUn0B,OAAQ0G,IACpCwe,EAAMiP,UAAUztB,GAAG0tB,aAAeC,EAASD,aAC3ClP,EAAMiP,UAAUztB,GAAK2tB,GAG7B,OAAOP,EAActV,QAAQ,WAAY0G,EAG5C,CAFC,MAAO3K,GACL,MAAM,IAAIha,MAAM,sBACnB,CACJ,GACJ,CA6KD,OA3YIwzB,EAAiB,CAAC,EAEI,oBAAXrgB,SAIXggB,EAAYjU,OAAO,CACfwG,OAAQyN,EAAYhO,UACpBrlB,KAAM,oBAGVyzB,EAAgBJ,EAAYxK,eAAe,CACvCjD,OAAQyN,EAAYhO,UACpBrlB,KAAM,kBACN2F,QAAS,EACTkV,UAAW,cA0WR,CACPqZ,QApFJ,WACI,OAAOb,EAAYvU,QAAQ7J,MAAK,WAC5B,OAAOrB,QAAQkB,SAClB,IAFM,OAEE,SAAUoF,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,EA+EGia,iBAlQJ,SAA0BJ,EAAY5yB,GAClC,IAAIizB,EAAgBV,EAAeK,GAEnC,OAAKK,EAIEA,EAAcnW,QAAQ9c,GAAK8T,MAAK,SAAUhV,GAC7C,OAAO2T,QAAQkB,QAAQ7U,EAC1B,IAFM,OAEE,SAAUia,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,IAPUtG,QAAQiB,OAAO,IAAI3U,MAAJ,+CAAmD6zB,IAShF,EAsPGJ,gBAAiBA,EACjBU,cAhHJ,SAAuBN,EAAYO,EAAYC,GAC3C,IAAIH,EAAgBV,EAAeK,GAEnC,OAAKK,EAIEA,EAAcjW,QAAQmW,EAAYC,GAAc,WACnD,OAAO3gB,QAAQkB,SAClB,IAFM,OAEE,SAAUoF,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,IAPUtG,QAAQiB,OAAO,IAAI3U,MAAJ,+CAAmD6zB,IAQhF,EAqGGS,cAnIJ,SAAuBR,GACnB,OAAOP,EAAcxV,QAAQ,YAAYhJ,MAAK,SAAUgO,GACpD,IAAI4B,EAAQ5B,GAAoB,CAC5B,UAAa,IAGjB,OADA4B,EAAMiP,UAAUj0B,KAAKm0B,GACdP,EAActV,QAAQ,WAAY0G,EAC5C,GACJ,EA4HGoP,eAAgBA,EAChBQ,4BAzJJ,SAAqCT,EAAUU,GAC3C,OAAOf,EAAgBK,GAAU/e,MAAK,SAAUzR,GAM5C,OALKA,EAAKkxB,WACNlxB,EAAKkxB,SAAW,CAAC,GAGrBlxB,EAAKkxB,SAAWA,EACTT,EAAezwB,GAAf,OAA2B,WAC9B,OAAOoQ,QAAQiB,OAAO,uCACzB,GACJ,IATM,OASE,SAAUqF,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,EA6IGya,oBAnWJ,SAA6B9Z,GAEzB,IAAK6Y,EAAe7Y,GAAY,CAC5BhD,QAAQ+c,IAAI,aAAe/Z,GAC3B,IAAIuZ,EAAgBf,EAAYxK,eAAe,CAC3CjD,OAAQyN,EAAYhO,UACpBrlB,KAAM,kBACN2F,QAAS,EACTkV,UAAWA,IAEf6Y,EAAe7Y,GAAauZ,CAC/B,CACJ,EAwVGS,qBA/UJ,SAA8Bd,EAAYe,GACtC,OAAOnB,EAAgBI,GAAY9e,MAAK,SAAUzR,GAE9C,OADAA,EAAKgS,OAASsf,EACPb,EAAezwB,GAAf,OAA2B,WAC9B,OAAOoQ,QAAQiB,OAAO,qBAAuBigB,EAAY,qBAC5D,GACJ,IALM,OAKE,SAAU5a,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,EAuUG6a,8BA7TJ,SAAuChB,EAAYiB,EAAkBjhB,GACjE,OAAO4f,EAAgBI,GAAY9e,MAAK,SAAUzR,GAa9C,OAZKA,EAAKuQ,QACNvQ,EAAKuQ,MAAQ,CAAC,GAGbvQ,EAAKuQ,MAAMihB,KACZxxB,EAAKuQ,MAAMihB,GAAoB,CAC3Bv0B,OAAQ,EACRw0B,WAAY,IAIpBzxB,EAAKuQ,MAAMihB,GAAoBjhB,EACxBkgB,EAAezwB,GAAf,OAA2B,WAC9B,OAAOoQ,QAAQiB,OAAO,iDAAmDmgB,EAC5E,GACJ,IAhBM,OAgBE,SAAU9a,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,EA0SGgb,8BAjSJ,SAAuCnB,EAAYiB,GAC/C,OAAOrB,EAAgBI,GAAY9e,MAAK,SAAUzR,GAC9C,IAAIuQ,EAAQ,CACRtT,OAAQ,EACRw0B,WAAY,GAKhB,OAHIzxB,EAAKuQ,OAASvQ,EAAKuQ,MAAMihB,KACzBjhB,EAAQvQ,EAAKuQ,MAAMihB,IAEhBphB,QAAQkB,QAAQf,EAC1B,IATM,OASE,SAAUmG,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,EAqRGib,2BA5MJ,WACI,OAAOtB,IAAkB5e,MAAK,SAAU4P,GACpC,IAAIuQ,EAAmB,EACvB,GAAIvQ,EAAO,CACP,IAAK,IAAIxe,EAAI,EAAGA,EAAIwe,EAAMiP,UAAUn0B,OAAQ0G,IACpCwe,EAAMiP,UAAUztB,GAAG0tB,WAAaqB,IAChCA,EAAmBvQ,EAAMiP,UAAUztB,GAAG0tB,YAG9C,OAAOngB,QAAQkB,QAAQsgB,EAC1B,CACG,OAAOxhB,QAAQkB,QAAQsgB,EAE9B,IAZM,OAYE,SAAUlb,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,EA6LG2Z,gBAAiBA,EACjBwB,kBApFJ,SAA2Bxa,GACvBwY,EAAYnU,aAAa,CACrB0G,OAAQyN,EAAYhO,UACpBrlB,KAAM,kBACN2F,QAAS,EACTkV,UAAWA,IACZ5F,MAAK,kBACGye,EAAe7Y,EACzB,IAPD,OAOS,SAAUX,GACfrC,QAAQ+c,IAAI,4BAA8B1a,EAC7C,GAEJ,EAyEGob,mBAjEJ,SAA4BvB,GACxB,OAAON,EAAcxV,QAAQ,YAAYhJ,MAAK,SAAU4P,GACpD,OAAIA,GA2BiBhK,EA1BUkZ,EA2BnCV,EAAYxK,eAAe,CACvB7oB,KAAM,kBACN6a,UAAWA,IAERwY,EAAYnU,aAAa,CAC5Blf,KAAM,kBACN6a,UAAWA,IACZ5F,MAAK,WAEJ,cADOye,EAAe7Y,GACfjH,QAAQkB,SAClB,IANM,OAME,SAAUoF,GAEf,OADArC,QAAQ+c,IAAI1a,GACLtG,QAAQiB,OAAOqF,EACzB,KAxC8CjF,MAAK,WACxC,IAAK,IAAI5O,EAAI,EAAGA,EAAIwe,EAAMiP,UAAUn0B,OAAQ0G,IACpCwe,EAAMiP,UAAUztB,GAAG0tB,aAAezkB,SAASykB,IAC3ClP,EAAMiP,UAAUvsB,OAAOlB,EAAG,GAGlC,OAAOotB,EAActV,QAAQ,WAAY0G,GAAO5P,MAAK,WACjD,OAAOrB,QAAQkB,QAAQ,6CAC1B,IAFM,OAEE,WACL,OAAOlB,QAAQiB,OAAO,uDACzB,GACJ,IAEMjB,QAAQkB,QAAQ,uBAanC,IAA6B+F,CAXxB,IAjBM,OAiBE,SAAUX,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,GACJ,EAgDJ,CAEDsZ,EAAa+B,sBAAwB,eACrC,MAAeC,OAAOC,aAAaC,oBAAoBlC,6KCxYvD,EAjBMmC,yKACF,SAAQC,EAAQxW,GACZ,GAAKwW,EAAL,CAEA,IAAIC,IAAWzW,GAASA,EAAOyW,SAC3BC,IAAa1W,GAASA,EAAO0W,WAGjC,IAAK,IAAM5b,KAAO0b,GACTA,EAAOhzB,eAAesX,IAASpS,KAAKoS,KAAS2b,GAC9CC,IAAkD,IAApCF,EAAO1b,GAAK7Z,QAAQ,aACtCyH,KAAKoS,GAAO0b,EAAO1b,GATJ,CAYtB,yBAdCyb,2oBC6BN,EADoB,IA3BdI,SAAAA,0oBACF,aAAe,mHAEX,gBAKKC,cAAgB,KAGrB,EAAKC,6BAA+B,MACpC,EAAKC,8BAAgC,MACrC,EAAKC,6BAA+B,MACpC,EAAKC,0BAA4B,MACjC,EAAKC,wBAA0B,MAC/B,EAAKC,qBAAuB,MAC5B,EAAKC,qCAAuC,MAC5C,EAAKC,4BAA8B,MACnC,EAAKC,8BAAgC,MACrC,EAAKC,wBAA0B,MAC/B,EAAKC,wBAA0B,MAC/B,EAAKC,sBAAwB,MAC7B,EAAKC,wBAA0B,MAtBpB,CAuBd,UAxBCd,CAAsBJ,ICI5B,SAASmB,EAAuB1X,GAE5BA,EAASA,GAAU,CAAC,EACpB,IAGIiH,EACA0Q,EAJEC,EAAUlvB,KAAKkvB,QACfC,EAAa7X,EAAO6X,WAmF1B,SAASC,EAAehd,GACpB,IAAIvE,EACJ,GAAIuE,EAAK,CACL,OAAQA,EAAIla,MACR,IAAK,qBACD2V,EAAQogB,EAAAA,6BACR,MACJ,IAAK,oBACDpgB,EAAQogB,EAAAA,8BACR,MACJ,IAAK,gBACDpgB,EAAQogB,EAAAA,0BACR,MACJ,IAAK,eACDpgB,EAAQogB,EAAAA,wBAMhBkB,EAAWthB,MAAM,CAACjR,KAAMiR,EAAOwhB,QAASjd,EAAIla,KAAM4K,KAAMsP,GAC3D,CACJ,CAmBD,OAjBAmM,EAAW,CACPgO,cA3FJ,SAAuBN,EAAYO,EAAYC,GAC3C,OAAOwC,EAAa1C,cAAcN,EAAYO,EAAYC,GAAnD,OAAuE,SAAUra,GACpFgd,EAAehd,EAClB,GACJ,EAwFGkd,sBAtFJ,SAA+BpD,GAC3B,OAAO+C,EAAavC,cAAcR,GAA3B,OAA2C,SAAU9Z,GACxDgd,EAAehd,EAClB,GACJ,EAmFGmd,sBAjFJ,SAA+BrD,GAC3B,OAAO+C,EAAa9C,eAAeD,GAA5B,OAA4C,SAAU9Z,GACzDgd,EAAehd,EAClB,GACJ,EA8EGyZ,gBA5EJ,SAAyBI,GACrB,OAAOgD,EAAapD,gBAAgBI,GAA7B,OAA+C,SAAU7Z,GAC5Dgd,EAAehd,EAClB,GACJ,EAyEGua,4BAvEJ,SAAsCV,EAAYW,GAC9C,OAAOqC,EAAatC,4BAA4BV,EAAYW,GAArD,OAAqE,SAAUxa,GAClFgd,EAAehd,EAClB,GACJ,EAoEGya,oBAxGJ,SAA6BZ,EAAYlZ,GACrC,IACIkc,EAAapC,oBAAoBZ,EAAYlZ,EAGhD,CAFC,MAAOX,GACLgd,EAAehd,EAClB,CACJ,EAmGGib,2BAnEJ,WACI,OAAO4B,EAAa5B,6BAAb,OAAgD,SAAUjb,GAC7Dgd,EAAehd,EAClB,GACJ,EAgEG2Z,gBA9DJ,WACI,OAAOkD,EAAalD,kBAAb,OAAqC,SAAU3Z,GAClDgd,EAAehd,EAClB,GACJ,EA2DGob,mBAzDJ,SAA4BvB,GACxB,OAAOgD,EAAazB,mBAAmBvB,GAAhC,OAAkD,SAAU7Z,GAC/Dgd,EAAehd,EAClB,GACJ,EAsDG2a,qBApDJ,SAA8Bd,EAAYve,GACtC,OAAOuhB,EAAalC,qBAAqBd,EAAYve,GAA9C,OAA4D,SAAU0E,GACzEgd,EAAehd,EAClB,GACJ,EAiDG6a,8BA/CJ,SAAuChB,EAAYiB,EAAkBjhB,GACjE,OAAOgjB,EAAahC,8BAA8BhB,EAAYiB,EAAkBjhB,GAAzE,OAAsF,SAAUmG,GACnGgd,EAAehd,EAClB,GACJ,EA4CGgb,8BA1CJ,SAAuCnB,EAAYiB,GAC/C,OAAO+B,EAAa7B,8BAA8BnB,EAAYiB,GAAvD,OAA+E,SAAU9a,GAC5Fgd,EAAehd,EAClB,GACJ,GA3EG6c,EAAevD,EAAawD,GAASM,cAsHlCjR,CACV,CAEDyQ,EAAuBvB,sBAAwB,yBAC/C,MAAeC,OAAOC,aAAa8B,gBAAgBT,OCvI7CU,EAIF,2GAAc,SAKV1vB,KAAK2vB,MAAQ,KAab3vB,KAAK9C,KAAO,KAKZ8C,KAAK4vB,IAAM,KAKX5vB,KAAK6vB,UAAY,KAKjB7vB,KAAK3I,MAAQ,KAKb2I,KAAK8vB,SAAW,KAKhB9vB,KAAK+vB,UAAY,KAKjB/vB,KAAKgwB,aAAe,KAKpBhwB,KAAKiwB,SAAW,KAKhBjwB,KAAKkwB,MAAQ,GAKblwB,KAAKmwB,KAAO,KAMZnwB,KAAKowB,QAAU,KAKfpwB,KAAKqwB,SAAW,KAKhBrwB,KAAKswB,eAAiB,KAKtBtwB,KAAKuwB,SAAW,KAKhBvwB,KAAKwwB,iBAAmB,KAKxBxwB,KAAKywB,iBAAmB,KAIxBzwB,KAAK0wB,gBAAkB,IAC1B,wKA8BLhB,EAAYiB,IAAM,MAClBjB,EAAYkB,KAAO,OACnBlB,EAAYmB,SAAW,MACvBnB,EAAYoB,qBAAuB,iBACnCpB,EAAYqB,kBAAoB,wBAChCrB,EAAYsB,mBAAqB,eACjCtB,EAAYuB,mBAAqB,eACjCvB,EAAYwB,iCAAmC,4BAC/CxB,EAAYyB,+BAAiC,sBAC7CzB,EAAY0B,mBAAqB,eACjC1B,EAAY2B,QAAU,UACtB3B,EAAY4B,sBAAwB,kBACpC5B,EAAY6B,WAAa,YChJnBC,EAAAA,WACF,WAAY5B,gGAAK,SACb5vB,KAAKyxB,OAASD,EAAgBE,gBAC9B1xB,KAAK2xB,UAAYC,IACjB5xB,KAAK6xB,eAAiBD,IACtB5xB,KAAK8xB,UAAY,KACjB9xB,KAAK+xB,UAAY,KACjB/xB,KAAK9C,KAAO,KACZ8C,KAAKgyB,SAAWJ,IAChB5xB,KAAKiyB,UAAYL,IACjB5xB,KAAK3I,MAAQ,KACb2I,KAAK4vB,IAAMA,GAAO,KAClB5vB,KAAKkyB,gBAAkB,KACvBlyB,KAAKmyB,iBAAmB,KACxBnyB,KAAKoyB,cAAgB,KACrBpyB,KAAKqyB,eAAiB,KACtBryB,KAAKsyB,QAAUV,IACf5xB,KAAKrH,MAAQi5B,IACb5xB,KAAKuyB,sBAAwB,KAC7BvyB,KAAKwyB,oBAAsB,KAC3BxyB,KAAKyyB,cAAgB,KACrBzyB,KAAK0yB,YAAcd,IACnB5xB,KAAK2yB,WAAaf,IAClB5xB,KAAK4yB,iBAAmBhB,IACxB5xB,KAAK6yB,aAAe,cACpB7yB,KAAKktB,iBAAmB,IAC3B,6DAED,WACI,OAAQltB,KAAK9C,MAAQ8C,KAAK9C,OAASwyB,EAAYqB,iBAClD,wBAED,SAAQjR,GACJ9f,KAAK9C,KAAO4iB,GAAQA,EAAKiL,KAAO2E,EAAYqB,kBAAoBrB,EAAYuB,mBAC5EjxB,KAAK4vB,IAAM9P,GAAQA,EAAK8P,IAAM9P,EAAK8P,IAAM,KACzC5vB,KAAK3I,MAAQyoB,GAAQA,EAAKzoB,MAAQyoB,EAAKzoB,MAAM8E,MAAQ,IAAM2jB,EAAKzoB,MAAMwrB,IAAM,KAC5E7iB,KAAK8xB,UAAYhS,GAAQA,EAAKgS,UAAYhS,EAAKgS,UAAY,IAC9D,yBArCCN,GAwCNA,EAAgBE,gBAAkB,WAClCF,EAAgBsB,gBAAkB,WAElC,QC9CMnF,EAAgB,WAElB,IAAIpP,EACAwU,EAAoB,GAClBC,EAAqB,CAAC,EACtBC,EAAiB,CAAC,EAuBxB,SAASC,EAAqBhE,EAASiE,GACnC,IAAK,IAAM50B,KAAKw0B,EAAmB,CAC/B,IAAM7lB,EAAM6lB,EAAkBx0B,GAC9B,GAAI2O,EAAIgiB,UAAYA,GAAWhiB,EAAIhV,OAASi7B,EACxC,OAAOjmB,EAAIqR,QAElB,CACD,OAAO,IACV,CA2CD,SAAS6U,EAAiBl7B,EAAMm7B,GAC5B,OAAOA,EAAen7B,EACzB,CAED,SAASo7B,EAAcp7B,EAAMvB,EAAS08B,GAC9Bn7B,KAAQm7B,IACRA,EAAen7B,GAAQvB,EAE9B,CAmFD,SAAS48B,EAAMC,EAAkBtE,EAASjU,GAEtC,IAAIwY,EACEN,EAAYK,EAAiB/F,sBAC7BiG,EAAkBxE,EAAQiE,GAEhC,GAAIO,EAAiB,CAEjB,IAAIC,EAAYD,EAAgBnV,SAEhC,IAAImV,EAAgB3F,SAiBhB,OAAO4F,EAAUvmB,MAAM,CACnB8hB,QAAAA,EACAv4B,QAAS4nB,GACVtD,GAXH,IAAK,IAAM8O,KAPX0J,EAAgBD,EAAiBpmB,MAAM,CAAC8hB,QAAAA,GAAUjU,GAClD0Y,EAAYA,EAAUvmB,MAAM,CACxB8hB,QAAAA,EACAv4B,QAAS4nB,EACThhB,OAAQk2B,GACTxY,GAGKwY,EAAc34B,eAAeivB,KAC7B0J,EAAc1J,GAAQ4J,EAAU5J,GAY/C,MAEG0J,EAAgBD,EAAiBpmB,MAAM,CAAC8hB,QAAAA,GAAUjU,GAMtD,OAFAwY,EAAcG,aAAe,WAAa,OAAOT,CAAW,EAErDM,CACV,CAeD,OAbAlV,EAAW,CACPJ,OAhNJ,SAAgBjmB,EAAM27B,EAAe9F,EAAUmB,IACtCA,EAAQh3B,IAAS27B,IAClB3E,EAAQh3B,GAAQ,CACZqmB,SAAUsV,EACV9F,SAAUA,GAGrB,EA0MGmF,qBAAsBA,EACtBY,qBA1KJ,SAA8B5E,EAASiE,EAAW5U,GAC9C,IAAK,IAAMhgB,KAAKw0B,EAAmB,CAC/B,IAAM7lB,EAAM6lB,EAAkBx0B,GAC9B,GAAI2O,EAAIgiB,UAAYA,GAAWhiB,EAAIhV,OAASi7B,EAExC,YADAJ,EAAkBx0B,GAAGggB,SAAWA,EAGvC,CACDwU,EAAkBh7B,KAAK,CACnBG,KAAMi7B,EACNjE,QAASA,EACT3Q,SAAUA,GAEjB,EA8JGwV,yBArJJ,SAAkC7E,GAC9B6D,EAAoBA,EAAkB77B,QAAO,SAAA+lB,GAAC,OAAIA,EAAEiS,UAAYA,CAAlB,GACjD,EAoJGtB,oBAlFJ,SAA6B4F,GACzB,IAAI78B,EAAUy8B,EAAiBI,EAAiB/F,sBAAuBuF,GA6BvE,OA5BKr8B,IACDA,EAAU,SAAUu4B,GAChB,IAAI3Q,EAIJ,YAHgBvmB,IAAZk3B,IACAA,EAAU,CAAC,GAER,CACHM,YAAa,WAcT,OAZKjR,IACDA,EAAW2U,EAAqBhE,EAASsE,EAAiB/F,wBAGzDlP,IACDA,EAAWgV,EAAMC,EAAkBtE,EAAS7hB,WAC5C0lB,EAAkBh7B,KAAK,CACnBG,KAAMs7B,EAAiB/F,sBACvByB,QAASA,EACT3Q,SAAUA,KAGXA,CACV,EAER,EACDyU,EAAmBQ,EAAiB/F,uBAAyB92B,GAG1DA,CACV,EAoDGq9B,0BAvFJ,SAAmC97B,GAC/B,OAAOk7B,EAAiBl7B,EAAM86B,EACjC,EAsFGiB,uBA5FJ,SAAgC/7B,EAAMvB,GAClC28B,EAAcp7B,EAAMvB,EAASq8B,EAChC,EA2FGvD,gBAvHJ,SAAyB+D,GACrB,IAAI78B,EAAUy8B,EAAiBI,EAAiB/F,sBAAuBwF,GAgBvE,OAdKt8B,IACDA,EAAU,SAAUu4B,GAIhB,YAHgBl3B,IAAZk3B,IACAA,EAAU,CAAC,GAER,CACHxxB,OAAQ,WACJ,OAAO61B,EAAMC,EAAkBtE,EAAS7hB,UAC3C,EAER,EAED4lB,EAAeO,EAAiB/F,uBAAyB92B,GAEtDA,CACV,EAsGGu9B,sBA5HJ,SAA+Bh8B,GAC3B,OAAOk7B,EAAiBl7B,EAAM+6B,EACjC,EA2HGkB,mBAjIJ,SAA4Bj8B,EAAMvB,GAC9B28B,EAAcp7B,EAAMvB,EAASs8B,EAChC,GAkIM1U,CAEV,CArOqB,GAuOtB,8KCtNA,EAjBM6V,yKACF,SAAQC,EAAQ/c,GACZ,GAAK+c,EAAL,CAEA,IAAItG,IAAWzW,GAASA,EAAOyW,SAC3BC,IAAa1W,GAASA,EAAO0W,WAGjC,IAAK,IAAMsG,KAAOD,GACTA,EAAOv5B,eAAew5B,IAASt0B,KAAKs0B,KAASvG,GAC9CC,IAAkD,IAApCqG,EAAOC,GAAK/7B,QAAQ,aACtCyH,KAAKs0B,GAAOD,EAAOC,GATJ,CAYtB,yBAdCF,2oBCsaN,EADwB,IAnalBG,SAAAA,0oBAKF,aAAc,mHACV,gBAOKC,cAAgB,cAMrB,EAAKC,kBAAoB,kBAOzB,EAAKC,aAAe,gBAOpB,EAAKC,cAAgB,eAMrB,EAAKC,2BAA6B,qBAMlC,EAAKC,qBAAuB,qBAM5B,EAAKC,kBAAoB,kBAMzB,EAAKC,MAAQ,QAKb,EAAKC,2BAA6B,2BAMlC,EAAKC,0BAA4B,0BAKjC,EAAKC,yBAA2B,yBAMhC,EAAKC,2BAA6B,2BAMlC,EAAKC,IAAM,MAMX,EAAKC,yBAA2B,yBAMhC,EAAKC,0BAA4B,0BAMjC,EAAKC,gBAAkB,iBAMvB,EAAKC,gBAAkB,iBAMvB,EAAKC,eAAiB,gBAMtB,EAAKC,aAAe,cAMpB,EAAKC,eAAiB,gBAMtB,EAAKC,sBAAwB,sBAM7B,EAAKC,wBAA0B,wBAM/B,EAAKC,yBAA2B,yBAMhC,EAAKC,wBAA0B,wBAM/B,EAAKC,sBAAwB,sBAM7B,EAAKC,oBAAsB,qBAM3B,EAAKC,eAAiB,gBAMtB,EAAKC,iBAAmB,kBAMxB,EAAKC,mBAAqB,oBAM1B,EAAKC,mBAAqB,oBAM1B,EAAKC,yBAA2B,yBAMhC,EAAKC,kBAAoB,qBAMzB,EAAKC,iBAAmB,iBAMxB,EAAKC,8BAAgC,8BAMrC,EAAKC,YAAc,aAMnB,EAAKC,cAAgB,cAMrB,EAAKC,iBAAmB,kBAMxB,EAAKC,yBAA2B,yBAQhC,EAAKC,SAAW,UAMhB,EAAKC,iBAAmB,iBAMxB,EAAKC,eAAiB,gBAOtB,EAAKC,eAAiB,gBAMtB,EAAKC,qBAAuB,qBAO5B,EAAKC,yBAA2B,yBAOhC,EAAKC,qBAAuB,qBAM5B,EAAKC,gBAAkB,iBAQvB,EAAKC,iBAAmB,kBAQxB,EAAKC,kBAAoB,mBAMzB,EAAKC,sBAAwB,sBAM7B,EAAKC,gBAAkB,iBAMvB,EAAKC,iBAAmB,kBAMxB,EAAKC,iBAAmB,kBAQxB,EAAKC,iBAAmB,kBAMxB,EAAKC,sBAAwB,sBAM7B,EAAKC,wBAA0B,wBAO/B,EAAKC,iBAAmB,kBAMxB,EAAKC,0BAA4B,0BAMjC,EAAKC,oBAAsB,mBAM3B,EAAKC,sBAAwB,qBAM7B,EAAKC,sBAAwB,uBAM7B,EAAKC,sBAAwB,uBAM7B,EAAKC,uCAAyC,qCAM9C,EAAKC,mCAAqC,kCAM1C,EAAKC,YAAc,aAMnB,EAAKC,qCAAuC,mCAM5C,EAAKC,mCAAqC,iCA1ZhC,CA2Zb,UAhaClE,CAA0BH,IC0BhC,EA3BI,0GAAc,SACVp0B,KAAK04B,WAAa,KAElB14B,KAAKrH,MAAQ,KACbqH,KAAK24B,WAAa,KAClB34B,KAAK44B,MAAQ,KACb54B,KAAKgyB,SAAWJ,IAEhB5xB,KAAK64B,gBAAkB,KAEvB74B,KAAK84B,kBAAoBlH,IAEzB5xB,KAAK6xB,eAAiBD,IAGtB5xB,KAAK+4B,sBAAwBnH,IAE7B5xB,KAAKuyB,sBAAwBX,IAE7B5xB,KAAKwyB,oBAAsBZ,IAG3B5xB,KAAKyyB,cAAgBb,IACrB5xB,KAAKg5B,eAAiB,IACzB,ECzBL,SAASC,EAAgBC,EAAQC,GAC7B,KAAOD,EAAOrhC,OAASshC,GACnBD,EAAS,IAAMA,EAEnB,OAAOA,CACV,CAUM,SAASE,EAAqBxJ,EAAKz3B,GACtC,IAAKA,IAAUy3B,IAA8C,IAAvCA,EAAIr3B,QAAQ,sBAC9B,OAAOq3B,EAEX,IAAIyJ,EAAIlhC,EAAMyO,WACd,OAAOgpB,EAAIn3B,MAAM,sBAAsB2B,KAAKi/B,EAC/C,CAEM,SAASC,EAAwB1J,EAAK2J,EAAOphC,GAChD,IAEIqhC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEEC,EAAWP,EAAM1hC,OACjBkiC,EAVY,KAUaliC,OAE/B,IAAK+3B,EACD,OAAOA,EAMX,OAAa,CAKT,IADA4J,EAAW5J,EAAIr3B,QAAQ,IAAMghC,IACd,EACX,OAAO3J,EAMX,IADA6J,EAAS7J,EAAIr3B,QAAQ,IAAKihC,EAAWM,IACxB,EACT,OAAOlK,EAMX,IADA8J,EAAe9J,EAAIr3B,QArCL,KAqCwBihC,EAAWM,IAC9BN,GAAYE,EAAeD,EAO1C,OALAE,EAAY/J,EAAI/2B,OAAO4gC,EAAS,GAChCG,EAAQpyB,SAASooB,EAAInW,UAAUigB,EAAeK,EAAcN,EAAS,GAAI,IAIjEE,GAGJ,IAAK,IACL,IAAK,IACL,IAAK,IACDE,EAAcZ,EAAgB9gC,EAAMyO,WAAYgzB,GAChD,MACJ,IAAK,IACDC,EAAcZ,EAAgB9gC,EAAMyO,SAAS,IAAKgzB,GAClD,MACJ,IAAK,IACDC,EAAcZ,EAAgB9gC,EAAMyO,SAAS,IAAKgzB,GAAOh/B,cACzD,MACJ,IAAK,IACDi/B,EAAcZ,EAAgB9gC,EAAMyO,SAAS,GAAIgzB,GACjD,MACJ,QACI,OAAOhK,OAGfiK,EAAc1hC,EAGlBy3B,EAAMA,EAAInW,UAAU,EAAG+f,GAAYK,EAAcjK,EAAInW,UAAUggB,EAAS,EAC3E,CACJ,CAED,SAASO,EAAWhB,EAAgBhH,EAAU+G,EAAuBlH,EAAgBoI,EAAmBC,EAAqBC,EAAWxhC,GACpI,IA3FkCyhC,EA2F9BC,EAAM,IAAIC,EAYd,OAVAD,EAAIrB,eAAiBA,EACrBqB,EAAIrI,SAAWA,EACfqI,EAAItB,sBAAwBA,EAC5BsB,EAAIxI,eAAiBA,EACrBwI,EAAI9H,sBAAwB0H,EAAkBM,8CAA8CL,EAAqBlB,EAAgBmB,GACjIE,EAAI7H,oBAAsByH,EAAkBO,4CAA4CN,EAAsBlI,EAAUgH,EAAgBmB,GACxIE,EAAI5H,cAAgBwH,EAAkBQ,uBAAuBJ,EAAKF,GAClEE,EAAIvB,mBApG8BsB,EAoGezhC,EAAL0hC,EAnG7BrB,eAAe0B,YAAcN,GAoG5CC,EAAI1hC,MAAQA,EAEL0hC,CACV,CAED,SAASM,EAAmBV,EAAmBjB,EAAgB4B,EAAST,GACpE,IAAMU,EAAW7B,EAAe8B,WAAWC,OAG3C,GAAIC,SAASH,EAAS7I,WAAa6I,EAAS1+B,MAAQ0+B,EAAS7I,UAAY4I,EAAQ7B,sBAC7E,OAAO,EAGX,GAAIoB,EAAW,CAEX,GAA8C,QAA1CnB,EAAeiC,uBACf,OAAO,EAQX,IAAMC,EAAUjB,EAAkBkB,yBAClC,OAAOP,EAAQrI,sBAAsB/rB,WAAa00B,KAAaF,SAASJ,EAAQpI,sBAAwBoI,EAAQpI,oBAAoBhsB,WAAa00B,EACpJ,CAED,OAAO,CACV,CAEM,SAASE,EAAqBnB,EAAmBE,EAAWnB,EAAgBrgC,GAC/E,IAAIq5B,EACA+G,EACAmB,EAGJlI,EAAWgH,EAAeqC,gBAOtB3zB,MAAMsqB,KACNA,EAAWgH,EAAe8B,WAAWC,OAAO/I,UAGhD+G,EAAwBuC,YAAYtC,EAAe8B,WAAWC,OAAO5+B,MAASxD,EAAQq5B,GAAWuJ,QAAQ,IACzGrB,EAAsBoB,YAAYvC,EAAwB/G,GAAUuJ,QAAQ,IAE5E,IAEMX,EAAUZ,EAAWhB,EAAgBhH,EAAU+G,EAFnCkB,EAAkBuB,kCAAkCzC,EAAuBC,GAGzFiB,EAAmBC,EAAqBC,EAAWxhC,GAEvD,OAAKgiC,EAAmBV,EAAmBjB,EAAgB4B,EAAST,GAI7DS,EAHI,IAId,CAEM,SAASa,EAAoBxB,EAAmBE,EAAWnB,EAAgB0C,EAAM1J,EAAU2J,EAAY/L,EAAKv4B,EAAOsB,EAAOijC,GAC7H,IAGI7C,EAEAsB,EALEwB,EAAaH,EAAOC,EACpBG,EAAiB9J,EAAW2J,EAalC,OAPA5C,EAAwBkB,EAAkB8B,kCAAkCF,EAAY7C,GAOnF2B,EAAmBV,EAAmBjB,EAJ3CqB,EAAML,EAAWhB,EAAgB8C,EAAgB/C,EAC7C8C,EACA5B,EAJkBlB,EAAwB+C,EAIF3B,EAAWxhC,GAESwhC,IAIhEE,EAAIxB,gBAAkB+C,GAAwBF,EAE9C9L,EAAM0J,EAAwB1J,EAAK,SAAUyK,EAAIvB,mBACjDlJ,EAAM0J,EAAwB1J,EAAK,OAAQyK,EAAIxB,iBAC/CwB,EAAIzB,MAAQhJ,EACZyK,EAAI1B,WAAathC,EAEVgjC,GAVI,IAWd,2KCxCD,EADgB,IA3JV2B,WAsJF,0GAAe,SACXh8B,KAAK+qB,MACR,0CAtJD,WACI/qB,KAAKi8B,SAAW,UAChBj8B,KAAKk8B,aAAe,cACpBl8B,KAAKm8B,iBAAmB,kBACxBn8B,KAAKo8B,aAAe,cACpBp8B,KAAKq8B,YAAc,aACnBr8B,KAAKs8B,iBAAmB,kBACxBt8B,KAAKu8B,iBAAmB,kBACxBv8B,KAAKw8B,eAAiB,gBACtBx8B,KAAKy8B,eAAiB,iBACtBz8B,KAAK08B,qBAAuB,sBAC5B18B,KAAK28B,mBAAqB,oBAC1B38B,KAAK48B,eAAiB,iBACtB58B,KAAK68B,qBAAuB,iBAC5B78B,KAAK88B,IAAM,MACX98B,KAAK+8B,OAAS,SACd/8B,KAAKg9B,iBAAmB,kBACxBh9B,KAAKi9B,aAAe,cACpBj9B,KAAKk9B,GAAK,KACVl9B,KAAKm9B,SAAW,WAChBn9B,KAAKo9B,iBAAmB,kBACxBp9B,KAAKq9B,MAAQ,QACbr9B,KAAKs9B,MAAQ,QACbt9B,KAAKu9B,MAAQ,QACbv9B,KAAKw9B,WAAa,YAClBx9B,KAAKy9B,YAAc,aACnBz9B,KAAK09B,YAAc,aACnB19B,KAAK29B,MAAQ,QACb39B,KAAK49B,aAAe,cACpB59B,KAAK69B,UAAY,WACjB79B,KAAK89B,oBAAsB,qBAC3B99B,KAAK+9B,0BAA4B,qBACjC/9B,KAAKg+B,OAAS,SACdh+B,KAAKi+B,cAAgB,eACrBj+B,KAAKk+B,0BAA4B,yBACjCl+B,KAAKm+B,QAAU,UACfn+B,KAAKo+B,cAAgB,UACrBp+B,KAAKq+B,UAAY,YACjBr+B,KAAKs+B,MAAQ,QACbt+B,KAAKu+B,OAAS,SACdv+B,KAAKw+B,IAAM,MACXx+B,KAAKy+B,UAAY,YACjBz+B,KAAK0+B,oBAAsB,oBAC3B1+B,KAAK2+B,mBAAqB,mBAC1B3+B,KAAK4+B,eAAiB,eACtB5+B,KAAK6+B,iBAAmB,iBACxB7+B,KAAK8+B,kBAAoB,mBACzB9+B,KAAK++B,UAAY,WACjB/+B,KAAKg/B,cAAgB,eACrBh/B,KAAKi/B,4BAA8B,4BACnCj/B,KAAKk/B,mBAAqB,oBAC1Bl/B,KAAKm/B,mBAAqB,oBAC1Bn/B,KAAKo/B,sBAAwB,uBAC7Bp/B,KAAKq/B,8BAAgC,+BACrCr/B,KAAKs/B,oBAAsB,oBAC3Bt/B,KAAKu/B,wBAA0B,wBAC/Bv/B,KAAKw/B,OAAS,SACdx/B,KAAKukB,KAAO,OACZvkB,KAAKy/B,cAAgB,gBACrBz/B,KAAK0/B,KAAO,OACZ1/B,KAAK2/B,OAAS,SACd3/B,KAAK4/B,kBAAoB,mBACzB5/B,KAAK6/B,OAAS,SACd7/B,KAAK8/B,KAAO,OACZ9/B,KAAK+/B,UAAY,YACjB//B,KAAKggC,kBAAoB,oBACzBhgC,KAAKigC,aAAe,eACpBjgC,KAAKkgC,uBAAyB,yBAC9BlgC,KAAKmgC,8BAAgC,gCACrCngC,KAAKogC,sBAAwB,wBAC7BpgC,KAAKqgC,kCAAoC,oCACzCrgC,KAAKsgC,0BAA4B,4BACjCtgC,KAAKugC,KAAO,OACZvgC,KAAKwgC,QAAU,UACfxgC,KAAKygC,OAAS,SACdzgC,KAAK0gC,4BAA8B,4BACnC1gC,KAAK2gC,sBAAwB,sBAC7B3gC,KAAK4gC,mBAAqB,mBAC1B5gC,KAAK6gC,SAAW,YAChB7gC,KAAK8gC,WAAa,YAClB9gC,KAAK+gC,UAAY,YACjB/gC,KAAKghC,SAAW,WAChBhhC,KAAKihC,aAAe,cACpBjhC,KAAKkhC,yBAA2B,yBAChClhC,KAAKmhC,wBAA0B,wBAC/BnhC,KAAKohC,sBAAwB,sBAC7BphC,KAAKqhC,uBAAyB,uBAC9BrhC,KAAKshC,qBAAuB,qBAC5BthC,KAAKuhC,kBAAoB,mBACzBvhC,KAAKwhC,gBAAkB,gBACvBxhC,KAAKyhC,wBAA0B,wBAC/BzhC,KAAK0hC,MAAQ,QACb1hC,KAAK2hC,yBAA2B,yBAChC3hC,KAAK4hC,2BAA6B,2BAClC5hC,KAAK6hC,iBAAmB,mBACxB7hC,KAAK8hC,aAAe,eACpB9hC,KAAK+hC,WAAa,aAClB/hC,KAAKgiC,6BAA+B,6BACpChiC,KAAKiiC,oBAAsB,qBAC3BjiC,KAAKkiC,0BAA4B,QACjCliC,KAAKmiC,4BAA8B,UACnCniC,KAAKoiC,kCAAoC,eACzCpiC,KAAKqiC,sCAAwC,mBAC7CriC,KAAKsiC,wCAA0C,qBAC/CtiC,KAAKuiC,eAAiB,gBACtBviC,KAAKwiC,wBAA0B,wBAC/BxiC,KAAKyiC,SAAW,WAChBziC,KAAK0iC,kBAAoB,mBACzB1iC,KAAK2iC,aAAe,cACpB3iC,KAAK4iC,sBAAwB,sBAC7B5iC,KAAK6iC,gBAAkB,QACvB7iC,KAAK8iC,gBAAkB,gBACvB9iC,KAAKuhC,kBAAoB,mBACzBvhC,KAAK+iC,MAAQ,QACb/iC,KAAKgjC,YAAc,aACnBhjC,KAAKijC,iBAAmB,kBACxBjjC,KAAKkjC,0BAA4B,0BACjCljC,KAAKmjC,yBAA2B,yBAChCnjC,KAAKojC,mBAAqB,mBAC1BpjC,KAAKqjC,mBAAqB,oBAC1BrjC,KAAKsjC,IAAM,MACXtjC,KAAKujC,0BAA4B,CAC7B9e,QAAS,UACT6e,IAAK,MACLE,WAAY,aACZC,iBAAmB,mBACnBC,eAAiB,iBACjBC,QAAS,UACTzG,GAAI,KACJ0G,gBAAiB,kBACjBC,KAAM,OACNC,OAAQ,UAEZ9jC,KAAK+jC,6BAA+B,CAChCC,QAAS,UACTC,SAAU,WACVC,YAAa,eAEjBlkC,KAAKmkC,kBAAoB,mBACzBnkC,KAAKokC,sBAAwB,sBAC7BpkC,KAAKqkC,sBAAwB,sBAC7BrkC,KAAKskC,+BAAiC,8BACtCtkC,KAAKukC,gBAAkB,iBACvBvkC,KAAKwkC,yBAA2B,yBAChCxkC,KAAKykC,kBAAoB,mBACzBzkC,KAAK0kC,gBAAkB,gBAC1B,yBApJC1I,ICSN,SAAS2I,EAAYrtB,GAIjB,IASIiH,EACAqmB,EACAC,EACAC,EACAC,EAbEC,GAFN1tB,EAASA,GAAU,CAAC,GAEI0tB,SAClBC,EAAQ3tB,EAAO2tB,MACfC,EAAW5tB,EAAO4tB,SAClBhoC,EAAOoa,EAAOpa,KACdioC,EAAa7tB,EAAO6tB,WACpBC,EAAqB9tB,EAAO8tB,mBAC5BnL,EAAoB3iB,EAAO2iB,kBAC3BoL,EAAoB/tB,EAAO+tB,kBAyBjC,SAASC,IACL,OAAOpoC,CACV,CAMD,SAASqoC,IACLV,EAAc,IACjB,CAOD,SAASW,EAAeC,EAASC,EAAa1M,GAC1C,IACIpJ,EACAsC,EAFEyT,EAAUN,EAAkBr4B,QAAQgsB,EAAe9X,MAGrD0kB,EAAc,CAAC,EAcnB,OAZKD,GAAYD,IAAgBC,EAAQ/V,KAAUsV,EAASW,WAAWH,IAGnE9V,EAAM+V,EAAQ/V,IACdsC,EAAkByT,EAAQzT,gBAC1B0T,EAAcD,EAAQC,YAElBF,IACA9V,EAAMsV,EAASl4B,QAAQ04B,EAAa9V,KAPxCA,EAAM8V,GAWNR,EAASW,WAAWjW,KAIxB6V,EAAQ7V,IAAMA,EACd6V,EAAQvT,gBAAkBA,EAC1BuT,EAAQG,YAAcA,GAEf,EACV,CA2BD,SAASE,EAAsB/T,EAAW6I,GACtC,GAAIA,QACA,OAAO,KAGX,IAAM6K,EAAU,IAAIjU,EACdwH,EAAiB4B,EAAQ5B,eACzB+M,EAAY/M,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOotC,UACvNnW,EAAMgL,EAAQhC,MAyBlB,OAvBAhJ,EAAM0J,EAAwB1J,EAAK,SAAUgL,EAAQ9B,mBACrDlJ,EAAM0J,EAAwB1J,EAAK,OAAQgL,EAAQ/B,iBAGnDjJ,EFzHD,SAAmCA,GACtC,OAAOA,EAAMA,EAAIn3B,MAAM,MAAM2B,KAAK,KAAOw1B,CAC5C,CEuHawW,CADNxW,EAAMwJ,EADNxJ,EAAM0J,EAAwB1J,EAAK,YAAamW,GAChB/M,EAAelN,KAG/C2Z,EAAQ3T,UAAYwT,IACpBG,EAAQvoC,KAAOwyB,EAAYuB,mBAC3BwU,EAAQpuC,MAAQujC,EAAQjC,WACxB8M,EAAQ9T,UAAYiJ,EAAQ7B,sBAC5B0M,EAAQ5T,eAAiB+I,EAAQ/I,eACjC4T,EAAQzT,SAAW4I,EAAQ5I,SAC3ByT,EAAQxT,UAAY+G,EAAe/G,UACnCwT,EAAQlT,sBAAwBqI,EAAQrI,sBACxCkT,EAAQjT,oBAAsBoI,EAAQpI,oBACtCiT,EAAQY,yBAA2BrN,EAAeqN,yBAClDZ,EAAQhT,cAAgBmI,EAAQnI,cAChCgT,EAAQnT,QAAU0G,EAAergC,MACjC8sC,EAAQ9sC,MAAQiiC,EAAQjiC,MACxB8sC,EAAQ1T,UAAYA,EACpB0T,EAAQa,gBAAkBtN,EAAe8B,WAAWniC,MACpD8sC,EAAQvY,iBAAmB8L,EAAelN,GAEtC0Z,EAAeC,EAAS7V,EAAKoJ,GACtByM,OADX,CAGH,CA+CD,SAASc,EAAyBxU,EAAWiH,EAAgB0C,GACzD,IAAI+J,EAAU,KAEd,IAAKzM,IAAmBA,EAAewN,gBACnC,OAAOf,EAGX,IAAM7K,EAAUwK,EAAmBqB,iBAAiBzN,EAAgB0C,GAOpE,OANId,IACAiK,EAAcjK,EACdgK,EAAOK,MAAM,kBAAoBvJ,EAAO,OAASd,EAAQjiC,OACzD8sC,EAAUK,EAAsB/T,EAAW6I,IAGxC6K,CACV,CA+CD,SAASiB,EAAY3U,EAAWiH,EAAgB2N,GAC5C,IAAIlB,EAAU,KACR7K,EAAUwK,EAAmBwB,kBAAkB5N,EAAgB2N,EAAgB9B,EAAcA,EAAYhT,gBAAkB,GAGjI,GAAK+I,EASD6K,EAAUK,EAAsB/T,EAAW6I,GAC3CiK,EAAcjK,MAVJ,CAEV,GAAIkK,IAAsBC,EAEtB,OADAH,EAAOK,MAAMK,IAAY,+BAAiCqB,EAAiB,wBACpE,KAEP5B,GAAmB,CAE1B,CAKD,OAAOU,CACV,CAoFD,SAASoB,IACLjC,EAAOK,MAAM,2BACbF,GAAmB,CACtB,CAoBD,OAlBAxmB,EAAW,CACPuoB,gBAVJ,WACI,OAAOjC,EAAcA,EAAYlsC,OAAS,CAC7C,EASGouC,eAxRJ,SAAwBhV,EAAWiH,GAC/B,OAAKA,EAIT,SAA8BjH,EAAWiH,EAAgBlH,GACrD,IAAM2T,EAAU,IAAIjU,EACduJ,EAAS/B,EAAe8B,WAAWC,OACnChC,EAAwBgC,EAAO5+B,MAWrC,GATAspC,EAAQ3T,UAAYA,EACpB2T,EAAQvoC,KAAOwyB,EAAYqB,kBAC3B0U,EAAQpuC,MAAQ2hC,EAAe3hC,MAC/BouC,EAAQlT,sBAAwB0H,EAAkBM,8CAA8CxB,EAAuBC,EAAgB8L,GACvIW,EAAQjT,oBAAsByH,EAAkBO,4CAA4CzB,EAAwBgC,EAAO/I,SAAUgH,EAAgB8L,GACrJW,EAAQnT,QAAU0G,EAAergC,MACjC8sC,EAAQ1T,UAAYA,EACpB0T,EAAQvY,iBAAmB8L,EAAelN,GAEtC0Z,EAAeC,EAASzM,EAAegO,eAAgBhO,GAEvD,OADAyM,EAAQ7V,IAAM0J,EAAwBmM,EAAQ7V,IAAK,YAAaoJ,EAAe+M,WACxEN,CAEd,CArBUwB,CAAqBlV,EAAWiH,EAAgBsM,KAD3B,IAE/B,EAsRG4B,sBAnIJ,SAA+BnV,EAAWiH,GACtC,OAAKA,GAAmBA,EAAewN,gBAMhCE,EAAY3U,EAAWiH,EAFT6L,EAAcA,EAAYlsC,MAAQ,EAAI,GAHhD,IAMd,EA4HGwuC,gCAvJJ,SAAyCpV,EAAWiH,GAChD,IACI2N,EAAiB9B,EAAcA,EAAYlsC,MAAQ,EAAI,EACrDiiC,EAAUwK,EAAmBwB,kBAC/B5N,EACA2N,EACA9B,EAAcA,EAAYhT,gBAAkB,GAEhD,OAAK+I,EACKkL,EAAsB/T,EAAW6I,GADtB,IAGxB,EA6IG2L,yBAAAA,EACAa,YA9UJ,WACI,OAAOjC,EAAWrZ,EACrB,EA6UGub,cAvUJ,WACI,OAAOlC,CACV,EAsUGG,QAAAA,EACAgC,8BAvFJ,SAAuC5L,EAAM3J,EAAWiH,EAAgBuO,GACpE,IAEI,GAAI7/B,MAAMg0B,KAAU3J,IAAciH,EAC9B,OAAOpH,IAWX,GARI8J,EAAO,IACPA,EAAO,GAGPh0B,MAAM6/B,KACNA,EAzS2B,IA4S3BhB,EAAyBxU,EAAWiH,EAAgB0C,GACpD,OAAOA,EAGX,GAAI1C,EAAe8B,WAAWC,OAAO5+B,MAAQ68B,EAAe8B,WAAWC,OAAO/I,SAAW0J,EACrF,OAAO9J,IASX,IALA,IAAM/O,EAAMmY,SAAShC,EAAe8B,WAAWC,OAAO/I,UAAYgH,EAAe8B,WAAWC,OAAO5+B,MAAQ68B,EAAe8B,WAAWC,OAAO/I,SAAW0J,EAAO,GAC1J8L,EAAmBhlC,KAAKilC,IAAI/L,EAAO6L,EAAiB1kB,GACpD6kB,EAAe9V,IACf+V,EAAgB,KAEbH,GAAoB3kB,GAAK,CAC5B,IAAI+kB,EAAe,KAMnB,GAJIJ,GAAoB3kB,IACpB+kB,EAAerB,EAAyBxU,EAAWiH,EAAgBwO,IAGnEI,EAAc,CACdF,EAAeF,EACfG,EAAgBC,EAChB,KACH,CAEDJ,GAAoBD,CACvB,CAED,GAAII,EAAe,CACf,IAAME,EAAiBF,EAAchW,UAAYgW,EAAc3V,SAG/D,OAAI0J,EAAOiM,EAAchW,WAAakW,EAAiBnM,EAAO6L,EACnD7L,GAGNh0B,MAAMigC,EAAchW,YAAc+J,EAAOiM,EAAchW,WAAa+V,EAAeC,EAAchW,UAE3FgW,EAAchW,UAnVR,KAsVVnvB,KAAKilC,IAAII,EAAiBN,EAAiBG,EACrD,CAED,OAAOA,CAKV,CAFC,MAAOt/B,GACL,OAAOwpB,GACV,CACJ,EAqBGkW,WAxVJ,SAAoB3N,GAChB2K,EAAoB3K,EACpB4K,GAAmB,EACnBK,EAAmB0C,WAAW3N,EACjC,EAqVG4N,uBAlOJ,SAAgC/O,EAAgBgP,GAC5C,IAAKhP,IAAmB6L,EACpB,OAAO,EAIX,GAAIE,EACA,OAAO,EAIX,IAAK/J,SAAShC,EAAe8B,WAAWC,OAAO/I,UAC3C,OAAO,EAIX,GAAI6S,EAAY9L,sBAAwB8L,EAAY7S,SAAWgW,EAC3D,OAAO,EAUX,GAAIhP,EAAeiP,2BAA6BvgC,MAAMsxB,EAAeiP,yBAAyBC,oBAAsBxgC,MAAMm9B,EAAYlsC,QAAUksC,EAAYlsC,OAAUqgC,EAAeiP,yBAAyBC,iBAAmB,EAAI,CAEjO,IAAKpD,GAAqB9L,EAAewN,kBAAoBxK,EAAAA,iBACzD,OAAO,EAGN,GAAI8I,GAAqB9L,EAAewN,kBAAoBxK,EAAAA,cAA8BhD,EAAe8B,WAAWC,OAAOoN,aAC5H,OAAO,CAEd,CAID,SAAUrD,GAAqB9L,EAAe8B,WAAWC,OAAOoN,cAAgBnP,EAAewN,kBAAoBxK,EAAAA,kBAAkChD,EAAeiP,2BAC/JvgC,MAAMsxB,EAAeiP,yBAAyBG,iCAAmCvD,IAAgBn9B,MAAMm9B,EAAYhT,kBAAoBnqB,MAAMm9B,EAAY7S,WAAa6S,EAAYhT,eAAiBgT,EAAY7S,UAAagH,EAAeiP,yBAAyBG,+BAAiC,IAC7S,EAyLGC,qBAlIJ,SAA8BtW,EAAWiH,GACrC,OAAKA,GAAmBA,EAAewN,gBAMhCE,EAAY3U,EAAWiH,EAFT6L,EAAcA,EAAYlsC,MAAQ,GAH5C,IAMd,EA2HG2vC,MArUJ,WACI/C,IACAP,EAASuD,IAAIhU,EAAAA,kBAAqCsS,EAAoBtoB,EACzE,GA/BGqmB,EAASK,EAAMuD,UAAUjqB,GACzBgnB,IAEAP,EAASyD,GAAGlU,EAAAA,kBAAqCsS,EAAoBtoB,GAmWlEA,CACV,CAEDomB,EAAYlX,sBAAwB,cACpC,MAAeE,EAAAA,gBAA6BgX,6KCtG5C,EADkB,IA/RZ+D,WA0RF,0GAAc,SACV1oC,KAAK+qB,MACR,0CA1RD,WAMI/qB,KAAK2oC,OAAS,SAOd3oC,KAAK4oC,MAAQ,QAOb5oC,KAAK6oC,MAAQ,QAOb7oC,KAAK8oC,KAAO,OAOZ9oC,KAAK+oC,MAAQ,QAOb/oC,KAAKgpC,MAAQ,QAObhpC,KAAKipC,KAAO,OAOZjpC,KAAKkpC,KAAO,OAOZlpC,KAAKmpC,IAAM,MAOXnpC,KAAKopC,KAAO,OAOZppC,KAAKijC,iBAAmB,kBAOxBjjC,KAAKqpC,qBAAuB,aAO5BrpC,KAAKspC,kBAAoB,UAOzBtpC,KAAKupC,iBAAmB,SAOxBvpC,KAAKwpC,kBAAoB,UAOzBxpC,KAAKypC,wBAA0B,gBAO/BzpC,KAAK0pC,iDAAmD,8CAOxD1pC,KAAK2pC,8CAAgD,2CAOrD3pC,KAAK4pC,sCAAwC,oCAO7C5pC,KAAK6pC,0BAA4B,yBAOjC7pC,KAAK8pC,uBAAyB,sBAO9B9pC,KAAK+pC,8BAAgC,gBAOrC/pC,KAAKgqC,oBAAsB,OAO3BhqC,KAAKiqC,mBAAqB,oBAO1BjqC,KAAKkqC,qBAAuB,8BAO5BlqC,KAAKmqC,iCAAmC,gBAOxCnqC,KAAKoqC,gCAAkC,eAOvCpqC,KAAKqqC,iCAAmC,aAOxCrqC,KAAKsqC,qCAAuC,iBAO5CtqC,KAAKuqC,wCAA0C,oBAO/CvqC,KAAKwqC,kCAAoC,cAOzCxqC,KAAKyqC,gDAAkD,2BAOvDzqC,KAAK0qC,gBAAkB,QAOvB1qC,KAAK2qC,iBAAmB,SAOxB3qC,KAAK4qC,oBAAsB,CAAC,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,KAAM,KAAM,MAAO,KAAM,KAOvI5qC,KAAK6qC,wBAA0B,CAAC,UAAU,MAAM,QAAQ,YAExD7qC,KAAK8qC,WAAa,aAClB9qC,KAAK+qC,aAAe,UACpB/qC,KAAKgrC,YAAc,SACnBhrC,KAAKirC,IAAM,MACXjrC,KAAKkrC,IAAM,MACXlrC,KAAKmrC,KAAO,QACZnrC,KAAKorC,cAAgB,cACrBprC,KAAKqrC,WAAa,YAClBrrC,KAAKsrC,kCAAoC,qCACzCtrC,KAAKurC,oCAAsC,wCAC3CvrC,KAAKwrC,IAAM,MACXxrC,KAAKyrC,aAAe,cACpBzrC,KAAK0rC,kBAAoB,mBACzB1rC,KAAK2rC,gBAAkB,kBACvB3rC,KAAK4rC,2BAA6B,CAC9BC,aAAc,EACdC,cAAe,EACfC,kBAAmB,EACnBC,iBAAkB,EAClBC,iBAAkB,GAEtBjsC,KAAKksC,kBAAoB,CACrBC,MAAO,eACPC,IAAK,aAEZ,yBAxRC1D,ICFN,SAAS2D,EAAyB/0B,GAG9B,IAaIiH,EACA+tB,EACAC,EACAC,EACAC,EACAC,EAlBE1H,GADN1tB,EAASA,GAAU,CAAC,GACI0tB,SAClB3Q,EAAS/c,EAAO+c,OAChBsY,EAAgBr1B,EAAOq1B,cACvBC,EAAct1B,EAAOs1B,YACrBC,EAAqBv1B,EAAOu1B,mBAC5B5S,EAAoB3iB,EAAO2iB,kBAC3B/8B,EAAOoa,EAAOpa,KACdioC,EAAa7tB,EAAO6tB,WACpB2H,EAAgBx1B,EAAOw1B,cACvB1H,EAAqB9tB,EAAO8tB,mBAC5BjL,EAAY7iB,EAAO6iB,UACnB4S,EAAUz1B,EAAOy1B,QAmBvB,SAASzH,IACL,OAAOpoC,CACV,CAYD,SAAS8vC,IACL,OAAOT,CACV,CAED,SAASU,IACL,OAAOP,CACV,CAMD,SAASnH,IACL+G,EAAiB,KACjBC,GAAW,EACXC,EAA6B,GAC7BC,EAA4B,IAC/B,CA0CD,SAASS,EAAsBC,GAC3B,OAAO,IAAIrhC,SAAQ,SAACkB,EAASD,GACzB,IAAMqgC,EAAoBD,EAAWC,oBAC/BC,EAAcF,EAAWE,cAIzBC,EAAW,GAEjBA,EAASv1C,KAAKqtC,EAAmBmI,eAAeJ,EAAYC,IAC5DE,EAASv1C,KAAKqtC,EAAmBoI,kBAAkBL,EAAYE,IAE/DvhC,QAAQgC,IAAIw/B,GACPngC,MAAK,SAACrK,GAiBnB,IAAsCk2B,EAhBlBl2B,EAAK,KAAOA,EAAK,GAAG+K,QACpBs/B,EAmBpB,SAAuBnU,EAAgB5wB,GACnC,OAAKA,IAAKA,EAAEyF,OAAUzF,EAAE4wB,eAGjB5wB,EAAE4wB,eAFEA,CAGd,CAxBgCyU,CAAcN,EAAYrqC,EAAK,KAE5CA,EAAK,KAAOA,EAAK,GAAG+K,QACpBs/B,EAuBpB,SAA2BnU,EAAgB5wB,GACvC,GAAKA,IAAKA,EAAEyF,MAAZ,CAEA,IAIItP,EACA6M,EACA/D,EACAgzB,EAPEqT,EAAYtlC,EAAEulC,SACdA,EAAW,GACb12B,EAAQ,EAOZ,IAAK1Y,EAAI,EAAG6M,EAAMsiC,EAAYA,EAAU71C,OAAS,EAAG0G,EAAI6M,EAAK7M,IACzD8I,EAAIqmC,EAAUnvC,IAEd87B,EAAMoB,EACFxB,EACAE,EACAnB,EACA3xB,EAAEsqB,UACFtqB,EAAE2qB,SACF3qB,EAAE4qB,UACF5qB,EAAEuxB,MACFvxB,EAAEsxB,WACF1hB,MAGA02B,EAAS51C,KAAKsiC,GACdA,EAAM,KACNpjB,KAQR,OAJI02B,EAAS91C,OAAS,IAClBmhC,EAAe2U,SAAWA,GAGvB3U,CApCkB,CAqC5B,CA7DgC4U,CAAkBT,EAAYrqC,EAAK,MAY9Bk2B,EAVOmU,GAW1BlF,yBAA2B7C,EAAmByI,4BAA4B7U,GAoG7F,SAAkChwB,GAC9B,GAAKgkC,IAAL,CAEA,IAEIc,EAlC6BC,EAgC7BC,EAAqBpB,EAAYqB,2BACjCC,GAAe,EAKnB,GAAIF,EAAoB,CACpB,IAAK,IAAIzvC,EAAI,EAAGA,EAAIyvC,EAAmBG,mBAAmBt2C,OAAQ0G,IAE9D,IADAuvC,EAAUE,EAAmBG,mBAAmB5vC,IACpC5F,QAAUqQ,EAAErQ,OAASm1C,EAAQhc,YAAcwT,IAAW,CAC9D4I,GAAe,EACf,KACH,CAGAA,GACDtB,EAAYwB,oCAAoCplC,EAAGs8B,IAE1D,CAED,GAhDJ,WACI,IAAK,IAAI/mC,EAAI,EAAG8vC,EAAK7B,EAA2B30C,OAAQ0G,EAAI8vC,EAAI9vC,IAAK,CACjE,IAAIioC,EAAkBgG,EAA2BjuC,GAAGioC,gBACpD,IAAKgG,EAA2BjuC,GAAG6uC,sBAC7B5G,IAAoBsG,EAAc5Q,cAAgBsK,IAAoBsG,EAAc7Q,YAAcuQ,EAA2BjuC,GAAGovC,SAElI,OAAO,CAEd,CAED,OAAO,CACV,CAqCOW,GAA+B,CAC/B3B,EAAc4B,mBAAmBrxC,EAAMioC,GArDV4I,EAqDkDrB,EApD5EF,EAA2Bj0C,QAAQw1C,KAqDtC,IAAMS,EAAU5B,EAAY6B,kBAAkBvxC,GAC1CsxC,GACA5B,EAAY8B,yBAAyB,CAAEC,QAASH,EAAQn3C,MAAMwrB,IAAMgqB,EAAmBrmC,YAG/EomC,EAAYgC,+BAA+B3B,IAA2BnS,WAAW59B,OAGzF2xC,IAEJC,GACH,CAnCwB,CAoC5B,CAnJeC,CAAyB5B,GACzBngC,GACH,IAXL,OAYW,SAAC5E,GACJ2E,EAAO3E,EACV,GACR,GACJ,CAqDD,SAASymC,KAtJT,WACI,KAAKlC,GAAkBC,GAAgBC,GAAuB5S,GAC1D,MAAM,IAAI7hC,MAAMswC,EAAAA,qBAEvB,CAmJGsG,GACA,IAAMC,EAAM,IAAI3oC,KACV4oC,EAAwBjC,IACxBkC,EAAoD,IAA/BtC,EAAmBrmC,UAC1C0oC,GACAtC,EAAYwC,wBAAwBF,EAAsBpU,WAAW59B,KAAM+xC,EAAKE,EAAoBD,EAAsBpjB,IAG9HkZ,EAASqK,QAAQ9a,EAAAA,sBAAyC,CACtDzC,UAAW50B,EACXoyC,SAAUnK,EAAWrZ,GACrBojB,sBAAAA,EACAK,wBAAyB/C,EAA2B30C,QACrD,CAAEy3C,SAAUnK,EAAWrZ,GAAIgG,UAAW50B,GAC5C,CAED,SAASsyC,EAA4Bld,GACjC,OAAOA,SAA6CA,GAAWka,EAA2B30C,OAAS,KAAO20C,EAA2Bla,EACxI,CAmBD,SAASwc,EAAcjhC,GACnB0+B,GAAW,EACXvH,EAASqK,QAAQhb,EAAOob,sBACpB,CACI3sC,KAAMwpC,EACN4C,sBAAuBxC,EACvB7+B,MAAOA,GAEX,CAAEyhC,SAAUnK,EAAWrZ,GAAIgG,UAAW50B,GAE7C,CA+CD,SAASwyC,EAA4Bv3C,GACjCu0C,EAA0Bv0C,EAC1Bs0C,EAA4BM,EAAQ4C,0CAA0CjD,EACjF,CAED,SAASkD,EAA0BxnC,GAC/B,GAAIA,EAAEynC,YAAa,CACf,IAAM7W,EAAiBiU,IACnBjU,GAAkBA,EAAe8B,WAAWC,SAC7B/B,EAAe8B,WAAWC,OAClC/I,SAAW5pB,EAAEynC,YAE3B,CACJ,CAgBD,OAdAtxB,EAAW,CACP6oB,YA7QJ,WACI,OAAOjC,EAAWrZ,EACrB,EA4QGwZ,QAAAA,EACAwK,QAjQJ,WACI,OAAOxD,CACV,EAgQGU,WAAAA,EACA+C,WAtOJ,SAAoBC,EAAmBC,EAA0B/yC,EAAMgzC,EAAc5d,GACjF,OAAO,IAAIxmB,SAAQ,SAACkB,EAASD,GAOzB,GANAw/B,GAAW,EACXC,EAA6ByD,EAC7B3D,EAAiB0D,EAEjBN,EADYF,EAA4Bld,IAGpCp1B,IAASwrC,EAAAA,OAAmBxrC,IAASwrC,EAAAA,QAAoBxrC,IAASwrC,EAAAA,OAAmBwH,GAGrF,OAFApB,SACA9hC,IAKJ,IADA,IAAMsgC,EAAW,GACR/uC,EAAI,EAAG8vC,EAAK7B,EAA2B30C,OAAQ0G,EAAI8vC,EAAI9vC,IAAK,CACjE,IAAM4uC,EAAaX,EAA2BjuC,GAC9C+uC,EAASv1C,KAAKm1C,EAAsBC,GACvC,CAEDrhC,QAAQgC,IAAIw/B,GACPngC,MAAK,WAGFuiC,EADYF,EAA4Bld,IAExCtlB,GACH,IANL,OAOW,SAAC5E,GACJ2E,EAAO3E,EACV,GACR,GAEJ,EAuMG6kC,yBAAAA,EACAkD,6BAzPJ,WACI,OAAO1D,CACV,EAwPG+C,4BAAAA,EACAY,qBA9BJ,SAA8BC,GAE1BX,EADeF,EAA4Ba,IAE3CxB,GACH,EA2BGvG,MAjPJ,WACItD,EAASuD,IAAIhU,EAAAA,0BAA6Cqb,EAA2BrxB,GAErFgnB,GACH,GA9CGA,IAEAP,EAASyD,GAAGlU,EAAAA,0BAA6Cqb,EAA2BrxB,GA6RjFA,CACV,CAED8tB,EAAyB5e,sBAAwB,2BACjD,MAAeE,EAAAA,gBAA6B0e,GC5TtCiE,EAAyB,UACzBC,EAA0B,WAE1BC,EAAwB,SAE9B,SAASC,EAAcn5B,GAGnB,IAQIiH,EACAqmB,EACA8L,EACAC,EAXE3L,GADN1tB,EAASA,GAAU,CAAC,GACI0tB,SAClB3Q,EAAS/c,EAAO+c,OAChBuY,EAAct1B,EAAOs1B,YACrBgE,EAAiBt5B,EAAOs5B,eACxB3L,EAAQ3tB,EAAO2tB,MACfE,EAAa7tB,EAAO6tB,WACpBjoC,EAAOoa,EAAOpa,KAuBpB,SAAS2zC,EAAiBpL,GACtB,IAaQqL,EAWR,QAAKrL,IAXGqL,GAAW,EAeNJ,EAbAK,MAAK,SAAAh7B,GACV,GAZuBi7B,EAYNvL,EAZYwL,EAYHl7B,GAXtBrO,MAAMspC,EAAKr4C,QAAWq4C,EAAKrf,YAAcsf,EAAKtf,WAAeqf,EAAK1K,kBAAoB2K,EAAK3K,iBAAqB0K,EAAK9zC,OAAS+zC,EAAK/zC,MAG3H,SAAU8zC,EAAMC,GAChC,OAAOvpC,MAAMspC,EAAKr4C,QAAU+O,MAAMupC,EAAKt4C,QAAWq4C,EAAK1e,UAAY2e,EAAK3e,OAC3E,CAMyC4e,CAAYzL,EAAS1vB,IAhBvC,SAAUi7B,EAAMC,GACpC,OAASD,EAAKvf,SAAWD,EAAAA,iBAAqCwf,EAAKvf,SAAWwf,EAAKxf,MACtF,CAcsE0f,CAAgB1L,EAAS1vB,GAEpF,OADA+6B,GAAW,EAbF,IAAUE,EAAMC,CAgBhC,IACMH,EAQd,CAgDD,SAASM,EAAoBr7B,GACzB,OAAOrO,MAAMqO,EAAIic,UAAY,IAAOxvB,KAAKilC,IAAI1xB,EAAIic,SAAW,EAAG,GAClE,CAED,SAASqf,EAAiC3V,GACtCgV,EAAmBA,EAAiBx5C,QAAO,SAAA6e,GACvC,IAAMu7B,EAAYF,EAAoBr7B,GACtC,OAAOrO,MAAMqO,EAAI4b,iBAAwB35B,IAAT0jC,GAAqB3lB,EAAI4b,WAAa+J,EAAO4V,CAChF,GACJ,CAQD,SAASC,EAAkCp1C,EAAO0mB,GAC1CA,GAAO1mB,EAAQ,KAInBu0C,EAAmBA,EAAiBx5C,QAAO,SAAA6e,GACvC,IAAMu7B,EAAYF,EAAoBr7B,GACtC,OAAQrO,MAAMqO,EAAI4b,YAAc5b,EAAI4b,WAAc9O,EAAMyuB,GACnD5pC,MAAMqO,EAAIic,WAAcjc,EAAI4b,UAAY5b,EAAIic,UAAc71B,EAAQm1C,CAC1E,IACJ,CA6CD,SAASE,EAAkB7gC,EAAK+qB,EAAM4V,GAGlC,IADA,IACS/yC,EADOoS,EAAI9Y,OAAS,EACP0G,GAAK,EAAGA,IAAK,CAC/B,IAAMwX,EAAMpF,EAAIpS,GACVpC,EAAQ4Z,EAAI4b,UACZ9O,EAAM1mB,EAAQ4Z,EAAIic,SAExB,GADAsf,EAAa5pC,MAAM4pC,GAAyBF,EAAoBr7B,GAAhCu7B,GAC1B5pC,MAAMvL,KAAWuL,MAAMmb,IAAU6Y,EAAO4V,GAAcn1C,GAAYu/B,EAAO4V,EAAazuB,GAAUnb,MAAMvL,IAAUuL,MAAMg0B,GACxH,OAAO3lB,CAEd,CACD,OAAO,IACV,CAiCD,SAAS07B,EAAyBhM,EAASx5B,GACvC2gC,EAAY8E,kBAAkBjM,EAASx5B,GACvC2gC,EAAY+E,iBAAiBlM,EAAQ3T,UAAW6e,EAAiBD,EACpE,CAED,SAASkB,EAAmBxpC,GACpBA,EAAEypC,SAAWjB,IAEjBD,EAAgBlxC,OAAOkxC,EAAgBp4C,QAAQ6P,EAAEq9B,SAAU,GAEvDr9B,EAAEgG,WAAahG,EAAEyF,OACjB6iC,EAAiB34C,KAAKqQ,EAAEq9B,SAG5BgM,EAAyBrpC,EAAEq9B,QAASr9B,EAAEyF,MAAQ2iC,EAAwBD,GAEtEvL,EAASqK,QAAQhb,EAAOW,2BACpB,CACIyQ,QAASr9B,EAAEq9B,QACXr3B,SAAUhG,EAAEgG,SACZP,MAAOzF,EAAEyF,MACTgkC,OAAQ7xC,MAEZ,CAAEsvC,SAAUnK,EAAWrZ,GAAIgG,UAAW50B,IAE7C,CAED,SAAS40C,EAAoB1pC,GACrBA,EAAEypC,SAAWjB,GAEjB5L,EAASqK,QAAQhb,EAAOY,0BACpB,CACIwQ,QAASr9B,EAAEq9B,QACXr3B,SAAUhG,EAAEgG,SACZP,MAAOzF,EAAEyF,MACTgkC,OAAQ7xC,MAEZ,CAAEsvC,SAAUnK,EAAWrZ,GAAIgG,UAAW50B,GAE7C,CAED,SAAS60C,EAAiB3pC,GAClBA,EAAEypC,SAAWjB,GAEjB5L,EAASqK,QAAQhb,EAAOc,2BACpB,CAAEsQ,QAASr9B,EAAEq9B,SACb,CAAE6J,SAAUnK,EAAWrZ,GAAIgG,UAAW50B,GAE7C,CAED,SAASqoC,IACLmL,EAAmB,GACnBC,EAAkB,EACrB,CAkCD,OAjBApyB,EAAW,CACP6oB,YAnRJ,WACI,OAAOjC,EAAWrZ,EACrB,EAkRGwZ,QAhRJ,WACI,OAAOpoC,CACV,EA+QG80C,YA3MJ,SAAqB96C,GACjB,IAAM+6C,EAAS/6C,EAASA,EAAO+U,iBAAiB9H,MAAQjN,EAAO+U,MAAQ,CAAC/U,EAAO+U,OAAS,GAEpFimC,EAAmB,GAMvB,OALAD,EAAOE,SAAQ,SAAAlmC,GACX,IAAMmmC,EA8Gd,SAA6BnmC,GACzB,IAAImmC,EACJ,OAAQnmC,GACJ,KAAKqkC,EACD8B,EAAWzB,EACX,MACJ,KAAKJ,EACD6B,EAAW1B,EACX,MACJ,QACI0B,EAAW,GAEnB,OAAOA,CACV,CA3HwBC,CAAoBpmC,GACrCimC,EAAmBA,EAAiBt2C,OA6F5C,SAAwB+U,EAAKzZ,GAEzB,OAAIA,EAAO4D,eAAe,QACf,CAAC02C,EAAkB7gC,EAAKzZ,EAAOwkC,KAAMxkC,EAAOo6C,YAGhD3gC,EAAIzZ,QAAO,SAAAuuC,GACd,IAAK,IAAM1b,KAAQ7yB,EACf,GAAa,UAAT6yB,GACA7yB,EAAO4D,eAAeivB,IAAS0b,EAAQ1b,IAAS7yB,EAAO6yB,GAAO,OAAO,EAG7E,OAAO,CACV,GACJ,CA3GkDuoB,CAAeF,EAAUl7C,GACvE,IAEMg7C,CACV,EAkMGrB,iBAAAA,EACA0B,0BA/OJ,SAAmC9M,GAC/B,IAEI1vB,EAFA+6B,GAAW,EACXvyC,EAAI,EAOR,KAHAuyC,EAAWD,EAAiBpL,IAIxB,IAAKlnC,EAAI,EAAGA,EAAIoyC,EAAgB94C,OAAQ0G,IACpCwX,EAAM46B,EAAgBpyC,GACjBknC,EAAQ7V,MAAQ7Z,EAAI6Z,KAAS6V,EAAQ9T,YAAc5b,EAAI4b,YACxDmf,GAAW,GAKvB,OAAOA,CACV,EA6NGO,iCAAAA,EACAmB,gCAxLJ,SAAyC9W,GACrCgV,EAAmBA,EAAiBx5C,QAAO,SAAA6e,GACvC,OAAOrO,MAAMqO,EAAI4b,iBAAwB35B,IAAT0jC,GAAqB3lB,EAAI4b,UAAY+J,CACxE,GACJ,EAqLG+W,sCAtKJ,SAA+CC,EAAgBC,GAC3D,GAAKD,GAA4C,IAA1BA,EAAe76C,OAAtC,CAMA,IADA,IAAIsE,EAAQ,EACHoC,EAAI,EAAG8vC,EAAKqE,EAAe76C,OAAQ0G,EAAI8vC,EAAI9vC,IAChDgzC,EAAkCp1C,EAAOu2C,EAAev2C,MAAMoC,IAC9DpC,EAAQu2C,EAAe7vB,IAAItkB,GAE3Bo0C,EAAiB,GACjBpB,EAAkCp1C,EAAOw2C,EAR5C,MAFGtB,GAYP,EAyJGuB,cAvJJ,WACIhO,EAAOK,MAAM,kBACb2L,EAAeiC,QACflC,EAAkB,EACrB,EAoJGmC,eAlJJ,SAAwBrN,GACZA,EAAQhU,SACPD,EAAAA,iBACDigB,EAAyBhM,EAAS6K,GAClCK,EAAgB54C,KAAK0tC,GAQjC,SAA6BA,GACzBT,EAASqK,QAAQhb,EAAOa,yBACpB,CAAEuQ,QAASA,GACX,CAAE6J,SAAUnK,EAAWrZ,GAAIgG,UAAW50B,IAE1C0zC,EAAemC,KAAKtN,EACvB,CAbWuN,CAAoBvN,IAGpBb,EAAO50B,KAAK,0BAEvB,EAyIGs4B,MA1BJ,WACItD,EAASuD,IAAIlU,EAAO4e,kBAAmBrB,EAAoB5xC,MAC3DglC,EAASuD,IAAIlU,EAAO6e,sBAAuBpB,EAAqB9xC,MAChEglC,EAASuD,IAAIlU,EAAO8e,kBAAmBpB,EAAkB/xC,MAErD4wC,GACAA,EAAetI,QAEnB/C,GACH,EAkBGA,qBAAAA,EACA6N,mBAjBJ,SAA4B3N,GACxBiL,EAAiB34C,KAAK0tC,EACzB,GAvRGb,EAASK,EAAMuD,UAAUjqB,GACzBgnB,IACAP,EAASyD,GAAGpU,EAAO4e,kBAAmBrB,EAAoBrzB,GAC1DymB,EAASyD,GAAGpU,EAAO6e,sBAAuBpB,EAAqBvzB,GAC/DymB,EAASyD,GAAGpU,EAAO8e,kBAAmBpB,EAAkBxzB,GAsSrDA,CACV,CAEDkyB,EAAchjB,sBAAwB,gBACtC,IAAM92B,EAAUg3B,EAAAA,gBAA6B8iB,GAC7C95C,EAAQ25C,uBAAyBA,EACjC35C,EAAQ45C,wBAA0BA,EAClC55C,EAAQ08C,wBArUwB,WAsUhC18C,EAAQ65C,sBAAwBA,EAChC7iB,EAAAA,mBAAgC8iB,EAAchjB,sBAAuB92B,GACrE,QC3UO,SAAS28C,EAAcC,EAAaC,GACvC,IAAM/N,EAAU,CACZ7V,IAAK2jB,EAAY3jB,IACjB6jB,OAAQF,EAAYE,OACpBC,QAASz5C,OAAOC,OAAO,CAAC,EAAGq5C,EAAYG,SACvCC,YAAaJ,EAAYK,gBAAkB,eAAY57C,GAG3D,OAAO8T,QAAQkB,QAAQwmC,EAAgBF,cAAc7N,IAChDt4B,MAAK,kBACFlT,OAAOC,OAAOq5C,EAAa9N,EAAS,CAAEmO,gBAAyC,YAAxBnO,EAAQkO,aAD7D,GAGb,CAED,SAASE,IAmBL,MANW,CACPP,cAAe,KACfQ,iBAXJ,SAA0BlkB,GACtB,OAAOA,CACV,EAUGmkB,oBAPJ,SAA6BtO,EAA7B,GACI,OAD2C,EAAP7V,IAC7B6V,CACV,EASJ,CAEDoO,EAAgBpmB,sBAAwB,kBACxC,OAAeE,EAAAA,oBAAiCkmB,GC/BhD,SAASG,GAAUC,GAGf,IAAMT,GADNS,EAAMA,GAAO,CAAC,GACcT,gBAc5B,SAAS/N,EAAQ8N,GAEb,IAAMW,EAAmB,IAAI5tC,KACvBm/B,EAAU8N,EAAY9N,QAExB0O,EAAM,IAAIC,eAqBd,GApBAD,EAAIvhC,KAAK2gC,EAAYE,OAAQF,EAAY3jB,KAAK,GAE1C6V,EAAQ5S,eACRshB,EAAIthB,aAAe4S,EAAQ5S,cAG3B4S,EAAQpuC,OACR88C,EAAIE,iBAAiB,QAAS,SAAW5O,EAAQpuC,OAGhDouC,EAAQtT,mBACTsT,EAAQtT,iBAAmB+hB,GAG3BV,GAAmBA,EAAgBO,sBACnCI,EAAMX,EAAgBO,oBAAoBI,EAAK,CAC3CvkB,IAAK2jB,EAAY3jB,OAIrB2jB,EAAYG,QACZ,IAAK,IAAIY,KAAUf,EAAYG,QAAS,CACpC,IAAIv7C,EAAQo7C,EAAYG,QAAQY,GAC5Bn8C,GACAg8C,EAAIE,iBAAiBC,EAAQn8C,EAEpC,CAGLg8C,EAAIP,gBAAkBL,EAAYK,gBAElCO,EAAIp6B,OAASw5B,EAAYx5B,OACzBo6B,EAAI19B,UAAY88B,EAAYgB,MAC5BJ,EAAIhhC,QAAUogC,EAAYpgC,QAC1BghC,EAAIK,WAAajB,EAAYkB,SAC7BN,EAAIjjC,QAAUqiC,EAAYriC,QAC1BijC,EAAIO,UAAYnB,EAAYmB,UAC5BP,EAAIQ,QAAUpB,EAAYoB,QAE1BR,EAAIS,OAEJrB,EAAYnlC,SAAW+lC,CAC1B,CAaD,MALW,CACPpB,KAnEJ,SAAcQ,GACNC,GAAmBA,EAAgBF,cACnCA,EAAcC,EAAaC,GACtBrmC,MAAK,kBAAMs4B,EAAQ8N,EAAd,IAGV9N,EAAQ8N,EAEf,EA4DGV,MARJ,SAAepN,GACX,IAAMxoB,EAAIwoB,EAAQr3B,SAClB6O,EAAExG,UAAYwG,EAAE9J,QAAU8J,EAAEu3B,gBAAax8C,EACzCilB,EAAE41B,OACL,EAQJ,CAEDmB,GAAUvmB,sBAAwB,YAElC,IACA,GADgBE,EAAAA,gBAA6BqmB,ybCnFvCj2C,GAAAA,uKACF,SAAa82C,EAAMr4C,EAAQs4C,GACvB,IAAIztC,EACA0tC,EAAQ,CAAC,EACb,GAAIF,EACA,IAAK,IAAI38C,KAAQsE,EACTA,EAAO1B,eAAe5C,KACtBmP,EAAI7K,EAAOtE,GACLA,KAAQ28C,IAAUA,EAAK38C,KAAUmP,GAAQnP,KAAQ68C,GAAUA,EAAM78C,KAAUmP,KACnD,WAAtB,GAAOwtC,EAAK38C,KAAqC,OAAf28C,EAAK38C,GACvC28C,EAAK38C,GAAQ6F,EAAMi3C,MAAMH,EAAK38C,GAAOmP,EAAGytC,GAExCD,EAAK38C,GAAQ48C,EAAKztC,KAMtC,OAAOwtC,CACV,sBAED,SAAaI,GACT,IAAKA,GAAsB,WAAf,GAAOA,GACf,OAAOA,EAEX,IAAIjsC,EACJ,GAAIisC,aAAe9wC,MAAO,CAEtB6E,EAAI,GACJ,IAAK,IAAIzK,EAAI,EAAG4K,EAAI8rC,EAAIp9C,OAAQ0G,EAAI4K,IAAK5K,EACjCA,KAAK02C,GACLjsC,EAAEjR,KAAKgG,EAAMm3C,MAAMD,EAAI12C,IAGlC,MACGyK,EAAI,CAAC,EAET,OAAOjL,EAAMi3C,MAAMhsC,EAAGisC,EAAKl3C,EAAMm3C,MACpC,gDAED,SAAuCtlB,EAAKulB,GACxC,IACI,IAAKA,GAA4B,IAAlBA,EAAOt9C,OAClB,OAAO+3B,EAGX,IAAIwlB,EAAc,IAAIC,IAAIzlB,GAQ1B,OANAulB,EAAOhD,SAAQ,SAACmD,GACRA,EAAMj8C,KAAOi8C,EAAMn9C,OACnBi9C,EAAYG,aAAanxC,IAAIkxC,EAAMj8C,IAAKi8C,EAAMn9C,MAErD,IAEMi9C,EAAYI,IAKtB,CAFC,MAAOptC,GACL,OAAOwnB,CACV,CACJ,iCAED,SAAwB6lB,GACpB,IAAI/B,EAAU,CAAC,EACf,IAAK+B,EACD,OAAO/B,EAMX,IADA,IAAIgC,EAAcD,EAAU7uB,OAAOnuB,MAAM,QAChC8F,EAAI,EAAGo3C,EAAOD,EAAY79C,OAAQ0G,EAAIo3C,EAAMp3C,IAAK,CACtD,IAAIq3C,EAAaF,EAAYn3C,GACzB5F,EAAQi9C,EAAWr9C,QAAQ,MAC3BI,EAAQ,IACR+6C,EAAQkC,EAAWn8B,UAAU,EAAG9gB,IAAUi9C,EAAWn8B,UAAU9gB,EAAQ,GAE9E,CACD,OAAO+6C,CACV,6BAED,WACI,IAAImC,GAAK,IAAIvvC,MAAOE,UAMpB,MALa,uCAAuC5M,QAAQ,SAAS,SAAU6E,GAC3E,IAAMuK,GAAK6sC,EAAqB,GAAhBrzC,KAAKszC,UAAiB,GAAK,EAE3C,OADAD,EAAKrzC,KAAKiB,MAAMoyC,EAAK,KACR,KAALp3C,EAAWuK,EAAS,EAAJA,EAAU,GAAMpC,SAAS,GACpD,GAEJ,iCAED,SAAwB/H,GACpB,IAAIk3C,EAAO,EAEX,GAAsB,IAAlBl3C,EAAOhH,OACP,OAAOk+C,EAGX,IAAK,IAAIx3C,EAAI,EAAGA,EAAIM,EAAOhH,OAAQ0G,IAE/Bw3C,GAASA,GAAQ,GAAKA,EADVl3C,EAAOnC,WAAW6B,GAE9Bw3C,GAAQ,EAEZ,OAAOA,CACV,+BAQD,SAAsBC,EAAaC,GAC/B,IACI,IAAMC,EAAW,IAAIb,IAAIW,GACnBp/B,EAAS,IAAIy+B,IAAIY,GAIvB,GADAC,EAASC,SAAWv/B,EAAOu/B,SACvBD,EAASE,SAAWx/B,EAAOw/B,OAC3B,OAAOH,EAIX,IAAII,EAAen1B,KAAAA,SAAcg1B,EAASI,SAAS7uC,OAAO,EAAGyuC,EAASI,SAAS19C,YAAY,MAAOge,EAAO0/B,SAAS7uC,OAAO,EAAGmP,EAAO0/B,SAAS19C,YAAY,OAGlJ29C,EAA2C,IAAxBF,EAAax+C,OAAe,EAAI,EAIzD,OAHAw+C,GAAgBz/B,EAAO0/B,SAAS7uC,OAAOmP,EAAO0/B,SAAS19C,YAAY,KAAO29C,EAAkB3/B,EAAO0/B,SAASz+C,OAAS,GAGjH+e,EAAO0/B,SAASz+C,OAASw+C,EAAax+C,OAC/B+e,EAAO0/B,SAEXD,CAGV,CAFC,MAAOjuC,GACL,OAAO6tC,CACV,CACJ,+BAED,WAAiC,IAAXnvB,EAAW,uDAAN,KACvB,IACI,IAAM0vB,EAAkB,OAAP1vB,GAAmC,oBAAdvV,UAA4BA,UAAUC,UAAU1Z,cAAqB,GAE3G,OAAOgwB,EAAAA,GAAAA,UAAS0uB,EAInB,CAFD,MAAMpuC,GACF,MAAO,CAAC,CACX,CACJ,kCAOD,SAAyBvJ,GACrB,MAAQ,mBAAmB4W,KAAK5W,EACnC,4CA9JCd,GAiKN,MCpKA,SAAS04C,KAEL,IAAI/qC,EAAW,CAAC,EAwFhB,SAASgrC,EAAcx5C,EAAMy5C,EAAUC,GAEnC,IAAIC,GAAO,EAEX,OAAKnrC,EAASxO,IAEdwO,EAASxO,GAAM6zC,MAAK,SAACr1C,EAAM/C,GACvB,GAAI+C,GAAQA,EAAKiU,WAAagnC,KAAcC,GAASA,IAAUl7C,EAAKk7C,OAEhE,OADAC,EAAMl+C,GACC,CAEd,IACMk+C,GARqBA,CAS/B,CAMD,IAAMt4B,EAAW,CACbkqB,GA1GJ,SAAYvrC,EAAMy5C,EAAUC,GAAqB,IAAdx9C,EAAc,uDAAJ,CAAC,EAE1C,IAAK8D,EACD,MAAM,IAAI9E,MAAM,0CAEpB,IAAKu+C,GAAkC,mBAAdA,EACrB,MAAM,IAAIv+C,MAAM,gCAAkCu+C,GAGtD,IAAIG,EAAW19C,EAAQ09C,UAhBJ,EAkBnB,KAAIJ,EAAcx5C,EAAMy5C,EAAUC,IAAU,GAA5C,CAEAlrC,EAASxO,GAAQwO,EAASxO,IAAS,GAEnC,IAAM65C,EAAU,CACZpnC,SAAUgnC,EACVC,MAAAA,EACAE,SAAAA,GAGAF,GAASA,EAAMxP,cACf2P,EAAQzH,SAAWsH,EAAMxP,eAEzBwP,GAASA,EAAMtR,UACfyR,EAAQjlB,UAAY8kB,EAAMtR,WAE1BlsC,GAAWA,EAAQob,OACnBuiC,EAAQviC,KAAOpb,EAAQob,MAG3B,IAAMwiC,EAAWtrC,EAASxO,GAAM6zC,MAAK,SAACr1C,EAAMm7C,GACxC,GAAIn7C,GAAQo7C,EAAWp7C,EAAKo7C,SAExB,OADAprC,EAASxO,GAAMuC,OAAOo3C,EAAK,EAAGE,IACvB,CAEd,IAEIC,GACDtrC,EAASxO,GAAMnF,KAAKg/C,EA5B6B,CA8BxD,EAkEGxO,IAhEJ,SAAarrC,EAAMy5C,EAAUC,GACzB,GAAK15C,GAASy5C,GAAajrC,EAASxO,GAApC,CACA,IAAM25C,EAAMH,EAAcx5C,EAAMy5C,EAAUC,GACtCC,EAAM,IACVnrC,EAASxO,GAAM25C,GAAO,KAH2B,CAIpD,EA4DGxH,QA1DJ,SAAiBnyC,GAAkC,IAA5B+5C,EAA4B,uDAAlB,CAAC,EAAGC,EAAc,uDAAJ,CAAC,EAC5C,GAAKh6C,GAASwO,EAASxO,GAAvB,CAIA,IAFA+5C,EAAUA,GAAW,CAAC,GAEVn8C,eAAe,QAAS,MAAM,IAAI1C,MAAM,mDAEpD6+C,EAAQ/5C,KAAOA,EAEXg6C,EAAQ5H,WACR2H,EAAQ3H,SAAW4H,EAAQ5H,UAE3B4H,EAAQplB,YACRmlB,EAAQnlB,UAAYolB,EAAQplB,WAGhCpmB,EAASxO,GACJhG,QAAO,SAAC6/C,GACL,SAAKA,GAGDG,EAAQ5H,UAAYyH,EAAQzH,UAAYyH,EAAQzH,WAAa4H,EAAQ5H,UAGrE4H,EAAQplB,WAAailB,EAAQjlB,WAAailB,EAAQjlB,YAAcolB,EAAQplB,WAIvEolB,EAAQ1iC,MAAQuiC,EAAQviC,MAAQuiC,EAAQviC,OAAS0iC,EAAQ1iC,OAAWuiC,EAAQviC,MAAQ0iC,EAAQ1iC,MAAQ0iC,EAAQ1iC,OAAS+f,EAAAA,sBAI7H,IACA4d,SAAQ,SAAA4E,GAAO,OAAIA,GAAWA,EAAQpnC,SAASjV,KAAKq8C,EAAQH,MAAOK,EAApD,GAhCgB,CAiCvC,EAyBG3O,MARJ,WACI58B,EAAW,CAAC,CACf,GASD,OAAO6S,CACV,CAEDk4B,GAAShpB,sBAAwB,WACjC,IAAM92B,GAAUg3B,EAAAA,oBAAiC8oB,IACjD9/C,GAAQwgD,mBA5HmB,EA6H3BxgD,GAAQygD,oBA5HoB,IA6H5BzpB,EAAAA,uBAAoC8oB,GAAShpB,sBAAuB92B,IACpE,24CC7HM0gD,GAAAA,SAAAA,8sBAAAA,CCIAC,SAAAA,8oBACF,aAAe,mHACX,gBACKC,wBAA0B,wBAC/B,EAAKC,oBAAsB,qBAC3B,EAAKC,eAAiB,gBACtB,EAAKC,4BAA8B,2BACnC,EAAKC,2BAA6B,2BAClC,EAAKC,8BAAgC,6BACrC,EAAKC,mBAAqB,mBAC1B,EAAKC,sBAAwB,sBAC7B,EAAKrI,sBAAwB,sBAC7B,EAAKsI,cAAgB,eACrB,EAAKC,sBAAwB,sBAC7B,EAAKC,qBAAuB,qBAC5B,EAAKC,qBAAuB,qBAC5B,EAAKC,yBAA2B,yBAChC,EAAKC,yBAA2B,yBAChC,EAAKnF,kBAAoB,mBACzB,EAAKoF,iBAAmB,kBACxB,EAAKnF,sBAAwB,sBAC7B,EAAKC,kBAAoB,iBACzB,EAAKmF,iBAAmB,kBACxB,EAAKC,sBAAwB,sBAC7B,EAAKC,sBAAwB,sBAC7B,EAAKC,eAAiB,gBACtB,EAAKC,+BAAiC,8BACtC,EAAKC,mCAAqC,kCAC1C,EAAKC,wCAA0C,8BAC/C,EAAKC,4CAA8C,kCACnD,EAAKC,wCAA0C,sCAC/C,EAAKC,4CAA8C,0CACnD,EAAKC,mCAAqC,iCAC1C,EAAKC,wBAA0B,uBAC/B,EAAKC,oBAAsB,oBAC3B,EAAKC,iBAAmB,kBACxB,EAAKC,2BAA6B,2BAClC,EAAKC,4BAA8B,4BACnC,EAAKC,8BAAgC,6BACrC,EAAKC,+BAAiC,8BACtC,EAAKC,wBAA0B,uBAC/B,EAAKC,sBAAwB,sBAC7B,EAAKC,qBAAuB,qBAC5B,EAAKC,uBAAyB,uBAC9B,EAAKC,qBAAuB,qBAC5B,EAAKC,YAAc,aACnB,EAAKC,YAAc,aACnB,EAAKC,2BAA6B,0BAClC,EAAKC,0CAA4C,uCACjD,EAAKC,gCAAkC,+BACvC,EAAKC,kCAAoC,gCACzC,EAAKC,kCAAoC,gCAlD9B,CAmDd,UApDC7C,CAAmBljB,IDDzB,GADa,IAAIijB,GEFX+C,GAAkB,EAClBC,GAAkB,EAClBC,GAAoB,EACpBC,GAAiB,EACjBC,GAAkB,EAOxB,SAASC,GAAMnjC,GAEXA,EAASA,GAAU,CAAC,EACpB,IAMIiH,EACAm8B,EACAC,EACAhpB,EATEzC,EAAUlvB,KAAKkvB,QACf8V,EAAWyR,GAASvnB,GAASM,cAC7Bl2B,EAAWge,EAAOhe,SAElBshD,EAAQ,GAqBd,SAASC,EAASt5C,GACd,OAAIA,GAAMA,EAAGu5C,KACFv5C,EAAGu5C,KAAKvvC,OAAOwE,SAGnBxE,OAAOwE,QAAQ+c,IAAIguB,KAAKvvC,OAAOwE,QACzC,CA0CD,SAASgrC,IAAiB,2BAAR5F,EAAQ,yBAARA,EAAQ,gBACtB6F,EAAK,WAAL,GAAMZ,GAAiBp6C,MAAvB,OAAgCm1C,GACnC,CAED,SAAStnC,IAAiB,2BAARsnC,EAAQ,yBAARA,EAAQ,gBACtB6F,EAAK,WAAL,GAAMX,GAAiBr6C,MAAvB,OAAgCm1C,GACnC,CAED,SAASnlC,IAAgB,2BAARmlC,EAAQ,yBAARA,EAAQ,gBACrB6F,EAAK,WAAL,GAAMV,GAAmBt6C,MAAzB,OAAkCm1C,GACrC,CAED,SAASr1B,IAAgB,2BAARq1B,EAAQ,yBAARA,EAAQ,gBACrB6F,EAAK,WAAL,GAAMT,GAAgBv6C,MAAtB,OAA+Bm1C,GAClC,CAED,SAASlQ,IAAiB,2BAARkQ,EAAQ,yBAARA,EAAQ,gBACtB6F,EAAK,WAAL,GAAMR,GAAiBx6C,MAAvB,OAAgCm1C,GACnC,CAED,SAAS6F,EAAMC,EAAOC,GAClB,IAAI7rB,EAAU,GACV8rB,EAAU,KAEVT,IACAS,GAAU,IAAI70C,MAAOE,UACrB6oB,GAAW,KAAO8rB,EAAUxpB,GAAa,KAGzCgpB,GAAkBO,GAASA,EAAMtnB,eACjCvE,GAAW,IAAM6rB,EAAMtnB,eAAiB,IACpCsnB,EAAM5V,UACNjW,GAAW,IAAM6rB,EAAM5V,UAAY,MAIvCjW,EAAQx3B,OAAS,IACjBw3B,GAAW,KAjBqB,2BAAR8lB,EAAQ,iCAARA,EAAQ,kBAoBpChxC,MAAMiJ,MAAM,KAAM+nC,GAAQhD,SAAQ,SAAUz2C,GACxC2zB,GAAW3zB,EAAO,GACrB,IAGGk/C,EAAMK,IAAU3hD,GAAYA,EAAS8c,MAAM6uB,MAAMmW,UAAYH,GAC7DL,EAAMK,GAAO5rB,GAIb/1B,GAAYA,EAAS8c,MAAM6uB,MAAMoW,eACjCrW,EAASqK,QAAQgI,GAAAA,IAAY,CAAEhoB,QAASA,EAAS4rB,MAAOA,GAE/D,CAUD,OARA18B,EAAW,CACPiqB,UAxFJ,SAAmBjqB,GACf,MAAO,CACHw8B,MAAOA,EAAMD,KAAKv8B,GAClB1Q,MAAOA,EAAMitC,KAAKv8B,GAClBvO,KAAMA,EAAK8qC,KAAKv8B,GAChBuB,KAAMA,EAAKg7B,KAAKv8B,GAChB0mB,MAAOA,EAAM6V,KAAKv8B,GAEzB,EAiFG+8B,uBAxEJ,SAAgCnjD,GAC5BuiD,EAAmBviD,CACtB,EAuEGojD,qBA9DJ,SAA8BpjD,GAC1BwiD,EAAiBxiD,CACpB,GA3DGuiD,GAAmB,EACnBC,GAAiB,EACjBhpB,GAAY,IAAIrrB,MAAOE,UAED,oBAAX+E,QAA0BA,OAAOwE,UACxC6qC,EAAMR,IAAmBS,EAAStvC,OAAOwE,QAAQlC,OACjD+sC,EAAMP,IAAmBQ,EAAStvC,OAAOwE,QAAQlC,OACjD+sC,EAAMN,IAAqBO,EAAStvC,OAAOwE,QAAQC,MACnD4qC,EAAML,IAAkBM,EAAStvC,OAAOwE,QAAQ+P,MAChD86B,EAAMJ,IAAmBK,EAAStvC,OAAOwE,QAAQk1B,QAmHlD1mB,CACV,CAEDk8B,GAAMhtB,sBAAwB,QAE9B,IAAM92B,GAAUg3B,EAAAA,oBAAiC8sB,IACjD9jD,GAAQ6kD,eA7Je,EA8JvB7kD,GAAQyjD,gBAAkBA,GAC1BzjD,GAAQ0jD,gBAAkBA,GAC1B1jD,GAAQ2jD,kBAAoBA,GAC5B3jD,GAAQ4jD,eAAiBA,GACzB5jD,GAAQ6jD,gBAAkBA,GAC1B7sB,EAAAA,uBAAoC8sB,GAAMhtB,sBAAuB92B,IACjE,4WCsoBA,SAAS8kD,KAAW,QAEVvsB,EAAUlvB,KAAKkvB,QACf8V,EAAWyR,GAASvnB,GAASM,cAC7BksB,EAAmB,CACrB,4BAA6BrE,GAAAA,2BAC7B,yCAA0CA,GAAAA,0CAC1C,gCAAiCA,GAAAA,gCACjC,yCAA0CA,GAAAA,kCAC1C,yCAA0CA,GAAAA,mCAQxCsE,EAAkB,CACpB1W,MAAO,CACHmW,SAAUX,GAAAA,kBACVY,eAAe,GAEnBO,UAAW,CACPC,mBAAoB,IACpBC,4BAA6B,IAC7BC,4BAA6B,IAC7BC,mBAAmB,EACnBC,yBAAyB,EACzBC,4BAA4B,EAC5BC,sBAAsB,EACtBC,qBAAqB,EACrBC,4BAA6B,IAC7BC,mCAAmC,EACnCC,iBAAiB,EACjBC,oCAAoC,EACpCC,aAAc,CACVC,sCAAsC,EACtCC,yBAAyB,GAE7BC,gBAAiB,CACbC,yBAAyB,EACzBC,2BAA2B,GAE/BC,QAAS,CACLC,aAAc,KAElBC,MAAO,CACHC,uBAAwBtrB,IACxBurB,UAAWvrB,IACXwrB,+BAA+B,GAEnCC,WAAY,CACRC,yBAAyB,EACzBC,yBAAyB,EACzBC,8BAA8B,GAElC78C,OAAQ,CACJ88C,4BAA4B,EAC5BC,mBAAmB,EACnBC,0BAA0B,EAC1BC,4BAA4B,EAC5BC,sBAAuB,GACvBC,aAAc,GACdC,uBAAwB,GACxBC,+BAAgC,GAChCC,mBAAoBrsB,IACpBssB,iBAAkB,GAClBC,iCAAkC,IAClCC,eAAgB,GAChBC,iBAAiB,EACjBC,eAAe,EACfC,8BAA8B,EAC9BC,6BAA6B,EAC7BC,6BAA6B,EAC7BC,kCAAkC,GAEtCC,KAAM,CACFC,UAAU,EACVC,eAAe,EACfC,cAAe,IACfxN,UAAW,GACXyN,eAAe,EACfC,gBAAgB,EAChBC,UAAW,IAEfC,mBAAoB,CAChBC,SAAS,EACTC,iCAAiC,EACjCC,mBAAoB,EACpBC,wBAAyB,GACzBC,+BAAgC,IAChCC,+BAAgC,EAChCC,wCAAyC,EACzCC,oBAAqB,IACrBC,+CAA+C,EAC/CC,oBAAqB,CACjBC,OAAQ,qCACR1nD,MAAO,oCAGf2nD,WAAY,CACRC,eAAgB,IAChBC,kBAAmB,EACnBC,qBAAqB,GAEzBC,KAAM,CACFC,gBAAgB,EAChBC,qBAAqB,EACrBC,OAAQ,CACJC,wBAAwB,IAGhCC,YAAa,CACTC,SAAU5uB,IACV6uB,aAAc,CACVhZ,IAAK7V,IACL8uB,IAAK9uB,KAET+uB,kBAAmB,GACnBxB,QAAS,KACT3qC,KAAMk0B,EAAAA,2BAEVkY,uBAAwB,CACpBzB,SAAS,EACT0B,IAAK,MAETC,6BAA8B,CAC1B3B,SAAS,EACT0B,IAAK,MAETE,iDAAiD,EACjDC,oBAAqB,CACjBC,MAAO,GACPC,MAAO,GAEXC,gBAAiB,CACbD,MAAOxY,EAAAA,iCACPuY,MAAOvY,EAAAA,iCAEX0Y,6BAA8B1Y,EAAAA,gDAC9B2Y,uBAAwB,IACxBC,gCAAiC,EACjCC,uBAAwB,IACxBC,gBAAc,UACT9xB,EAAYmB,SAAW,KADd,KAETnB,EAAYoB,qBAAuB,KAF1B,KAGTpB,EAAYuB,mBAAqB,KAHxB,KAITvB,EAAYqB,kBAAoB,KAJvB,KAKTrB,EAAYwB,iCAAmC,KALtC,KAMTxB,EAAYsB,mBAAqB,KANxB,KAOTtB,EAAYyB,+BAAiC,KAPpC,KAQTzB,EAAY2B,QAAU,KARb,KAST3B,EAAY6B,WAAa,KAThB,iCAUiB,IAVjB,GAYdkwB,eAAa,UACR/xB,EAAYmB,SAAW,GADf,KAERnB,EAAYoB,qBAAuB,GAF3B,KAGRpB,EAAYuB,mBAAqB,GAHzB,KAIRvB,EAAYqB,kBAAoB,GAJxB,KAKRrB,EAAYwB,iCAAmC,GALvC,KAMRxB,EAAYsB,mBAAqB,GANzB,KAORtB,EAAYyB,+BAAiC,GAPrC,KAQRzB,EAAY2B,QAAU,GARd,KASR3B,EAAY6B,WAAa,GATjB,gCAUiB,GAVjB,GAYbmwB,IAAK,CACDC,oBAAqBjZ,EAAAA,8BACrBkZ,YAAalZ,EAAAA,qBACbmZ,mBAAoB,CAChBC,wBAAwB,EACxBC,mBAAmB,EACnBC,mBAAmB,EACnBC,qBAAqB,GAEzBC,mBAAoB,CAChBD,oBAAqB,CACjBE,mBAAoB,IACpBC,kBAAmB,IACnBC,mBAAoB,IAG5BC,sBAAuB,GACvBC,oBAAoB,EACpBC,oBAAoB,EACpBC,sBAAsB,EACtBC,qCAAqC,EACrCC,WAAY,CACRzB,OAAQ,EACRD,OAAQ,GAEZ2B,WAAY,CACR1B,OAAQ,EACRD,OAAQ,GAEZ4B,uBAAwB,CACpB3B,MAAO,EACPD,MAAO,GAEX6B,eAAgB,CACZ5B,OAAQ,EACRD,OAAQ,GAEZ8B,2BAA4B,CACxB7B,OAAQ,EACRD,OAAQ,GAEZ+B,kBAAmB,CACf9B,OAAO,EACPD,OAAO,GAEXgC,+BAAgCva,EAAAA,+CAEpCwa,KAAM,CACF/D,SAAS,EACTgE,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,gBAAiB,EACjB9uC,KAAMk0B,EAAAA,gBACN6a,YAAa7a,EAAAA,oBACb8a,kBAAmB,CAAC,MAAO,YAE/BrzB,KAAM,CACFgvB,SAAS,EACTuC,IAAK,CACD+B,SAAS,EACTC,eAAgB,KAI5B51B,OAAQ,CACJ61B,gBAAiB,CACbC,iBAAkB,KAK1BtqD,EAAWyE,GAAAA,MAAY49C,GAI3B,SAASkI,EAAcrnD,EAAQq4C,EAAM3zB,GACjC,IAAK,IAAInY,KAAKvM,EACNA,EAAO1B,eAAeiO,KAClB8rC,EAAK/5C,eAAeiO,GACK,WAArB,GAAOvM,EAAOuM,KAAqBvM,EAAOuM,aAAc5E,OAAwB,OAAd3H,EAAOuM,IAGzE8rC,EAAK9rC,GAAKhL,GAAAA,MAAYvB,EAAOuM,IACzB2yC,EAAiBx6B,EAAOnY,IACxBi8B,EAASqK,QAAQqM,EAAiBx6B,EAAOnY,KAJ7C86C,EAAcrnD,EAAOuM,GAAI8rC,EAAK9rC,GAAImY,EAAKpoB,QAAUiQ,EAAI,KAQzDgH,QAAQlC,MAAM,sBAAwBqT,EAAOnY,EAAI,qBAIhE,CA4CD,MANW,CACPqN,IAhCJ,WACI,OAAO9c,CACV,EA+BGwqD,OAlBJ,SAAgBC,GACe,WAAvB,GAAOA,IACPF,EAAcE,EAAazqD,EAAU,GAE5C,EAeGgvC,MAPJ,WACIhvC,EAAWyE,GAAAA,MAAY49C,EAC1B,EASJ,CAGDF,GAAShuB,sBAAwB,WACjC,IACA,GADcE,EAAAA,oBAAiC8tB,gZCvlC/C,SAASuI,GAAY/P,GAEjBA,EAAMA,GAAO,CAAC,EACd,IAKI11B,EAAUquB,EALR1d,EAAUlvB,KAAKkvB,QACfskB,EAAkBS,EAAIT,gBACtByQ,EAA4BhQ,EAAIgQ,0BAChCC,EAAYjQ,EAAIiQ,UAChB5qD,EAAWmiD,GAASvsB,GAASM,cAiBnC,SAASiW,EAAQ8N,GAEb,IAmCI4Q,EAnCEjQ,EAAmB,IAAI5tC,KACvBm/B,EAAU8N,EAAY9N,QAEtBiO,EAAU,IAAI0Q,QAKpB,GAJI3e,EAAQpuC,OACRq8C,EAAQ/1C,OAAO,QAAS,SAAW8nC,EAAQpuC,OAG3Ck8C,EAAYG,QACZ,IAAK,IAAIY,KAAUf,EAAYG,QAAS,CACpC,IAAIv7C,EAAQo7C,EAAYG,QAAQY,GAC5Bn8C,GACAu7C,EAAQ/1C,OAAO22C,EAAQn8C,EAE9B,CAGAstC,EAAQtT,mBACTsT,EAAQtT,iBAAmB+hB,GAG3BV,GAAmBA,EAAgBO,qBAKnCP,EAAgBO,oBAAoB,CAChCM,iBAAkB,SAAUC,EAAQn8C,GAChCu7C,EAAQ/1C,OAAO22C,EAAQn8C,EAC1B,GACF,CACCy3B,IAAK2jB,EAAY3jB,MAKa,mBAA3BrkB,OAAO84C,kBACdF,EAAkB,IAAIE,gBACtB9Q,EAAY4Q,gBAAkBA,EAC9BA,EAAgBG,OAAOpzC,QAAUqiC,EAAYriC,SAGjD,IAAMqzC,EAAa,CACf9Q,OAAQF,EAAYE,OACpBC,QAASA,EACTC,YAAaJ,EAAYK,gBAAkB,eAAY57C,EACvDssD,OAAQH,EAAkBA,EAAgBG,YAAStsD,GAGjDwsD,EAAkBlrD,EAAS8c,MAAMwlC,UAAU8F,IAAIuB,+BAC/CwB,EAAcn+C,KAAK2oC,MACrByV,EAA4B,EAEhC,IAAI54C,SAAQ,SAACkB,GACT,GAAIw3C,IAAoB9b,EAAAA,uCAAmDub,IACvES,EAA4BT,EAA0BU,6BAA6Blf,EAAgE,IAAvDmH,EAAYgY,sBAAsBnf,EAAQ3T,aAIlI,OAAOlnB,WAAWoC,EAAS03C,GAGnC13C,GACH,IACIG,MAAK,WACF,IAAI03C,EAAkBv+C,KAAK2oC,MAE3B/uC,MAAMqzC,EAAY3jB,IAAK20B,GAAYp3C,MAAK,SAAUiB,GACzCmlC,EAAYnlC,WACbmlC,EAAYnlC,SAAW,CAAC,GAE5BmlC,EAAYnlC,SAASV,OAASU,EAASV,OACvC6lC,EAAYnlC,SAAS02C,WAAa12C,EAAS02C,WAC3CvR,EAAYnlC,SAAS22C,YAAc32C,EAASwhB,IAEvCxhB,EAAS42C,IACVzR,EAAYpgC,UAGhB,IAZwD,EAYpD8xC,EAAkB,GAZkC,gmBAatC72C,EAASslC,QAAQ3tC,QAbqB,IAaxD,2BAA2C,KAAhC1M,EAAgC,QACvC4rD,GAAmB5rD,EAAM,KAAO+U,EAASslC,QAAQt9B,IAAI/c,GAAO,MAC/D,CAfuD,+BAkBxD,GAFAk6C,EAAYnlC,SAAS62C,gBAAkBA,GAElC72C,EAAS82C,KAIV,OAAO92C,EAASpR,cAAcmQ,MAAK,SAAUxM,GACzC4yC,EAAYnlC,SAASA,SAAWzN,EAChC,IAAMwkD,EAAQ,CACVC,OAAQzkD,EAAOnC,WACf6mD,MAAO1kD,EAAOnC,WACd8mD,QAAQ,GAEZ/R,EAAYkB,SAAS0Q,GACrB5R,EAAYx5B,SACZw5B,EAAYgB,OAEf,IAGL,IAWch+B,EACAgvC,MAZRC,EAAah+C,SAAS4G,EAASslC,QAAQt9B,IAAI,kBAAmB,IAChEqvC,EAAgB,EAChBC,GAAoB,EACpBC,EAAY,IAAIllD,WAChBpE,EAAS,EAEb,GAAImoD,IAAoB9b,EAAAA,uCAAmDub,EAA2B,KAC9F2B,EAAQf,EACRgB,EAAQ,EAFsF,KA+ChEz3C,EAAS82C,KAAKY,QA/CkD,0hBA+C3FC,EA/C2F,KA+C/EC,EA/C+E,KAKxFzvC,EA2CQwvC,EA3CQE,YAChBV,EAAc,GAEpBhvC,EAAO2vC,OAAO/4C,MAAK,SAASg5C,EAAalrC,GACrC,IAAM9iB,EAAQ8iB,EAAK9iB,MACbiuD,EAAOnrC,EAAKmrC,KAGlB,GAFAP,EAAQv/C,KAAK2oC,MAET92C,GAASA,EAAMN,OAAQ,CACvB,IAAMwuD,EAA0BR,EAAQD,EAClCU,EAAanuD,EAAMN,OACzB0tD,EAAYxtD,KAAK,CACbwuD,4BAA6BV,EAAQhB,EACrCwB,wBAAAA,EACAC,WAAAA,EACAE,KAAMhkD,KAAKikD,MAAM,EAAIH,GAAcD,EAA0B,MAC7DK,YAAa9Z,EAAYgY,sBAAsBnf,EAAQ3T,YAE9D,CAED,GAAIs0B,EAAM,CAEN,IAAMO,EAAgBd,EAAQhB,EACxB+B,EAAiBrB,EAAYsB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,EAAKT,UAA5B,GAAwC,GAWlF,OATArC,EAA0B+C,eAAevhB,EAASkhB,EAAepB,EAAad,EAAaC,EAA2BO,QAEtH1R,EAAYkB,SAAS,CACjB2Q,OAAQwB,EACRvB,MAAOuB,EACPK,kBAAkB,EAClBvrB,KAAMuoB,EAA0BiD,+BAA+BzhB,GAC/D6f,QAAQ,GAGf,CAED,OADAM,EAAQt/C,KAAK2oC,MACN14B,EAAO2vC,OAAO/4C,KAAKg5C,EAC7B,IAML5S,EAAYh9B,OAASyvC,EAAYC,WACpC,MACG1S,EAAYh9B,OAASnI,EAAS82C,KAAKe,YAGvC,IAAIkB,EAAiB,GACjBC,EAAgB,GAChBC,EAAc,GACdC,GAAuB,EA6G3BpB,EAAK3S,GA1GiB,SAAhBgU,EAAgB,GAA2B,IAAfpvD,EAAe,EAAfA,MAC9B,GAD6C,EAARiuD,KAC3B,CACN,GAAIT,EAAW,CACX,GAAInB,IAAoB9b,EAAAA,sCAAiD,CAIrE,IAAI8e,EAAuB,KACvBC,EAAiB,KACjBjD,IAAoB9b,EAAAA,+CACpB8e,EAqKpC,SAAwCJ,EAAeC,GACnD,IACI,IAAIK,EAAOC,EAEXD,EAAQN,EAAclwD,QAAO,SAAC4L,EAAMvE,GAAP,OAAaA,EAAI6oD,EAAcvvD,OAAS,CAAxC,IAC7B8vD,EAASN,EAAYnwD,QAAO,SAAC0wD,EAAOrpD,GAAR,OAAcA,EAAI8oD,EAAYxvD,OAAS,CAAvC,IAC5B,IAAIgwD,EAAmB,GAEvB,GAAIH,EAAM7vD,OAAS,EAAG,CAGlB,IAFA,IAAIiwD,EAA6B,EAC7BC,EAAyB,EACpBxpD,EAAI,EAAGA,EAAImpD,EAAM7vD,OAAQ0G,IAC9B,GAAImpD,EAAMnpD,IAAMopD,EAAOppD,GAAI,CACvB,IAAIypD,EAAoBL,EAAOppD,GAAG0pD,GAAKP,EAAMnpD,GAAG0pD,GAChD,GAAID,EAAoB,EACpBH,EAAiB9vD,KAAM,EAAI4vD,EAAOppD,GAAGiC,MAASwnD,GAC9CD,EAAyB,MACtB,CAC4B,IAA3BA,IACAA,EAAyBL,EAAMnpD,GAAG0pD,GAClCH,EAA6B,GAEjC,IAAII,EAA6BP,EAAOppD,GAAG0pD,GAAKF,EAC5CG,EAA6B,GAC7BJ,GAA8BH,EAAOppD,GAAGiC,MACxCqnD,EAAiB9vD,KAAM,EAAI+vD,EAA8BI,GACzDH,EAAyB,GAGzBD,GAA8BH,EAAOppD,GAAGiC,KAE/C,CACJ,CAGL,GAAIqnD,EAAiBhwD,OAAS,EAE1B,OAD8BgwD,EAAiBhB,QAAO,SAACvoD,EAAG4H,GAAJ,OAAU5H,EAAI4H,CAAd,GAAiB,GACxC2hD,EAAiBhwD,MAEvD,CAED,OAAO,IAGV,CAFC,MAAOuQ,GACL,OAAO,IACV,CACJ,CAlN0D+/C,CAA+Bf,EAAeC,GACjEG,IACAC,EAAiC,EAAhBhC,EAAoB+B,IAGpChD,IAAoB9b,EAAAA,mDACzB+e,EAAiBW,EAAwBjB,EAAgB1B,IAG7DlS,EAAYkB,SAAS,CACjB2Q,OAAQK,EACRJ,MAAO39C,MAAM89C,GAAcC,EAAgBD,EAC3CyB,kBAAkB,EAClBvrB,KAAM+rB,EACNnC,QAAQ,GAEf,CAED/R,EAAYnlC,SAASA,SAAWu3C,EAAUhlD,MAC7C,CAGD,OAFA4yC,EAAYx5B,cACZw5B,EAAYgB,OAEf,CAED,GAAIp8C,GAASA,EAAMN,OAAS,EAAG,CAC3B8tD,EA2FxB,SAA0BA,EAAW7iD,GACjC,GAAyB,IAArB6iD,EAAU9tD,OACV,OAAOiL,EAEX,IAAMrH,EAAS,IAAIgF,WAAWklD,EAAU9tD,OAASiL,EAAKjL,QAGtD,OAFA4D,EAAO2I,IAAIuhD,GACXlqD,EAAO2I,IAAItB,EAAM6iD,EAAU9tD,QACpB4D,CACV,CAnGmC4sD,CAAiB1C,EAAWxtD,GACxCstD,GAAiBttD,EAAMN,OAEvBsvD,EAAepvD,KAAK,CAChBkwD,GAAI3hD,KAAK2oC,MACTzuC,MAAOrI,EAAMN,SAGb2sD,IAAoB9b,EAAAA,+CAA2D4e,GAE7DpD,EAAUoE,2BAA2B,CAAC,QAAS3C,EAAWtpD,GAC9DksD,QAEVjB,GAAuB,EACvBF,EAAcrvD,KAAK,CACfkwD,GAAIO,YAAYvZ,MAChBzuC,MAAOrI,EAAMN,UAKzB,IAAM4wD,EAAYvE,EAAUoE,2BAA2B,CAAC,OAAQ,QAAS3C,EAAWtpD,GACpF,GAAIosD,EAAUF,MAAO,CACjB,IAeIzlD,EAfE+f,EAAM4lC,EAAUC,oBAAsBD,EAAUznD,KAGlDwjD,IAAoB9b,EAAAA,+CAA4D4e,IAChFA,GAAuB,EACvBD,EAAYtvD,KAAK,CACbkwD,GAAIO,YAAYvZ,MAChBzuC,MAAOmlD,EAAU9tD,UASrBgrB,IAAQ8iC,EAAU9tD,QAClBiL,EAAO6iD,EACPA,EAAY,IAAIllD,aAEhBqC,EAAO,IAAIrC,WAAWklD,EAAUgD,SAAS,EAAG9lC,IAC5C8iC,EAAYA,EAAUgD,SAAS9lC,IAInC0wB,EAAYkB,SAAS,CACjB3xC,KAAMA,EAAKnC,OACXsmD,kBAAkB,EAClB2B,SAAS,IAGbvsD,EAAS,CACZ,MACGA,EAASosD,EAAUC,oBAGdhD,IACDnS,EAAYkB,SAAS,CACjBwS,kBAAkB,EAClB2B,SAAS,IAEblD,GAAoB,EAG/B,CACDQ,EAAK3S,EAAagU,EACrB,GAEJ,IAjND,OAkNW,SAAUn/C,GACTmrC,EAAYpgC,SACZogC,EAAYpgC,QAAQ/K,EAE3B,GACR,GACR,CAED,SAAS89C,EAAK3S,EAAagU,GACvBhU,EAAYh9B,OAAO2vC,OACd/4C,KAAKo6C,GADV,OAEW,SAAUn/C,GACTmrC,EAAYpgC,SAA2C,MAAhCogC,EAAYnlC,SAASV,QAE5C6lC,EAAYpgC,QAAQ/K,EAE3B,GACR,CA4BD,SAASggD,EAAwBjB,EAAgB1B,GAC7C,IAEI,IADA0B,EAAiBA,EAAejwD,QAAO,SAAA4L,GAAI,OAAIA,EAAKtC,MAAUilD,EAAgB,EAAK0B,EAAetvD,MAAvD,KACxBA,OAAS,EAAG,CAC3B,IAAI6jC,EAAO,EACLmtB,GAAmB1B,EAAeA,EAAetvD,OAAS,GAAGowD,GAAKd,EAAe,GAAGc,IAAMd,EAAetvD,OAS/G,OARAsvD,EAAehV,SAAQ,SAACrvC,EAAMnK,GAE1B,IAAMpB,EAAO4vD,EAAexuD,EAAQ,GACpC,GAAIpB,EAAM,CACN,IAAMuxD,EAAWvxD,EAAK0wD,GAAKnlD,EAAKmlD,GAChCvsB,GAAQotB,EAAWD,EAAkBC,EAAW,CACnD,CACJ,IACMptB,CACV,CACD,OAAO,IAGV,CAFC,MAAOtzB,GACL,OAAO,IACV,CACJ,CAwDD,OAPAmW,EAAW,CACPw0B,KApZJ,SAAcQ,GACNC,GAAmBA,EAAgBF,cACnCA,EAAcC,EAAaC,GACtBrmC,MAAK,kBAAMs4B,EAAQ8N,EAAd,IAGV9N,EAAQ8N,EAEf,EA6YGV,MAvFJ,SAAepN,GACX,GAAIA,EAAQ0e,gBAER1e,EAAQ0e,gBAAgBtR,aACrB,GAAIpN,EAAQlvB,OAEf,IACIkvB,EAAQlvB,OAAOwyC,SACftjB,EAAQv0B,SAIX,CAHC,MAAO9I,GAGR,CAER,EA0EGggD,wBAAyBA,EACzBY,MA3ZJ,SAAe/U,GACXrH,EAAcqH,EAAIrH,WACrB,GA4ZMruB,CACV,CAEDylC,GAAYv2B,sBAAwB,cAEpC,IACA,GADgBE,EAAAA,gBAA6Bq2B,IC7a7C,GAPI,WAAYpnD,EAAMyyB,EAASvsB,gGAAM,SAC7B9C,KAAKpD,KAAOA,GAAQ,KACpBoD,KAAKqvB,QAAUA,GAAW,KAC1BrvB,KAAK8C,KAAOA,GAAQ,IACvB,qpBCaL,GAD6B,IAfvBmmD,SAAAA,8oBACF,aAAe,mHACX,gBAEKC,gCAAkC,uCACvC,EAAKC,wBAA0B,iCAM/B,EAAKC,oBAAsB,oBAVhB,CAWd,UAZCH,CAA+B70B,+KC0CrC,GAzCMi1B,WACF,0GAAc,SACVrpD,KAAK8rB,GAAK,KACV9rB,KAAKrH,OAAS,EACdqH,KAAK86B,WAAa,KAClB96B,KAAKwmC,gBAAkB,KACvBxmC,KAAKgnC,eAAiB,KACtBhnC,KAAKspD,OAAS,KACdtpD,KAAKupD,SAAW,KAChBvpD,KAAKwpD,iBAAmB,KACxBxpD,KAAKq7B,gBAAkBzJ,IACvB5xB,KAAKiyB,UAAY,EACjBjyB,KAAK06B,YAAc,EACnB16B,KAAK04B,WAAa,KAClB14B,KAAK3I,MAAQ,KACb2I,KAAKypD,uBAAyB,EAE9BzpD,KAAK0pD,cAAgB93B,IAErB5xB,KAAKioC,yBAA2B,CAAEC,iBAAkB,EAAGE,+BAAgCxW,KACvF5xB,KAAK+lC,UAAYnU,IACjB5xB,KAAK45B,MAAQhI,IACb5xB,KAAK2pD,OAAS/3B,IACd5xB,KAAK4pD,SAAW,KAChB5pD,KAAK6pD,eAAiBj4B,IACtB5xB,KAAKi7B,uBAAyB,EAC9Bj7B,KAAKqmC,0BAA2B,EAChCrmC,KAAK8pD,UAAY,IACpB,uDAED,WACI,OAAgC,OAAxB9pD,KAAKgnC,gBAA0C,OAAfhnC,KAAK3I,KAChD,4BAED,WACI,OAAO2I,KAAKwmC,kBAAoBxK,EAAAA,UAC5Bh8B,KAAKwmC,kBAAoBxK,EAAAA,eACxBh8B,KAAK04B,UACb,0BAtCC2wB,GCKN,GAPI,0GAAc,SACVrpD,KAAK+6B,OAAS,KACd/6B,KAAKrH,OAAS,EACdqH,KAAK9C,KAAO,IACf,ECLC6sD,GACF,0GAAc,SACV/pD,KAAK8rB,GAAK,KACV9rB,KAAKrH,OAAS,EACdqH,KAAKgyB,SAAWJ,IAChB5xB,KAAK7D,MAAQy1B,IACb5xB,KAAKgmC,IAAM,KACXhmC,KAAKmoC,aAAe,IACvB,EAGL4hB,GAAOC,WAAa,YAEpB,UCCA,GAbI,0GAAc,SACVhqD,KAAKksB,SAAW,KAChBlsB,KAAKiqD,2BAA6B,EAClCjqD,KAAKuyB,sBAAwB,KAC7BvyB,KAAKwyB,oBAAsB03B,OAAOC,kBAClCnqD,KAAKoqD,qBAAuBF,OAAOC,kBACnCnqD,KAAKqqD,mBAAqBH,OAAOC,kBACjCnqD,KAAKsqD,YAAc,KACnBtqD,KAAKuqD,oBAAsB34B,IAC3B5xB,KAAKwqD,0BAA4B54B,GACpC,ECHL,GAPI,0GAAc,SAEV5xB,KAAKyqD,YAAc,GACnBzqD,KAAK7H,MAAQ,EAChB,ECOL,GAXI,0GAAc,SACV6H,KAAK9C,KAAO,GACZ8C,KAAKgyB,SAAWJ,IAChB5xB,KAAK0qD,iBAAmB94B,IACxB5xB,KAAK8rB,GAAK8F,IACV5xB,KAAK2qD,YAAc,GACnB3qD,KAAK4qD,YAAc,KACnB5qD,KAAK6qD,sBAAwBj5B,GAChC,ECLCk5B,GACF,WAAYl7B,EAAKsC,EAAiB4kB,EAAUiU,gGAAQ,SAChD/qD,KAAK4vB,IAAMA,GAAO,GAClB5vB,KAAKkyB,gBAAkBA,GAAmBtC,GAAO,GAGjD5vB,KAAKgrD,aAAelU,GATC,EAUrB92C,KAAKirD,WAAaF,GATC,EAWnB/qD,KAAKi7B,uBAAyB,EAC9Bj7B,KAAKqmC,0BAA2B,EAChCrmC,KAAK4lC,YAAc,CAAC,CAKvB,EAGLklB,GAAQI,qBAtBqB,EAuB7BJ,GAAQK,mBAtBmB,EAwB3B,UCdA,GAXI,0GAAc,SACVnrD,KAAKorD,YAAc,KACnBprD,KAAKg5B,eAAiB,KACtBh5B,KAAK+6B,OAAS,KACd/6B,KAAKiyB,UAAY,EACjBjyB,KAAK7H,MAAQ,GACb6H,KAAKyqD,YAAc,GACnBzqD,KAAKypD,uBAAyB,CACjC,ECGL,GAXI,0GAAc,SACVzpD,KAAK8rB,GAAK,KACV9rB,KAAKqrD,QAAS,EACdrrD,KAAK9C,KAAO,UACZ8C,KAAKsrD,kBAAoB,KACzBtrD,KAAKurD,cAAgB,KACrBvrD,KAAK0qD,iBAAmB94B,IACxB5xB,KAAKwrD,UAAY,IACpB,ECCL,GATI,0GAAc,SACVxrD,KAAKyrD,uBAAyB,KAC9BzrD,KAAK0rD,4BAA8B,GACnC1rD,KAAK2rD,kBAAmB,EACxB3rD,KAAK4rD,UAAY,KACjB5rD,KAAK6rD,mBAAoB,CAC5B,6KCUL,GAjBMC,WACF,0GAAc,SACV9rD,KAAKyqD,YAAc,KACnBzqD,KAAK7H,MAAQ,KACb6H,KAAK8rB,GAAK,IACb,0CAED,SAAKhpB,GAMD,OALIA,IACA9C,KAAKyqD,YAAc3nD,EAAK2nD,YAAc3nD,EAAK2nD,YAAc,KACzDzqD,KAAK7H,MAAQ2K,EAAK3K,MAAQ2K,EAAK3K,MAAQ,KACvC6H,KAAK8rB,GAAKhpB,EAAKgpB,GAAKhpB,EAAKgpB,GAAK,MAE3B9rB,IACV,0BAdC8rD,yBCKN,SAASC,KAoBL,MAJW,CACPC,SALJ,SAAkBC,EAAMC,GACpB,OAAOC,KAAUF,EAAMC,EAC1B,EAOJ,CAEDH,GAAYt+B,sBAAwB,cACpC,OAAeE,EAAAA,oBAAiCo+B,ICtBhD,SAASK,KAEL,IAAIC,EAEEC,EAAc,yBACdC,EAAe,gBACfC,EAAgB,eAChBC,EAAc,wCAadC,EAAoB,SAAC98B,EAAK+8B,GAC5B,IACI,OAAO,IAAIphD,OAAO8pC,IAAIzlB,EAAK+8B,GAAS/lD,UAGvC,CAFC,MAAOwB,GACL,OAAOwnB,CACV,CACJ,EAeKg9B,EAAkB,SAACh9B,EAAK+8B,GAC1B,IAAIE,EAAmBC,EAEvB,IAAKH,EACD,OAAO/8B,EAGX,IAAKiW,EAAWjW,GACZ,OAAOA,EAGPm9B,EAAen9B,KACfi9B,EAAmBG,GAGnBC,EAAiBr9B,KACjBi9B,EAAmBK,GAGvB,IAAMvpC,EAAOkpC,EAAiBF,GACxBQ,EAC+B,MAAjCxpC,EAAK9qB,OAAO8qB,EAAK9rB,OAAS,IACR,MAAlB+3B,EAAI/2B,OAAO,GACP,IAAM,GAEd,MAAO,CAAC8qB,EAAMiM,GAAKx1B,KAAK+yD,EAC3B,EAoBD,SAASL,EAAal9B,GAClB,IAAMw9B,EAAax9B,EAAIr3B,QAAQ,KACzBkpB,EAAiBmO,EAAIh3B,YAAY,KAEvC,OAAoB,IAAhBw0D,EAEI3rC,IAAmB2rC,EAAa,EACzBx9B,IAGe,IAAtBA,EAAIr3B,QAAQ,OACZq3B,EAAMA,EAAInW,UAAU,EAAGmW,EAAIr3B,QAAQ,OAGhCq3B,EAAInW,UAAU,EAAGgI,EAAiB,IAGtC,EACV,CAUD,SAASurC,EAAYp9B,GACjB,IAAMj4B,EAAUi4B,EAAI52B,MAAMyzD,GAE1B,OAAI90D,EACOA,EAAQ,GAGZ,EACV,CAsBD,SAASu1D,EAAYt9B,GACjB,IAAMj4B,EAAUi4B,EAAI52B,MAAMszD,GAE1B,OAAI30D,EACOA,EAAQ,GAGZ,EACV,CASD,SAASkuC,EAAWjW,GAChB,OAAQ08B,EAAY72C,KAAKma,EAC5B,CASD,SAASm9B,EAAen9B,GACpB,OAAOiW,EAAWjW,IAA0B,MAAlBA,EAAI/2B,OAAO,EACxC,CASD,SAASo0D,EAAiBr9B,GACtB,OAA6B,IAAtBA,EAAIr3B,QAAQ,KACtB,CAoDD,OAzKA,WACI,IACc,IAAIgT,OAAO8pC,IAAI,IAAK,YAC9BgX,EAAkBK,CAKrB,CAJC,MAAOtkD,GAER,CALD,QAMIikD,EAAkBA,GAAmBO,CACxC,CACJ,CAiJD5D,GAEiB,CACb8D,aAAcA,EACdE,YAAaA,EACbE,YAAaA,EACbrnB,WAAYA,EACZknB,eAAgBA,EAChBE,iBAAkBA,EAClBI,UApCJ,SAAmBz9B,GACf,OAAO28B,EAAa92C,KAAKma,EAC5B,EAmCG09B,QA1BJ,SAAiB19B,GACb,OAAO48B,EAAc/2C,KAAKma,EAC7B,EAyBG29B,eArGJ,SAAwB39B,GAEpB,MADe,+BAA+BzI,KAAKyI,GACnC,GAAGnW,UAAU,EAChC,EAmGGzM,QAhBJ,SAAiB4iB,EAAK+8B,GAClB,OAAON,EAAgBz8B,EAAK+8B,EAC/B,EAkBJ,CAEDP,GAAgB3+B,sBAAwB,kBACxC,OAAeE,EAAAA,oBAAiCy+B,ICjPhD,SAASoB,KAEL,IACIC,EACAC,EAAa,GACXx+B,EAAUlvB,KAAKkvB,QA4BrB,SAASy+B,EAAaC,EAAch+B,EAAK+8B,GACrC,IAAIkB,EA3BR,SAAkBj+B,GACd,IAAIrxB,EACJ,IAAKA,EAAI,EAAGA,EAAImvD,EAAW71D,OAAQ0G,IAE/B,GADYmvD,EAAWnvD,GAAG0oB,MAChBxR,KAAKma,GACX,OAAO89B,EAAWnvD,GAAGsvD,MAG7B,OAAOJ,CACV,CAkBeK,CAASnB,GAAW/8B,GAChC,OAAOi+B,GAA0C,mBAAzBA,EAAMD,GAAgCC,EAAMD,GAAch+B,EAAK+8B,GAAWc,EAAgBG,GAAch+B,EAAK+8B,EACxI,CAmID,OApJIc,EAAkBrB,GAAgBl9B,GAASM,cAsIpC,CACPu+B,iBA7HJ,SAA0B9mC,EAAO4mC,GAC7BH,EAAW31D,KAAK,CAACkvB,MAAOA,EAAO4mC,MAAOA,GACzC,EA4HGf,aA9GJ,SAAsBl9B,GAClB,OAAO+9B,EAAa,eAAgB/9B,EACvC,EA6GGo9B,YAnGJ,SAAqBp9B,GACjB,OAAO+9B,EAAa,cAAe/9B,EACtC,EAkGGs9B,YA7EJ,SAAqBt9B,GACjB,OAAO+9B,EAAa,cAAe/9B,EACtC,EA4EGiW,WAnEJ,SAAoBjW,GAChB,OAAO+9B,EAAa,aAAc/9B,EACrC,EAkEGm9B,eAzDJ,SAAwBn9B,GACpB,OAAO+9B,EAAa,iBAAkB/9B,EACzC,EAwDGq9B,iBA/CJ,SAA0Br9B,GACtB,OAAO+9B,EAAa,mBAAoB/9B,EAC3C,EA8CGy9B,UApCJ,SAAmBz9B,GACf,OAAO+9B,EAAa,YAAa/9B,EACpC,EAmCG09B,QA1BJ,SAAiB19B,GACb,OAAO+9B,EAAa,UAAW/9B,EAClC,EAyBG29B,eA9FJ,SAAwB39B,GACpB,OAAO+9B,EAAa,iBAAkB/9B,EACzC,EA6FG5iB,QAhBJ,SAAiB4iB,EAAK+8B,GAClB,OAAOgB,EAAa,UAAW/9B,EAAK+8B,EACvC,EAkBJ,CAEDa,GAAS//B,sBAAwB,WACjC,IACA,GADgBE,EAAAA,oBAAiC6/B,upBCrCjD,GADa,IA3IPQ,SAAAA,8oBACF,aAAc,mHACV,gBAKKC,2CAA6C,GAKlD,EAAKC,2CAA6C,GAKlD,EAAKC,wCAA0C,GAK/C,EAAKC,+BAAiC,GAKtC,EAAKC,4BAA8B,GAKnC,EAAKC,2CAA6C,GAKlD,EAAKC,wCAA0C,GAK/C,EAAKC,yCAA2C,GAKhD,EAAKC,kBAAoB,GAKzB,EAAKC,kBAAoB,GAKzB,EAAKC,8BAAgC,GAKrC,EAAKC,kCAAoC,GAKzC,EAAKC,gCAAkC,GAKvC,EAAKC,gCAAkC,GAKvC,EAAKC,4BAA8B,GAKnC,EAAKC,+BAAiC,GAKtC,EAAKC,sCAAwC,GAK7C,EAAKC,6BAA+B,GAKpC,EAAKC,6BAA+B,GAKpC,EAAKC,iCAAmC,GAKxC,EAAKC,+BAAiC,GAMtC,EAAKC,mCAAqC,GAK1C,EAAKC,kCAAoC,GAEzC,EAAKC,8CAAgD,sBACrD,EAAKC,8CAAgD,4BACrD,EAAKC,2CAA6C,iCAClD,EAAKC,qCAAuC,yBAC5C,EAAKC,mCAAqC,gCAC1C,EAAKC,kCAAoC,yCACzC,EAAKC,+BAAiC,+CACtC,EAAKC,2CAA6C,kBAClD,EAAKC,4CAA8C,gCACnD,EAAKC,qBAAuB,uBAC5B,EAAKC,qBAAuB,sCAC5B,EAAKC,iCAAmC,qBACxC,EAAKC,qCAAuC,+BAC5C,EAAKC,mCAAqC,6BAC1C,EAAKC,+BAAiC,kBACtC,EAAKC,qCAAuC,0CAtIlC,CAuIb,UAxICvC,CAAengC,ICerB,GAhBI,0GAAc,SACV7tB,KAAKwwD,QAAU,EACfxwD,KAAK45B,MAAQ,EACb55B,KAAK2pD,OAAS,EACd3pD,KAAKywD,SAAW,EAChBzwD,KAAK0wD,UAAY,EACjB1wD,KAAK2wD,aAAe,EACpB3wD,KAAK4wD,cAAgB,EACrB5wD,KAAK06B,YAAc,EACnB16B,KAAKq7B,gBAAkB,EACvBr7B,KAAKiyB,UAAY,EACjBjyB,KAAK6wD,YAAc,GACnB7wD,KAAK8rB,GAAK,EACb,6KCmGL,GAjHMglC,WACF,WAAYC,GAKR,+FALiB,SACjB/wD,KAAK3D,OAAS00D,EAAQ5xD,QACtBa,KAAK9C,KAAO6zD,EAAQ7zD,KACpB8C,KAAKgB,KAAO+vD,EAAQ/vD,KACpBhB,KAAKR,MAAQ,GACTuxD,EAAQvxD,MACR,IAAK,IAAIjB,EAAI,EAAGA,EAAIwyD,EAAQvxD,MAAM3H,OAAQ0G,IACtCyB,KAAKR,MAAMzH,KAAK,IAAI+4D,EAAOC,EAAQvxD,MAAMjB,KAKjD,OAFAyB,KAAKgxD,YAAa,EAEVD,EAAQ7zD,MACZ,IAAK,OAKD,GAJA8C,KAAKiyB,UAAY8+B,EAAQ9+B,UACzBjyB,KAAKixD,2BAA6BF,EAAQE,2BAC1CjxD,KAAKkxD,aAAeH,EAAQG,aAC5BlxD,KAAKmxD,WAAaJ,EAAQI,WACtBJ,EAAQI,WAAY,CACpBnxD,KAAKmxD,WAAa,GAClB,IAAK,IAAI5yD,EAAI,EAAGA,EAAIwyD,EAAQI,WAAWt5D,OAAQ0G,IAAK,CAChD,IAAIoG,EAAY,CACZC,eAAgBmsD,EAAQI,WAAW5yD,GAAGqG,eACtCC,gBAAiBksD,EAAQI,WAAW5yD,GAAGsG,gBACvCusD,oBAAqBL,EAAQI,WAAW5yD,GAAG6yD,qBAE/CpxD,KAAKmxD,WAAWp5D,KAAK4M,EACxB,CACJ,CACD,MACJ,IAAK,OACD3E,KAAK8rB,GAAKilC,EAAQjlC,GAClB9rB,KAAKnC,QAA8B,IAApBkzD,EAAQlzD,QAAgB,EAAI,EAC3CmC,KAAK7H,MAAQ44D,EAAQ54D,MACrB6H,KAAKiyB,UAAY8+B,EAAQ9+B,UACzBjyB,KAAKqxD,cAAgBN,EAAQM,cAC7BrxD,KAAKsxD,wBAA8C,IAApBP,EAAQlzD,QAAgBkzD,EAAQQ,kBAAoBR,EAAQO,wBAC3FtxD,KAAKwxD,eAAiBT,EAAQS,eAC9BxxD,KAAKyxD,aAAeV,EAAQU,aAC5B,MACJ,IAAK,OACDzxD,KAAKiyB,UAAY8+B,EAAQ9+B,UACzB,MACJ,IAAK,OACDjyB,KAAK0xD,gBAAkBX,EAAQW,gBAC/B,MACJ,IAAK,OACD1xD,KAAKsE,YAAcysD,EAAQzsD,YAC3BtE,KAAK2xD,QAAUZ,EAAQY,QACvB,MACJ,IAAK,OACD3xD,KAAK4xD,iBAAmBb,EAAQa,iBAChC5xD,KAAK6xD,yBAA2Bd,EAAQc,yBACxC7xD,KAAK8xD,wBAA0Bf,EAAQe,wBACvC9xD,KAAK+xD,oBAAsBhB,EAAQgB,oBACnC/xD,KAAKgyD,qBAAuBjB,EAAQiB,qBACpChyD,KAAKlC,MAAQizD,EAAQjzD,MACrB,MACJ,IAAK,OACDkC,KAAKnC,QAAUkzD,EAAQlzD,QACvBmC,KAAKiyD,oBAAsBlB,EAAQkB,oBACnCjyD,KAAKlC,MAAQizD,EAAQjzD,MACrB,MACJ,IAAK,OAMD,GALAkC,KAAKyE,aAAessD,EAAQtsD,aAC5BzE,KAAKkyD,mBAAqBnB,EAAQmB,mBAClClyD,KAAKmyD,YAAcpB,EAAQoB,YAC3BnyD,KAAKlC,MAAQizD,EAAQjzD,MACrBkC,KAAKoyD,QAAUrB,EAAQqB,QACnBrB,EAAQqB,QAAS,CACjBpyD,KAAKoyD,QAAU,GACf,IAAK,IAAI7zD,EAAI,EAAG8vC,EAAK0iB,EAAQqB,QAAQv6D,OAAQ0G,EAAI8vC,EAAI9vC,IAAK,CACtD,IAAIqH,EAAS,CACTysD,YAAatB,EAAQqB,QAAQ7zD,GAAG8zD,YAChCC,gBAAiBvB,EAAQqB,QAAQ7zD,GAAG+zD,gBACpCC,+BAAgCxB,EAAQqB,QAAQ7zD,GAAGg0D,gCAEvDvyD,KAAKoyD,QAAQr6D,KAAK6N,EACrB,CACJ,CACD,MACJ,IAAK,OACD5F,KAAKnC,QAAUkzD,EAAQlzD,QACvBmC,KAAKwyD,mBAAqBzB,EAAQyB,mBAClCxyD,KAAKyyD,kBAAoB1B,EAAQ0B,kBACjCzyD,KAAK0yD,mBAAqB3B,EAAQ2B,mBAClC1yD,KAAK2yD,WAAa5B,EAAQ4B,WAC1B3yD,KAAKlC,MAAQizD,EAAQjzD,MAGhC,iDAED,SAAYZ,GACR,IAAK,IAAIqB,EAAI,EAAGA,EAAIyB,KAAKR,MAAM3H,OAAQ0G,IACnC,GAAIyB,KAAKR,MAAMjB,GAAGrB,OAASA,EACvB,OAAO8C,KAAKR,MAAMjB,EAG7B,8BAED,SAAcrB,GAEV,IADA,IAAIsC,EAAQ,GACHjB,EAAI,EAAGA,EAAIyB,KAAKR,MAAM3H,OAAQ0G,IAC/ByB,KAAKR,MAAMjB,GAAGrB,OAASA,GACvBsC,EAAMzH,KAAKiI,KAAKR,MAAMjB,IAG9B,OAAOiB,CACV,0BA7GCsxD,GCAN,SAAS8B,KAEL,IACIC,EAkBJ,SAASC,EAAS51D,GACd,IAAIsC,EAAQ,GAEZ,IAAKtC,IAAS21D,GAAmD,mBAA3BA,EAAc1yD,SAChD,OAAOX,EAMX,IAHA,IACIN,EADA6xD,EAAU8B,EAAc1yD,SAASjD,GAG5BqB,EAAI,EAAG8vC,EAAK0iB,EAAQl5D,OAAQ0G,EAAI8vC,EAAI9vC,KACzCW,EAAM6zD,EAAoBhC,EAAQxyD,MAG9BiB,EAAMzH,KAAKmH,GAInB,OAAOM,CACV,CAuBD,SAASuzD,EAAoBhC,GACzB,IAAKA,EAAS,OAAO,KAErB,IAAI7xD,EAAM,IAAI4xD,GAAOC,GAMrB,OAJIA,EAAQj2D,eAAe,iBACvBoE,EAAI8xD,YAAcD,EAAQhuD,aAGvB7D,CACV,CASD,MAPW,CACP8zD,OAlEJ,SAAgB91D,GACZ,OAAKA,GAAS21D,GAAkBA,EAAcrzD,OAAyC,IAA/BqzD,EAAcrzD,MAAM3H,QAAgD,mBAAxBg7D,EAAc3yD,MAE3G6yD,EAAoBF,EAAc3yD,MAAMhD,IAFgG,IAGlJ,EA+DG41D,SAAUA,EACVG,QAhCJ,SAAiB96D,GACb06D,EAAgB16D,CACnB,EA+BG+6D,WAzBJ,WACI,IAAKL,IAAkBA,EAAcrzD,QAAUqzD,EAAcrzD,MAAM3H,OAAQ,OAAO,KAElF,IACI2H,EAAQszD,EADDD,EAAcrzD,MAAMqzD,EAAcrzD,MAAM3H,OAAS,GAAGqF,MAG/D,OAAOsC,EAAM3H,OAAS,EAAI2H,EAAMA,EAAM3H,OAAS,GAAK,IACvD,EAsBJ,CACD+6D,GAAQnlC,sBAAwB,UAChC,OAAeE,EAAAA,gBAA6BilC,eC7E5C,GAPI,WAAYlK,EAAqBH,EAAOvnD,gGAAM,SAC1ChB,KAAK0oD,oBAAsBA,EAC3B1oD,KAAKuoD,MAAQA,EACbvoD,KAAKgB,KAAOA,CACf,ECDL,SAASmyD,KAEL,IAAIvuB,EACArmB,EACA2Q,EAAUlvB,KAAKkvB,QAWnB,SAAS11B,EAAMsJ,GACX,IAAKA,EAAM,OAAO,UAEK9K,IAAnB8K,EAAKswD,YACLtwD,EAAKswD,UAAY,GAGrB,IAAIC,EAAat2D,GAAAA,YAAqB+F,GAClCwwD,EAAcV,GAAQ1jC,GAASxxB,SAInC,OAFA41D,EAAYL,QAAQI,GAEbC,CACV,CAmJD,SAASC,EAAYzwD,EAAMzG,GACvB,OAAOyG,EAAKzG,EAAS,KAAO,EACvByG,EAAKzG,EAAS,IAAM,IAAO,EAC3ByG,EAAKzG,EAAS,IAAM,KAAQ,EAC5ByG,EAAKzG,IAAW,KAAQ,CAChC,CAED,SAASm3D,EAAgB1wD,EAAMzG,GAC3B,OAAO5C,OAAOkF,aAAamE,EAAKzG,MAC5B5C,OAAOkF,aAAamE,EAAKzG,MACzB5C,OAAOkF,aAAamE,EAAKzG,MACzB5C,OAAOkF,aAAamE,EAAKzG,GAChC,CAqFD,OAXAkiB,EAAW,CACP/kB,MAAAA,EACA8uD,2BAhOJ,SAAoCmL,EAAO9yD,EAAQtE,GAM/C,QALerE,IAAXqE,IACAA,EAAS,IAIRsE,GAAUtE,EAAS,GAAKsE,EAAOnC,WAChC,OAAO,IAAIk1D,GAAiB,GAAG,GAMnC,IAHA,IACIC,EADE7wD,EAAQnC,aAAkB+P,YAAe,IAAIjQ,WAAWE,GAAUA,EAEpE+nD,EAAsB,EACnBrsD,EAASyG,EAAKtE,YAAY,CAC7B,IAAMo1D,EAAUL,EAAYzwD,EAAMzG,GAC5Bw3D,EAAUL,EAAgB1wD,EAAMzG,EAAS,GAE/C,GAAgB,IAAZu3D,EACA,MAGAv3D,EAASu3D,GAAW9wD,EAAKtE,aACrBi1D,EAAMl7D,QAAQs7D,IAAY,EAC1BF,EAAU,IAAID,GAAiBr3D,GAAQ,EAAMu3D,GAE7ClL,EAAsBrsD,EAASu3D,GAIvCv3D,GAAUu3D,CACb,CAED,OAAKD,GACM,IAAID,GAAiBhL,GAAqB,EAIxD,EA4LGoL,0BAhGJ,SAAmCC,GAC/B,IAAIC,EAAUx6D,EAAMu6D,GAChBE,EAAUD,EAAUA,EAAQhB,OAAO,aAAUh7D,EAEjD,OAAOi8D,EAAUA,EAAQhiC,UAAYL,GACxC,EA4FGsiC,eA3LJ,SAAwBH,GACpB,IAAKA,GAAwB,IAAlBA,EAAGv1D,WACV,MAAO,CAAC21D,WAAY,GAAIC,mBAAoBxiC,IAAKyiC,cAAeziC,IAAK0iC,aAAc1iC,KAEvF,IAMI2iC,EAEAC,EACAC,EACAC,EACAP,EACAvuD,EACArH,EAAG4W,EAAGE,EAAGlM,EAAGwrD,EAAG5rD,EACf6rD,EACAR,EACAE,EACAD,EAjBAL,EAAUx6D,EAAMu6D,GAEhBc,EAAYb,EAAQlB,SAAS,QAE7BgC,EAAYd,EAAQlB,SAAS,QAejCwB,EAAeN,EAAQlB,SAAS,QAAQj7D,OACxCu8D,EAAqBU,EAAUA,EAAUj9D,OAAS,GAAG65D,gBACrD8C,EAAc,EAEdL,EAAa,GACb,IAAIY,GAAa,EACbC,GAAkB,EACtB,IAAK7rD,EAAI,EAAGA,EAAI0rD,EAAUh9D,OAAQsR,IAAK,CACnC,IAAI8rD,EAAUJ,EAAU1rD,GAEpB+rD,EAAYD,EAAQE,cAAc,QACtC,IAAKhgD,EAAI,EAAGA,EAAI+/C,EAAUr9D,OAAQsd,IAAK,CACnC,IAAIigD,EAAUF,EAAU//C,GAEpBkgD,EAAUD,EAAQE,YAAY,QAE9BC,EAAUH,EAAQE,YAAY,QAClCZ,EAAYa,EAAQtD,oBAEpB,IAAIuD,EAAYJ,EAAQD,cAAc,QAElCM,EAAYL,EAAQD,cAAc,QACtC,IAAK9/C,EAAI,EAAGA,EAAImgD,EAAU39D,OAAQwd,IAAK,CACnC,IAAIqgD,EAAUF,EAAUngD,GAIxB,IAHAm/C,EAAckB,EAAQjxD,aACtBmwD,GAAcS,EAAQzD,kBAAoB,IAAM8D,EAAQvD,aAAe,GAElE5zD,EAAI,EAAGA,EAAIi2D,EAAaj2D,IAAK,CAE9Bg2D,OAA6Cv8D,KAD7C4N,EAAS8vD,EAAQtD,QAAQ7zD,IACA+zD,gBAAiC1sD,EAAO0sD,gBAAkB+C,EAAQvD,wBAC3F2C,OAAqCz8D,IAAvB4N,EAAOysD,YAA6BzsD,EAAOysD,YAAcgD,EAAQtD,oBAE/E,IAAI4D,EAAa,CACb,IAAOjB,EACP,IAAQA,QAH6D18D,IAA1C4N,EAAO2sD,+BAAgD3sD,EAAO2sD,+BAAiC,GAI1H,SAAYgC,EACZ,OAAUU,EAAQ54D,OAASu4D,EAC3B,KAAQH,EACR,SAAY,CAACA,IAEjB,GAAIgB,EACA,IAAKd,EAAI,EAAGA,EAAIc,EAAU59D,OAAQ88D,IAAK,CACnC,IAAIiB,EAAUH,EAAUd,GAKxB,GAJII,EAAaa,EAAQtxD,YAAc,GAAM/F,EAAIy2D,IAC7CD,IACAC,GAAkBY,EAAQjE,QAAQoD,GAAWc,cAE7Ct3D,GAAKy2D,EAAgB,CACrBW,EAAWG,SAAW,GACtB,IAAIr0D,EAAQm0D,EAAQjE,QAAQoD,GAC5B,IAAKhsD,EAAI,EAAGA,EAAItH,EAAM4D,gBAAiB0D,IACnC4sD,EAAWG,SAAS/9D,KAAK0J,EAAMs0D,WAAWhtD,GAAGitD,eAEpD,CACJ,CAEL7B,EAAWp8D,KAAK49D,GAChBf,GAAcH,EACdC,GAAaH,CAChB,CACJ,CACDF,EAAgBK,EAAYa,EAAQtD,mBACvC,CACJ,CACD,MAAO,CAACkC,WAAYA,EAAYC,mBAAoBA,EAAoBC,cAAeA,EAAeC,aAAcA,EACvH,EAoGG2B,cA7EJ,SAAuBnzD,GACnB,IAAIozD,EAAY,KAIVlC,EAAUx6D,EAAMsJ,GAEtB,IAAKkxD,EACD,OAAOkC,EAGX,IAAMC,EAAOnC,EAAQhB,OAAO,QACtBoD,EAAOpC,EAAQhB,OAAO,QAY5B,OAVApuB,EAAOK,MAAM,iCAETmxB,GAAQA,EAAKpF,aAGbkF,GAFQC,EAAOA,EAAK95D,OAAS+5D,EAAK/5D,QAEd,KADd+5D,EAAK/5D,OAAS+5D,EAAKp1D,KAAO,GAGhC4jC,EAAOK,MAAM,qCAAuCixB,IAGjDA,CACV,EAqDGG,aA5CJ,SAAsB5C,EAAO9yD,EAAQtE,GAKjC,QAJerE,IAAXqE,IACAA,EAAS,IAGRsE,GAAUtE,EAAS,GAAKsE,EAAOnC,WAChC,OAAO,IAAIk1D,GAAiB,GAAG,GAMnC,IAHA,IACIC,EADE7wD,EAAQnC,aAAkB+P,YAAe,IAAIjQ,WAAWE,GAAUA,EAEpE+nD,EAAsB,EACnBrsD,EAASyG,EAAKtE,YAAY,CAC7B,IAAMo1D,EAAUL,EAAYzwD,EAAMzG,GAC5Bw3D,EAAUL,EAAgB1wD,EAAMzG,EAAS,GAE/C,GAAgB,IAAZu3D,EACA,MAGAv3D,EAASu3D,GAAW9wD,EAAKtE,aACrBi1D,EAAMl7D,QAAQs7D,IAAY,EAC1BF,EAAU,IAAID,GAAiBr3D,GAAQ,EAAMu3D,EAASC,GAEtDnL,EAAsBrsD,EAASu3D,GAIvCv3D,GAAUu3D,CACb,CAED,OAAKD,GACM,IAAID,GAAiBhL,GAAqB,EAIxD,GA5PG9jB,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAyQ7CA,CACV,CACD40C,GAAU1lC,sBAAwB,YAClC,OAAeE,EAAAA,oBAAiCwlC,ICrRhD,SAASmD,GAAuBh/C,EAAQ6iB,GAGpC,IAAMF,GADN3iB,EAASA,GAAU,CAAC,GACa2iB,kBAC3B2S,EAAct1B,EAAOs1B,YAI3B,SAASoC,IACL,IAAK/U,EACD,MAAM,IAAI7hC,MAAMswC,EAAAA,qBAEvB,CA4DD,SAAS6tB,EAAgBv9B,EAAgBw9B,GACrC,IAQI9oB,EACA+oB,EACAl4D,EACA6M,EACA+J,EACAuhD,EACA/6B,EAdEhY,EAAOqV,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOg+D,iBAClN39B,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOi+D,YACvMC,EAAWlzC,EAAKmzC,gBAChBn7D,EAAOgoB,EAAKozC,mBAEdr7B,EAAO,EACPs7B,GAAe,EAUnBr7B,EAAa3C,EAAe/G,UAG5B,IAAIglC,GAAgB,EAEpB,IAAK14D,EAAI,EAAG6M,GAJZsiC,EAAYmpB,EAASK,WAIOr/D,OAAQ0G,EAAI6M,IAAQ6rD,EAAe14D,IAmB3D,IAjBAm4D,EAAS,GADTD,EAAO/oB,EAAUnvC,IAERzD,eAAe,OACpB47D,EAASD,EAAKztD,GAIdytD,EAAK37D,eAAe,OACpB4gC,EAAO+6B,EAAK3tD,GAKZ4tD,EAAS,IAETA,EAASS,EAAkCn+B,EAD1B0U,EAAUnvC,EAAI,GACsCk4D,EAAM96B,EAAYD,EAAOC,IAG7FxmB,EAAI,EAAGA,GAAKuhD,IAAWO,EAAe9hD,KAGvC8hD,EAAgBT,EAAS96B,EAAM/X,EAAMhoB,EAAM86D,EAAM96B,IAFjDq7B,EAE0Ez4D,MAGtEy6B,EAAeqC,gBAAkBo7B,EAAKjsC,EAAImR,GAG9CD,GAAQ+6B,EAAKjsC,CAGxB,CAED,SAAS2sC,EAAkCn+B,EAAgBo+B,EAAUX,EAAM96B,EAAYE,GACnF,IAAIw7B,EAEJ,GAAID,GAAYA,EAASt8D,eAAe,KACpCu8D,EAAgBD,EAAStuD,EAAI6yB,OAE7B,IACI,IAAI27B,EAAkB,EACtB,GAAK5vD,MAAMsxB,EAAe8B,WAAWC,OAAO5+B,QAAWuL,MAAMsxB,EAAe8B,WAAWC,OAAO/I,YAAagJ,SAAShC,EAAe8B,WAAWC,OAAO/I,UAG9I,CAEH,IAAMulC,EAAY3qB,EAAY6B,oBAC9B6oB,EAAmB5vD,MAAM6vD,EAAU10C,KAAuB,EAAhB00C,EAAU10C,GACvD,MALGy0C,EAAkBt+B,EAAe8B,WAAWC,OAAO5+B,MAAQ68B,EAAe8B,WAAWC,OAAO/I,SAMhGqlC,EAAgBp9B,EAAkBuB,kCAAkC87B,EAAiBt+B,GACrFA,EAAeqC,gBAAkBo7B,EAAKjsC,EAAImR,CAG7C,CAFC,MAAOvzB,GACLivD,EAAgB,CACnB,CAGL,OAAO70D,KAAKk+C,IAAIl+C,KAAKg1D,MAAMH,EAAgBx7B,IAAe46B,EAAKjsC,EAAImR,IAAe,EAAG,EACxF,CA0GD,MANW,CACPiL,kBAlGJ,SAA2B5N,EAAgBrgC,EAAO8+D,GAG9C,GAFAzoB,KAEKhW,EACD,OAAO,KAGX,IAAI4B,EAAU,KACV2tB,GAAQ,EAiCZ,OA/BAgO,EAAgBv9B,GAAgB,SAAU0C,EAAM/X,EAAMhoB,EAAM86D,EAAM96B,EAAYq7B,EAAaz4D,GACvF,GAAIgqD,GAASkP,EAAkB,EAAG,CAC9B,IAAI7+B,EAAQjV,EAAKiV,MACbD,EAAa89B,EAAK99B,WAmBtB,OAjBIh9B,IACAi9B,EAAQj9B,EAAK4C,GAAGq6B,OAAS,GACzBD,EAAah9B,EAAK4C,GAAGo6B,YAGzBiC,EAAUa,EACNxB,EACAE,EACAnB,EACA0C,EACA+6B,EAAKjsC,EACLmR,EACA/C,EACAD,EACAq+B,EACAP,EAAK76B,YAEF,CACV,CAKD,OALWF,GAAS+7B,EAAkB97B,EAAwB,GAAT86B,EAAKjsC,IAEtD+9B,GAAQ,IAGL,CACV,IAEM3tB,CACV,EAyDG6L,iBAvDJ,SAA0BzN,EAAgB0+B,GAGtC,GAFA1oB,KAEKhW,EACD,OAAO,UAGWhhC,IAAlB0/D,IACAA,EAAgB,MAGpB,IAAI98B,EAAU,KACR+8B,EAAoB19B,EAAkBuB,kCAAkCk8B,EAAe1+B,GAkC7F,OAhCAu9B,EAAgBv9B,GAAgB,SAAU0C,EAAM/X,EAAMhoB,EAAM86D,EAAM96B,EAAYq7B,EAAaz4D,GAIvF,IAAMq5D,EAgCHt8B,YAhCoCq8B,EAAoBh8B,GAgCtCk8B,YAAY,KA/BjC,GAAID,EAAmBl8B,EAAO+6B,EAAKjsC,GAAMotC,GAAmBl8B,EAAM,CAC9D,IAAI9C,EAAQjV,EAAKiV,MACbD,EAAa89B,EAAK99B,WAmBtB,OAjBIh9B,IACAi9B,EAAQj9B,EAAK4C,GAAGq6B,OAAS,GACzBD,EAAah9B,EAAK4C,GAAGo6B,YAGzBiC,EAAUa,EACNxB,EACAE,EACAnB,EACA0C,EACA+6B,EAAKjsC,EACLmR,EACA/C,EACAD,EACAq+B,EACAP,EAAK76B,YAEF,CACV,CAED,OAAO,CACV,IAEMhB,CACV,EASGiT,4BAhPJ,SAAqC7U,GACjC,IAAKA,EACD,OAAO,EAGX,IAQI0U,EACA+oB,EACAl4D,EACA6M,EACA+J,EACAuhD,EACA/6B,EAZEk7B,GAFO79B,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOg+D,iBAClN39B,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOi+D,aACvLE,gBAElBp7B,EAAO,EACPG,EAAa,EACbi8B,EAAoB,EAexB,IALAn8B,EAAa3C,EAAe/G,UAG5B7mB,GAFAsiC,EAAYmpB,EAASK,WAELr/D,OAEX0G,EAAI,EAAGA,EAAI6M,EAAK7M,IAoBjB,IAlBAm4D,EAAS,GADTD,EAAO/oB,EAAUnvC,IAERzD,eAAe,OACpB47D,EAASD,EAAKztD,GAIdytD,EAAK37D,eAAe,OAEpB+gC,GADAH,EAAO+6B,EAAK3tD,GACQ6yB,GAKpB+6B,EAAS,IAETA,EAASS,EAAkCn+B,EAD1B0U,EAAUnvC,EAAI,GACsCk4D,EAAM96B,EAAYE,IAGtF1mB,EAAI,EAAGA,GAAKuhD,EAAQvhD,IACrB2iD,IAGAj8B,GADAH,GAAQ+6B,EAAKjsC,GACOmR,EAK5B,MAAO,CAAEuM,iBAAkB4vB,EAAmB1vB,+BAAgCvM,EACjF,EA4LJ,CAEDy6B,GAAuB7oC,sBAAwB,yBAC/C,IACA,GADgBE,EAAAA,gBAA6B2oC,ICrQ7C,SAASyB,GAAuBzgD,EAAQ6iB,GAEpC,IAAMF,GADN3iB,EAASA,GAAU,CAAC,GACa2iB,kBAIjC,SAAS+U,IACL,IAAK/U,IAAsBA,EAAkBn/B,eAAe,6CACxD,MAAM,IAAI1C,MAAMswC,EAAAA,qBAEvB,CAkBD,SAAS9B,EAAkB5N,EAAgBrgC,GAGvC,GAFAq2C,KAEKhW,EACD,OAAO,KAGX,IAAMg/B,EAAWh/B,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOg+D,gBAG1Nh+D,EAAQ6J,KAAKk+C,IAAI/nD,EAAO,GAExB,IAAM0hC,EAAMe,EAAqBnB,EAAmBE,EAAWnB,EAAgBrgC,GAC/E,GAAI0hC,EAAK,CACLA,EAAIxB,gBAAkBr2B,KAAKikD,OAAO9tD,EAAQ,GAAKqgC,EAAeqC,gBAAkBrC,EAAe/G,UAAW,IAE1G,IAAIrC,EAAMooC,EAASp/B,MACnBhJ,EAAM0J,EAAwB1J,EAAK,SAAUyK,EAAIvB,mBACjDlJ,EAAM0J,EAAwB1J,EAAK,OAAQyK,EAAIxB,iBAC/CwB,EAAIzB,MAAQhJ,CACf,CAED,OAAOyK,CACV,CA4BD,MANW,CACPuM,kBAAAA,EACAH,iBAtBJ,SAA0BzN,EAAgB0+B,GAGtC,GAFA1oB,KAEKhW,EACD,OAAO,KAGX,IAAMhH,EAAWgH,EAAeqC,gBAEhC,GAAI3zB,MAAMsqB,GACN,OAAO,KAIX,IAAIimC,EAAah+B,EAAkBi+B,0CAA0Cl/B,EAAgB0+B,GAG7F,OAAO9wB,EAAkB5N,EAFXx2B,KAAKiB,MAAMw0D,EAAajmC,GAGzC,EAKG6b,4BAhEJ,SAAqC7U,GACjC,IAAMiP,EAA2B,CAAEC,iBAAkB,EAAGE,+BAAgCxW,KACxF,IAAKoH,EACD,OAAOiP,EAGX,IAAMjW,EAAWgH,EAAeqC,gBAOhC,OANI3zB,MAAMsqB,GACNiW,EAAyBC,iBAAmB,EAE5CD,EAAyBC,iBAAmB1lC,KAAKg1D,KAAKx+B,EAAe8B,WAAWC,OAAO/I,SAAWA,GAG/FiW,CACV,EAsDJ,CAED8vB,GAAuBtqC,sBAAwB,yBAC/C,IACA,GADgBE,EAAAA,gBAA6BoqC,ICnF7C,SAASI,GAAmB7gD,EAAQ6iB,GAGhC,IAAMF,GADN3iB,EAASA,GAAU,CAAC,GACa2iB,kBAIjC,SAAS+U,IACL,IAAK/U,IAAsBA,EAAkBn/B,eAAe,6CACxD,MAAM,IAAI1C,MAAMswC,EAAAA,qBAEvB,CAkBD,SAAS9B,EAAkB5N,EAAgBrgC,GAGvC,GAFAq2C,KAEKhW,EACD,OAAO,KAGX,IAAMr9B,EAAOq9B,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOi+D,YAChNxrD,EAAMzP,EAAKo7D,mBAAmBl/D,OAE9B6iC,EAAc1B,IAAmBtxB,MAAMsxB,EAAe0B,aAAe1B,EAAe0B,YAAc,EAClG09B,EAAmB51D,KAAKk+C,IAAIhmB,EAAc,EAAG,GAE7C29B,EAAgB71D,KAAKk+C,IAAI/nD,EAAQy/D,EAAkB,GAErDx9B,EAAU,KACd,GAAIy9B,EAAgBjtD,EAAK,CACrB,IAAM/D,EAAI1L,EAAKo7D,mBAAmBsB,IAElCz9B,EAAUQ,EAAqBnB,EAAmBE,EAAWnB,EAAgBrgC,MAEzEiiC,EAAQ/B,iBAAmB6B,EAAc/hC,EAAQ,GAAKqgC,EAAeqC,gBACrET,EAAQhC,MAAQvxB,EAAEuxB,MAAQvxB,EAAEuxB,MAAQ,GACpCgC,EAAQjC,WAAatxB,EAAEsxB,WACvBiC,EAAQlC,WAAarxB,EAAEqxB,WAE9B,CAED,OAAOkC,CACV,CA2BD,MANW,CACPgM,kBAAAA,EACAH,iBArBJ,SAA0BzN,EAAgB0+B,GAGtC,GAFA1oB,KAEKhW,EACD,OAAO,KAGX,IAAMhH,EAAWgH,EAAeqC,gBAEhC,GAAI3zB,MAAMsqB,GACN,OAAO,KAGX,IAAMimC,EAAah+B,EAAkBi+B,0CAA0Cl/B,EAAgB0+B,GAG/F,OAAO9wB,EAAkB5N,EAFXx2B,KAAKiB,MAAMw0D,EAAajmC,GAGzC,EAKG6b,4BArEJ,SAAqC7U,GACjC,IAAMiP,EAA2B,CAAEC,iBAAkB,EAAGE,+BAAgCxW,KAExF,IAAKoH,EACD,OAAOiP,EAGX,IAAMtsC,EAAOq9B,EAAe8B,WAAWC,OAAOiL,IAAI9Z,SAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,OAAOutC,sBAAsBlN,EAAe8B,WAAWniC,OAAOwtC,uBAAuBnN,EAAergC,OAAOi+D,YAChNl8B,EAAc1B,IAAmBtxB,MAAMsxB,EAAe0B,aAAe1B,EAAe0B,YAAc,EAClGr+B,EAASmG,KAAKk+C,IAAIhmB,EAAc,EAAG,GAIzC,OAFAuN,EAAyBC,iBAAmB7rC,EAASV,EAAKo7D,mBAAmBl/D,OAEtEowC,CACV,EA2DJ,CAEDkwB,GAAmB1qC,sBAAwB,qBAC3C,IACA,GADgBE,EAAAA,gBAA6BwqC,IC1F7C,SAASG,GAAkBhhD,GAGvB,IAAM2iB,GADN3iB,EAASA,GAAU,CAAC,GACa2iB,kBAIjC,SAAS+U,IACL,IAAK/U,IAAsBA,EAAkBn/B,eAAe,6CACxD,MAAM,IAAI1C,MAAMswC,EAAAA,qBAEvB,CAcD,SAAS9B,EAAkB5N,EAAgBrgC,GAGvC,GAFAq2C,KAEKhW,EACD,OAAO,KAGX,IACIqB,EADEjvB,EAAM4tB,EAAe2U,SAAW3U,EAAe2U,SAAS91C,QAAU,EAExE,GAAIc,EAAQyS,IACRivB,EAAMrB,EAAe2U,SAASh1C,KACnB0hC,EAAI1hC,QAAUA,EACrB,OAAO0hC,EAIf,IAAK,IAAI97B,EAAI,EAAGA,EAAI6M,EAAK7M,IAGrB,IAFA87B,EAAMrB,EAAe2U,SAASpvC,KAEnB87B,EAAI1hC,QAAUA,EACrB,OAAO0hC,EAIf,OAAO,IACV,CAiDD,MANW,CACPuM,kBAAAA,EACAH,iBA3CJ,SAA0BzN,EAAgB0+B,GACtC1oB,IAEA,IAAMr2C,EAKV,SAAwBqgC,EAAgB0C,GACpC,IAAK1C,EACD,OAAQ,EAGZ,IAIIu/B,EACAl+B,EACAm+B,EACAC,EACAl6D,EAREovC,EAAW3U,EAAe2U,SAC1BU,EAAKV,EAAWA,EAAS91C,OAAS,KAEpCg/C,GAAO,EAOX,GAAIlJ,GAAYU,EAAK,EACjB,IAAK9vC,EAAI,EAAGA,EAAI8vC,EAAI9vC,IAMhB,GAJAi6D,GADAn+B,EAAMsT,EAASpvC,IACNw6B,sBAIJ2C,GADL68B,GAFAE,EAAKp+B,EAAIrI,UAEM,IACSwmC,GACnB98B,EAAO68B,EAAYC,EAAKC,EAAK,CAC9B5hB,EAAMxc,EAAI1hC,MACV,KACH,CAIT,OAAOk+C,CACV,CApCiB6hB,CAAe1/B,EAAgB0+B,GAE7C,OAAO9wB,EAAkB5N,EAAgBrgC,EAC5C,EAsCGk1C,4BAnFJ,SAAqC7U,GACjC,IAAMiP,EAA2B,CAAEC,iBAAkB,EAAGE,+BAAgCxW,KAExF,OAAKoH,GAAmBA,EAAe2U,UAIvC1F,EAAyBC,iBAAmBlP,EAAe2U,SAAS91C,OAE7DowC,GALIA,CAMd,EA6EJ,CAEDqwB,GAAkB7qC,sBAAwB,oBAC1C,IACA,GADgBE,EAAAA,gBAA6B2qC,ICtG7C,SAASK,GAAmBrhD,GACxBA,EAASA,GAAU,CAAC,EAEpB,IAKIiH,EACAq6C,EANE1pC,EAAUlvB,KAAKkvB,QACf4d,EAAgBx1B,EAAOw1B,cACvB5vC,EAAOoa,EAAOpa,KACd27D,EAAwBvhD,EAAOuhD,sBAqCrC,SAASC,EAAkB9/B,GACvB,OAAOA,EAAiBA,EAAe2U,SAAWirB,EAAQ9rB,EAAc5Q,cAAgB08B,EAAQ5/B,EAAewN,iBAAmB,IACrI,CA+BD,OAXAjoB,EAAW,CACPupB,WAnDJ,SAAoB3N,GAChBy+B,EAAQ9rB,EAAcxQ,kBAAoBg6B,GAAuBpnC,GAASxxB,OAAO4Z,EAAQ6iB,GACzFy+B,EAAQ9rB,EAAc3Q,kBAAoB47B,GAAuB7oC,GAASxxB,OAAO4Z,EAAQ6iB,GACzFy+B,EAAQ9rB,EAAc1Q,cAAgB+7B,GAAmBjpC,GAASxxB,OAAO4Z,EAAQ6iB,GACjFy+B,EAAQ9rB,EAAc5Q,cAAgBo8B,GAAkBppC,GAASxxB,OAAO4Z,EAAQ6iB,EACnF,EA+CGoT,eA7CJ,SAAwBQ,EAAkBX,GACtC,OAAIA,EACOthC,QAAQkB,UAEZ6rD,EAAsBE,0BAA0B,CACnD//B,eAAgB+U,EAChBjc,UAAW50B,GAElB,EAsCGswC,kBApCJ,SAA2BO,EAAkBV,GACzC,OAAIA,EACOvhC,QAAQkB,UAEZ6rD,EAAsBG,eAAe,CACxCzP,SAAUxb,EAAiBwb,SAC3BvwB,eAAgB+U,EAChBjc,UAAW50B,GAElB,EA4BG0pC,kBAtBJ,SAA2B5N,EAAgBrgC,EAAO8+D,GAC9C,IAAMntC,EAASwuC,EAAkB9/B,GACjC,OAAO1O,EAASA,EAAOsc,kBAAkB5N,EAAgBrgC,EAAO8+D,GAAmB,IACtF,EAoBGhxB,iBAlBJ,SAA0BzN,EAAgB0C,GACtC,IAAMpR,EAASwuC,EAAkB9/B,GACjC,OAAO1O,EAASA,EAAOmc,iBAAiBzN,EAAgB0C,GAAQ,IACnE,EAgBGmS,4BAdJ,SAAqC7U,GACjC,IAAM1O,EAASwuC,EAAkB9/B,GACjC,OAAO1O,EAASA,EAAOujB,4BAA4B7U,GAAkB,CACjEkP,iBAAkB,EAClBE,+BAAgCxW,IAEvC,GAnDGgnC,EAAU,CAAC,EAgERr6C,CACV,CAEDo6C,GAAmBlrC,sBAAwB,qBAC3C,IACA,GADgBE,EAAAA,gBAA6BgrC,IC3EhCM,GAA4B,CAAC,mCACtC,+CAEJ,SAASC,GAAgB5hD,GACrB,IAYIiH,EACA46C,EACAC,EACAC,EACAtnC,EACAqT,EACAk0B,EACApV,EAnBEh1B,EAAUlvB,KAAKkvB,QACf6d,EAAUz1B,EAAOy1B,QACjB1H,EAAoB/tB,EAAO+tB,kBAC3BF,EAAa7tB,EAAO6tB,WACpBlL,EAAoB3iB,EAAO2iB,kBAC3BgL,EAAQ3tB,EAAO2tB,MACfD,EAAW1tB,EAAO0tB,SAClB3Q,EAAS/c,EAAO+c,OAChByY,EAAgBx1B,EAAOw1B,cAEvB5H,EAAWsoB,GAASt+B,GAASM,cA2EnC,SAAS+pC,EAAavgC,EAAgBwgC,GAClC,IAAMC,EAAQ,IAAIC,GAClBD,EAAM3tC,GAAKkN,EAAelN,GAC1B2tC,EAAMjJ,QAAUx3B,EAAe+M,UAC/B0zB,EAAM7/B,MAAQZ,EAAeY,MAC7B6/B,EAAM9P,OAAS3wB,EAAe2wB,OAC9B8P,EAAMhJ,SAAW,EACjBgJ,EAAM/I,UAAY,EAEd13B,EAAe2gC,qBACf3gC,EAAe2gC,oBAAoBxnB,SAAQ,SAAC74B,GACxC,GAAI2/C,GAA0B1gE,QAAQ+gB,EAAEmxC,cAAgB,GAAKnxC,EAAEnhB,MAAO,CAClE,IAAMyhE,EAAOtgD,EAAEnhB,MAAMM,MAAM,KACP,IAAhBmhE,EAAK/hE,QAAiB6P,MAAMkyD,EAAK,KAAQlyD,MAAMkyD,EAAK,MACpDH,EAAMhJ,SAAWjpD,SAASoyD,EAAK,GAAI,IACnCH,EAAM/I,UAAYlpD,SAASoyD,EAAK,GAAI,IAE3C,CACJ,IAGDJ,EACAp0B,EAAmBoI,kBAAkBxU,GAChC7rB,MAAK,SAACrK,IAmBnB,SAAmC22D,EAAOzgC,EAAgBl2B,GACtD,IAAI+2D,EAAQ,GACNlsB,EA8CV,SAA4B7qC,EAAMk2B,GAC9B,IAGIz6B,EACA6M,EACA/D,EACAgzB,EANEsT,EAAW,GACb12B,EAAQ,EAOZ,IAAK1Y,EAAI,EAAG6M,EAAMtI,EAAK6qC,SAAS91C,OAAQ0G,EAAI6M,EAAK7M,IAC7C8I,EAAIvE,EAAK6qC,SAASpvC,IAElB87B,EAAMoB,EACFxB,EACA8S,EAAQ+sB,eACR9gC,EACA3xB,EAAEsqB,UACFtqB,EAAE2qB,SACF3qB,EAAE4qB,UACF5qB,EAAEuxB,MACFvxB,EAAEsxB,WACF1hB,MAGA02B,EAAS51C,KAAKsiC,GACdA,EAAM,KACNpjB,KAGR,OAAO02B,CACV,CA5EoBosB,CAAmBj3D,EAAMk2B,GAC1CA,EAAe2U,SAAWA,EAC1B8rB,EAAMp+B,gBAAkBrC,EAAe2U,SAAS,GAAG3b,SAEnDynC,EAAMO,cAAgB,SAAUt+B,EAAM/rB,GAElC,IAAIsqD,EAAS,KACbJ,EAAM9oB,MAAK,SAAAmpB,GACP,GAAIA,EAAG/9D,OAASu/B,GAAQw+B,EAAGr3C,IAAM6Y,EAE7B,OADAu+B,EAASC,EAAGtqC,KACL,CAEd,IACGqqC,EACAtqD,EAASsqD,GAETjhC,EAAe2U,SAASoD,MAAK,SAACopB,GAC1B,GAAIA,EAAGtoC,gBAAkB6J,GAAQy+B,EAAGtoC,eAAiBsoC,EAAGnoC,SAAW0J,EAAM,CACrE,IAAMiK,EAAUN,EAAkBr4B,QAAQgsB,EAAe9X,MAqBzD,OApBAo4C,EAAOvmB,KAAK,CACRU,OAAQ,MACR7jB,IAAK+V,EAAQ/V,IACb6V,QAAS,CACLpuC,MAAO8iE,EAAGxhC,WACV9F,aAAc,eAElB9Y,OAAQ,SAAU3R,GACd,IAAI0X,EAAOokC,EAAUgQ,eAAe9rD,EAAEwO,OAAOxI,UACzC2C,EAAO,IAAI7B,KAAK,CAAC9G,EAAEwO,OAAOxI,SAAStV,MAAMgnB,EAAKq0C,WAAW,GAAG93D,OAAQyjB,EAAKq0C,WAAW,GAAG93D,OAASyjB,EAAKq0C,WAAW,GAAGnzD,OAAQ,CAAE9D,KAAM,eACnIk9D,EAAW7uD,OAAO8pC,IAAIglB,gBAAgBtpD,GAC1C8oD,EAAM9hE,KAAK,CACPoE,MAAOg+D,EAAGtoC,eACVhP,IAAKs3C,EAAGtoC,eAAiBsoC,EAAGnoC,SAC5BpC,IAAKwqC,IAELzqD,GACAA,EAASyqD,EAChB,KAEE,CACV,CACJ,GAER,CACJ,CAhEeE,CAA0Bb,EAAOzgC,EAAgBl2B,EACpD,KAGL22D,EAAM/+B,YAAc1B,EAAe0B,YACnC++B,EAAMp+B,gBAAkBrC,EAAeqC,gBACvCo+B,EAAMxnC,UAAY+G,EAAe/G,UACjCwnC,EAAM5I,YA2Fd,SAA0B73B,GACtB,IAAM63B,EAAc3rB,EAASW,WAAW7M,EAAeJ,OACnDsM,EAASl4B,QAAQgsB,EAAeJ,MAAOyM,EAAkBr4B,QAAQgsB,EAAe9X,MAAM0O,KAAOoJ,EAAeJ,MAEhH,OAAKi4B,EAIEz3B,EAAqBy3B,EAAa73B,EAAelN,IAH7C,EAId,CApG2ByuC,CAAiBvhC,IAGrCygC,EAAMhJ,SAAW,GAAKgJ,EAAM/I,UAAY,IAExC+I,EAAM9I,aAAe8I,EAAM7/B,MAAQ6/B,EAAMhJ,SACzCgJ,EAAM7I,cAAgB6I,EAAM9P,OAAS8P,EAAM/I,UAC3CyI,EAAOphE,KAAK0hE,GAEnB,CAoID,SAASnxB,IACL6wB,EAAS,GACTE,GAAqB,EACrBtnC,EAAY,IACf,CAcD,OAZAxT,EAAW,CACPi8C,UA9CJ,WACI,OAAOrB,CACV,EA6CGsB,UAnNJ,WACI,GAAKt1B,GAAe4H,IAKpBhb,EAAYgb,EAAQ2tB,oBAAoBv1B,EAAYuD,EAAAA,QACpD,CAIA,IAAMiyB,EAAS5tB,EAAQ6tB,qBAAqB7oC,GAExC4oC,GAAUA,EAAO9iE,OAAS,GAC1B8iE,EAAOxoB,SAAQ,SAAC0oB,IACPA,EAAIr0B,kBAAoBxK,EAAAA,kBAAkC6+B,EAAIx/B,gBAAkB,GAAKw/B,EAAIjiC,OAC1FiiC,EAAIr0B,kBAAoBxK,EAAAA,mBACxBu9B,EAAasB,GAEbA,EAAIr0B,kBAAoBxK,EAAAA,cACxBu9B,EAAasB,GAAK,EAEzB,IAGD1B,EAAOthE,OAAS,GAEhBshE,EAAO7+D,MAAK,SAACgE,EAAG4H,GAAJ,OAAU5H,EAAEkyD,QAAUtqD,EAAEsqD,OAAxB,GAlBf,CAoBJ,EAuLGloB,MAAAA,EACAwyB,gBAlCJ,SAAyBniE,GAChBwgE,GAA4B,IAAlBA,EAAOthE,SAIlBc,GAASwgE,EAAOthE,SAChBc,EAAQwgE,EAAOthE,OAAS,GAE5BwhE,EAAoB1gE,EACvB,EA0BGoiE,gBA1CJ,WACI,OAAI1B,EAAoB,EACb,KAEJF,EAAOE,EACjB,EAsCG2B,qBA/CJ,WACI,OAAO3B,CACV,EA8CG4B,2BA1BJ,SAAoCv/B,GAGhC,IAFA,IAAIw/B,EACEP,EAAS5tB,EAAQ6tB,qBAAqB7oC,GACnCxzB,EAAI,EAAGA,EAAIo8D,EAAO9iE,OAAQ0G,IAC/B,GAAI46D,EAAOE,GAAmBvtC,KAAO6uC,EAAOp8D,GAAGutB,GAAI,CAC/CovC,EAAeP,EAAOp8D,GACtB,KACH,CAGL,OAAO66D,EAAY7yB,yBAAyBxU,EAAWmpC,EAAcx/B,EACxE,GAzOG4M,IACAgxB,EAAStlB,GAAU9kB,GAASxxB,OAAO,CAAC,GACpCwmD,EAAYiP,GAAUjkC,GAASM,cAE/B4V,EAAqBuzB,GAAmBzpC,GAASxxB,OAAO,CACpD22B,OAAAA,EACA2Q,SAAAA,EACAG,WAAAA,EACAlL,kBAAAA,EACA6S,cAAAA,EACAF,YAAat1B,EAAOs1B,YACpBisB,sBAAuBvhD,EAAOuhD,sBAC9B37D,KAAMwrC,EAAAA,SAGV0wB,EAAcz0B,EAAYzV,GAASxxB,OAAO,CACtCynC,WAAAA,EACAjoC,KAAMwrC,EAAAA,MACNzO,kBAAAA,EACAmL,mBAAAA,EACAC,kBAAAA,EACAJ,MAAAA,EACAD,SAAAA,EACA3Q,OAAAA,EACAyY,cAAAA,EACA5H,SAAAA,KAIQ4C,aAAWiF,GAAUA,EAAQ+sB,gBAgOtCv7C,CACV,CAED26C,GAAgBzrC,sBAAwB,kBACzBE,EAAAA,gBAA6BurC,QC1R5C,GAPI,WAAYtpC,EAAKsC,gGAAiB,SAC9BlyB,KAAK4vB,IAAMA,GAAO,GAClB5vB,KAAKkyB,gBAAkBA,GAAmB,KAC1ClyB,KAAK4lC,YAAc,CAAC,CACvB,ECIL,GARI,WAAYhW,EAAKsC,EAAiB2uB,gGAAK,SACnC7gD,KAAK4vB,IAAMA,GAAO,GAClB5vB,KAAKkyB,gBAAkBA,GAAmB,KAC1ClyB,KAAK6gD,IAAMA,GAAOjvB,IAClB5xB,KAAK4lC,YAAc,CAAC,CACvB,ECIL,GATI,0GAAc,SACV5lC,KAAKm7D,eAAiB,KACtBn7D,KAAKo7D,iBAAmB,KACxBp7D,KAAKq7D,sBAAwB,GAC7Br7D,KAAKs7D,eAAiB,KACtBt7D,KAAKu7D,oBAAsB,EAC9B,+gCCaL,SAASC,KACL,IAAIj9C,EACAqmB,EACAzV,EACAssC,EAEEvsC,EAAUlvB,KAAKkvB,QACfgW,EAAWsoB,GAASt+B,GAASM,cAE7BksC,EAAYxR,OAAOwR,WAAa,SAAUvjE,GAC5C,MAAwB,iBAAVA,GACV6iC,SAAS7iC,IACTqK,KAAKiB,MAAMtL,KAAWA,CAC7B,EAMD,SAASwjE,EAAY7gC,EAAY59B,GAC7B,IAAK49B,EACD,MAAM,IAAI1iC,MAAM,6BAGpB,IAAK8E,EACD,MAAM,IAAI9E,MAAM,uBAIpB,GAAI0iC,EAAWqL,wBAA0BrL,EAAWqL,uBAAuBtuC,OAAQ,CAC/E,IAAM8hE,EAAsBiC,EAAwC9gC,EAAWqL,uBAAuB,IACtG,GAAIwzB,GAAuBA,EAAoB9hE,OAAS,GAAKohE,GAA0B1gE,QAAQohE,EAAoB,GAAGlP,cAAgB,EAClI,OAAQvtD,IAASwrC,EAAAA,KAExB,CAGD,GAAI5N,EAAW+gC,0BAA4B/gC,EAAW+gC,yBAAyBhkE,OAAS,EAAG,CACvF,GAAIijC,EAAW+gC,yBAAyBhkE,OAAS,EAC7C,OAAQqF,IAASwrC,EAAAA,MACd,GAAI5N,EAAW+gC,yBAAyB,GAAGC,cAAgB5+D,EAC9D,OAAO,CAEd,CAED,IAAM6+D,EAAiB7+D,IAASwrC,EAAAA,KAAkB,IAAIhiC,OAAO,wBAA0B,IAAIA,OAAOxJ,GAGlG,GAAI49B,EAAWqL,wBAA0BrL,EAAWqL,uBAAuBtuC,OAAQ,CAC/E,IAAMyxD,EAASxuB,EAAWqL,uBAAuB,GAAGmjB,OACpD,GAAIyS,EAActmD,KAAK6zC,GACnB,OAAO,CAEd,CAGD,GAAIxuB,EAAWhgC,eAAekhC,EAAAA,WAC1B,OAAO+/B,EAActmD,KAAKqlB,EAAWyuB,UAIzC,GAAIzuB,EAAWqL,uBAEX,IADA,IAAInN,EACKz6B,EAAI,EAAGA,EAAIu8B,EAAWqL,uBAAuBtuC,OAAQ0G,IAE1D,IADAy6B,EAAiB8B,EAAWqL,uBAAuB5nC,IAChCzD,eAAekhC,EAAAA,WAC9B,OAAO+/B,EAActmD,KAAKujB,EAAeuwB,UAKrD,OAAO,CACV,CAED,SAASyS,EAAgBlhC,GACrB,IAAKA,EACD,MAAM,IAAI1iC,MAAM,6BAEpB,GAAI0iC,EAAWhgC,eAAekhC,EAAAA,mBAC1BlB,EAAWhgC,eAAekhC,EAAAA,mBAC1BlB,EAAWhgC,eAAekhC,EAAAA,eAC1BlB,EAAWhgC,eAAekhC,EAAAA,cAC1B,OAAO,EAEX,GAAIlB,EAAWqL,wBAA0BrL,EAAWqL,uBAAuBtuC,OAAS,EAAG,CACnF,IAAMmhC,EAAiB8B,EAAWqL,uBAAuB,GACzD,GAAInN,EAAel+B,eAAekhC,EAAAA,mBAC9BhD,EAAel+B,eAAekhC,EAAAA,mBAC9BhD,EAAel+B,eAAekhC,EAAAA,eAC9BhD,EAAel+B,eAAekhC,EAAAA,cAC9B,OAAO,CAEd,CACD,OAAO,CACV,CAMD,SAASigC,EAAWnhC,GAChB,OAAO6gC,EAAY7gC,EAAY4N,EAAAA,MAClC,CAED,SAASwzB,EAAUphC,GACf,OAAO6gC,EAAY7gC,EAAY4N,EAAAA,KAClC,CAMD,SAASyzB,EAAWrhC,GAChB,OAAO6gC,EAAY7gC,EAAY4N,EAAAA,MAClC,CA+GD,SAAS0zB,EAAkB9vB,GAKvB,OAJIA,GAAkBnoC,MAAM0B,QAAQymC,EAAenG,yBAC/CmG,EAAenG,uBAAuB7rC,MALnC,SAACgE,EAAG4H,GAAJ,OAAU5H,EAAEynC,UAAY7/B,EAAE6/B,SAA1B,IAQAuG,CACV,CAED,SAAS+vB,EAAmBnwC,EAAUowC,GAClC,OAAOpwC,GAAYA,EAAS+Z,gBAAkBy1B,EAAUY,IAAepwC,EAAS+Z,eAAeq2B,GAAepwC,EAAS+Z,eAAeq2B,GAAap2B,sBAA6B,EACnL,CAED,SAASq2B,EAAerwC,GACpB,OAAOA,GAAYA,EAAS+Z,eAAiB/Z,EAAS+Z,eAAiB,EAC1E,CA2ID,SAAS6zB,EAAa5tC,GAClB,IAAIiO,GAAY,EAIhB,OAHIjO,GAAYA,EAASpxB,eAAe,UACpCq/B,EAAajO,EAAShvB,OAAS8+B,EAAAA,SAE5B7B,CACV,CA4ED,SAASyhC,EAAwCY,GAC7C,OAAKA,GAAuBA,EAAmBC,2BAA8BD,EAAmBC,0BAA0B5kE,OAEnH2kE,EAAmBC,0BAA0Bp1C,KAAI,SAAC0C,GACrD,MAAO,CACH0gC,YAAa1gC,EAAK0gC,YAClBtyD,MAAO4xB,EAAK5xB,MAEnB,IAPwI,IAQ5I,CAsKD,SAASukE,EAAoBC,GACzB,IAAKA,IAAoBA,EAAgBzF,UACrC,OAAOtlC,IAEX,IAAIgrC,EAAKD,EAAgBzF,UAAU,GAC/B50D,EAAKq6D,EAAgBzF,UAAU,GACnC,OAAO0F,EAAG9hE,eAAe,KAAO8hE,EAAGpyC,EAAKloB,EAAGwG,EAAI8zD,EAAG9zD,CACrD,CA4HD,SAAS+zD,EAAYC,EAAYv+D,GAC7B,IAAKu+D,EACD,MAAM,IAAI1kE,MAAM,sCAGpB,IAAI0zB,EAAKi+B,GAAAA,WAAoB,IAAMxrD,EAMnC,OAJIu+D,EAAWhiE,eAAekhC,EAAAA,KAAqB8gC,EAAWhxC,GAAGj0B,OAAS,GAAuB,cAAlBilE,EAAWhxC,KACtFA,EAAKgxC,EAAWhxC,IAGbA,CACV,CA+ID,SAASixC,EAAgBC,EAAehkC,EAAgB+B,GACpD,IACIx8B,EADE0+D,EAAe,GAGrB,IAAKD,EAAe,OAAOC,EAE3B,IAAK1+D,EAAI,EAAGA,EAAIy+D,EAAcnlE,OAAQ0G,IAAK,CACvC,IAAMqsD,EAAc,IAAIsS,GAIxB,GAHAtS,EAAY34B,UAAY,EACxB24B,EAAY5xB,eAAiBA,GAEzBgkC,EAAcz+D,GAAGzD,eAAe4tC,EAAAA,eAGhC,MAAM,IAAItwC,MAAM,kDAFhBwyD,EAAYH,YAAcuS,EAAcz+D,GAAGksD,YAI3CuS,EAAcz+D,GAAGzD,eAAekhC,EAAAA,aAChC4uB,EAAY34B,UAAY+qC,EAAcz+D,GAAG0zB,WAEzC+qC,EAAcz+D,GAAGzD,eAAekhC,EAAAA,SAChC4uB,EAAYzyD,MAAQ6kE,EAAcz+D,GAAGpG,OAEzC8kE,EAAallE,KAAK6yD,GAClBA,EAAY7vB,OAASA,CACxB,CAED,OAAOkiC,CACV,CAwFD,SAASE,EAAuBC,GAC5B,IAAMC,EAAW,GAGX1L,EAAUyL,EAAKE,iBAAmB,CAACF,EAAKG,SAC1CC,GAAc,EA6DlB,OA3DA7L,EAAQ5gB,MAAK,SAAAtvC,GACT,GAAIA,EAAO,CACP,IAAMkrD,EAAU,IAAI7B,GAChB5K,EAAOz+C,EAAMg8D,QAAUh8D,EAoD3B,OAlDIyjC,EAASW,WAAWqa,KAKpBsd,GAAc,EAMVJ,EAAKG,UACLrd,EAAOhb,EAASl4B,QAAQkzC,EAAMkd,EAAKG,WAI3C5Q,EAAQ/8B,IAAMswB,EAOVz+C,EAAM3G,eAAekhC,EAAAA,mBACrBv6B,EAAMywB,gBAAgBr6B,OACtB80D,EAAQz6B,gBAAkBzwB,EAAMywB,gBAEhCy6B,EAAQz6B,gBAAkBguB,EAG1Bz+C,EAAM3G,eAAekhC,EAAAA,gBACrB2wB,EAAQ3B,aAAevpD,EAAMu6B,EAAAA,eAG7Bv6B,EAAM3G,eAAekhC,EAAAA,cACrB2wB,EAAQ1B,WAAaxpD,EAAMu6B,EAAAA,aAG3Bv6B,EAAM3G,eAAekhC,EAAAA,4BACrB2wB,EAAQ1xB,uBAAyBx5B,EAAMu6B,EAAAA,2BAGvCv6B,EAAM3G,eAAekhC,EAAAA,8BACrB2wB,EAAQtmB,yBAA+E,UAApD5kC,EAAMu6B,EAAAA,6BAK7CqhC,EAAStlE,KAAK40D,GAEP6Q,CACV,CACJ,IAEMH,CACV,CAYD,SAASK,EAA+B5zD,GACpC,IAAMrI,EAAQ,IAAIk8D,GAiBlB,OAfAl8D,EAAMmqD,UAAY9hD,EAAQ2zD,OAEtB3zD,EAAQhP,eAAekhC,EAAAA,4BACvBv6B,EAAMgqD,uBAAyB3hD,EAAQkyB,EAAAA,0BACvCv6B,EAAMiqD,4BAA8BjqD,EAAMgqD,uBAAuBhzD,MAAM,MAGvEqR,EAAQhP,eAAekhC,EAAAA,sBACvBv6B,EAAMkqD,iBAA+E,SAA5D7hD,EAAQkyB,EAAAA,oBAAkClkC,eAGnEgS,EAAQhP,eAAekhC,EAAAA,sBACvBv6B,EAAMoqD,kBAAgF,UAA5D/hD,EAAQkyB,EAAAA,oBAAkClkC,eAGjE2J,CACV,CAoPD,OA7DA8c,EAAW,CACPo9C,YAAAA,EACAO,UAAAA,EACAF,gBAAAA,EACA4B,uCArrCJ,SAAgD9iC,GAC5C,IAAM+iC,EAAW/iC,GAAcA,EAAWhgC,eAAekhC,EAAAA,+BAA+ClB,EAAWkB,EAAAA,+BAA+C,IAGrIlB,GAAcA,EAAWhgC,eAAekhC,EAAAA,wBAAwClB,EAAWkB,EAAAA,wBAAwC,IAE3ImW,SAAQ,SAAC0oB,SACtBA,EAAI//D,eAAekhC,EAAAA,gCACnB6hC,EAAS9lE,KAAT,MAAA8lE,kDAAiBhD,EAAI7+B,EAAAA,oTAE5B,IAED,IAAM8hC,EAAoB,GAwC1B,OArCAD,EAAS1rB,SAAQ,SAAC4rB,GACd,IAAMt8D,EAAQ,IAAIu8D,GAEdD,EAAIjjE,eAAekhC,EAAAA,MACnBv6B,EAAMu6B,EAAAA,IAAoB+hC,EAAI/hC,EAAAA,IAM9B+hC,EAAIjjE,eAAekhC,EAAAA,mBACnBv6B,EAAMu6B,EAAAA,iBAAiC+hC,EAAI/hC,EAAAA,iBAM3C+hC,EAAIjjE,eAAekhC,EAAAA,qBACnBv6B,EAAMu6B,EAAAA,mBAAmC+hC,EAAI/hC,EAAAA,mBAM7C+hC,EAAIjjE,eAAekhC,EAAAA,UACnBv6B,EAAMu6B,EAAAA,QAAsD,UAA9B+hC,EAAI/hC,EAAAA,SAGlC+hC,EAAIjjE,eAAekhC,EAAAA,QACnBv6B,EAAMu6B,EAAAA,MAAsB+hC,EAAI/hC,EAAAA,OAKpC8hC,EAAkB/lE,KAAK0J,KAC1B,IAEMq8D,CACV,EAioCGG,yBA/nCJ,SAAkCnjC,GAC9B,IAAIojC,EAAO,GAMX,OAJIpjC,GAAcA,EAAWhgC,eAAekhC,EAAAA,QACxCkiC,EAAOpjC,EAAWojC,MAGfA,CACV,EAwnCGC,0BAtnCJ,SAAmCrjC,GAC/B,OAAKA,GAAeA,EAAWhgC,eAAekhC,EAAAA,oBAAqClB,EAAWkB,EAAAA,mBAAiCnkC,OACxHijC,EAAWkB,EAAAA,mBAAiC3U,KAAK,SAAA+2C,GAEpD,OADW,IAAItS,IACL/gC,KAAKqzC,EAClB,IAJ6I,EAKjJ,EAinCGC,sBA/mCJ,SAA+BvjC,GAC3B,OAAKA,GAAeA,EAAWhgC,eAAekhC,EAAAA,eAAgClB,EAAWkB,EAAAA,cAA4BnkC,OAC9GijC,EAAWkB,EAAAA,cAA4B3U,KAAK,SAAAi3C,GAE/C,OADU,IAAIxS,IACL/gC,KAAKuzC,EACjB,IAJmI,EAKvI,EA0mCGC,8BAxmCJ,SAAuCzjC,GACnC,OAAKA,GAAeA,EAAWhgC,eAAekhC,EAAAA,wBAAyClB,EAAWkB,EAAAA,uBAAqCnkC,OAChIijC,EAAWkB,EAAAA,uBAAqC3U,KAAK,SAAAm3C,GAExD,OADU,IAAI1S,IACL/gC,KAAKyzC,EACjB,IAJqJ,EAKzJ,EAmmCGC,0CAjmCJ,SAAmD3jC,GAC/C,OAAKA,GAAeA,EAAWhgC,eAAekhC,EAAAA,oCAAqDlB,EAAWkB,EAAAA,mCAAiDnkC,OACxJijC,EAAWkB,EAAAA,mCAAiD3U,KAAK,SAAAq3C,GAEpE,OADY,IAAI5S,IACL/gC,KAAK2zC,EACnB,IAJ6K,EAKjL,EA4lCGC,8CA1lCJ,SAAuD3lC,GACnD,OAAKA,GAAmBA,EAAel+B,eAAekhC,EAAAA,oCAAqDhD,EAAegD,EAAAA,mCAAiDnkC,OACpKmhC,EAAegD,EAAAA,mCAAiD3U,KAAK,SAAAq3C,GAExE,OADY,IAAI5S,IACL/gC,KAAK2zC,EACnB,IAJyL,EAK7L,EAqlCGE,sBAxiCJ,SAA+BjmE,EAAOuzB,EAAUowC,GAC5C,IAAMuC,EAAkBxC,EAAmBnwC,EAAUowC,GACrD,OAAIuC,EAAgBhnE,OAAS,GAAK6jE,EAAU/iE,GACjCkmE,EAAgBlmE,GAEhB,IAEd,EAkiCGmmE,sBAhiCJ,SAA+BxyB,EAAgBpgB,EAAUowC,GACrD,IAAKhwB,EACD,OAAQ,EAKZ,IAFA,IAAMuyB,EAAkBxC,EAAmBnwC,EAAUowC,GAE5C/9D,EAAI,EAAGA,EAAIsgE,EAAgBhnE,OAAQ0G,IAExC,GADkBwtD,GAAY78B,GAASM,cACvBw8B,SAAS6S,EAAgBtgE,GAAI+tC,GACzC,OAAO/tC,EAIf,OAAQ,CACX,EAkhCGwgE,mBAxjCJ,SAA4BjzC,EAAII,EAAUowC,GACtC,IACI/9D,EACA6M,EAFEyzD,EAAkBxC,EAAmBnwC,EAAUowC,GAIrD,IAAK/9D,EAAI,EAAG6M,EAAMyzD,EAAgBhnE,OAAQ0G,EAAI6M,EAAK7M,IAC/C,GAAIsgE,EAAgBtgE,GAAGzD,eAAekhC,EAAAA,KAAqB6iC,EAAgBtgE,GAAGutB,KAAOA,EACjF,OAAO+yC,EAAgBtgE,GAI/B,OAAO,IACV,EA6iCGygE,sBAjhCJ,SAA+B9yC,EAAUowC,EAAap/D,GAClD,IACIqB,EACA6M,EAFEyzD,EAAkBxC,EAAmBnwC,EAAUowC,GAG/C2C,EAAc,GAEpB,IAAK1gE,EAAI,EAAG6M,EAAMyzD,EAAgBhnE,OAAQ0G,EAAI6M,EAAK7M,IAC3Co9D,EAAYkD,EAAgBtgE,GAAIrB,IAChC+hE,EAAYlnE,KAAKqkE,EAAkByC,EAAgBtgE,KAI3D,OAAO0gE,CACV,EAqgCG1C,eAAAA,EACA2C,sBApkCJ,SAA+BvmE,EAAOuzB,GAClC,IAAMizC,EAAc5C,EAAerwC,GACnC,OAAIizC,EAAYtnE,OAAS,GAAK6jE,EAAU/iE,GAC7BwmE,EAAYxmE,GAEZ,IAEd,EA8jCGymE,SArgCJ,SAAkBtkC,EAAY5N,EAAkBmyC,GAC5C,IAAIC,EAAQ,KAEZ,GAAIxkC,GAAcA,EAAWqL,wBAA0BrL,EAAWqL,uBAAuBtuC,OAAS,EAAG,CACjG,IAAMmhC,EAAiB0iC,EAAUxuC,IAAqBA,GAAoB,GAAKA,EAAmB4N,EAAWqL,uBAAuBtuC,OAChIijC,EAAWqL,uBAAuBjZ,GAAoB4N,EAAWqL,uBAAuB,GACxFnN,IACAsmC,EAAQtmC,EAAeuwB,SAAW,YAAcvwB,EAAeswB,OAAS,IACpE+V,QAA8CrnE,IAAzBghC,EAAeY,QACpC0lC,GAAS,WAAatmC,EAAeY,MAAQ,aAAeZ,EAAe2wB,OAAS,KAG/F,CAOD,OAJI2V,IACAA,EAAQA,EAAM1lE,QAAQ,oBAAqB,KAGxC0lE,CACV,EAk/BGC,qBAr3BJ,SAA8BC,GAC1B,IACI,IAAM1oB,EAAW0oB,QAA0D,IAAnCA,EAAaC,kBAAoCj4D,SAASg4D,EAAaC,mBAAqB,EAEpI,OAAO/3D,MAAMovC,GAAY,EAAIA,CAGhC,CAFC,MAAO1uC,GACL,OAAO,CACV,CACJ,EA82BGs3D,YAj/BJ,SAAqB5kC,GACjB,OAAOA,GAAcA,EAAWqL,wBAA0BrL,EAAWqL,uBAAuBtuC,OAAS,EAAIijC,EAAWqL,uBAAuB,GAAGojB,SAAW,IAC5J,EAg/BGoW,OA99BJ,SAAgB7kC,GACZ,OAAKA,GAAeA,EAAWhgC,eAAekhC,EAAAA,kBAGvClB,EAAWkB,EAAAA,kBAFP,IAGd,EA09BG4jC,uBAx9BJ,SAAgC9kC,GAC5B,IAAKA,IAAe32B,MAAM0B,QAAQi1B,EAAW+kC,eACzC,MAAO,GAKX,IAFA,IAAMC,EAAa,GAEVvhE,EAAI,EAAGA,EAAIu8B,EAAW+kC,cAAchoE,OAAQ0G,IACjDuhE,EAAW/nE,KAAK,CACZmmE,KAAMpjC,EAAW+kC,cAActhE,GAAG2/D,KAClChe,KAAMplB,EAAW+kC,cAActhE,GAAGk/D,QAAU3iC,EAAW+kC,cAActhE,KAI7E,OAAOuhE,CACV,EA08BGC,yBAx8BJ,SAAkCjlC,GAC9B,OAAKA,GAAeA,EAAWhgC,eAAekhC,EAAAA,4BAA4F,IAAhDlB,EAAWklC,0BAA0BnoE,OAGxHijC,EAAWklC,0BAFP,IAGd,EAo8BGlG,aAAAA,EACAmG,MA37BJ,SAAe/zC,GACX,OAAQA,GAAYA,EAAS8P,EAAAA,KAAsB,IACtD,EA07BGkkC,WAx7BJ,SAAoBh0C,EAAUi0C,GAC1B,IAAI35C,GAAM,EAMV,OAJI0F,GAAYA,EAASk0C,UAAYl0C,EAASk0C,SAASvoE,OAAS,IAC5D2uB,GAA+C,IAAxC0F,EAASk0C,SAAS7nE,QAAQ4nE,IAG9B35C,CACV,EAi7BG65C,YA/6BJ,SAAqBn0C,GAYjB,OARIA,GAAYA,EAASpxB,eAAekhC,EAAAA,6BACtB9P,EAASs+B,0BAChBt+B,GAA6B,WAAjBA,EAAShvB,KACdgtD,OAAOC,kBAEPD,OAAOoW,kBAAoBpW,OAAOqW,SAIvD,EAm6BGC,aAj6BJ,SAAsBxnC,GAClB,OAAOA,GAAkBA,EAAe+M,UAAY/M,EAAe+M,UAAYnU,GAClF,EAg6BG6uC,wBA95BJ,SAAiCv0C,GAAmC,IAAzBw0C,EAAyB,uDAAH,EACzDzjB,EAAQrrB,IAIZ,OAHI1F,GAAYA,EAASpxB,eAAekhC,EAAAA,yBACpCihB,EAAQ/wB,EAASq+B,qBAEd7iD,MAAMu1C,GAASA,EAAQz6C,KAAKk+C,IAAIzD,EAAQyjB,EAAqB,EACvE,EAy5BGC,eAv5BJ,SAAwBz0C,GACpB,OAAOA,GAAYA,EAASpxB,eAAekhC,EAAAA,cAA8B,IAAI11B,KAAK4lB,EAAS8P,EAAAA,eAA+B,IAC7H,EAs5BG4kC,uBAp5BJ,SAAgC9lC,GAC5B,OAAOA,GAAc32B,MAAM0B,QAAQi1B,EAAWqL,wBAA0BrL,EAAWqL,uBAAuBtuC,OAAS,CACtH,EAm5BGgpE,4BAj5BJ,SAAqCv0B,GACjC,IAAMw0B,EAA0B1E,EAAkB9vB,GAGlD,OAF4Bw0B,GAA2B38D,MAAM0B,QAAQi7D,EAAwB36B,wBAA0B26B,EAAwB36B,uBAAyB,IAE7I9e,KAAI,SAACm1C,GAC5B,MAAO,CACHz2B,UAAWy2B,EAAmBz2B,UAC9BnM,MAAO4iC,EAAmB5iC,OAAS,EACnC+vB,OAAQ6S,EAAmB7S,QAAU,EACrCC,SAAU4S,EAAmB5S,UAAY,KACzC99B,GAAI0wC,EAAmB1wC,IAAM,KAEpC,GACJ,EAq4BGi1C,qBA92BJ,SAA8BpoE,EAAOmiC,GACjC,OAAOA,GAAcA,EAAWqL,wBAA0BrL,EAAWqL,uBAAuBtuC,OAAS,GACrG6jE,EAAU/iE,GAASmiC,EAAWqL,uBAAuBxtC,GAAS,IACjE,EA42BGqoE,gCAj2BJ,SAAyCC,GACrC,IAEIC,EACAvU,EA2JmB3zB,EAEjBmoC,EAhKAC,EAAoB,GACpBN,EAXV,SAA8BG,GAC1B,GAAIA,GAAgBA,EAAalmC,QAAU2gC,EAAUuF,EAAalmC,OAAOpiC,OAAQ,CAC7E,IAAM0oE,EAAcJ,EAAalmC,OAAOiL,IAAI9Z,SAAS+Z,eAAeg7B,EAAalmC,OAAOpiC,OACxF,GAAI0oE,GAAeA,EAAYn7B,uBAAyBw1B,EAAUuF,EAAatoE,OAC3E,OAAOyjE,EAAkBiF,EAAYn7B,sBAAsB+6B,EAAatoE,OAE/E,CACJ,CAImC2oE,CAAqBL,GAIrD,GAAIH,GAA2BA,EAAwB36B,uBAAwB,CAK3E,GAAI86B,GAAgBA,EAAalmC,QAAU2gC,EAAUuF,EAAalmC,OAAOpiC,OAAQ,CAC7E,IAAM0kE,EAAWF,EAAuB8D,EAAalmC,OAAOiL,IAAI9Z,UAC5DmxC,IACA1Q,EAAU0Q,EAAS,GAE1B,CACD,IAAK,IAAI9+D,EAAI,EAAG6M,EAAM01D,EAAwB36B,uBAAuBtuC,OAAQ0G,EAAI6M,IAAO7M,EAAG,CACvF,IAAMi+D,EAAqBsE,EAAwB36B,uBAAuB5nC,GACpEwvC,EAAmB,IAAIsb,GA8D7B,GA7DAtb,EAAiBp1C,MAAQ4F,EACzBwvC,EAAiBjT,WAAammC,EAE1BzE,EAAmB1hE,eAAekhC,EAAAA,MAClC+R,EAAiBjiB,GAAK0wC,EAAmB1wC,IAEzC0wC,EAAmB1hE,eAAekhC,EAAAA,UAClC+R,EAAiBub,OAASkT,EAAmBlT,QAE7CkT,EAAmB1hE,eAAekhC,EAAAA,aAClC+R,EAAiBwb,SAAWiT,EAAmBxgC,EAAAA,YAE/CwgC,EAAmB1hE,eAAekhC,EAAAA,sBAClC+R,EAAiByb,iBAAmBgT,EAAmBhT,kBAEvDgT,EAAmB1hE,eAAekhC,EAAAA,YAClC+R,EAAiBhI,UAAYy2B,EAAmBz2B,WAEhDy2B,EAAmB1hE,eAAekhC,EAAAA,SAClC+R,EAAiBnU,MAAQ4iC,EAAmB5iC,OAE5C4iC,EAAmB1hE,eAAekhC,EAAAA,UAClC+R,EAAiB4b,OAAS6S,EAAmB7S,QAE7C6S,EAAmB1hE,eAAekhC,EAAAA,aAClC+R,EAAiB6b,SAAW4S,EAAmB5S,UAE/C4S,EAAmB1hE,eAAekhC,EAAAA,oBAClC+R,EAAiB8b,eAAiB2S,EAAmB3S,gBAGrD2S,EAAmB1hE,eAAekhC,EAAAA,eAClCklC,EAAc1E,EAAmB+E,YACjCxzB,EAAiBvH,gBAAkBxK,EAAAA,cAC5BwgC,EAAmB1hE,eAAekhC,EAAAA,eACzCklC,EAAc1E,EAAmB5F,aAEjB97D,eAAekhC,EAAAA,kBAC3B+R,EAAiBvH,gBAAkBxK,EAAAA,iBAEnC+R,EAAiBvH,gBAAkBxK,EAAAA,aAEhCwgC,EAAmB1hE,eAAekhC,EAAAA,oBACzCklC,EAAc1E,EAAmB7F,iBAEjB77D,eAAekhC,EAAAA,kBAC3B+R,EAAiBvH,gBAAkBxK,EAAAA,iBAEnC+R,EAAiBvH,gBAAkBxK,EAAAA,iBAGnCklC,EAAYpmE,eAAekhC,EAAAA,wBAC3B+R,EAAiB/G,eAAiBk6B,EAAYl6B,eAAevuC,MAAM,eAC9D2B,KAAKoiE,EAAmBz2B,WAAWttC,MAAM,sBAAsB2B,KAAKoiE,EAAmB1wC,MAGhGiiB,EAAiBvH,gBAAkBxK,EAAAA,SAGvC+R,EAAiB4rB,oBAAsBiC,EAAwCY,GAE3E0E,EAAa,CACb,GAAIA,EAAYpmE,eAAekhC,EAAAA,gBAA+B,CAC1D,IAAMgL,EAAiBk6B,EAAYM,eAE/Bx6B,EAAelsC,eAAekhC,EAAAA,cAC9B+R,EAAiB/G,eAAiBA,EAAey6B,WAGjDz6B,EAAelsC,eAAekhC,EAAAA,SAC9B+R,EAAiB12C,MAAQ2vC,EAAe3vC,MAI/C,MAAU6kE,EAAU4E,IACjB9E,EAAgB8E,IAChBA,EAAwBvX,WACyC,IAAjEuX,EAAwBvX,SAAShxD,QAAQ,qBACzCw1C,EAAiB12C,MAAQ,GAGzB6pE,EAAYpmE,eAAekhC,EAAAA,aAC3B+R,EAAiB9b,UAAYivC,EAAYjvC,WAEzCivC,EAAYpmE,eAAekhC,EAAAA,UAK3B+R,EAAiB1S,gBAAkB6lC,EAAYlvC,SAAW+b,EAAiB9b,UACpEuqC,EAAmB1hE,eAAekhC,EAAAA,oBACzCklC,EAAc1E,EAAmB7F,iBAEjB77D,eAAekhC,EAAAA,oBAC3B+R,EAAiB1S,gBAAkBqhC,EAAoBwE,EAAYpK,iBAAmB/oB,EAAiB9b,WAG3GivC,EAAYpmE,eAAekhC,EAAAA,SAC3B+R,EAAiBnV,MAAQsoC,EAAYtoC,OAErCsoC,EAAYpmE,eAAekhC,EAAAA,gBAC3B+R,EAAiBrT,YAAcwmC,EAAYxmC,aAE3CwmC,EAAYpmE,eAAekhC,EAAAA,eAC3B+R,EAAiBrV,WAAawoC,EAAYxoC,YAE1CwoC,EAAYpmE,eAAekhC,EAAAA,4BAC3B+R,EAAiB0b,uBAAyByX,EAAYzX,uBAAyB1b,EAAiB9b,WAEhGivC,EAAYpmE,eAAekhC,EAAAA,0BAC3B+R,EAAiB9S,uBAAyBimC,EAAYjmC,uBAC/C0xB,QAA8C30D,IAAnC20D,EAAQ1xB,yBAC1B8S,EAAiB9S,uBAAyB0xB,EAAQ1xB,wBAElDimC,EAAYpmE,eAAekhC,EAAAA,4BAC3B+R,EAAiB1H,yBAAoE,UAAzC66B,EAAY76B,yBACjDsmB,QAAgD30D,IAArC20D,EAAQtmB,2BAC1B0H,EAAiB1H,yBAA2BsmB,EAAQtmB,yBAE3D,CAED0H,EAAiB2b,oBAoBnByX,KAFiBnoC,EAlBoC+U,GAoBjB0b,uBACtBzwB,EAAe8B,WAAWC,OAAO5+B,MAC/BglE,GArBdpzB,EAAiB7sB,KAAO,CAAC+/C,EAAalmC,OAAOpiC,MAAOsoE,EAAatoE,MAAO4F,GACxE6iE,EAAkBrpE,KAAKg2C,EAC1B,CACJ,CAED,OAAOqzB,CACV,EA8sBGM,wBA5rBJ,SAAiC7mC,GAC7B,IAEI8mC,EACAC,EACArjE,EAJEu+D,EAAajiC,GAAY6gC,EAAU7gC,EAASliC,OAASkiC,EAASmL,IAAI9Z,SAAS+Z,eAAepL,EAASliC,OAAS,KAC5GkpE,EAAgB,GAKtB,GAAI/E,GAAcA,EAAW52B,sBACzB,IAAK3nC,EAAI,EAAGA,EAAIu+D,EAAW52B,sBAAsBruC,OAAQ0G,IACrDqjE,EAAoB9E,EAAW52B,sBAAsB3nC,GACrDojE,EAAkB,IAAIG,GAClBF,EAAkB9mE,eAAekhC,EAAAA,MACjC2lC,EAAgB71C,GAAK81C,EAAkB91C,IAE3C61C,EAAgBhpE,MAAQ4F,EACxBojE,EAAgB5mC,OAASF,EA7iB1B8gC,EA+iBgBiG,EA/iBQl5B,EAAAA,OAgjBnBi5B,EAAgBzkE,KAAOwrC,EAAAA,MA5jB5BizB,EA6jBuBiG,EA7jBCl5B,EAAAA,OA8jBnBi5B,EAAgBzkE,KAAOwrC,EAAAA,MAChBuzB,EAAW2F,GAClBD,EAAgBzkE,KAAOwrC,EAAAA,MAChBwzB,EAAU0F,GACjBD,EAAgBzkE,KAAOwrC,EAAAA,KAChByzB,EAAWyF,GAClBD,EAAgBzkE,KAAOwrC,EAAAA,MAEvB9D,EAAO50B,KAAK,kCAEhB6xD,EAAc9pE,KAAK4pE,GAI3B,OAAOE,CACV,EA0pBGE,kBAxpBJ,SAA2B/7B,GACvB,IAMI56B,EACA7M,EAPE47B,IAAY6L,GAAM8zB,EAAa9zB,EAAI9Z,UACnC81C,EAAY,GACdC,EAAqB,KACrBnF,EAAa,KACboF,EAAmB,KACnBrnC,EAAW,KAIf,IAAKt8B,EAAI,EAAG6M,EAAM46B,GAAOA,EAAI9Z,UAAY8Z,EAAI9Z,SAAS+Z,eAAiBD,EAAI9Z,SAAS+Z,eAAepuC,OAAS,EAAG0G,EAAI6M,EAAK7M,KACpHu+D,EAAa92B,EAAI9Z,SAAS+Z,eAAe1nC,IAK1BzD,eAAekhC,EAAAA,QAC1BnB,EAAW,IAAIkvB,IACN5tD,MAAQ2gE,EAAW3gE,MAGA,OAAvB8lE,GAA+BA,EAAmBnnE,eAAekhC,EAAAA,WAAgD,OAArBkmC,GACjGrnC,EAAW,IAAIkvB,IACN5tD,MAAQm/B,YAAY4mC,EAAiB/lE,MAAQ+lE,EAAiBlwC,UAAUuJ,QAAQ,IAG9E,IAANh9B,GAAY47B,KACjBU,EAAW,IAAIkvB,IACN5tD,MAAQ,GAMI,OAArB+lE,GAA6Bx6D,MAAMw6D,EAAiBlwC,YACnC,OAAb6I,EACAqnC,EAAiBlwC,SAAWsJ,YAAYT,EAAS1+B,MAAQ+lE,EAAiB/lE,OAAOo/B,QAAQ,IAEzFqJ,EAAO50B,KAAK,sJAIH,OAAb6qB,IACAA,EAAS/O,GAAK+wC,EAAYC,EAAYv+D,GACtCs8B,EAASliC,MAAQ4F,EACjBs8B,EAASmL,IAAMA,EAEX82B,EAAWhiE,eAAekhC,EAAAA,YAC1BnB,EAAS7I,SAAW8qC,EAAW9qC,UAG/BkwC,IACAA,EAAiB/5B,aAAetN,EAAS/O,IAG7Ck2C,EAAUjqE,KAAK8iC,GACfonC,EAAqBnF,EACrBoF,EAAmBrnC,GAGvBiiC,EAAa,KACbjiC,EAAW,KAGf,OAAyB,IAArBmnC,EAAUnqE,QAOW,OAArBqqE,GAA6Bx6D,MAAMw6D,EAAiBlwC,YACpDkwC,EAAiBlwC,SAAWsJ,YAwEpC,SAAiCT,IANjC,WACI,IAAK1L,IAAeA,EAAWr0B,eAAe,SAC1C,MAAM,IAAI1C,MAAMswC,EAAAA,qBAEvB,CAGGsG,GACA,IAEImzB,EAFEhoC,EAAY2/B,EAAaj/B,EAASmL,IAAI9Z,UAa5C,OAVI2O,EAASmL,IAAI9Z,SAASs+B,0BACtB2X,EAAYtnC,EAASmL,IAAI9Z,SAASs+B,0BAC3B3vB,EAAS7I,SAChBmwC,EAAYtnC,EAAS7I,SACdmI,EACPgoC,EAAYjY,OAAOC,kBAEnBh7B,EAAWthB,MAAM,IAAIu0D,GAAYpU,GAAAA,6BAAqC,2FAA4FnzB,IAG/JsnC,CACV,CAxF+CE,CAAwBH,GAAoBA,EAAiB/lE,OAAOo/B,QAAQ,KAP7GymC,CAWd,EA6kBGM,OA7jBJ,SAAgBp2C,GACZ,IAAM8Z,EAAM,IAAIu8B,GA0ChB,OAxCIr2C,IACA8Z,EAAI9Z,SAAWA,EAEXA,EAASpxB,eAAekhC,EAAAA,yBACxBgK,EAAIzT,sBAAwB,IAAIjsB,KAAK4lB,EAASqG,sBAAsB/rB,WAEhE0lB,EAASs2C,aACTx8B,EAAIzT,sBAAwB,IAAIjsB,KAAK4lB,EAASs2C,WAAWh8D,YAI7D0lB,EAASpxB,eAAekhC,EAAAA,yBACxBgK,EAAIxT,oBAAsB,IAAIlsB,KAAK4lB,EAASsG,oBAAoBhsB,YAGhE0lB,EAASpxB,eAAekhC,EAAAA,yBACxBgK,EAAIukB,oBAAsBr+B,EAASq+B,qBAGnCr+B,EAASpxB,eAAekhC,EAAAA,+BACxBgK,EAAIwkB,0BAA4Bt+B,EAASs+B,2BAGzCt+B,EAASpxB,eAAekhC,EAAAA,gCACxBgK,EAAIikB,2BAA6B/9B,EAAS+9B,4BAG1C/9B,EAASpxB,eAAekhC,EAAAA,0BACxBgK,EAAIokB,qBAAuBl+B,EAASk+B,sBAGpCl+B,EAASpxB,eAAekhC,EAAAA,wBACxBgK,EAAIqkB,mBAAqBn+B,EAASm+B,oBAGlCn+B,EAASpxB,eAAekhC,EAAAA,gBACxBgK,EAAIskB,YAAc,IAAIhkD,KAAK4lB,EAASo+B,eAIrCtkB,CACV,EAkhBGy8B,mBAxfJ,SAA4B1nC,GACxB,IAIIx8B,EACA4W,EALE+W,EAAW6O,GAAUA,EAAOiL,KAAOjL,EAAOiL,IAAI9Z,SAAW6O,EAAOiL,IAAI9Z,SAAW,KAC/Em1C,EAAcn1C,EAAWA,EAAS+Z,eAAiB,KACnDg3B,EAAeoE,GAAetmC,GAAU2gC,EAAU3gC,EAAOpiC,OAAS0oE,EAAYtmC,EAAOpiC,OAAO+pE,oBAAsB,KAClHruC,EAAS,GAIf,GAAI4oC,EACA,IAAK1+D,EAAI,EAAGA,EAAI0+D,EAAaplE,OAAQ0G,IAAK,CACtC,IAAMqsD,EAAc,IAAIsS,GAIxB,GAHAtS,EAAY7vB,OAASA,EACrB6vB,EAAY34B,UAAY,GAEpBgrC,EAAa1+D,GAAGzD,eAAe4tC,EAAAA,eAG/B,MAAM,IAAItwC,MAAM,kDAWpB,IAbIwyD,EAAYH,YAAcwS,EAAa1+D,GAAGmqC,EAAAA,eAI1Cu0B,EAAa1+D,GAAGzD,eAAekhC,EAAAA,aAC/B4uB,EAAY34B,UAAYgrC,EAAa1+D,GAAGy9B,EAAAA,YAExCihC,EAAa1+D,GAAGzD,eAAekhC,EAAAA,SAC/B4uB,EAAYzyD,MAAQ8kE,EAAa1+D,GAAGy9B,EAAAA,QAEpCihC,EAAa1+D,GAAGzD,eAAekhC,EAAAA,4BAC/B4uB,EAAYnB,uBAAyBwT,EAAa1+D,GAAGy9B,EAAAA,2BAEpD7mB,EAAI,EAAG8nD,EAAa1+D,GAAGokE,eAAiBxtD,EAAI8nD,EAAa1+D,GAAGokE,cAAc9qE,OAAQsd,IAAK,CACxF,IAAMytD,EAAkB3F,EAAa1+D,GAAGokE,cAAcxtD,GAChDgwC,EAAQ,IAAI0d,GAClB1d,EAAMuF,iBAAmB,EACzBvF,EAAMyF,YAAcA,EAEhBgY,EAAgB9nE,eAAekhC,EAAAA,qBAC/BmpB,EAAMuF,iBAAmBkY,EAAgBlY,kBAE7C,IAAMjB,EAAyBmB,EAAYnB,uBAAyBmB,EAAYnB,uBAAyBmB,EAAY34B,UAAY,EACjIkzB,EAAM2d,2BAA6B3d,EAAMuF,iBAAmBE,EAAY34B,UAAY8I,EAAO5+B,MAAQstD,EAE/FmZ,EAAgB9nE,eAAekhC,EAAAA,YAC/BmpB,EAAMnzB,SAAW4wC,EAAgB5wC,SAAW44B,EAAY34B,WAExD2wC,EAAgB9nE,eAAekhC,EAAAA,IAC/BmpB,EAAMr5B,GAAK82C,EAAgB92C,GAE3Bq5B,EAAMr5B,GAAK,KAGX82C,EAAgBG,QAAUH,EAAgBG,OAAOC,OAEjD7d,EAAMwF,YAAc8Q,EAAOwH,YAAYL,EAAgBG,OAAOC,OAAOp8D,YAMrEu+C,EAAMwF,YACFiY,EAAgBjY,aAChBiY,EAAgBM,SAChBN,EAAgBnF,OAGxBppC,EAAOt8B,KAAKotD,EACf,CACJ,CAGL,OAAO9wB,CACV,EAobGunC,wCAAAA,EACAuH,+BAtZJ,SAAwCj3C,EAAU4O,EAAYC,GAC1D,IAAIiiC,EACAqE,EACA+B,EAYJ,OAVIl3C,GAAYA,EAAS+Z,gBAAkBnL,GAAcA,EAAWC,QAAU2gC,EAAU5gC,EAAWC,OAAOpiC,SACtG0oE,EAAcn1C,EAAS+Z,eAAenL,EAAWC,OAAOpiC,SACrC0oE,EAAYn7B,uBAAyBw1B,EAAU5gC,EAAWniC,SACzEyqE,EAAkB/B,EAAYn7B,sBAAsBpL,EAAWniC,UAE3DqkE,EAAgBoG,EAAgBC,2BAKrCtG,EAAgBC,EAAe,KAAMjiC,EAC/C,EAuYGuoC,gCArYJ,SAAyCp3C,EAAU8M,EAAgB+B,GAC/D,IAAIiiC,EACAqE,EACA+B,EACAG,EAeJ,OAbIr3C,GAAYA,EAAS+Z,gBAAkBjN,GAAkBA,EAAe8B,YAAc9B,EAAe8B,WAAWC,QAAU2gC,EAAU1iC,EAAe8B,WAAWC,OAAOpiC,SACrK0oE,EAAcn1C,EAAS+Z,eAAejN,EAAe8B,WAAWC,OAAOpiC,SACpD0oE,EAAYn7B,uBAAyBw1B,EAAU1iC,EAAe8B,WAAWniC,SACxFyqE,EAAkB/B,EAAYn7B,sBAAsBlN,EAAe8B,WAAWniC,SACvDyqE,EAAgBj9B,wBAA0Bu1B,EAAU1iC,EAAergC,SACtF4qE,EAAsBH,EAAgBj9B,uBAAuBnN,EAAergC,UAExEqkE,EAAgBuG,EAAoBF,2BAM7CtG,EAAgBC,EAAehkC,EAAgB+B,EACzD,EAkXGyoC,oBAhXJ,SAA6Bt3C,GACzB,IAAMiO,EAAY2/B,EAAa5tC,GACzBu3C,IAASv3C,GAAWA,EAASpxB,eAAekhC,EAAAA,yBAC5C0nC,EAAkBx3C,EAAWA,EAASy3C,kBAAoB,KAC1DC,EAAmB,GAuCzB,OAnCKzpC,GAAaspC,IACVC,GAIAA,EAAgBvxB,SAAQ,SAAU0xB,GAC9B,IAAMpiE,EAAQ,IAAI+pD,GAEdqY,EAAU/oE,eAAe4tC,EAAAA,iBACzBjnC,EAAMgpD,YAAcoZ,EAAUpZ,YAU9BoZ,EAAU/oE,eAAekhC,EAAAA,SACzBv6B,EAAMtJ,MAAQ0rE,EAAU1rE,MAAMyO,WAUlCg9D,EAAiB7rE,KAAK0J,IACzB,IAIFmiE,CACV,EAqUGzG,uBAAAA,EACA2G,8BAnnCJ,WACI,OAAO,SAACxlE,EAAG4H,GAAJ,OAAU5H,EAAEynC,UAAY7/B,EAAE6/B,SAA1B,CACV,EAknCGg+B,mBAhQJ,SAA4B73C,GACxB,GAAIA,GAAYA,EAASpxB,eAAekhC,EAAAA,2BAGpC,OAAO0hC,EADSxxC,EAAS8P,EAAAA,2BAAyC,GAKzE,EAyPGgoC,YA9MJ,SAAqB93C,GACjB,OAAIA,GAAYA,EAASpxB,eAAekhC,EAAAA,mBAC7B9P,EAAS8P,EAAAA,mBAAiC3U,KAAI,SAAC5lB,GAClD,IAAMy+C,EAAOz+C,EAAMg8D,QAAUh8D,EACvBywB,EAAkBzwB,EAAM3G,eAAekhC,EAAAA,kBAAkCv6B,EAAMu6B,EAAAA,kBAAkC,KAEvH,OAAO,IAAIioC,GAAY/jB,EAAMhuB,EAChC,IAGE,EACV,EAoMGgyC,iBAlMJ,SAA0Bh4C,GACtB,OAAIA,GAAYA,EAASpxB,eAAekhC,EAAAA,yBAC7B9P,EAAS8P,EAAAA,yBAAuC3U,KAAI,SAAC5lB,GACxD,IAAMy+C,EAAOz+C,EAAMg8D,QAAUh8D,EACvBywB,EAAkBzwB,EAAM3G,eAAekhC,EAAAA,kBAAkCv6B,EAAMu6B,EAAAA,kBAAkC,KACnH6kB,EAAMp/C,EAAM3G,eAAekhC,EAAAA,KAA4D,IAAvCV,WAAW75B,EAAMu6B,EAAAA,MAA6BpK,IAElG,OAAO,IAAIuyC,GAAcjkB,EAAMhuB,EAAiB2uB,EACnD,IAGE,EACV,EAuLGujB,8BArLJ,SAAuCp+B,GACnC,OAAOA,GAAOA,EAAIlrC,eAAekhC,EAAAA,8BAA8CgK,EAAIikB,2BAA6B,IACnH,EAoLGoa,yBAlLJ,SAAkCr+B,GAC9B,OAAOA,GAAOA,EAAIlrC,eAAekhC,EAAAA,0BAAwE,OAA9BgK,EAAIzT,sBAAiCyT,EAAIzT,sBAAsB/rB,UAAY,IACzJ,EAiLG89D,uBA/KJ,SAAgCp4C,GAC5B,IAxDyCpiB,EACnCrI,EAuDA8iE,EAAsB,GAC5B,GAAIr4C,GAAYA,EAASpxB,eAAekhC,EAAAA,qBAAoC,YACvD9P,EAASs4C,4BAD8C,IACxE,2BAAsD,KAA3CC,EAA2C,QAE9C34C,EAAK,KACL2+B,EAAc,KACd9b,EAAU,KACV8R,EAAe,KACfikB,EAAmB,KACnBC,EAAqB,KACrBC,EAAkB,KAClBC,EAAsB,KAE1B,IAAK,IAAM96C,KAAQ06C,EACXA,EAAG3pE,eAAeivB,KACdA,IAASiS,EAAAA,GACTlQ,EAAK24C,EAAG16C,GACDA,IAASiS,EAAAA,0BAChByuB,EAAcga,EAAG16C,GAAM0gC,YAChB1gC,IAASiS,EAAAA,4BAChB2S,EAAU,CACN/3B,OAAQpP,SAASi9D,EAAG16C,GAAMnT,QAC1B8pC,IAAKl5C,SAASi9D,EAAG16C,GAAM22B,KACvBjZ,IAAKjgC,SAASi9D,EAAG16C,GAAM0d,KACvBq9B,YAAat9D,SAASi9D,EAAG16C,GAAM+6C,cAE5B/6C,IAASiS,EAAAA,kCAChBykB,EAAe,CACXC,IAAKplB,WAAWmpC,EAAG16C,GAAM22B,KACzBjZ,IAAKnM,WAAWmpC,EAAG16C,GAAM0d,MAEtB1d,IAASiS,EAAAA,sCAChB0oC,EAAmB,CACf5yC,UAAW2yC,EAAG16C,GAAM+H,UACpB4uB,IAAKl5C,SAASi9D,EAAG16C,GAAM22B,KACvBjZ,IAAKjgC,SAASi9D,EAAG16C,GAAM0d,KACvB7wB,OAAQpP,SAASi9D,EAAG16C,GAAMnT,QAC1B1Z,KAAMunE,EAAG16C,GAAM7sB,KACf6nE,qBAAsBv9D,SAASi9D,EAAG16C,GAAMg7C,uBAErCh7C,IAASiS,EAAAA,wCAChB2oC,EAAqB,CACjB7yC,UAAW2yC,EAAG16C,GAAM+H,UACpB4uB,IAAKl5C,SAASi9D,EAAG16C,GAAM22B,KACvBjZ,IAAKjgC,SAASi9D,EAAG16C,GAAM0d,KACvB7wB,OAAQpP,SAASi9D,EAAG16C,GAAMnT,SAEvBmT,IAASiS,EAAAA,iBAChB4oC,EAAkBlH,EAA+B+G,EAAG16C,IAC7CA,IAASiS,EAAAA,wBAzGKlyB,EA0GqC26D,EAAG16C,GAzG3EtoB,WAAQ,IAAIujE,GAEdl7D,EAAQhP,eAAekhC,EAAAA,mBACvBv6B,EAAM05D,eAAiBrxD,EAAQkyB,EAAAA,kBAGhClyB,EAAQhP,eAAekhC,EAAAA,oBAAiF,KAA7ClyB,EAAQkyB,EAAAA,qBAClEv6B,EAAM25D,iBAAmBtxD,EAAQkyB,EAAAA,mBACjCv6B,EAAM45D,sBAAwB55D,EAAM25D,iBAAiBx0D,WAAWnO,MAAM,MAGvEqR,EAAQhP,eAAekhC,EAAAA,kBAA6E,KAA3ClyB,EAAQkyB,EAAAA,mBAChEv6B,EAAM65D,eAAiBxxD,EAAQkyB,EAAAA,iBAC/Bv6B,EAAM85D,oBAAsB95D,EAAM65D,eAAe10D,WAAWnO,MAAM,MA4FlDosE,EAzFbpjE,IA8FC8iE,EAAoBxsE,KAAK,CACrB+zB,GAAAA,EACA2+B,YAAAA,EACA9b,QAAAA,EACA8R,aAAAA,EACAikB,iBAAAA,EACAC,mBAAAA,EACAC,gBAAAA,EACAC,oBAAAA,GAEP,CAhEuE,+BAiE3E,CAED,OAAON,CACV,EA0GGU,oBA5gCJ,SAA6BnqC,GACzB,SAAIA,IAAcA,EAAWhgC,eAAekhC,EAAAA,qBACe,SAAhDlB,EAAWkB,EAAAA,kBAIzB,EAugCGkpC,uBArgCJ,SAAgCpqC,GAC5B,SAAIA,IAAcA,EAAWhgC,eAAekhC,EAAAA,yBACmB,SAApDlB,EAAWkB,EAAAA,sBAIzB,EAggCGmpC,uCA1GJ,SAAgDrqC,GAC5C,IAAMsqC,EAAyB,CAAC,EAEhC,GAAItqC,GAAcA,EAAWhgC,eAAekhC,EAAAA,+BAA8C,YACrElB,EAAWuqC,8BAD0D,IACtF,2BAA0D,KAA/CC,EAA+C,QAClDA,EAAGxqE,eAAe4tC,EAAAA,gBAA4B48B,EAAGxqE,eAAekhC,EAAAA,SAChEopC,EAAuBE,EAAG58B,EAAAA,gBAA4B48B,EAAGtpC,EAAAA,OAEhE,CALqF,+BAMzF,CACD,OAAOopC,CACV,EAgGGG,8CA9FJ,SAAuDzqC,GACnD,OAAKA,GAAeA,EAAWhgC,eAAekhC,EAAAA,gCAAiDlB,EAAWuqC,6BAA6BxtE,OAChIijC,EAAWuqC,6BAA6Bh+C,KAAK,SAAAm+C,GAEhD,OADU,IAAI1Z,IACL/gC,KAAKy6C,EACjB,IAJqJ,EAKzJ,EAyFGC,2CAvFJ,SAAoDzsC,GAChD,IAAMosC,EAAyB,CAAC,EAEhC,GAAIpsC,GAAkBA,EAAel+B,eAAekhC,EAAAA,+BAA8C,YAC7EhD,EAAeqsC,8BAD8D,IAC9F,2BAA8D,KAAnDC,EAAmD,QACtDA,EAAGxqE,eAAe4tC,EAAAA,gBAA4B48B,EAAGxqE,eAAekhC,EAAAA,SAChEopC,EAAuBE,EAAG58B,EAAAA,gBAA4B48B,EAAGtpC,EAAAA,OAEhE,CAL6F,+BAMjG,CACD,OAAOopC,CACV,EA6EGM,kDA3EJ,SAA2D1sC,GACvD,OAAKA,GAAmBA,EAAel+B,eAAekhC,EAAAA,gCAAiDhD,EAAeqsC,6BAA6BxtE,OAC5ImhC,EAAeqsC,6BAA6Bh+C,KAAK,SAAAm+C,GAEpD,OADU,IAAI1Z,IACL/gC,KAAKy6C,EACjB,IAJiK,EAKrK,EAsEGG,UApEJ,SAAmBruD,GACVA,IAEDA,EAAO6X,aACPA,EAAa7X,EAAO6X,YAGpB7X,EAAOmkD,SACPA,EAASnkD,EAAOmkD,QAEvB,GAnxCG72B,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAk1C7CA,CACV,CAEDi9C,GAAkB/tC,sBAAwB,oBAC1C,OAAeE,EAAAA,oBAAiC6tC,qoCC51ChD,SAASoK,KAEL,IAAIC,EACAtnD,EACAqmB,EACAkhC,EACAn5B,EACAC,EACAC,EACAk5B,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAl3C,EAAUlvB,KAAKkvB,QACf8V,EAAWyR,GAASvnB,GAASM,cAC7Bl2B,EAAWmiD,GAASvsB,GAASM,cAC7ByV,EAAQwV,GAAMvrB,GAASM,cAoC3B,SAAS62C,IACLP,EAAe,CACXQ,GAAI,EACJC,IAAK,KACLC,GAAI,KACJC,GAAI,KACJtjB,IAAK,GAAF,OAAKplD,GAAAA,gBACRqlD,IAAK,MAET+iB,EAAsB,CAAC,EACvBD,EAAa,CAAC,EACdE,EAA4B,CAAC,EAC7BH,OAAwBjuE,EACxB0uE,GACH,CAED,SAASC,IACLD,GACH,CAED,SAASA,IACL,GAAK75B,EAAL,CACA,IAAM+5B,EAAmB/5B,EAAmBg6B,sBAC5C,GAAKD,GAC2C,mBAArCA,EAAiBE,gBAA5B,CACA,IAAMC,EAAeH,EAAiBE,kBACjCC,IACLf,EAAmBe,EAAaC,gBAHkC,CAHnC,CAOlC,CA2CD,SAASC,EAAgBnkE,EAAMokE,GAC3B,IAD2C,EACrCC,EAAa,CAAC,EADuB,KAE1BD,GAF0B,IAE3C,2BAAiC,KAAxBhvE,EAAwB,QACzB4K,EAAK5K,KACLivE,EAAWjvE,GAAQ4K,EAAK5K,GAE/B,CAN0C,+BAO3C,OAAOivE,CACV,CAgCD,SAASC,IACL,IAAMC,EAAiBC,IACvB,OAGJ,SAAuBD,GACnB,GAAIptE,OAAO8L,KAAKshE,GAAgBxvE,OAAQ,CACpC,IAAIwvE,EAAexpE,QAEf,OADA+mC,EAAO/2B,MAAP,uCACO,EAEX,IAAIw5D,EAAethE,KAEf,OADA6+B,EAAO/2B,MAAP,oCACO,CAEd,CACD,QAAOw5D,EAAexpE,SAAiBvE,EAAS8c,MAAMwlC,UAAUsH,MAAQ5pD,EAAS8c,MAAMwlC,UAAUsH,KAAK/D,OACzG,CAfUooB,CAAcF,IAiBzB,SAAiCA,GAC7B,IAAIG,EAAkBluE,EAAS8c,MAAMwlC,UAAUsH,KAAKM,kBAEpD,GAAG6jB,EAAexpE,QAAS,CACvB,IAAIwpE,EAAe7jB,kBACf,OAAO,EACXgkB,EAAkBH,EAAe7jB,kBAAkB/qD,MAAM,IAC5D,CAED,IAAMgvE,EAA2B/+B,EAAAA,wBAC3Bg/B,EAAkBF,EAAgBtwE,QAAO,SAAAme,GAAC,OAAKoyD,EAAyB3qD,SAASzH,EAAvC,IAEhD,OAAGqyD,EAAgB7vE,QAAU2vE,EAAgB3vE,QACzC+sC,EAAO/2B,MAAP,6CACO,IAGX65D,EAAgBrgD,KAAI,SAAChS,GACjBuvB,EAAO50B,KAAP,uBAA4BqF,EAA5B,sBACH,KAEM,EACV,CAvC2CsyD,CAAwBN,IAyCpE,SAA6BA,GACzB,IAAMO,EAAuBl/B,EAAAA,oBACvBm/B,EAAkBR,EAAexpE,QAAUwpE,EAAethE,KAAKtN,MAAM,KAAOa,EAAS8c,MAAMwlC,UAAUsH,KAAKK,YAC1GukB,EAAcD,EAAgB3wE,QAAO,SAAAme,GAAC,OAAKuyD,EAAqB9qD,SAASzH,EAAnC,IAE5C,OAAGyyD,EAAYjwE,QAAUgwE,EAAgBhwE,QACrC+sC,EAAO/2B,MAAP,sCACO,IAEXi6D,EAAYzgD,KAAI,SAAChS,GACbuvB,EAAO50B,KAAP,wBAA6BqF,EAA7B,wBACH,KAEM,EACV,CAvDsF0yD,CAAoBV,EAC1G,CAwDD,SAASC,IACL,IAAID,EAAiB,CAAC,EACtB,GAAItB,EAA8B,CAC9B,IAAMiC,EAAqBjC,EAA6BkC,gCAEpD3uE,EAAS8c,MAAMwlC,UAAUQ,qBACzB4rB,EAAmBnD,qBACnBmD,EAAmBnD,oBAAoB1J,iBAEvCkM,EAAiBW,EAAmBnD,oBAAoB1J,eAE/D,CACD,OAAOkM,CACV,CAED,SAASa,EAAsBniE,GAC3B,IAAMshE,EAAiBC,IACjBO,EAAkBR,EAAexpE,QAAUwpE,EAAethE,KAAKtN,MAAM,KAAOa,EAAS8c,MAAMwlC,UAAUsH,KAAKK,YAChH,OAAOx9C,EAAK7O,QAAO,SAAAmC,GAAG,OAAIwuE,EAAgB/qD,SAASzjB,EAA7B,GACzB,CA0BD,SAAS8uE,EAAa1iC,GAClB,IAKI,GAF4BA,EAAQvoC,MAuBDkrE,EAvBO3iC,EAAQ3T,YAyBtC4W,EAAAA,OAAmB0/B,GAAa1/B,EAAAA,OACxCu9B,GAAyBA,GAAyBv9B,EAAAA,QAClDu9B,EAAwBmC,GAvDpC,SAAoClrE,GAAM,MAChCmqE,EAAiBC,IACnBe,EAAyB/uE,EAAS8c,MAAMwlC,UAAUsH,KAAKM,kBAE3D,GAAI6jB,EAAexpE,QAAS,CACxB,IAAM2lD,EAAoB6jB,EAAe7jB,kBACzC6kB,EAAyB7kB,EAAoBA,EAAkB/qD,MAAM,KAAO,CAjR9D,IAkRjB,CAED,GAAG4vE,EAAuBC,MAAK,SAAAx/D,GAAC,MApRd,MAoRkBA,CAAJ,IAC5B,OAAO,EAGX,IAAMy/D,GAAY,QACb74C,EAAYqB,kBAAoB,WADnB,KAEbrB,EAAYuB,mBAAqB,WAFpB,KAGbvB,EAAYoB,qBAAuB,SAHtB,KAIbpB,EAAYmB,SAAW,OAJV,KAKbnB,EAAY4B,sBAAwB,YALvB,GAQlB,OAAO+2C,EAAuBt3B,MAAK,SAAAjoC,GAAC,OAAIy/D,EAAarrE,KAAU4L,CAA3B,GACvC,CAQU0/D,CAA2B/iC,EAAQvoC,MAAO,CACzC,GAAIuoC,EAAQvoC,OAASwyB,EAAYmB,SAC7B,OA4CN/tB,EAAO2lE,KAERC,GAvVC,IAyVC5lE,EA/CQ,GAAI2iC,EAAQvoC,OAASwyB,EAAYuB,mBACpC,OAAO03C,EAA4BljC,EAASA,EAAQ3T,WACjD,GAAI2T,EAAQvoC,OAASwyB,EAAYqB,kBACpC,OAoJhB,WACI,IAAMjuB,EAAO2lE,IAKb,OAHA3lE,EAAK4lE,GAjcH,IAkcF5lE,EAAK8lE,IAAK,EAEH9lE,CACV,CA3JsB+lE,GACJ,GAAIpjC,EAAQvoC,OAASwyB,EAAY6B,YAAckU,EAAQvoC,OAASwyB,EAAYoB,qBAC/E,OA2JhB,WACI,IAAMhuB,EAAO2lE,IAIb,OAFA3lE,EAAK4lE,GAtcF,IAwcI5lE,CACV,CAjKsBgmE,GACJ,GAAIrjC,EAAQvoC,OAASwyB,EAAY2B,QACpC,OA2BhB,SAAgCoU,GAC5B,IAAM3iC,EAAO2lE,IAIb,OAFA3lE,EAAK4lE,GAzUO,IA2UL5lE,CACV,CAjCsBimE,GACJ,GAAItjC,EAAQvoC,OAASwyB,EAAY4B,sBACpC,OAiBhB,SAAiCmU,GAC7B,IAAM3iC,EAAQmjE,EAAuD0C,EAA4BljC,EAASwgC,GAApEwC,IAItC,OAFA3lE,EAAK4lE,GAhUF,IAkUI5lE,CACV,CAvBsBkmE,CAAwBvjC,EAEtC,CACD,OAnBe,IAsBlB,CAFC,MAAOr9B,GACL,OAAO,IACV,CA2BL,IACUtF,EAzBiCslE,CAF1C,CAkCD,SAASO,EAA4BljC,EAAS3T,IAsF9C,SAA2BA,GAElBs0C,EAA0BtrE,eAAeg3B,KAC1Cs0C,EAA0Bt0C,IAAa,GAGtCo0C,EAAWprE,eAAeg3B,KAC3Bo0C,EAAWp0C,IAAa,GAGvBq0C,EAAoBrrE,eAAeg3B,KACpCq0C,EAAoBr0C,IAAa,EAExC,CAlGGm3C,CAAkBn3C,GAClB,IAWI42C,EAXE5lE,EAAO2lE,IACPS,EAqJV,SAA8BzjC,GAC1B,IACI,IAAMnT,EAAUmT,EAAQnT,QAClB62C,EAAc1jC,EAAQ1T,UAAUo3C,YAEtC,OAAO3hE,SAAS2hE,EAAY72C,GAASyT,UAAY,IAGpD,CAFC,MAAO39B,GACL,OAAO,IACV,CACJ,CA9J0BghE,CAAqB3jC,GACtCjb,EAwKV,SAAqCib,GACjC,IACI,OAAQ/9B,MAAM+9B,EAAQzT,UAAkDJ,IAAtCpvB,KAAKikD,MAAyB,IAAnBhhB,EAAQzT,SAGxD,CAFC,MAAO5pB,GACL,OAAO,IACV,CACJ,CA9KaihE,CAA4B5jC,GAChC6jC,EA+KV,SAAsCx3C,GAClC,IACI,OAAkG,IAA3FtqB,SAASmlC,EAAc48B,uBAAuBC,yBAAyB13C,GAAa,IAG9F,CAFC,MAAO1pB,GACL,OAAO,IACV,CACJ,CArLeqhE,CAA6B33C,GACnC43C,EAsLV,SAA4B53C,GACxB,IACI,IAAM2uB,EAAeqlB,EAAaQ,GAC5B5f,EAAc9Z,EAAYgY,sBAAsB9yB,GAEtD,OAAKpqB,MAAM+4C,IAAkB/4C,MAAMg/C,GAI5B,KAHkD,IAA9Cl/C,SAAUk/C,EAAcjG,EAAgB,GAMtD,CAFC,MAAOr4C,GACL,OAAO,IACV,CACJ,CAnMcuhE,CAAmB73C,GACxB83C,EAAKC,EAAsB/3C,GAC3Bg4C,EA2JV,SAA8Bh4C,GAC1B,IACI,IAAMhS,EAAO6sB,EAAco9B,qBAAqBj4C,GAChD,OAAOtvB,KAAKikD,MAAM3mC,EAAK0wC,QAAU,IAGpC,CAFC,MAAOpoD,GACL,OAAO,IACV,CACJ,CAlKc4hE,CAAqBl4C,GAC1Bw0C,EAAKR,EAAaQ,GAElB2D,EAmSV,SAA2Bn4C,GACvB,GAAKk0C,GAAgD,IAA5BA,EAAiBnuE,OAA1C,CADkC,WAENmuE,GAFM,IAElC,2BAA8C,KAArCkE,EAAqC,QAC1C,GAAIA,EAAgB5kC,YAAcxT,EAC9B,OAAOo4C,EAAgBC,kBAE9B,CANiC,+BAC4B,CAMjE,CA1SuBC,CAAkBt4C,GAGlCA,IAAc4W,EAAAA,QAAiBggC,EAxWhC,KAyWC52C,IAAc4W,EAAAA,QAAiBggC,EA1WhC,KA2WC52C,IAAc4W,EAAAA,OAEVggC,EAD+B,oBAA/BjjC,EAAQ1T,UAAUw3B,SAxWV,KADX,KAgXL,IAAIlG,EAAM/pD,EAAS8c,MAAMwlC,UAAUsH,KAAKG,IA2DxC,OA1DKA,IACDA,EA6RR,SAAuB5d,GACnB,IAEI,IAAIgb,EAAe5T,EAAmBw9B,kBACjC5pB,IAAcA,EAAe,GAHlC,IAIMnuB,EAA4CmT,EAA5CnT,QAASR,EAAmC2T,EAAnC3T,UAAWC,EAAwB0T,EAAxB1T,UAAWC,EAAayT,EAAbzT,SAErC,IAAKD,EACD,OAAOH,IAEX,IAAI04C,EAAqBT,EAAsB/3C,GACpB,IAAvBw4C,IAA0BA,EAAqB,KACnD,IAKIC,EALUx4C,EAAUo3C,YAAY72C,GAASyT,UAGhB/T,EAAY,KACvBs4C,EAAqB7pB,EAAgB,KAEnD6C,EAAkBhqD,EAAS8c,MAAMwlC,UAAUsH,KAAKI,kBAAoB57C,MAAMpO,EAAS8c,MAAMwlC,UAAUsH,KAAKI,iBAAmBhqD,EAAS8c,MAAMwlC,UAAUsH,KAAKI,gBAppB/I,EAypBd,OAA4C,KAApC97C,SAJW+iE,EAAejnB,EAIF,KAAO,EAG1C,CAFC,MAAOl7C,GACL,OAAOwpB,GACV,CACJ,CAxTa44C,CAAc/kC,IAEnB/9B,MAAM27C,KACPvgD,EAAKugD,IAAMA,GAGX4mB,IACIxkC,EAAQ7V,MAAQq6C,EAAYr6C,IAC5B9sB,EAAKyjE,IAAMkE,mBAAmB1sE,GAAAA,eAAqB0nC,EAAQ7V,IAAKq6C,EAAYr6C,MACrEq6C,EAAY5yE,QACnByL,EAAK4nE,IAAMT,EAAY5yE,QAI3B6xE,IACApmE,EAAK6nE,GAAKzB,GAGVR,IACA5lE,EAAK4lE,GAAKA,GAGThhE,MAAM8iB,KACP1nB,EAAK0nB,EAAIA,GAGR9iB,MAAM4hE,KACPxmE,EAAKwmE,IAAMA,GAGV5hE,MAAMgiE,KACP5mE,EAAK4mE,GAAKA,GAGThiE,MAAMkiE,KACP9mE,EAAK8mE,GAAKA,GAGTliE,MAAMoiE,KACPhnE,EAAKgnE,GAAKA,GAGTpiE,MAAM4+D,IAAc,IAAPA,IACdxjE,EAAKwjE,GAAKA,GAGVH,EAAoBr0C,KACpBhvB,EAAK8nE,IAAK,EACVzE,EAAoBr0C,IAAa,IAGjCo0C,EAAWp0C,IAAes0C,EAA0Bt0C,KACpDhvB,EAAK8lE,IAAK,EACV1C,EAAWp0C,IAAa,EACxBs0C,EAA0Bt0C,IAAa,GAGpChvB,CACV,CAmCD,SAAS2lE,IACL,IAAMpB,EAAiBC,IACjBxkE,EAAO,CAAC,EAEVsgD,EAAM9pD,EAAS8c,MAAMwlC,UAAUsH,KAAKE,IAAM9pD,EAAS8c,MAAMwlC,UAAUsH,KAAKE,IAAM0iB,EAAa1iB,IA0B/F,OAxBAtgD,EAAKu2B,EAAIguC,EAAexpE,QAAUwpE,EAAexpE,QA5dpC,EA6dbiF,EAAKqgD,IAAM7pD,EAAS8c,MAAMwlC,UAAUsH,KAAKC,IAAM7pD,EAAS8c,MAAMwlC,UAAUsH,KAAKC,IAAM2iB,EAAa3iB,IAEhGC,EAAMikB,EAAewD,UAAYxD,EAAewD,UAAYznB,EAC5DtgD,EAAKqgD,IAAMkkB,EAAeyD,UAAYzD,EAAeyD,UAAYhoE,EAAKqgD,IAEtErgD,EAAKqgD,IAAL,UAAcrgD,EAAKqgD,KAEfC,IACAtgD,EAAKsgD,IAAL,UAAcA,IAGb17C,MAAMo+D,EAAaQ,KAA2B,IAApBR,EAAaQ,IAAgC,OAApBR,EAAaQ,KACjExjE,EAAKwjE,GAAKR,EAAaQ,IAGvBR,EAAaU,KACb1jE,EAAK0jE,GAAKV,EAAaU,IAGvBV,EAAaW,KACb3jE,EAAK2jE,GAAKX,EAAaW,IAGpB3jE,CACV,CAqDD,SAAS+mE,EAAsB/3C,GAC3B,IACI,IAAM40B,EAAc9Z,EAAYgY,sBAAsB9yB,GAEtD,OAAKpqB,MAAMg/C,GAIJ,KAHiC,IAA7Bl/C,SAAuB,GAAdk/C,EAMvB,CAFC,MAAOt+C,GACL,OAAO,IACV,CACJ,CAED,SAAS2iE,EAAuBjoE,GAC5B,IACIgjE,EAAaQ,GAAKxjE,EAAK29C,YAG1B,CAFC,MAAOr4C,GAER,CACJ,CAED,SAAS4iE,EAAkBloE,GACvB,IACI,IACM0jE,EADYX,EAAkB/L,aAAah3D,EAAKA,MAhjBxD,IADD,IAmjBS2jE,EAAK3jE,EAAKqzC,UAA8B,QAAlBrzC,EAAKqzC,SAtjBpC,IADC,IAyjBE2vB,EAAaU,GAAb,UAAqBA,GACrBV,EAAaW,GAAb,UAAqBA,EAExB,CADC,MAAOr+D,GACR,CACJ,CAED,SAAS6iE,EAA2BnoE,GAChC,IACQA,EAAKmJ,OAASnJ,EAAKgvB,WACfhvB,EAAKmJ,QAAUsoB,EAAAA,eAEV4xC,EAAoBrjE,EAAKgvB,aAC1Bq0C,EAAoBrjE,EAAKgvB,YAAa,GAErCo0C,EAAWpjE,EAAKgvB,aACjBo0C,EAAWpjE,EAAKgvB,YAAa,GAM5C,CAFC,MAAO1pB,GAER,CACJ,CAED,SAAS8iE,IACL,IAAK,IAAI7xE,KAAO8sE,EACRA,EAAoBrrE,eAAezB,KACnC8sE,EAAoB9sE,IAAO,GAInC,IAAK,IAAIA,KAAO6sE,EACRA,EAAWprE,eAAezB,KAC1B6sE,EAAW7sE,IAAO,EAG7B,CAED,SAAS8xE,EAAkBC,GACvB,IACI,IAAKA,EACD,OAAO,KAEX,IAAMrlE,EAAO9L,OAAO8L,KAAKqlE,GAAU9wE,MAAK,SAACgE,EAAG4H,GAAJ,OAAU5H,EAAE+sE,cAAcnlE,EAA1B,IAClCrO,EAASkO,EAAKlO,OAEhByzE,EAAavlE,EAAK8gD,QAAO,SAAC0kB,EAAKlyE,EAAKV,GACpC,MAAY,MAARU,GAAiC,IAAlB+xE,EAAS/xE,KACC,iBAAlB+xE,EAAS/xE,IAA6B,OAARA,GAAwB,OAARA,GAAwB,OAARA,EACrEkyE,GAAO,GAAJ,OAAOlyE,EAAP,YAAc4gB,KAAKvgB,UAAU0xE,EAAS/xE,KAEzCkyE,GAAO,GAAJ,OAAOlyE,EAAP,YAAc+xE,EAAS/xE,IAE1BV,EAAQd,EAAS,IACjB0zE,GAAO,MAPoCA,CAWlD,GAAE,IAOH,OALAD,EAAaA,EAAW1xE,QAAQ,SAAU,KAGlBA,QAAQ,QAAS,GAK5C,CAFC,MAAOwO,GACL,OAAO,IACV,CACJ,CA6DD,OAZAmW,EAAW,CACPitD,kBAllBJ,SAA2B/lC,GACvB,IACI,GAAI2hC,IAAiB,CACjB,IAAMgE,EAAWjD,EAAa1iC,GACxBgmC,EAqBlB,SAAyBL,GACrB,IACI,IAAM/D,EAAiBC,IACjBO,EAAkBR,EAAexpE,QAAUwpE,EAAethE,KAAKtN,MAAM,KAAOa,EAAS8c,MAAMwlC,UAAUsH,KAAKK,YAEhH,OAAOtpD,OAAO8L,KAAKqlE,GACdl0E,QAAO,SAAAmC,GAAG,OAAIwuE,EAAgB/qD,SAASzjB,EAA7B,IACVwtD,QAAO,SAAC35C,EAAK7T,GAEV,OADA6T,EAAI7T,GAAO+xE,EAAS/xE,GACb6T,CACV,GAAE,CAAC,EAGX,CAFC,MAAO9E,GACL,OAAOgjE,CACV,CACJ,CAnCoCM,CAAgBN,GACnCO,EAAqBR,EAAkBM,GAQ7C,OANAzmC,EAASqK,QAAQ4Z,GAAAA,oBAA4C,CACzDr5B,IAAK6V,EAAQ7V,IACbkC,UAAW2T,EAAQ3T,UACnBs5C,SAAAA,EACAE,WAAYK,IAET,CACHtyE,IA1HY,OA2HZlB,MAAOwzE,EAEd,CAED,OAAO,IAGV,CAFC,MAAOvjE,GACL,OAAO,IACV,CACJ,EA4jBGwjE,oBAhiBJ,SAA6BnmC,GACzB,IACI,GAAI2hC,IAAiB,CACjB,IAAMgE,EAAWjD,EAAa1iC,GACxBomC,EAAmB5E,EAAgBmE,EAAUlD,EAAsB,CAAC,KAAM,IAAK,KAAM,QACrF4D,EAAoB7E,EAAgBmE,EAAUlD,EAAsB,CAAC,KAAM,KAAM,MAAO,MAAO,MAAO,QACtG6D,EAAmB9E,EAAgBmE,EAAUlD,EAAsB,CAAC,KAAM,SAC1E8D,EAAoB/E,EAAgBmE,EAAUlD,EAAsB,CAAC,MAAO,KAAM,KAAM,MAAO,KAAM,OACrGx0B,EAAU,CACZ,cAAey3B,EAAkBU,GACjC,eAAgBV,EAAkBW,GAClC,cAAeX,EAAkBY,GACjC,eAAgBZ,EAAkBa,IAStC,OANAhnC,EAASqK,QAAQ4Z,GAAAA,oBAA4C,CACzDr5B,IAAK6V,EAAQ7V,IACbkC,UAAW2T,EAAQ3T,UACnBs5C,SAAAA,EACA13B,QAAAA,IAEGA,CACV,CAED,OAAO,IAGV,CAFC,MAAOtrC,GACL,OAAO,IACV,CACJ,EAqgBGk/D,8BAAAA,EACA3B,UAvoBJ,SAAmBruD,GACVA,IAEDA,EAAOq1B,gBACPA,EAAgBr1B,EAAOq1B,eAGvBr1B,EAAOs1B,cACPA,EAAct1B,EAAOs1B,aAGrBt1B,EAAOu1B,qBACPA,EAAqBv1B,EAAOu1B,oBAG5Bv1B,EAAOyuD,+BACPA,EAA+BzuD,EAAOyuD,8BAE7C,EAsnBGz9B,MAdJ,WACItD,EAASuD,IAAIhU,EAAAA,sBAAyCw2C,EAAwB/qE,MAC9EglC,EAASuD,IAAIhU,EAAAA,gBAAmCy2C,EAAmBhrE,MACnEglC,EAASuD,IAAIhU,EAAAA,2BAA8C02C,EAA4B1sD,GACvFymB,EAASuD,IAAIhU,EAAAA,gBAAmC22C,EAAmB3sD,GAEnE8nD,GACH,EAQGv+B,WAjpBJ,WACI9C,EAASyD,GAAGlU,EAAAA,sBAAyCw2C,EAAwBxsD,GAC7EymB,EAASyD,GAAGlU,EAAAA,gBAAmCy2C,EAAmBzsD,GAClEymB,EAASyD,GAAGlU,EAAAA,2BAA8C02C,EAA4B1sD,GACtFymB,EAASyD,GAAGlU,EAAAA,gBAAmC22C,EAAmB3sD,GAClEymB,EAASyD,GAAGlU,EAAAA,wBAA2CoyC,EAAyBpoD,EACnF,EA4oBG6oD,cAAAA,GAvpBAvB,EAAoBrK,GAAkBtsC,GAASM,cAC/CoV,EAASK,EAAMuD,UAAUjqB,GACzB8nD,IA0pBG9nD,CACV,CAEDqnD,GAAUn4C,sBAAwB,YAClC,OAAeE,EAAAA,oBAAiCi4C,27ECltBhD,IAAMqG,GAAc,SACdC,GAAe,UACfC,GAA+B,QAC/BC,GAAkCD,GAA+BF,GACjEI,GAAmCF,GAA+BD,GAoBlEI,GASM,SAGNC,GAAoB,CAxBC,KAQV,KACK,KACT,KAqBPC,GAA0B,CAC5B,MAjBO,IAkBP,MAnBO,IAoBP,KAhBoB,KAiBpB,OAAUF,IAGRG,GAAe,UAErB,SAASC,KAEL,IAGInuD,EACAqmB,EACA+nC,EACAC,EANE19C,EAAUlvB,KAAKkvB,QACf8V,EAAWyR,GAASvnB,GAASM,cAgBnC,SAAS62C,IACLsG,EAAoB,CAAC,EACrBC,EAAqB,CAAC,CACzB,CAED,SAASC,EAAa13B,GACbA,GAGLl7C,OAAO8L,KAAKovC,GAAQhD,SAAQ,SAAA94C,GACnBkzE,GAAkBzvD,SAASzjB,WACrB87C,EAAO97C,EAErB,GACJ,CAED,SAASyzE,EAAqB30E,GAE1B,OAAKA,GAIuB,UAAxBA,EAAML,gBAIN20E,GAAah3D,KAAKtd,GACXqP,SAASrP,EAAO,IAGpBA,EAAMyB,QAAQ,QAAS,IACjC,CAED,SAASmzE,EAAiB50E,GACtB,IAGI,IAFA,IAAMg9C,EAAS,CAAC,EACV63B,EAAQ70E,EAAMM,MAAM,KACjB8F,EAAI,EAAGA,EAAIyuE,EAAMn1E,OAAQ0G,IAAK,CAEnC,IAAM0uE,EAAUD,EAAMzuE,GAAG9F,MAAM,KACzBY,EAAM4zE,EAAQ,GACd5zC,EAAIyzC,EAAqBG,EAAQ,IACvC93B,EAAO97C,GAAOggC,CACjB,CACD,OAAO8b,CAGV,CAFC,MAAO/sC,GACLw8B,EAAO/2B,MAAM,qDAAsDzF,EACtE,CACJ,CAED,SAAS8kE,EAAkB/0E,GACvB,IAOI,IANA,IAAMg9C,EAAS,CAAC,EACVwc,EAAUx5D,EAAMM,MAAM,KAGtBu0E,EADQrb,EAAQA,EAAQ95D,OAAS,GACnBY,MAAM,KAEjB8F,EAAI,EAAGA,EAAIyuE,EAAMn1E,OAAQ0G,IAAK,CAEnC,IAAM0uE,EAAUD,EAAMzuE,GAAG9F,MAAM,KACzBY,EAAM4zE,EAAQ,GACd5zC,EAAIyzC,EAAqBG,EAAQ,IACvC93B,EAAO97C,GAAOggC,CACjB,CACD,OAAO8b,CAIV,CAHC,MAAO/sC,GAEL,OADAw8B,EAAO/2B,MAAM,sDAAuDzF,GAC7D,EACV,CACJ,CAED,SAAS+kE,EAAuBr7C,GAC5B,OAAO06C,GAAwB16C,IAhH5B,GAiHN,CAED,SAASs7C,EAA4BC,EAAY3E,EAAIrvE,GACjD,IAAM87C,EAASk4B,IAAepB,GAAcU,EAAoBC,EAC1DU,EAAWn4B,EAAOuzB,IAAO,CAAC,EAC1B6E,EAAep4B,EAAOm3B,KAAwB,CAAC,EAErD,OADcgB,EAASj0E,IAAQk0E,EAAal0E,EAE/C,CAiGD,OAbAklB,EAAW,CACPonD,UAzKJ,WAAiC,EA0K7B79B,WA5KJ,WAAwB,EA6KpBQ,MAPJ,WACI+9B,GACH,EAMGmH,qBAtFJ,SAA8BvoB,EAAiBnzB,GAK3C,IAJA,IAAI27C,EAAe,KACfC,EAAgB,KACdh6B,EAAUuR,EAAgBxsD,MAAM,QAE7B8F,EAAIm1C,EAAQ77C,OAAS,EAAG0G,GAAK,EAAGA,IAAK,CAC1C,IACIo2D,EADWjhB,EAAQn1C,GACRvF,MAAP,GAAa,gGAAb,kBACR,GAAI27D,GAAKA,EAAEv4D,OAAQ,CAEf,IAAI/C,EAAMs7D,EAAEv4D,OAAO/C,IAAIvB,cACnBK,EAAQw8D,EAAEv4D,OAAOjE,MACrB,OAAQkB,GACJ,KAAK+yE,GACDqB,EAAeV,EAAiB50E,GAChC6sC,EAASqK,QAAQgI,GAAAA,mBAA2Bo2B,GAC5C,MACJ,KAAKpB,GACIqB,IACDA,EAAgBR,EAAkB/0E,IAMjD,CACJ,CAGD,IAAIuwE,EAAK4D,GAmBT,OAlBImB,GAAgBA,EAAY,GAC5B/E,EAAK+E,EAAY,GACV37C,IACP42C,EAAKyE,EAAuBr7C,IAIhC+6C,EAAaF,EAAkBjE,IAC/BmE,EAAaD,EAAmBlE,IAG5B+E,IACAd,EAAkBjE,GAAMzuE,OAAOC,OAAOyyE,EAAkBjE,IAAO,CAAC,EAAG+E,IAEnEC,IACAd,EAAmBlE,GAAMzuE,OAAOC,OAAO0yE,EAAmBlE,IAAO,CAAC,EAAGgF,IAGlE,CACHC,OAAQF,EACRG,QAASF,EAEhB,EAmCGG,cAjCJ,SAAuB3wE,GACnB,IAAIwrE,EAAKyE,EAAuBjwE,GAEhC,OADSkwE,EAA4BlB,GAAcxD,EAvMhC,QAwMD,CACrB,EA8BGoF,uBA5BJ,SAAgC5wE,GAC5B,IAAIwrE,EAAKyE,EAAuBjwE,GAEhC,OADUkwE,EAA4BlB,GAAcxD,EAhNlC,QAiNC,IACtB,EAyBGqF,iBAvBJ,SAA0B7wE,GACtB,IAAIwrE,EAAKyE,EAAuBjwE,GAEhC,OADSkwE,EAA4BlB,GAAcxD,EA9MvC,OA+MK,IACpB,EAoBGsF,iBAlBJ,SAA0B9wE,GACtB,IAAIwrE,EAAKyE,EAAuBjwE,GAEhC,OADSkwE,EAA4BlB,GAAcxD,EAnNtC,QAoNI,IACpB,GAxKG9jC,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChD8nD,IA0LG9nD,CACV,CAEDmuD,GAAUj/C,sBAAwB,YAClC,OAAeE,EAAAA,oBAAiC++C,ICjQhD,SAASuB,KAEL,IACIlI,EAgCJ,MANW,CACPJ,UAzBJ,SAAmBruD,GACVA,GAEDA,EAAOyuD,+BACPA,EAA+BzuD,EAAOyuD,6BAE7C,EAoBGmI,sBARJ,SAA+BC,GAAc,UACjC5S,GADiC,oBACTwK,SADS,iBACT,EAA8BkC,uCADrB,aACT,EAA+DpD,2BADtD,QAC6E,CAAC,GAA/GtJ,oBAER,OAD8BA,GAAuD,KAAhCA,aAAA,EAAAA,EAAqB1jE,SAAgB0jE,EAAoBz+C,SAASqxD,EAE1H,EAKGC,wBAnBJ,SAAiCC,EAAan8C,GAAgB,UAE1D,GAAGm8C,GAAe3+C,EAAY4B,sBAC1B,OAAO,EAH+C,IAKlD+pC,GALkD,oBAKxB0K,SALwB,iBAKxB,EAA8BkC,uCALN,aAKxB,EAA+DpD,2BALvC,QAK8D,CAAC,GAAjHxJ,sBAER,OADkCA,GAA2D,KAAlCA,aAAA,EAAAA,EAAuBxjE,SAAgBwjE,EAAsBv+C,SAASoV,EAEpI,EAeJ,CAED+7C,GAAyBxgD,sBAAwB,2BACjD,OAAeE,EAAAA,oBAAiCsgD,ICvChD,SAASK,KAEL,IASI/vD,EACAqmB,EAFE1V,EAAUlvB,KAAKkvB,QAGjBq/C,EAAe,CAAC,EAEpB,SAASvlB,IACLpkB,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,EACnD,CAOD,SAASiwD,EAA+BC,GAUpC,IATA,IAAMhzE,EAAS,CAAC,EAEZizE,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAS,EACPC,EAAIL,EAAkB52E,OAGnB0G,EAAI,EAAGA,EAAIuwE,IAAKvwE,EACrBmwE,GAAQD,EAAkBlwE,GAAGgoD,4BAC7BooB,GAAQF,EAAkBlwE,GAAGmoD,YAC7BkoB,GAASH,EAAkBlwE,GAAGgoD,4BAA8BkoB,EAAkBlwE,GAAGmoD,YACjFmoB,GAAUJ,EAAkBlwE,GAAGgoD,4BAA8BkoB,EAAkBlwE,GAAGgoD,4BAMtF,OAHA9qD,EAAOk5D,GAAMia,EAAQF,EAAOC,EAAOG,IAAOD,EAASH,EAAOA,EAAOI,GACjErzE,EAAOyK,EAAIyoE,EAAOG,EAAIrzE,EAAOk5D,EAAI+Z,EAAOI,EAEjC,SAAU7xD,GACb,OAAOxhB,EAAOk5D,EAAI13C,EAAIxhB,EAAOyK,CAChC,CACJ,CAED,SAAS6oE,EAAsBC,GAC3B,IACIC,EADAF,GAAwB,EAEtBG,EAA8BF,EAAiBnoB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,EAAKooB,uBAA5B,GAAqD,GAAKH,EAAiBn3E,OAmBvI,OAlBAm3E,EAAiB78B,SAAQ,SAAAwiB,GAEjBnyD,KAAK4sE,IAAIza,EAAEwa,wBAA0Bxa,EAAE0a,2BAA6B,MACpEN,GAAwB,GAIxBpa,EAAEwa,wBAA0BD,EAA8B,KAC1DH,GAAwB,GAIvBE,EAEMA,EAActa,EAAEnE,UACvBue,GAAwB,GAFxBE,EAActa,EAAEnE,OAIvB,IACMue,CACV,CA6JD,OATAxwD,EAAW,CACPyqC,MAAAA,EACAhC,eA7BJ,SAAwBvhB,EAAS6pC,EAAyBb,EAAmBc,EAAe7qB,GACpFjf,GAAWA,EAAQ3T,YAAcy8C,EAAa9oC,EAAQ3T,aACtDy8C,EAAa9oC,EAAQ3T,WAAa,IAEtC,IAAM09C,EAAe/pC,EAAQ1T,UAAUo3C,YAAYb,MAAK,SAAA5sE,GAAI,OAAIA,EAAKowB,KAAO2Z,EAAQvY,gBAAxB,IAC5DqhD,EAAa9oC,EAAQ3T,WAAW/5B,KAAK,CACjCY,MAAO8sC,EAAQ9sC,MACf82E,MAAOhqC,EAAQvY,iBACf4E,UAAW2T,EAAQ3T,UACnBy9C,cAAAA,EACAG,gCAAiCjqC,EAAQlT,sBAAsB/rB,UAC/DmpE,cAAkC,IAAnBlqC,EAAQzT,SACvB49C,iBAAkBnB,EAAkB5nB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,EAAKV,uBAA5B,GAAqD,GAChGwpB,aAAcpB,EAAkB5nB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,EAAKT,UAA5B,GAAwC,GAC/EkK,QAASgf,GAAgBA,EAAazpC,UACtCojC,YAAa1jC,EAAQ1T,UAAUo3C,YAC/BsF,kBAAAA,EACAa,wBAAAA,EACA5qB,0BAAAA,EACAorB,wBAAyBtB,EAA+BC,EAAkB31E,MAAM,MAGhFy1E,EAAa9oC,EAAQ3T,WAAWj6B,OArNV,IAsNtB02E,EAAa9oC,EAAQ3T,WAAWi+C,OAEvC,EAKGprB,6BAxDJ,SAAsClf,EAASuqC,GAC3C,IAAMC,EAAwB1B,EAAa9oC,EAAQ3T,YAAcy8C,EAAa9oC,EAAQ3T,WAAWh5B,OAAO,GAExG,OAAKm3E,GAAyBA,EAAsBp4E,OAAS,EAClD,EAMNk3E,EAAsBkB,GAKpBD,EAAuB,EA9KR,QA8KoDA,EAAuB,EAJtF,CAKd,EAyCG9oB,+BAhJJ,SAAwCzhB,GACpC,IAAMyqC,EAAkB3B,EAAa9oC,EAAQ3T,WAAWh5B,OAAO,GAAGoZ,MAC5D+9D,EAAwB1B,EAAa9oC,EAAQ3T,WAAWh5B,OAAO,GAG/Dq3E,EAA0BD,EAAgBzB,kBAAkB31E,OAAO,GAAGoZ,MAAMq0C,4BAClF2pB,EAAgBb,0BAA4Ba,EAAgBJ,wBAAwBK,EAA0B,GAC9GD,EAAgBf,wBAA0Be,EAAgBJ,wBAAwBK,GAElF,IAAMC,EAAiBrB,EAAsBkB,GAEvCI,EAA2BD,EAtFG,GADK,GA0FzC,GAAIF,EAAgBE,gBAvFqB,KAuFHF,EAAgBP,cAAuDO,EAAgBZ,wBACzH,OAAOY,EAAgBZ,wBAG3B,IAAKc,GAAkBF,EAAgBP,cAAgBO,EAAgBZ,wBACnE,MA/FqC,GA+F9BY,EAAgBZ,wBAM3B,GAAIY,EAAgBR,iCAAoCQ,EAAgBX,cAAgBW,EAAgBxrB,0BAA6BwrB,EAAgBP,cACjJ,MAtGqC,GAsG9BO,EAAgBZ,wBAS3B,IAJA,IAAMgB,EAAwBJ,EAAgBX,cAAgBW,EAAgBxrB,0BAA6BwrB,EAAgBR,gCACvHa,EAAiB,EACjBC,EAA0B,EAC1BC,EAAa,EACR93E,EAAQ,EAAGA,EAAQu3E,EAAgBzB,kBAAkB52E,OAAQc,IAAS,CAC3E,IAAM+3E,EAAQR,EAAgBzB,kBAAkB91E,GAChD,GAAI23E,EAAuBE,EAA0BE,EAAMrqB,wBACvD,MAEJmqB,GAA2BE,EAAMrqB,wBACjCkqB,GAAkBG,EAAMpqB,WACxBmqB,GACH,CAQD,GANIH,EAAuB,GACvB1rC,EAAO50B,KAAK,2DAKZugE,GAAkBC,GAA2BC,EAAwD,GAA3CP,EAAgBzB,kBAAkB52E,OAAc,CAC1G,IAAM84E,EAAqBJ,EAAiBC,EACtCI,EAA0BV,EAAgBL,aAAec,EAE/D,OAAIT,EAAgBZ,wBAA0BsB,EACnCV,EAAgBZ,wBAA0Be,EAE9CO,EAA0BP,CACpC,CAMD,IAAIQ,EAAoBX,EAAgB1f,QASxC,OARA0f,EAAgB/G,YAAYp4B,MAAK,SAAA7qC,GAC7B,GAAIA,EAAE6/B,UAAYmqC,EAAgB1f,QAE9B,OADAqgB,EAAoB3qE,EAAE6/B,WACf,CAEd,IAGG8qC,IAAsBX,EAAgB1f,QAC/B0f,EAAgBZ,wBAA0Be,EAE9CA,EAA2BH,EAAgBL,aAAe,EAAI,IAAOgB,CAC/E,GAqED7nB,IAEOzqC,CACV,CAED+vD,GAA0B7gD,sBAAwB,4BAClD,OAAeE,EAAAA,oBAAiC2gD,6OC1OzC,SAASwC,GAAmBC,EAAW7zE,GAC1C,GAAI,GAAO6zE,KAAc7zE,EACrB,MAAMwrC,EAAAA,kBAEb,CCHD,IACMsoC,GAAW,CACbC,QAAS,GACTC,OAAQ,EACRC,KAAM,GAGV,SAASC,GAAcpqD,EAAGhe,EAAGsQ,GAEzB,IACIgZ,EACAwkB,EAyBJ,OAVAxkB,OAAiBt6B,IAANgvB,GA1BG,EA0B4BA,EAC1C8vB,EAZA,SAAqBx9B,GACjB,IAAIuK,EAAMmtD,GAASC,QAMnB,OAHI33D,IAAM03D,GAASC,SAAW33D,IAAM03D,GAASE,QAAU53D,IAAM03D,GAASG,OAClEttD,EAAMvK,GAEHuK,CACV,CAIUwtD,CAAY/3D,GAGZ,CACPgZ,QAASA,EACTz1B,YAJY7E,IAANgR,EAAmB,KAAOA,EAKhC8tC,SAAUA,EAIjB,CAEDs6B,GAAc3jD,sBAAwB,gBACtC,IAAM92B,GAAUg3B,EAAAA,gBAA6ByjD,IAC7Cz6E,GAAQ26E,WAzCU,EA0ClB36E,GAAQq6E,SAAWA,GACnBrjD,EAAAA,mBAAgCyjD,GAAc3jD,sBAAuB92B,IAErE,qLCZA,GADgB,IA7BV46E,WAwBF,0GAAc,SACVvxE,KAAK+qB,MACR,0CAxBD,WACI/qB,KAAKwxE,eAAiB,UACtBxxE,KAAKyxE,aAAe,WACpBzxE,KAAK0xE,aAAe,gBACpB1xE,KAAK2xE,aAAe,cACpB3xE,KAAK20B,cAAgB,eACrB30B,KAAK4xE,aAAe,cACpB5xE,KAAK6xE,WAAa,YAClB7xE,KAAK00B,aAAe,gBACpB10B,KAAK8xE,aAAe,cACpB9xE,KAAK+xE,SAAW,UAChB/xE,KAAKgyE,eAAiB,gBACtBhyE,KAAKiyE,gBAAkB,iBACvBjyE,KAAKkyE,eAAiB,gBACtBlyE,KAAKmyE,gBAAkB,iBACvBnyE,KAAKoyE,4BAA8B,2BACnCpyE,KAAKqyE,2BAA6B,mCAClCryE,KAAKsyE,UAAY,WACjBtyE,KAAKuyE,WAAa,YAClBvyE,KAAKwyE,gCAAkC,cAC1C,0BAtBCjB,ICDN,SAASkB,GAAen7D,GAEpBA,EAASA,GAAU,CAAC,EACpB,IAAM4X,EAAUlvB,KAAKkvB,QACf0d,EAAct1B,EAAOs1B,YA8D3B,MAPW,CACP8lC,YA3CJ,SAAqBC,GACjB,IAAMC,EAAgBxB,GAAcliD,GAASxxB,SAE7C,KAAKi1E,GAAiBA,EAAa73E,eAAe,iBAAoB63E,EAAa73E,eAAe,iBAAoB63E,EAAa73E,eAAe,0BAC7I63E,EAAa73E,eAAe,qBAAwB63E,EAAa73E,eAAe,0BACjF,OAAO83E,GAXf,WACI,IAAKhmC,IAAgBA,EAAY9xC,eAAe,yBAC5C,MAAM,IAAI1C,MAAMswC,EAAAA,qBAEvB,CAUGsG,GAEA,IAAMjd,EAAY4gD,EAAaE,eACzB/gD,EAAY6gD,EAAaG,eACzBC,EAAqBnmC,EAAYomC,sBAAsBlhD,GACvDmhD,EAAqBN,EAAaO,wBAClCvmC,EAAgBgmC,EAAaQ,mBAC7BhuC,EAAawtC,EAAatrC,gBAC1BiI,EAAWnK,EAAaA,EAAWrZ,GAAK,KACxCqO,EAAYgL,GAAcA,EAAWiuC,aAAejuC,EAAWiuC,aAAaj5C,UAAY,KACxFk5C,EAAoB1mC,EAAc48B,uBAClC+J,EAAaD,EAAkB7J,yBAAyB13C,EAAWqI,GACnEwU,EAAU0kC,EAAkBE,kBAAkBzhD,GAC9C0hD,EAAwBb,EAAaa,wBAE3C,OAAI9rE,MAAM4rE,KAAgBP,GAAsBS,GAI5C7mC,EAAc8mC,uBAAuBnkC,EAAUxd,KAAey/C,GAAAA,eAC1DwB,EAAmB9mE,QAAUslE,GAAAA,eAAkCp3C,KAC/Dy4C,EAActgD,QAAUqa,EAAc+mC,qBAAqB3hD,EAAWuhD,EAAYhkC,EAAUX,GAC5FskC,EAAmBU,mBAAmB,GACtCf,EAAc/1E,OAAS,CAACy2E,WAAYA,EAAY3kC,QAASA,IAPtDikC,CAYd,EAQGtqC,MANJ,WAEC,EAUJ,CAEDmqC,GAAehlD,sBAAwB,iBACvC,OAAeE,EAAAA,gBAA6B8kD,IClE5C,SAASmB,GAAuBt8D,GAE5BA,EAASA,GAAU,CAAC,EACpB,IAOIiH,EACAqmB,EACAivC,EANE3kD,EAAUlvB,KAAKkvB,QACf8V,EAAWyR,GAASvnB,GAASM,cAC7Bod,EAAct1B,EAAOs1B,YAiF3B,SAASrH,KACLsuC,EAAkB,CAAC,GACHnrC,EAAAA,OAAmB,CAAEorC,YAvFZ,GAwFzBD,EAAgBnrC,EAAAA,OAAmB,CAAEorC,YAxFZ,EAyF5B,CAED,SAASC,IACLxuC,GACH,CAED,SAASyuC,EAAiB5rE,GACjBV,MAAMU,EAAEupB,YAAevpB,EAAE0pB,YAAc4W,EAAAA,OAAmBtgC,EAAE0pB,YAAc4W,EAAAA,OACvEmrC,EAAgBzrE,EAAE0pB,WAAWgiD,YAAc,GAC3CD,EAAgBzrE,EAAE0pB,WAAWgiD,aAGxC,CAeD,OAPAv1D,EAAW,CACPm0D,YA7EJ,SAAqBC,GACjB,IAAMC,EAAgBxB,GAAcliD,GAASxxB,SAE7C,IAAKi1E,IAAiBA,EAAa73E,eAAe,gBAC9C,OAAO83E,GApBf,WACI,IAAKhmC,IAAgBA,EAAY9xC,eAAe,2BAA6B8xC,EAAY9xC,eAAe,yBACpG,MAAM,IAAI1C,MAAMswC,EAAAA,qBAEvB,CAmBGsG,GAEA,IAAMld,EAAY6gD,EAAaG,eACzBC,EAAqBnmC,EAAYomC,sBAAsBlhD,GAEvDmiD,EADqBtB,EAAauB,wBACID,iBACtC9uC,EAAawtC,EAAatrC,gBAC1BiI,EAAWnK,EAAaA,EAAWrZ,GAAK,KACxCmnD,EAAqBN,EAAaO,wBAClC/4C,EAAYgL,GAAcA,EAAWiuC,cAAgBjuC,EAAWiuC,aAAaj5C,UAMnF,GA0BJ,SAAsBg6C,EAAmBriD,GACrC,OAAQqiD,GAAqBN,EAAgB/hD,GAAWgiD,YAAc,CACzE,CA5BOM,CALuBnB,EAAmBoB,wBAIDC,2BACTxiD,KAAemiD,EAC/C,OAAOrB,EAGX,GAAIG,GAAsBA,EAAmB9mE,QAAUslE,GAAAA,aACnD3sC,EAAOK,MAAM,IAAMnT,EAAY,yCAC/B8gD,EAActgD,QAAU,EACxBsgD,EAAc/1E,OAAS,8CACpB,CACH,IAAMk1B,EAAY4gD,EAAaE,eACzBlmC,EAAgBgmC,EAAaQ,mBAC7BE,EAAoB1mC,EAAc48B,uBAElC7iB,EAAc9Z,EAAYgY,sBAAsB9yB,GAChDwhD,EAAaD,EAAkBkB,qBAAqBziD,EAAWqI,GAC/DwU,EAAU0kC,EAAkBE,kBAAkBzhD,GAC9C0+B,EAAU8iB,GAAc5sB,EAAcutB,GAxEV,GA0ElCrB,EAActgD,QAAUqa,EAAc+mC,qBAAqB3hD,EAAWy+B,EAASlhB,EAAUX,GACzFikC,EAAc/1E,OAAS,2EAC1B,CAED,OAAO+1E,CAEV,EAgCGtqC,MARJ,WACI/C,IACAP,EAASuD,IAAIhU,EAAAA,iBAAoCw/C,EAAoBx1D,GACrEymB,EAASuD,IAAI8O,GAAAA,4BAAoC28B,EAAkBz1D,EACtE,GAhGGqmB,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChDgnB,IACAP,EAASyD,GAAGlU,EAAAA,iBAAoCw/C,EAAoBx1D,GACpEymB,EAASyD,GAAG4O,GAAAA,4BAAoC28B,EAAkBz1D,GAsG/DA,CACV,CAEDq1D,GAAuBnmD,sBAAwB,yBAC/C,OAAeE,EAAAA,gBAA6BimD,ICjI5C,SAASY,GAAoBl9D,GAEzBA,EAASA,GAAU,CAAC,EAEpB,IAKIiH,EACAqmB,EACA6vC,EACAC,EACAC,EATEzlD,EAAUlvB,KAAKkvB,QACf0lD,EAAmBt9D,EAAOs9D,iBAC1BhoC,EAAct1B,EAAOs1B,YACrBtzC,EAAWge,EAAOhe,SAwGxB,SAASgvC,IACLmsC,EAAe,CAAC,EAChBC,EAAc,CAAC,EACfC,EAAkB,EACrB,CASD,OAPAp2D,EAAW,CACPs2D,cAxFJ,SAAuBlC,GACnB,IAAMC,EAAgBxB,GAAcliD,GAASxxB,OAAO0zE,GAAAA,UAAyB,CAACl5E,KAAMs8E,GAAoB/mD,wBAExG,KAAKklD,GAAiBA,EAAa73E,eAAe,iBAAoB63E,EAAa73E,eAAe,iBAAoB63E,EAAa73E,eAAe,sBAC7I63E,EAAa73E,eAAe,0BAA6B63E,EAAa73E,eAAe,qBACtF,OAAO83E,EAGX,IAlB4B11E,EAAM4uB,EAkB5BiG,EAAY4gD,EAAaE,eACzB/gD,EAAY6gD,EAAaG,eACzB3tC,EAAawtC,EAAatrC,gBAC1BiI,EAAWnK,EAAaA,EAAWrZ,GAAK,KACxC/V,EAAM48D,EAAamC,oBAEzB,IAAKptE,MAAMqO,EAAIpd,OAAQ,CAxBKuE,EAyBD40B,EAzBOhG,EAyBI/V,EAAIpd,MAxB1C87E,EAAav3E,GAAQu3E,EAAav3E,IAAS,CAAC,EAC5Cu3E,EAAav3E,GAAM4uB,GAAM2oD,EAAav3E,GAAM4uB,IAAO,CAAC,EAyBhD,IAAMoyB,EAAmB02B,EAAiBG,sBAE1C,GADoBnoC,EAAYgY,sBAAsB9yB,GACnCosB,EACf,OAAO00B,EAGX,IAAMoC,EAAeP,EAAa3iD,GAAW/b,EAAIpd,OACjD,GAAqB,OAAjBq8E,GAA+C,OAAtBj/D,EAAIqc,eAA0BsiD,EAAY55E,eAAek6E,EAAalpD,IAC/F,OAAO8mD,EAkBX,QAdmC56E,IAA/Bg9E,EAAaC,gBACbN,EAAgB7iD,GAAa,GAC7BkjD,EAAaC,cAAgBl/D,EAAIqc,cAAc5rB,UAC/CwuE,EAAa35C,gBAAkBtlB,EAAIic,SACnCgjD,EAAariD,WAAa5c,EAAI4c,WAC9BqiD,EAAalpD,GAAK/V,EAAIpd,OAE1Bq8E,EAAatiD,YAAc3c,EAAI2c,YAC/BsiD,EAAaE,aAAc,IAAI5uE,MAAOE,UAAYwuE,EAAaC,cAE3DD,EAAatiD,YAAc,GAAKsiD,EAAaE,YAAc,GA5CvE,SAA0Ch4E,EAAMo2E,GAC5CqB,EAAgBz3E,GAAQy3E,EAAgBz3E,IAAS,GACjDy3E,EAAgBz3E,GAAMnF,KAAKu7E,EAC9B,CA0CW6B,CAAiCrjD,EAAWtvB,KAAKikD,MAAiC,EAA3BuuB,EAAatiD,YAAkBsiD,EAAaE,cAGnGP,EAAgB7iD,GAAWj6B,QAAUyB,EAAS8c,MAAMwlC,UAAU8F,IAAIQ,mBAAmBD,oBAAoBI,oBACzG2yB,EAAaE,YAAc57E,EAAS8c,MAAMwlC,UAAU8F,IAAIQ,mBAAmBD,oBAAoBE,oBAC/F6yB,EAAatiD,YAAcsiD,EAAariD,WAAY,CAEpD,IAAMyiD,EAAoBT,EAAgB7iD,GAAW+0B,QAAO,SAACvoD,EAAG4H,GAAJ,OAAU5H,EAAI4H,CAAd,GAAiB,GAI7E,GAHA8uE,EAAaK,wBAA0B7yE,KAAKikD,MAAM2uB,EAAoBT,EAAgB7iD,GAAWj6B,QACjGm9E,EAAaM,0BAAuD,EAA1BN,EAAariD,WAAiBqiD,EAAaK,wBAA2B,KAAM95C,QAAQ,GAE1Hy5C,EAAaM,wBAA0BN,EAAa35C,gBAAkB/hC,EAAS8c,MAAMwlC,UAAU8F,IAAIQ,mBAAmBD,oBAAoBG,mBAAsE,IAAjDuwB,EAAauB,wBAAwB5hD,QACpM,OAAOsgD,EACJ,IAAK8B,EAAY55E,eAAek6E,EAAalpD,IAAK,CAErD,IAAM6gB,EAAgBgmC,EAAaQ,mBAC7BoC,EAAiBP,EAAariD,WAAaqiD,EAAatiD,YACxDy2C,EAAcx8B,EAAc6oC,eAAezjD,GAC3CO,EAAUqa,EAAc+mC,qBAAqB3hD,EAAWijD,EAAaK,wBAA0B/7E,EAAS8c,MAAMwlC,UAAU8F,IAAIY,sBAAuBhT,GACnJmmC,EAAa9oC,EAAc+oC,sBAAsB5jD,EAAWwd,GAC5De,OAA6Br4C,IAAfy9E,EAA4BjzE,KAAKk+C,IAAI+0B,EAAYnjD,GAAWA,EAG5EijD,EAF4BP,EAAariD,WAAaw2C,EAAY94B,GAAYmgB,QAAU2Y,EAAYx8B,EAAcgpC,cAAc7jD,EAAWwd,IAAWkhB,UAGtJoiB,EAActgD,QAAU+d,EACxBuiC,EAAc/1E,OAAOy2E,WAAa0B,EAAaK,wBAC/CzC,EAAc/1E,OAAO+4E,WAAaZ,EAAalpD,GAC/C8mD,EAAc/1E,OAAOg5E,KAAO71E,KAAK4zB,eACjC8gD,EAAYM,EAAalpD,IAAMkpD,EAC/BpwC,EAAOK,MAAM,IAAMnT,EAAY,YAAYkjD,EAAalpD,GAAG,kDAAmDukB,EAAY,0BAA2B2kC,EAAaK,gCAC3JZ,EAAa3iD,GAAWkjD,EAAalpD,IAEnD,CACJ,MAAUkpD,EAAatiD,cAAgBsiD,EAAariD,mBAC1C8hD,EAAa3iD,GAAWkjD,EAAalpD,GAEnD,CAED,OAAO8mD,CACV,EAUGtqC,MAAOA,GAvGP1D,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChD+pB,IA2GG/pB,CACV,CAEDi2D,GAAoB/mD,sBAAwB,sBAC5C,OAAeE,EAAAA,gBAA6B6mD,IC9J5C,SAASsB,KAEL,IACIv3D,EACAqmB,EAFE1V,EAAUlvB,KAAKkvB,QAyDrB,OANA3Q,EAAW,CACPm0D,YAzCJ,SAAqBC,GACjB,IAAMC,EAAgBxB,GAAcliD,GAASxxB,SAE7C,IAAKi1E,IAAiBA,EAAa73E,eAAe,2BAC9C,OAAO83E,EAGX,IAAMmD,EAAuBpD,EAAaqD,0BACpC1mC,EAAWqjC,EAAatrC,gBAAgBvb,GAE9C,GAAIiqD,EAAsB,CACtB,IAAME,EAAMF,EAAqBG,gBAAgB5mC,GAEjD,IAAK2mC,GAAsB,IAAfA,EAAIp+E,OACZ,OAAO+6E,EAQX,IALA,IAAIuD,EAAgB,EAChBC,EAAc,EACdC,EAAWjF,GAAAA,UAGN7yE,EAAI,EAAGA,EAAI03E,EAAIp+E,OAAQ0G,IAC5B,GAAI03E,EAAI13E,KACJ43E,EAAgBF,EAAI13E,GAAG+3E,oBACvBF,EAAcH,EAAI13E,GAAGg4E,kBA/BZ,KAiC6BJ,EAAgBC,EAlCpC,KAkC6E,CAC3FC,EAAW93E,EAAI,EACfqmC,EAAOK,MAAM,UAAYoxC,EAAW,oBAAsBF,EAAgB,kBAAoBC,GAC9F,KACH,CAGT,OAAOhF,GAAcliD,GAASxxB,OAAO24E,EAAU,CAAEF,cAAeA,GACnE,CAED,OAAOvD,CACV,GAzCGhuC,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAiD7CA,CACV,CAEDu3D,GAAkBroD,sBAAwB,oBAC1C,OAAeE,EAAAA,gBAA6BmoD,IC9D5C,SAASU,KAEL,IAEIj4D,EACAqmB,EAHE1V,EAAUlvB,KAAKkvB,QAgDrB,OANA3Q,EAAW,CACPm0D,YA3BJ,SAAqBC,GAQjB,IAPA,IAAM8D,EAAuB9D,EAAeA,EAAa+D,mBAAqB,KACxEC,EAAiBF,EAAuBA,EAAqBG,oBAAsB,GACrFC,EAAQ,EACRC,EAAU,EACVC,EAAW,EACTnE,EAAgBxB,GAAcliD,GAASxxB,SAEpCa,EAAI,EAAGA,EAAIo4E,EAAe9+E,OAAQ0G,IACvC,QAA0BvG,IAAtB2+E,EAAep4E,KACfs4E,GAASF,EAAep4E,GAAGs4E,MAC3BC,GAAWH,EAAep4E,GAAGu4E,QAC7BC,GAAYJ,EAAep4E,GAAGw4E,SAE1BF,EAAQC,GApBJ,GAoB+BD,EAAQC,EAxBxC,MAwB+D,CAClElE,EAActgD,QAAW/zB,EAAI,GAAKo4E,EAAep4E,GAAGs4E,MAAQ,EAAKt4E,EAAI,EAAIA,EACzEq0E,EAAc/1E,OAAS,CAAClE,MAAOi6E,EAActgD,QAASukD,MAAOA,EAAOC,QAASA,EAASC,SAAUA,GAChGnyC,EAAOK,MAAM,8BAAgC2tC,EAActgD,QAAU,cAAgBukD,EAAQC,GAAW,WAAaD,GACrH,KACH,CAIT,OAAOjE,CACV,GA3BGhuC,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAmC7CA,CACV,CAGDi4D,GAAkB/oD,sBAAwB,oBAC1C,OAAeE,EAAAA,gBAA6B6oD,ICTtCQ,GAAmB,GAOzB,SAASC,GAAS3/D,GAEdA,EAASA,GAAU,CAAC,EACpB,IAMIiH,EACAqmB,EACAsyC,EAREhoD,EAAUlvB,KAAKkvB,QAEf0d,EAAct1B,EAAOs1B,YACrBgoC,EAAmBt9D,EAAOs9D,iBAC1B5vC,EAAWyR,GAASvnB,GAASM,cAyBnC,SAAS2nD,EAAwBj5B,EAAkBk5B,EAAUC,GACzD,IAAMC,EAAsBD,EAAUxwB,QAAO,SAAC0wB,EAAcz4E,EAAG04E,GAAlB,OAA8B14E,EAAIu4E,EAAUE,GAAgBC,EAASD,CAArE,GAAoF,GAEjI,GAA4B,IAAxBD,EAEA,OAAO,KAGX,IAAMG,EAAaj1E,KAAKk+C,IAAIxC,EAAkB84B,GA9CX,EA8CmEI,EAASv/E,QAOzG6/E,GAAML,EAAUC,GAAuB,IAAMG,EAAaT,GAAmB,GAInF,MAAO,CAAEU,GAAIA,EAAIC,GAHNX,GAAmBU,EAIjC,CA8BD,SAASE,EAAqBC,GAC1BA,EAAUC,kBAAoB,EAC9BD,EAAUE,yBAA2BnmD,IACrCimD,EAAUG,2BAA4B,EACtCH,EAAUI,iBAAmBrmD,IAC7BimD,EAAUK,qBAAuBtmD,IACjCimD,EAAUM,yBAA2BvmD,IACrCimD,EAAUO,wBAA0BxmD,GACvC,CAGD,SAASymD,EAA+BR,EAAW/lD,GAC/C,IAAMosB,EAAmB02B,EAAiBG,sBAC1C,GAAI8C,EAAU35B,mBAAqBA,EAAkB,CACjD,IAAM/I,EAASgiC,EAAwBj5B,EAAkB25B,EAAUT,SAAUS,EAAUR,WACvF,GAAIliC,EAAOwiC,KAAOE,EAAUF,IAAMxiC,EAAOuiC,KAAOG,EAAUH,GAAI,CAK1D,IAAMhxB,EAAc9Z,EAAYgY,sBAAsB9yB,GAClDwmD,EAAuB5xB,EAAcmxB,EAAUC,kBAEnDQ,GAAwBtB,GACxBsB,GAAwBnjC,EAAOwiC,GAAKE,EAAUF,GAC9CW,GAAwBtB,GAExBa,EAAU35B,iBAAmBA,EAC7B25B,EAAUF,GAAKxiC,EAAOwiC,GACtBE,EAAUH,GAAKviC,EAAOuiC,GACtBG,EAAUC,kBAAoBt1E,KAAKk+C,IAAI,EAAG43B,EAAuB5xB,EACpE,CACJ,CACJ,CA8BD,SAAS6xB,EAAyBV,EAAWvlD,GACzC,OAAOulD,EAAUF,IAAME,EAAUR,UAAU/kD,GAAWulD,EAAUH,GACnE,CAGD,SAASc,EAAyBX,EAAWvlD,GAKzC,IAJA,IAAMmmD,EAAWZ,EAAUT,SAAS9kD,GAC9BomD,EAAWb,EAAUR,UAAU/kD,GAEjCmV,EAAM,EACDlpC,EAAI+zB,EAAU,EAAG/zB,GAAK,IAAKA,EAEhC,GAAIs5E,EAAUR,UAAU94E,GAAKs5E,EAAUR,UAAU/kD,GAAU,CACvD,IAAMqmD,EAAWd,EAAUT,SAAS74E,GAC9Bq6E,EAAWf,EAAUR,UAAU94E,GAE/B08C,EAAQ48B,EAAUF,IAAME,EAAUH,IAAMe,EAAWG,EAAWD,EAAWD,IAAaD,EAAWE,IACvGlxC,EAAMjlC,KAAKk+C,IAAIjZ,EAAKwT,EACvB,CAEL,OAAOxT,CACV,CAqCD,SAASoxC,EAAczwE,GAEnB,IAEM0wE,EAFY1wE,EAAE0pB,YAEY4W,EAAAA,MAAkB,CAACA,EAAAA,OAAmBwuC,EACtE,IAAK,IAAMplD,KAAagnD,EAChB5B,EAAcp8E,eAAeg3B,IA1NnB,IA0NiColD,EAAcplD,GAAW7lB,QACpEirE,EAAcplD,GAAWgmD,kBAAoB,EAGxD,CAED,SAASiB,IAGL,IAAK,IAAMjnD,KAAaolD,EACpB,GAAIA,EAAcp8E,eAAeg3B,GAAY,CACzC,IAAM+lD,EAAYX,EAAcplD,GAvOjB,IAwOX+lD,EAAU5rE,QACV4rE,EAAU5rE,MAxOH,EAyOP2rE,EAAqBC,GAE5B,CAER,CAED,SAASmB,EAAsB5wE,GAC3B,GAAIA,GAAKA,EAAEsoE,OAAStoE,EAAEsoE,MAAM3+C,UAAW,CACnC,IAAM8lD,EAAYX,EAAc9uE,EAAEsoE,MAAM3+C,UAAU70B,MAClD,GAAI26E,GAnPe,IAmPFA,EAAU5rE,MAAkC,CACzD,IAAM9P,EAAQiM,EAAEsoE,MAAMv0E,MAClBuL,MAAMmwE,EAAUE,2BAA6B57E,EAAQ07E,EAAUE,0BAC/DF,EAAUE,yBAA2B57E,EACrC07E,EAAUG,2BAA4B,GAEtCH,EAAUG,2BAA4B,EAG1CH,EAAUI,iBAAmB97E,EAC7B07E,EAAUK,qBAAuB9vE,EAAEsoE,MAAM1+C,SACzC6lD,EAAUoB,YAAc7wE,EAAEsoE,MAAMp+C,QAEhC4mD,EAAgBrB,EAAWzvE,EAAEsoE,MAAM3+C,UAAU70B,KAChD,CACJ,CACJ,CAED,SAASi8E,EAAc/wE,GACnB,GAAIA,GAAKA,EAAEgxE,SAAW7H,GAAAA,cAAiCnpE,EAAEjQ,OAASiQ,EAAEjQ,MAAM+E,OAASwyB,EAAYuB,oBAAsB7oB,EAAEjQ,MAAM+3B,OAAS9nB,EAAEjQ,MAAM+3B,MAAMr4B,OAAQ,CACxJ,IAAMggF,EAAYX,EAAc9uE,EAAE0pB,WAC9B+lD,GAxQe,IAwQFA,EAAU5rE,QACvB4rE,EAAUM,yBAA2B/vE,EAAEjQ,MAAM23B,SAAStpB,UACtDqxE,EAAUO,wBAA0BhwE,EAAEjQ,MAAMk4B,SAAS7pB,UAErD0yE,EAAgBrB,EAAWzvE,EAAE0pB,WAEpC,CACJ,CAaD,SAASonD,EAAgBrB,EAAW/lD,GAChC,IAAKpqB,MAAMmwE,EAAUI,oBAAsBvwE,MAAMmwE,EAAUM,4BAA8BzwE,MAAMmwE,EAAUC,mBAAoB,CAIzH,GAHAD,EAAUC,mBArRW,KAwRhBpwE,MAAMmwE,EAAUO,yBAA0B,CAC3C,IACMiB,EADczsC,EAAYgY,sBAAsB9yB,GACL,MAAS+lD,EAAUO,wBAA0BP,EAAUM,0BAClGmB,EAAmCf,EAAyBV,EAAWA,EAAUoB,aACjFM,EAAuB/2E,KAAKk+C,IAAI,EAAG44B,EAAmCD,GAC5ExB,EAAUC,kBAAoBt1E,KAAKilC,IAAI8xC,EAAsB1B,EAAUC,kBAC1E,CAIGD,EAAUG,4BAA8BtwE,MAAMmwE,EAAUK,wBAExDL,EAAUC,mBAAqBD,EAAUK,sBAG7CL,EAAUI,iBAAmBrmD,IAC7BimD,EAAUM,yBAA2BvmD,GACxC,CACJ,CAED,SAAS4nD,EAAyBpxE,GAE9B,GAAIA,EAAG,CACH,IAAMyvE,EAAYX,EAAc9uE,EAAE0pB,WAC9B+lD,GAzTe,IAyTFA,EAAU5rE,QACvB4rE,EAAU4B,WAAarxE,EAAEioC,WAEhC,CACJ,CAED,SAASqpC,EAA2BtxE,GAChC,GAAIA,EAAG,CACH,IAAMyvE,EAAYX,EAAc9uE,EAAE0pB,WAClC,GAAI+lD,GAlUe,IAkUFA,EAAU5rE,MAAkC,CAEzD,IACI0tE,EADEjzB,EAAc9Z,EAAYgY,sBAAsBx8C,EAAE0pB,WAIpD6nD,EAFA9B,EAAU4B,WAAa,EAEIjB,EAAyBX,EAAWA,EAAU4B,YAE9CzC,GAE/B,IAAMuC,EAAuB/2E,KAAKk+C,IAAI,EAAGi5B,EAA2BjzB,GACpEmxB,EAAUC,kBAAoBt1E,KAAKilC,IAAIowC,EAAUC,kBAAmByB,EACvE,CACJ,CACJ,CAoID,SAASh0C,IACL2xC,EAAgB,CAAC,CACpB,CAoBD,OANA34D,EAAW,CACPm0D,YAnJJ,SAAqBC,GACjB,IAAMC,EAAgBxB,GAAcliD,GAASxxB,SAE7C,KAAKi1E,GAAiBA,EAAa73E,eAAe,iBAAoB63E,EAAa73E,eAAe,iBAC7F63E,EAAa73E,eAAe,0BAA6B63E,EAAa73E,eAAe,kBACrF63E,EAAa73E,eAAe,qBAAwB63E,EAAa73E,eAAe,0BACjF,OAAO83E,EAEX,IAAM7gD,EAAY4gD,EAAaE,eACzB/gD,EAAY6gD,EAAaG,eACzBG,EAAqBN,EAAaO,wBAClC/tC,EAAawtC,EAAatrC,gBAC1BsF,EAAgBgmC,EAAaQ,mBAC7BE,EAAoB1mC,EAAc48B,uBAClCj6B,EAAWnK,EAAaA,EAAWrZ,GAAK,KACxCqO,EAAYgL,GAAcA,EAAWiuC,cAAgBjuC,EAAWiuC,aAAaj5C,UAC7Eq5C,EAAwBb,EAAaa,wBAG3C,GAFAZ,EAAc/1E,OAAS+1E,EAAc/1E,QAAU,CAAC,GAE3C22E,EACD,OAAOZ,EAGXK,EAAmBU,mBAAmB,GAEtC,IAAMkE,EA3OV,SAAsBlF,GAClB,IAAM7gD,EAAY6gD,EAAaG,eAC3B+E,EAAYX,EAAcplD,GAO9B,OANK+lD,EAnIkB,IAsIZA,EAAU5rE,OACjBosE,EAA+BR,EAAW/lD,IAH1C+lD,EAnER,SAA6BlF,GACzB,IAAMiH,EAAe,CAAC,EAEhBxC,EADYzE,EAAaE,eACJ1J,YAAY9hD,KAAI,SAAAnhB,GAAC,OAAIA,EAAE6/B,SAAN,IACxCsxC,EAhCR,SAA+BD,GAC3B,OAAOA,EAAS/vD,KAAI,SAAAnhB,GAAC,OAAI1D,KAAKsqB,IAAI5mB,EAAb,GAExB,CA6BmB2zE,CAAsBzC,GACtCC,EAAYA,EAAUhwD,KAAI,SAAAvoB,GAAC,OAAIA,EAAIu4E,EAAU,GAAK,CAAvB,IAC3B,IAAMn5B,EAAmB02B,EAAiBG,sBACpC5/B,EAASgiC,EAAwBj5B,EAAkBk5B,EAAUC,GAkBnE,OAhBKliC,GAIDykC,EAAa3tE,MA7EE,EA+Ef2tE,EAAaxC,SAAWA,EACxBwC,EAAavC,UAAYA,EACzBuC,EAAa17B,iBAAmBA,EAChC07B,EAAajC,GAAKxiC,EAAOwiC,GACzBiC,EAAalC,GAAKviC,EAAOuiC,GAEzBkC,EAAaX,YAAc,EAC3BrB,EAAqBgC,IAXrBA,EAAa3tE,MA5EM,EA0FhB2tE,CACV,CAyCmBE,CAAoBnH,GAChCuE,EAAcplD,GAAa+lD,GAIxBA,CACV,CAiOqBkC,CAAapH,GAE/B,GA7WuB,IA6WnBkF,EAAU5rE,MAEV,OAAO2mE,EAGX,IAIItgD,EAJEo0B,EAAc9Z,EAAYgY,sBAAsB9yB,GAChDwhD,EAAaD,EAAkBkB,qBAAqBziD,EAAWqI,GAC/D6/C,EAAiB3G,EAAkB7J,yBAAyB13C,EAAWqI,GACvEwU,EAAU0kC,EAAkBE,kBAAkBzhD,GAOpD,GAJA8gD,EAAc/1E,OAAOoP,MAAQ4rE,EAAU5rE,MACvC2mE,EAAc/1E,OAAOy2E,WAAaA,EAClCV,EAAc/1E,OAAO8xC,QAAUA,EAE3BjnC,MAAM4rE,GAEN,OAAOV,EAGX,OAAQiF,EAAU5rE,OACd,KAjYe,EAkYXqmB,EAAUqa,EAAc+mC,qBAAqB3hD,EAAWioD,EAAgB1qC,EAAUX,GAElFikC,EAActgD,QAAUA,EACxBsgD,EAAc/1E,OAAOy2E,WAAa0G,EAElCnC,EAAUC,kBAAoBt1E,KAAKk+C,IAAI,EAAG83B,EAAyBX,EAAWvlD,GAAWo0B,GACzFmxB,EAAUoB,YAAc3mD,GAEnB5qB,MAAMmwE,EAAUK,uBAAyBxxB,GAAemxB,EAAUK,uBACnEL,EAAU5rE,MA1YJ,GA6YV,MAEJ,KA/Yc,GA+LtB,SAAiC4rE,EAAW/lD,GACxC,IAAMmoD,EAAQ3zE,KAAK2oC,MAEnB,GAAKvnC,MAAMmwE,EAAUO,0BAId,IAAK1wE,MAAMmwE,EAAUqC,gBAAiB,CAEzC,IAAMj9B,EAAQ,MAASg9B,EAAQpC,EAAUqC,gBACzCrC,EAAUC,mBAAqBt1E,KAAKk+C,IAAI,EAAGzD,EAC9C,MAR8C,CAE3C,IAAMA,EAAQ,MAASg9B,EAAQpC,EAAUO,yBACzCP,EAAUC,mBAAqBt1E,KAAKk+C,IAAI,EAAGzD,EAC9C,CAMD46B,EAAUqC,eAAiBD,EAC3BpC,EAAUI,iBAAmBrmD,IAC7BimD,EAAUM,yBAA2BvmD,IACrCimD,EAAUO,wBAA0BxmD,IAEpCymD,EAA+BR,EAAW/lD,EAC7C,CAoMWqoD,CAAwBtC,EAAW/lD,GAEnCQ,EA7QZ,SAAmCulD,EAAWnxB,GAI1C,IAHA,IAAM0zB,EAAevC,EAAUT,SAASv/E,OACpCy6B,EAAUV,IACVyoD,EAAQzoD,IACHrzB,EAAI,EAAGA,EAAI67E,IAAgB77E,EAAG,CACnC,IAAI8I,GAAKwwE,EAAUF,IAAME,EAAUR,UAAU94E,GAAKs5E,EAAUH,IAAMhxB,GAAemxB,EAAUT,SAAS74E,IAChGmJ,MAAM2yE,IAAUhzE,GAAKgzE,KACrBA,EAAQhzE,EACRirB,EAAU/zB,EAEjB,CACD,OAAO+zB,CACV,CAiQqBgoD,CAA0BzC,EAAWnxB,EAAcmxB,EAAUC,mBAIvE,IAAMyC,EAAuB5tC,EAAc+mC,qBAAqB3hD,EAAWioD,EAAgB1qC,EAAUX,GACjGrc,EAAUulD,EAAUoB,aAAe3mD,EAAUioD,IAI7CjoD,EAAU9vB,KAAKk+C,IAAI65B,EAAsB1C,EAAUoB,cAKvD,IAAIuB,EAASh4E,KAAKk+C,IAAI,EAAGgG,EAAcmxB,EAAUC,kBAAoBS,EAAyBV,EAAWvlD,IAGrGkoD,GAAU3C,EAAUC,mBACpBD,EAAUC,mBAAqB0C,EAC/BA,EAAS,IAETA,GAAU3C,EAAUC,kBACpBD,EAAUC,kBAAoB,EAE1BxlD,EAAUqa,EAAc8tC,sBAAsB3oD,EAAWwd,GAEzD2jC,EAAmBU,mBAAmB,IAAO6G,GAE7CA,EAAS,GAIjB5H,EAActgD,QAAUA,EACxBsgD,EAAc/1E,OAAOy2E,WAAaA,EAClCV,EAAc/1E,OAAO8xC,QAAUA,EAC/BikC,EAAc/1E,OAAO6pD,YAAcA,EACnCksB,EAAc/1E,OAAOi7E,kBAAoBD,EAAUC,kBACnDlF,EAAc/1E,OAAOogD,MAAQu9B,EAE7B3C,EAAUoB,YAAc3mD,EAGxB,MAEJ,QACIsS,EAAOK,MAAM,uCAEb2tC,EAActgD,QAAUqa,EAAc+mC,qBAAqB3hD,EAAWioD,EAAgB1qC,EAAUX,GAChGikC,EAAc/1E,OAAOoP,MAAQ4rE,EAAU5rE,MACvC2mE,EAAc/1E,OAAOy2E,WAAa0G,EAClCpH,EAAc/1E,OAAO8xC,QAAUA,EAC/BkpC,EAAU5rE,MA5cC,EA6cX2rE,EAAqBC,GAG7B,OAAOjF,CACV,EAoBGtqC,MAdJ,WACI/C,IAEAP,EAASuD,IAAIhU,EAAAA,aAAgCskD,EAAet6D,GAC5DymB,EAASuD,IAAIhU,EAAAA,iBAAoCwkD,EAAmBx6D,GACpEymB,EAASuD,IAAIhU,EAAAA,aAAgC4kD,EAAe56D,GAC5DymB,EAASuD,IAAIhU,EAAAA,yBAA4CilD,EAA0Bj7D,GACnFymB,EAASuD,IAAIhU,EAAAA,2BAA8CmlD,EAA4Bn7D,GAEvFymB,EAASuD,IAAI8O,GAAAA,sBAA8B2hC,EAAuBz6D,EACrE,GAzcGqmB,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChDgnB,IAEAP,EAASyD,GAAGlU,EAAAA,aAAgCskD,EAAet6D,GAC3DymB,EAASyD,GAAGlU,EAAAA,iBAAoCwkD,EAAmBx6D,GACnEymB,EAASyD,GAAGlU,EAAAA,aAAgC4kD,EAAe56D,GAC3DymB,EAASyD,GAAGlU,EAAAA,yBAA4CilD,EAA0Bj7D,GAClFymB,EAASyD,GAAGlU,EAAAA,2BAA8CmlD,EAA4Bn7D,GAEtFymB,EAASyD,GAAG4O,GAAAA,sBAA8B2hC,EAAuBz6D,GAwc9DA,CACV,CAED04D,GAASxpD,sBAAwB,WACjC,OAAeE,EAAAA,gBAA6BspD,IC9e5C,SAASyD,GAAQpjE,GACbA,EAASA,GAAU,CAAC,EACpB,IAKIiH,EACAo8D,EACAC,EACAh2C,EARE1V,EAAUlvB,KAAKkvB,QAEf0d,EAAct1B,EAAOs1B,YACrB5H,EAAWyR,GAASvnB,GAASM,cAoEnC,SAASqrD,EAAqBC,GAC1BA,EAAShD,kBAAoB,EAC7BgD,EAAS/C,yBAA2BnmD,IACpCkpD,EAAS9C,2BAA4B,EACrC8C,EAAS7C,iBAAmBrmD,IAC5BkpD,EAAS5C,qBAAuBtmD,IAChCkpD,EAAS3C,yBAA2BvmD,IACpCkpD,EAAS1C,wBAA0BxmD,IACnCkpD,EAASC,eAAiB,EAC7B,CAyBD,SAAShH,IACL,IAAK,IAAMjiD,KAAa6oD,EACpB,GAAIA,EAAa7/E,eAAeg3B,GAAY,CACxC,IAAMkpD,EAAWL,EAAa7oD,GAnHhB,IAoHVkpD,EAAS/uE,QACT+uE,EAAS/uE,MApHH,EAqHN4uE,EAAqBG,GAE5B,CAER,CAOD,SAASC,EAAuB7yE,GAC5B,GAAIA,GAAKA,EAAEsoE,OAAStoE,EAAEsoE,MAAM3+C,UAAW,CACnC,IAAM+oD,EAAWH,EAAavyE,EAAEsoE,MAAM3+C,UAAU70B,MAC1Cg+E,EAAgBN,EAAiBxyE,EAAEsoE,MAAM3+C,UAAU70B,MAEzD,GAAI49E,GAtIc,IAsIFA,EAAS7uE,MAAiC,CACtD,IAAM9P,EAAQiM,EAAEsoE,MAAMv0E,MAClBuL,MAAMozE,EAAS/C,2BAA6B57E,EAAQ2+E,EAAS/C,0BAC7D+C,EAAS/C,yBAA2B57E,EACpC2+E,EAAS9C,2BAA4B,GAErC8C,EAAS9C,2BAA4B,EAGzC8C,EAAS7C,iBAAmB97E,EAC5B2+E,EAAS5C,qBAAuB9vE,EAAEsoE,MAAM1+C,SACxC8oD,EAAS7B,YAAc7wE,EAAEsoE,MAAMp+C,QAE/B6oD,EAAiBL,EAAUI,EAC9B,CACJ,CACJ,CAOD,SAASE,EAAehzE,GACpB,GAAIA,GAAKA,EAAEgxE,SAAW7H,GAAAA,cAAiCnpE,EAAEjQ,OAASiQ,EAAEjQ,MAAM+E,OAASwyB,EAAYuB,oBAAsB7oB,EAAEjQ,MAAM+3B,OAAS9nB,EAAEjQ,MAAM+3B,MAAMr4B,OAAQ,CACxJ,IAAMijF,EAAWH,EAAavyE,EAAE0pB,WAC1BopD,EAAgBN,EAAiBxyE,EAAE0pB,WAErCgpD,GAlKc,IAkKFA,EAAS7uE,QACrB6uE,EAAS3C,yBAA2B/vE,EAAEjQ,MAAM23B,SAAStpB,UACrDs0E,EAAS1C,wBAA0BhwE,EAAEjQ,MAAMk4B,SAAS7pB,UACpD20E,EAAiBL,EAAUI,GAElC,CACJ,CAQD,SAASC,EAAiBE,EAAUH,GAC3BxzE,MAAM2zE,EAASpD,mBAAsBvwE,MAAM2zE,EAASlD,4BACrD+C,EAAcI,wBAA0B,KAAQD,EAASlD,yBACzD+C,EAAcK,0BAA4B,KAAQF,EAASjD,wBAC3DiD,EAASpD,iBAAmBrmD,IAC5BypD,EAASlD,yBAA2BvmD,IAE3C,CAOD,SAAS4pD,EAA0BpzE,GAE/B,GAAIA,GAAKA,EAAE0pB,UAAW,CAClB,IAAMupD,EAAWV,EAAavyE,EAAE0pB,WAC5BupD,GAlMc,IAkMFA,EAASpvE,QACrBovE,EAAS5B,WAAarxE,EAAEioC,WAE/B,CACJ,CAUD,SAASorC,EAAmBC,EAAMC,GAC9B,GAAID,EAAK7jF,SAAW8jF,EAAK9jF,OACrB,OAAQ,EAGZ,IADA,IAAI+jF,EAAS,EACJr9E,EAAI,EAAGA,EAAIm9E,EAAK7jF,OAAQ0G,IAC7Bq9E,GAAkBF,EAAKn9E,GAAKo9E,EAAKp9E,GAErC,OAAOq9E,CACV,CAwND,SAASvV,IACLsU,EAAe,CAAC,EAChBC,EAAmB,CAAC,CACvB,CAmBD,OANAr8D,EAAW,CACPm0D,YA7LJ,SAAqBC,GACjB,IAoBIrgD,EApBEsgD,EAAgBxB,GAAcliD,GAASxxB,SAEvCm+E,EAAKr5E,KAAKC,IADA,EACa,KACvBmF,EAAQpF,KAAKk+C,IAAIl+C,KAAKC,IAFZ,EAEyB,GAAIo5E,EAAKr5E,KAAKs5E,KAFvC,IAGV/pD,EAAY4gD,EAAaE,eACzB/gD,EAAY6gD,EAAaG,eACzBsE,EAAWrlD,EAAUo3C,YAAY9hD,KAAI,SAAAnhB,GAAC,OAAIA,EAAE6/B,SAAN,IACtCq0C,EAAehD,EAASv/E,OACxBo7E,EAAqBN,EAAaO,wBAClC/tC,EAAawtC,EAAatrC,gBAC1BsF,EAAgBgmC,EAAaQ,mBAC7BE,EAAoB1mC,EAAc48B,uBAClCpvC,EAAYgL,GAAcA,EAAWiuC,cAAgBjuC,EAAWiuC,aAAaj5C,UAC7E4hD,EAAYpJ,EAAaoJ,YACzBr1B,EAAc9Z,EAAYgY,sBAAsB9yB,GAAW,GAC3DkoD,EAAiB3G,EAAkB7J,yBAAyB13C,EAAWqI,GACvEm5C,EAAaD,EAAkBkB,qBAAqBziD,EAAWqI,GAE/DwU,EAAU0kC,EAAkBE,kBAAkBzhD,GAGhDkqD,EAFerJ,EAAasJ,gBAEK5R,kBAErC,KAAKsI,GAAiBA,EAAa73E,eAAe,iBAAoB63E,EAAa73E,eAAe,iBAC7F63E,EAAa73E,eAAe,0BAA6B63E,EAAa73E,eAAe,kBACrF63E,EAAa73E,eAAe,qBAAwB63E,EAAa73E,eAAe,cACjF,OAAO83E,EAKX,GAFAA,EAAc/1E,OAAS+1E,EAAc/1E,QAAU,CAAC,GAE1Ck/E,GAAejqD,IAAc4W,EAAAA,MAC/B,OAAOkqC,EAGXK,EAAmBU,mBAAmB,GAEtC,IAAMmH,EA3MV,SAAsBnI,GAClB,IAAM7gD,EAAY6gD,EAAaG,eAC3BgI,EAAWH,EAAa7oD,GAO5B,OALKgpD,IACDA,EAjER,SAA6BnI,GACzB,IAAMiH,EAAe,CAAC,EAChB7nD,EAAY4gD,EAAaE,eACzBuE,EAAWrlD,EAAUo3C,YAAY9hD,KAAI,SAACnhB,GACxC,OAAOA,EAAE6/B,UAAY,GACxB,IASD,OAPA6zC,EAAa3tE,MA1CK,EA2ClB2tE,EAAaxC,SAAWA,EACxBwC,EAAaX,YAAc,EAa/B,SAAkClnD,GAEzBA,GAAcA,EAAU70B,OAG7B09E,EAAiB7oD,EAAU70B,MAAQ,CAAC,EACpC09E,EAAiB7oD,EAAU70B,MAAMg/E,EAAI,GACrCtB,EAAiB7oD,EAAU70B,MAAMi/E,OAAS,GAC1CvB,EAAiB7oD,EAAU70B,MAAMk/E,EAAI,EACrCxB,EAAiB7oD,EAAU70B,MAAMo+E,wBAA0B,EAC3DV,EAAiB7oD,EAAU70B,MAAMq+E,0BAA4B,EAC7DX,EAAiB7oD,EAAU70B,MAAMm/E,SAAW,IAC/C,CAvBGC,CAAyBvqD,GACzB8oD,EAAqBjB,GAEdA,CACV,CAkDkB2C,CAAoB5J,GAC/BgI,EAAa7oD,GAAagpD,GAGvBA,CACV,CAiMoB0B,CAAa7J,GAE9B,GA7SsB,IA6SlBmI,EAAS7uE,MAET,OAAO2mE,EAGX,IAAM6J,EAAe7B,EAAiB9oD,GAEtC,IAAK2qD,EACD,OAAO7J,EAOX,GAJAA,EAAc/1E,OAAOoP,MAAQ6uE,EAAS7uE,MACtC2mE,EAAc/1E,OAAOy2E,WAAaA,EAClCV,EAAc/1E,OAAO8xC,QAAUA,EAE3BjnC,MAAM4rE,GAEN,OAAOV,EAGX,OAAQkI,EAAS7uE,OACb,KAjUc,EAuUV,GALAqmB,EAAUqa,EAAc+mC,qBAAqB3hD,EAAWioD,EAAgB70C,EAAWrZ,GAAI6iB,GACvFikC,EAActgD,QAAUA,EACxBsgD,EAAc/1E,OAAOy2E,WAAa0G,EAClCc,EAAS7B,YAAc3mD,GAElB5qB,MAAMozE,EAAS5C,uBAAyBxxB,GAAe+1B,EAAaJ,SAAU,CAC/EvB,EAAS7uE,MAvUJ,EAwULwwE,EAAaL,EAAIP,EAEjB,IAAK,IAAIt9E,EAAI,EAAGA,EAAI67E,IAAgB77E,EAC5BA,IAAMu8E,EAAS7B,YACfwD,EAAaN,OAAO59E,GAAK,EAEzBk+E,EAAaN,OAAO59E,GAAK,CAGpC,CAED,MACJ,KApVa,EAqVT,IAAIm+E,EAAQ,GAGRC,EAAwB/vC,EAAYgwC,sBAAsB9qD,GAAW5B,MAAM22B,QAAO,SAACvoD,EAAG4H,GAAJ,OAAU5H,EAAI4H,EAAEskB,CAAhB,GAAmB,GACnGqyD,EAAgBjwC,EAAYgwC,sBAAsB9qD,GAAW5B,MAAM22B,QAAO,SAACvoD,EAAG4H,GAAJ,OAAU5H,EAAI4H,EAAEA,EAAE,EAAlB,GAAsB,GAClG42E,EAAiBt6E,KAAKikD,MAAO,EAAIo2B,EAAiBF,GAClDI,EAAqBnwC,EAAYgwC,sBAAsB9qD,GAQ3D,GANIgrD,EAAiB,IACjBA,EAAiB,GAKjBC,EAAmBntD,MAAQkrD,EAASC,gBACpCgC,EAAmB7/E,OAASwyB,EAAYqB,kBAExCuB,EAAUwoD,EAAS7B,gBAEhB,CAMH,IAJA,IAAI+D,EAAIlC,EAAS5C,qBACb+E,EAAO,EAGF1+E,EAAI,EAAGA,EAAI67E,IAAgB77E,EAChC64E,EAAS74E,GAAK64E,EAAS74E,GAAK,IACxBy9E,EAAsB5E,EAAS74E,GAAKu+E,IACpCG,GAAQ,GAGZR,EAAaP,EAAE39E,GAAKk+E,EAAaN,OAAO59E,GAAK0+E,GAAQD,GAAK,EAAIp1E,MAAY60E,EAAaL,EAAIP,IAAOG,EAAsB5E,EAAS74E,GAAKu+E,IAI1IL,EAAaP,EAxJ7B,SAA6BvrE,GAIzB,IAHA,IAAMgkD,EAAIhkD,EAAI9Y,OACVqlF,GAAO,EACPvB,EAAO,GACFwB,EAAK,EAAGA,EAAKxoB,IAAKwoB,EACvBxB,EAAKwB,GAAMxsE,EAAIwsE,GAQnB,IANA,IAAI91E,EAAIsJ,EAAIrW,MAAK,SAAUgE,EAAG4H,GAC1B,OAAOA,EAAI5H,CACd,IACG8+E,EAAS,EACTC,EAAO,EACPpgE,EAAI,GACCkgE,EAAK,EAAGA,EAAKxoB,EAAI,IAAKwoB,EAG3B,IADAE,IADAD,GAAkB/1E,EAAE81E,IACH,IAAMA,EAAK,KAChB91E,EAAE81E,EAAK,GAAI,CACnBD,GAAO,EACP,KACH,CAEAA,IACDG,GAAQD,EAAS/1E,EAAEstD,EAAI,GAAK,GAAKA,GAErC,IAAK,IAAIwoB,EAAK,EAAGA,EAAKxoB,IAAKwoB,EACvBlgE,EAAEkgE,GAAM36E,KAAKk+C,IAAIi7B,EAAKwB,GAAME,EAAM,GAEtC,OAAOpgE,CACV,CA4HgCqgE,CAAoBb,EAAaP,GAElD,IAAK,IAAI39E,EAAI,EAAGA,EAAI67E,IAAgB77E,EAChCm+E,EAAMn+E,GAAKk+E,EAAaP,EAAE39E,GAAKk+E,EAAaN,OAAO59E,GACnDk+E,EAAaN,OAAO59E,GAAKk+E,EAAaP,EAAE39E,GAI5Ck+E,EAAaL,EAAI55E,KAAKk+C,IAAI,EAAG+7B,EAAaL,EAAIY,EAAIA,EAAIhB,IAAwBP,EAAmBrE,EAAUqF,EAAaN,QAAUV,EAAmBrE,EAAUsF,IAAUI,IAIzK,IADA,IAAIS,EAAO,GACFh/E,EAAI,EAAGA,EAAI67E,IAAgB77E,EAChCg/E,EAAKh/E,GAAKiE,KAAK4sE,IAAIgI,EAAS74E,GAAKk9E,EAAmBgB,EAAaP,EAAG9E,KAIxE9kD,EAAUirD,EAAKhlF,QAAQiK,KAAKilC,IAAL,MAAAjlC,KAAY+6E,KAGrBzC,EAAS7B,aACf7B,EAAS0D,EAAS7B,YAAc,IAAM6D,IACtCxqD,EAAUwoD,EAAS7B,YAAc,GAKrC7B,EAAS9kD,IAAYwqD,IACrBL,EAAaL,EA/Hf,EA+H2B55E,KAAKk+C,IAAIm7B,EAAIY,EAAaL,IAEvDtB,EAASC,eAAiBgC,EAAmBntD,GAChD,CACDgjD,EAActgD,QAAUA,EACxBsgD,EAAc/1E,OAAOy2E,WAAaA,EAClCV,EAAc/1E,OAAO8xC,QAAUA,EAC/BikC,EAAc/1E,OAAO6pD,YAAcA,EACnCo0B,EAAS7B,YAAcrG,EAActgD,QACrC,MACJ,QAEIsS,EAAOK,MAAM,sCACb2tC,EAActgD,QAAUqa,EAAc+mC,qBAAqB3hD,EAAWioD,EAAgB70C,EAAWrZ,GAAI6iB,GACrGikC,EAAc/1E,OAAOoP,MAAQ6uE,EAAS7uE,MACtC2mE,EAAc/1E,OAAOy2E,WAAa0G,EAClCpH,EAAc/1E,OAAO8xC,QAAUA,EAC/BmsC,EAAS7uE,MAtaC,EAuaV4uE,EAAqBC,GAE7B,OAAOlI,CACV,EAwBGtqC,MAVJ,WACI+9B,IACArhC,EAASuD,IAAI8O,GAAAA,iBAAyB08B,EAAoBx1D,GAC1DymB,EAASuD,IAAI8O,GAAAA,sBAA8B4jC,EAAwB18D,GACnEymB,EAASuD,IAAI8O,GAAAA,aAAqB+jC,EAAgB78D,GAClDymB,EAASuD,IAAI8O,GAAAA,yBAAiCmkC,EAA2Bj9D,EAC5E,GA1aGqmB,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChD8nD,IAEArhC,EAASyD,GAAG4O,GAAAA,iBAAyB08B,EAAoBx1D,GACzDymB,EAASyD,GAAG4O,GAAAA,sBAA8B4jC,EAAwB18D,GAClEymB,EAASyD,GAAG4O,GAAAA,aAAqB+jC,EAAgB78D,GACjDymB,EAASyD,GAAG4O,GAAAA,yBAAiCmkC,EAA2Bj9D,GA4arEA,CACV,CAEDm8D,GAAQjtD,sBAAwB,UAChC,OAAeE,EAAAA,gBAA6B+sD,ICtc5C,SAAS8C,KACL,IAEIj/D,EACAqmB,EACA64C,EACAC,EACAC,EACA/6B,EACAg7B,EACAC,EACAC,EAVE5uD,EAAUlvB,KAAKkvB,QA+BrB,SAASm3C,IACLoX,EAAoB,KACpBC,EAA6B,EAC7BC,EAA6B,IAC7B/6B,EAAa,EACbg7B,EAAU,KACVC,EAAgB,KAChBC,EA1CK,0BA2CR,CAOD,SAASC,IACL,IAAIC,EAAgB,EAEpB,GAAIP,EACA,IAAK,IAAIl/E,EAAI,EAAGA,EAAIk/E,EAAkB5lF,OAAQ0G,IAAK,CAC/C,IAAI0/E,EAASR,EAAkBl/E,GAC3B0/E,EAAOhyE,MAAMqnE,WAAa0K,IAC1BA,EAAgBC,EAAOhyE,MAAMqnE,WAEpC,CAGL,OAAO0K,CACV,CAsBD,SAASE,EAAa5/E,EAAG4H,EAAGg2E,GACxB,IAAIiC,EAAM7/E,EACL+oB,KAAI,SAACpK,EAAG1e,GAAJ,OAAW29E,EAAE39E,GAAMiE,KAAKC,IAAIwa,EAAI/W,EAAE3H,GAAI,EAAtC,IACJsoD,QAAO,SAACs3B,EAAKlvC,GAAN,OAAckvC,EAAMlvC,CAApB,IAGZ,OAFYkvC,EAAM,GAAM,EAAI,GAEd37E,KAAKs5E,KAAKt5E,KAAK4sE,IAAI+O,GACpC,CAuBD,SAASC,EAAeC,EAAcC,EAAarhE,GAC/C,IAAK,IAAI1e,EAAI,EAAGA,EAAI+/E,EAAYzmF,OAAQ0G,IAAK,CACzC,IAAIggF,EAAYD,EAAY//E,GAEtBigF,GAlBiBt4E,EAkB8Bm4E,EAdlDH,EAHM,EADW5/E,EAkBsBigF,GAjB9BtyE,MAAMqnE,WAAYh1E,EAAE2N,MAAM0iC,QAASrwC,EAAE2N,MAAMwyE,SAAUngF,EAAE2N,MAAF,QACxD,CAAC/F,EAAE+F,MAAMqnE,WAAYptE,EAAE+F,MAAM0iC,QAASzoC,EAAE+F,MAAMwyE,SAAUv4E,EAAE+F,MAAF,QAEjC,CAAC,EAAG,EAAG,EAAG,KAgB1CyyE,EAAmBH,EAAWthE,EADVza,KAAKm8E,KAAK,EAAIn8E,KAAKC,IAAI+7E,EAAgB,IAAM,EAAIh8E,KAAKC,IAF9D,GAEyE,KAExF,CArBL,IAA4BnE,EAAG4H,CAsB9B,CASD,SAASw4E,EAAmBT,EAAQhhE,EAAG2hE,GACnC,IAAI3yE,EAAQgyE,EAAOhyE,MACfiwE,EAAI,CAAC,IAAM,IAAM,IAAM,KAE3BjwE,EAAMqnE,WAAarnE,EAAMqnE,YAAcr2D,EAAE,GAAKhR,EAAMqnE,YAAc4I,EAAE,GAAK0C,EACzE3yE,EAAM0iC,QAAU1iC,EAAM0iC,SAAW1xB,EAAE,GAAKhR,EAAM0iC,SAAWutC,EAAE,GAAK0C,EAChE3yE,EAAMwyE,SAAWxyE,EAAMwyE,UAAYxhE,EAAE,GAAKhR,EAAMwyE,UAAYvC,EAAE,GAAK0C,EACnE3yE,EAAK,OAAUA,EAAK,QAAWgR,EAAE,GAAKhR,EAAK,QAAWiwE,EAAE,GAAK0C,CAChE,CA+UD,OANArgE,EAAW,CACPsgE,eApSJ,SAAwB9sD,EAAWuhD,EAAY3kC,EAASmwC,EAAYr+B,EAAcs+B,EAAqBC,GAEnG,IAAIC,EAAiBtwC,EACjBuwC,EAAgBJ,EAChBK,EAAoB7L,EAEpBgL,EA+JR,SAA+BvsD,GAC3B,IAAK0rD,EAAmB,CACpBA,EAAoB,GACpB,IAAMtU,EAAcp3C,EAAUo3C,YAC1BiW,EAAgB,GACpBx8B,EAAaumB,EAAY,GAAGpjC,UAE5BojC,EAAYh3B,SAAQ,SAAAroC,GAChBs1E,EAAcrnF,KAAK+R,EAAQi8B,WACvBj8B,EAAQi8B,UAAY6c,IACpBA,EAAa94C,EAAQi8B,UAE5B,IA3RCs5C,EA4RyCD,EA5R3B/3D,KAAI,SAACpK,GAAD,OAAQza,KAAKC,IAAIwa,EAAG,EAApB,IAAyB4pC,QAAO,SAACs3B,EAAKlvC,GAAN,OAAckvC,EAAMlvC,CAApB,IA4RpDyuC,EA1RGl7E,KAAKs5E,KAAKuD,GA4Rb,IAAK,IAAI9gF,EAAI,EAAGA,EAAI4qE,EAAYtxE,OAAQ0G,IAAK,CACzC,IAAI0/E,EAAS,CACTqB,aAAc/gF,EACdiyD,QAAS2Y,EAAY5qE,GAAGwnC,UACxB95B,MAAO,CAEHqnE,WAAYnK,EAAY5qE,GAAGwnC,UAAY23C,EACvC/uC,QAAS,EACT8vC,SAAU,EACVc,OAAQ,IAGhB9B,EAAkB1lF,KAAKkmF,EAC1B,CAEDJ,EAkCR,SAA0CS,GACtC,IAAIkB,EAAU,GACVC,EAxBR,SAAwBz+E,GAGpB,IAFA,IAAI0+E,EAAY,GAEPnhF,EAAI,EAAGA,EAAIyC,EAAMzC,IAAK,CAC3B,IAAIuE,EAAO,CACPN,KAAKszC,SAAWioC,IAChBv7E,KAAKszC,SACLtzC,KAAKszC,SACLtzC,KAAKszC,UAET4pC,EAAU3nF,KAAK+K,EAClB,CAED,OAAO48E,CACV,CAUuBC,CAAen9E,KAAKC,IAAI67E,EAAYzmF,OAAQ,IAChE2nF,EAAQznF,KAAK0nF,EAAc,IAG3B,IAFA,IAAIG,EAAkB,CAAC,EAAG,EAAG,EAAG,GAEvBvqE,EAAI,EAAGA,EAAIipE,EAAYzmF,OAAQwd,IAAK,CAGzC,IAFA,IAAIwqE,EAAY,KACZC,EAAc,KACTvhF,EAAI,EAAGA,EAAIkhF,EAAc5nF,OAAQ0G,IAAK,CAG3C,IAFA,IAAIwhF,EAAeN,EAAclhF,GAC7ByhF,EAAc,KACT7qE,EAAI,EAAGA,EAAIqqE,EAAQ3nF,OAAQsd,IAAK,CACrC,IAAI2zC,EAAWo1B,EAAa6B,EAAcP,EAAQrqE,GAAIyqE,IAClC,OAAhBI,GAAwBl3B,EAAWk3B,KACnCA,EAAcl3B,EAErB,EACmB,OAAhBg3B,GAAwBE,EAAcF,KACtCD,EAAYE,EACZD,EAAcE,EAErB,CACDR,EAAQznF,KAAK8nF,EAChB,CAKD,IAFA,IAAIC,EAAc,KACdG,EAAoB,KACf1hF,EAAI,EAAGA,EAAIihF,EAAQ3nF,OAAQ0G,IAAK,CAErC,IADA,IAAIuqD,EAAW,EACN3zC,EAAI,EAAGA,EAAIqqE,EAAQ3nF,OAAQsd,IAC5B5W,IAAM4W,IACV2zC,GAAYo1B,EAAasB,EAAQjhF,GAAIihF,EAAQrqE,GAAIyqE,KAEjC,OAAhBE,GAAwBh3B,EAAWg3B,KACnCA,EAAch3B,EACdm3B,EAAoB1hF,EAE3B,CAGD,IAAIs/E,EAAgB,GAGpB,IAFAA,EAAc9lF,KAAKynF,EAAQS,IAC3BT,EAAQ//E,OAAOwgF,EAAmB,GAC3BT,EAAQ3nF,OAAS,GAAG,CAGvB,IAFA,IAAImoF,EAAc,KACdE,EAAW,KACN3hF,EAAI,EAAGA,EAAIihF,EAAQ3nF,OAAQ0G,IAAK,CACrC,IAAIuqD,EAAWo1B,EAAaL,EAAc,GAAI2B,EAAQjhF,GAAIqhF,IACtC,OAAhBI,GAAwBl3B,EAAWk3B,KACnCA,EAAcl3B,EACdo3B,EAAW3hF,EAElB,CACDs/E,EAAc9lF,KAAKynF,EAAQU,IAC3BV,EAAQ//E,OAAOygF,EAAU,EAC5B,CAED,OAAOrC,CACV,CA9FuBsC,CAAiC1C,EACpD,CA/SL,IACU4B,EAgTN,OAAO5B,CACV,CAjMqB2C,CAAsBruD,GAEpCsuD,EAAuB/M,EAAaoK,EAEpC2C,EAAuB,IACvBA,EAAuBtC,KAG3BpvC,GAAoBgvC,EAQpB/4C,EAAOK,MAAP,2CAAiDo7C,EAAjD,oBAAiF1xC,EAAjF,uBAAuGmwC,EAAvG,gCAAyIC,EAAzI,yBAA6Kt+B,IAE7K,IAAI6/B,EAAgBhC,EAAYS,GAC5BwB,EAAgBD,EAAc9vB,QAAUwuB,EAAuBwB,qBAAwBrB,EACvFV,EAAWj8E,KAAKk+C,IAAI,EAAI6/B,EAAerB,GAG3C,GAAIA,EAAgBqB,EAAevB,EAAuByB,eAEtD,OADA77C,EAAOK,MAAP,qCAA2Cq7C,EAAc9vB,QAAzD,yBAAiF+vB,EAAjF,0BAA+GrB,EAA/G,qBAAyIT,IA3DjJ,SAA6B6B,EAAenB,GACxC,IAAIuB,EAAqB,EACrBjlF,EAAS6kF,EAEb,GAAI7C,EACA,IAAK,IAAIl/E,EAAI,EAAGA,EAAIk/E,EAAkB5lF,OAAQ0G,IAAK,CAC/C,IAAIwK,EAAI00E,EAAkBl/E,GACtBwK,EAAEynD,QAAU8vB,EAAc9vB,SAAWznD,EAAEynD,QAAUkwB,GAAsBvB,EAAoBp2E,EAAEynD,UAE7FkwB,EAAqB33E,EAAEynD,QACvB/0D,EAASsN,EAEhB,CAGL,OAAOtN,CACV,CA4CcklF,CAAoBL,EAAenB,GAAmBG,aAGjE,OAAQxB,GACJ,IAvNA,0BA6RJF,EAAU,CALa,GACH,GACD,GACA,IAlEX,MACJ,IAzNA,2BAoSR,SAAgCU,GAC5BV,EAgCJ,SAA2BgD,EAAaC,GAIpC,IAHA,IAAIC,EAAI,GACJC,EAAav+E,KAAKs5E,KAAM,EAAI8E,GAEvBriF,EAAI,EAAGA,EApCgC,EAoCfA,IAC7BuiF,EAAE/oF,KAAKyK,KAAKszC,SAAWirC,GAK3B,OAFAnD,EAAUkD,CAGb,CA3CaE,CAAkB1C,EAAYzmF,OAC3C,CA5EWopF,CAAuB3C,GACvB,MAIJ,SAoFR,SAAiCU,EAAwBV,EAAaW,EAAgBC,EAAeT,EAAUU,EAAmB1+B,GACzHm9B,IACDA,EAAUC,EAAcA,EAAchmF,OAAS,IAGnD,IAAIqpF,EAAelC,EAAuBmC,iBAAiB7C,EAAaW,EAAgBC,EAAeT,EAAUU,EAAmB1+B,GAC/G,OAAjBygC,IAA2C,IAAlBA,IACzBtD,EAAUsD,EAEjB,CA5FWE,CAAwBpC,EAAwBV,EAAaW,EAAgBC,EAAeT,EAAUU,EAAmB1+B,GAQjI,IAJA,IAAIu/B,EAAc,KACdE,EAAW,KACX7B,EAAe,KAEV9/E,EAAI,EAAGA,EAAI+/E,EAAYzmF,OAAQ0G,IAAK,CACzC,IAAIggF,EAAYD,EAAY//E,GACxB8iF,EAAiB9C,EAAUtyE,MAC3Bq1E,EAAU,CAACD,EAAe/N,WAC1B+N,EAAe1yC,QACf0yC,EAAe5C,SACf4C,EAAc,QAEdzB,EAAkBhC,EAAQ9kF,QAC1ByoF,EAAavC,EAAuBwC,yBAAyBjD,EAAU/tB,QAAS0uB,EAAeC,GAC/FsC,EAAcF,EAAavC,EAAuByB,eAClDgB,GACA78C,EAAOK,MAAP,oCAA0Cs5C,EAAU/tB,QAApD,yBAA4E+vB,EAA5E,0BAA0GrB,EAA1G,uBAAsIqC,KAGtIhD,EAAU/tB,QAAU8iB,EAhDJ,KAgDoCmO,IAChDlD,EAAU/tB,UAAY5N,IAEtBg9B,EAAgB,GAAK,KAK7B,IAAI92B,EAAWo1B,EAAaoD,EAAS,CAACjB,EA5DpB,EACM,EACP,GA0D8FT,IAC3F,OAAhBI,GAAwBl3B,EAAWk3B,KACnCA,EAAcl3B,EACdo3B,EAAW3B,EAAUe,aACrBjB,EAAeE,EAEtB,CAID,IAAImD,EAAgBl/E,KAAK4sE,IAAIkR,EAAc9vB,QAAU6tB,EAAa7tB,SAAWktB,EAM7E,OALAU,EAAekC,EAAehC,EAAa,CAAC+B,EAAsB1xC,EAAS8vC,EAAUiD,IAGrFtD,EAAeC,EAAcC,EAAa,CAAC+B,EA1ErB,EACM,EAyEyEqB,IAE9FxB,CACV,EAwMG53C,MA5bJ,WACI+9B,GACH,GATGzhC,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChD8nD,IAscG9nD,CACV,CAEDi/D,GAAsB/vD,sBAAwB,wBAC9C,OAAeE,EAAAA,gBAA6B6vD,IC3c5C,GA3BI,0GAAc,SAEVx9E,KAAK9C,KAAO,KAGZ8C,KAAKivE,YAAc,KAGnBjvE,KAAK49E,QAAU,CAAC,EAChB59E,KAAK49E,QAAQ+D,cAAgB,KAC7B3hF,KAAK49E,QAAQgE,qBAAuB,KACpC5hF,KAAK49E,QAAQiE,gBAAkB,KAC/B7hF,KAAK49E,QAAQkE,eAAiB,KAC9B9hF,KAAK49E,QAAQmE,qBAAuB,KAGpC/hF,KAAKgiF,YAAc,EACnBhiF,KAAKiiF,kBAAoB,EACzBjiF,KAAKkiF,aAAe,EACpBliF,KAAKmiF,YAAc,EACnBniF,KAAKoiF,kBAAoB,EAGzBpiF,KAAKqiF,SAAW,CACnB,ECrBL,SAASC,KAEL,IAAI/jE,EACAgkE,EACAlnD,EACAmnD,EACAC,EAMJ,SAASpc,IACLkc,EAAsB,KACtBlnD,EAAkB,KAClBmnD,EAAiB,KACjBC,EAAiB,IACpB,CAUD,SAASC,EAAeC,EAAc1O,EAAkBuO,EAAgBC,GAWpE,IAAIG,EAAU,IAAIC,GAgClB,OA/BAD,EAAQ1lF,KAAOylF,EAOXC,EAAQhF,QAAQ+D,cAHf1N,GAC+B,EAOpC2O,EAAQhF,QAAQgE,qBAAuB,EAOnCgB,EAAQhF,QAAQiE,gBAHfW,GACiC,IAMtCI,EAAQhF,QAAQkE,eAAiB,GACjCc,EAAQhF,QAAQkE,eAAe/pF,KAAK,CAAEu5C,UAAW,IAAKwxC,QAA2B,IAAjBL,IAChEG,EAAQhF,QAAQkE,eAAe/pF,KAAK,CAAEu5C,UAAW,IAAWwxC,QAA2B,GAAjBN,IAIjEI,EAAQhF,QAAQmE,qBADhBU,GAAuD,IAGrDG,CACV,CAQD,SAASG,EAAqBvyB,EAASwyB,EAAcr0C,EAASs0C,EAAeL,GAEzEA,EAAQZ,aAAgBY,EAAQhF,QAAQ+D,cAAgBnxB,EAGpDoyB,EAAQ3T,cACR2T,EAAQX,mBAAsBW,EAAQhF,QAAQgE,qBAAuBp/E,KAAK4sE,IAAI5e,EAAUoyB,EAAQ3T,cAEpG2T,EAAQ3T,YAAcze,EAGtBoyB,EAAQV,cAAiBU,EAAQhF,QAAQiE,gBAAkBmB,EAG3D,IAAK,IAAIzkF,EAAI,EAAGA,EAAIqkF,EAAQhF,QAAQkE,eAAejqF,OAAQ0G,IAAK,CAC5D,IAAI2kF,EAAeN,EAAQhF,QAAQkE,eAAevjF,GAClD,GAAIowC,GAAWu0C,EAAa5xC,UAAW,CACnCsxC,EAAQT,aAAgBe,EAAaJ,QAAUn0C,EAC/C,KACH,CACJ,CAGDi0C,EAAQR,mBAAsBQ,EAAQhF,QAAQmE,qBAAuBv/E,KAAK4sE,IAAI,EAAI6T,GAGlFL,EAAQP,SAAWO,EAAQZ,YAAcY,EAAQX,kBAAoBW,EAAQV,aAAeU,EAAQT,YAAcS,EAAQR,iBAC7H,CAuCD,OAVA7jE,EAAW,CACP4kE,mBArHJ,SAA4BC,EAAWC,EAAWC,GAE9Cf,EAAsBG,EAAe,UAAWU,EAAWC,EAAWC,GACtEjoD,EAAkB+nD,EAClBZ,EAAiBa,EACjBZ,EAAiBa,CACpB,EAgHGC,kBAhEJ,SAA2BC,EAAgBC,EAAqBxE,EAAgByE,GACxEnB,GACAQ,EAAqBS,EAAgBC,EAAqBxE,EAAgByE,EAAsBnB,EAEvG,EA6DGoB,iBA7BJ,WACI,OAAOpB,CACV,EA4BGqB,sBAxBJ,SAA+BJ,EAAgBC,EAAqBxE,EAAgByE,GAChF,IAAIG,EAAmB,KAMvB,OAJIxoD,GAAmBmnD,GAAkBC,IACrCoB,EAAmBnB,EAAe,UAAWrnD,EAAiBmnD,EAAgBC,IAG9EoB,GACAd,EAAqBS,EAAgBC,EAAqBxE,EAAgByE,EAAsBG,GACzFA,EAAiBxB,UAGjB,CAEd,EAWG/5C,MATJ,WACI+9B,GACH,GA5HGA,IAwIG9nD,CACV,CAED+jE,GAAiB70D,sBAAwB,mBACzC,OAAeE,EAAAA,gBAA6B20D,ICrJ5C,SAASwB,GAAmBxsE,GACxB,IAIIiH,EAGAwlE,EACAC,EAsHsBroF,EA9HtBsoF,EAAgB3sE,EAAO2sE,cACvBC,EAAY5sE,EAAO4sE,UACnB7oD,EAAkB/jB,EAAO+jB,gBACzB8oD,EAAe7sE,EAAO6sE,aAkK1B,SAAS3D,IACL,OAAOnlD,CACV,CAoBD,SAAS+oD,EAAclF,EAAeqB,GAClC,IAAMllD,EAAkBmlD,IAOxB,OALID,EAAellD,EACF6jD,EAAgB7jD,EAEhB6jD,EAAgB7jD,EAAkBklD,CAGtD,CAYD,OAVAhiE,EAAW,CACPkiE,aA1CJ,WACI,OAAOyD,CACV,EAyCG1D,mBAAAA,EACAgB,yBAzBJ,SAAkC6C,EAAmBnF,EAAeC,GAEhE,OAAOiF,EAAclF,EADDmF,EAAoBhpD,EAAmB8jD,EAE9D,EAuBGiF,cAAAA,EACAjD,iBAnKJ,SAA0BmD,EAASrF,EAAgBC,EAAeqF,EAAiBpF,EAAmB1+B,GAClG,IAAI+jC,EAAS,KACTC,EAAgB,KAChBC,EAAgB,KAChBC,EAAeniF,KAAK4sE,IAAI6P,EAAiB+E,GAqD7C,OAlDAM,EAAQnyC,SAAQ,SAAC8rC,GAKb8F,EAAc5xC,SAAQ,SAAC+uC,GAMHA,EAAa,GAD7B,IAAI0D,EAES1D,EAAa,GAFtB0D,EAGQ1D,EAAa,GAIrBX,GAHQW,EAAa,GAGLjD,EAAOztB,QAAUn1B,EAAmB8jD,GACpDoC,EAAa6C,EAAclF,EAAeqB,GAQ1CsE,GALsB,IAAtBD,EACK,GAEC,EAAIA,GALCpiF,KAAKk+C,IAAI,KAAU6/B,EAAegB,GAc7CuD,GALuB,IAAvBF,EACK,GAEC,EAAIA,GAEa3G,EAAOhyE,MAAM0iC,QAEpCo2C,EAAWZ,EAAaP,sBAAsB3F,EAAOztB,QAASq0B,EAAkBC,EAAiBrkC,IACrF,OAAX+jC,GAAmBO,EAAWP,IAyB/C,SAA2BQ,EAAazD,EAAYoD,GAIhD,QAAIK,EAAcf,EAAgBU,IAI3BpD,GAAc2C,CACxB,CAlCyDe,CAAkBhG,EAAgBsC,EAAYoD,KACxFH,EAASO,EACTN,EAAgBvD,EAChBwD,EAAgBzG,EAAOztB,QAE9B,GACJ,IAGqB,OAAlBi0B,GAA4C,OAAlBC,IAC1BD,GAAiB,GAGrBT,EAAkB/E,EACXwF,CACV,GA1EqB,EAClBV,EA2Ge,SAAXmB,EAAqBC,EAAMttF,EAAQutF,GAEnC,GAAIA,IAAYvtF,EACZ,OAAOstF,EAIX,IADA,IAAI/5E,EAAM+5E,EAAKttF,OACN0G,EAAI,EAAGA,EAAI6M,EAAK7M,IAGrB,IAFA,IAAI8mF,EAAWF,EAAKpV,QAEX16D,EAAI,EAAGA,EAAI1Z,EAAK9D,OAAQwd,IAC7B8vE,EAAKptF,KAAKstF,EAASzpF,OAAOD,EAAK0Z,KAIvC,OAAO6vE,EAASC,EAAMttF,EAAQutF,EAAU,EAC3C,CAEMF,EAxBevpF,EAvGV,CAAC,GAAK,GAAK,GAAK,GAAK,IAyGjB0rB,KAAI,SAAUi+D,GAC1B,MAAO,CAACA,EACX,IA1GiB,EA8HY,GA5H9BtB,EAAkB,EAsLfzlE,CACV,CAEDulE,GAAmBr2D,sBAAwB,qBAC3C,OAAeE,EAAAA,gBAA6Bm2D,IC3M5C,SAASyB,GAASjuE,GAId,IAGIstB,EACArmB,EACAinE,EACArB,EANAv3C,GAFJt1B,EAASA,GAAU,CAAC,GAEKs1B,YACrB1d,EAAUlvB,KAAKkvB,QA4HnB,OAPA3Q,EAAW,CACPm0D,YAzGJ,SAAqBC,GACjB,IACI,IAAIC,EAAgBxB,GAAcliD,GAASxxB,SACvCo0B,EAAY6gD,EAAaE,eAAe31E,KACxCyvC,EAAgBgmC,EAAaQ,mBAC3BhuC,EAAawtC,EAAatrC,gBAC5Bo+C,EAAiB94C,EAAcgpC,cAAc7jD,EAAWqT,EAAWrZ,IACjEiG,EAAY4gD,EAAaE,eACzB6S,EAAgB94C,EAAYomC,sBAAsBlhD,GAClDmhD,EAAqBN,EAAaO,wBAClC5I,EAAqB19B,EAAYgY,sBAAsB9yB,GAAW,GAClEqI,EAAYgL,GAAcA,EAAWiuC,aAAejuC,EAAWiuC,aAAaj5C,UAAY,KACxF0S,EAAqBomC,EAAmBoB,wBAC1C1lC,EAAU9B,EAAmB84C,wBAEjC,IAAKhT,EAAaiT,cAAiB9zD,IAAc4W,EAAAA,MAC7C,OAAOkqC,EAGNjkC,IACDA,EAAU,GAGd,IAAM8R,EAAe5T,EAAmBw9B,kBAElCiJ,EADoB3mC,EAAc48B,uBACHC,yBAAyB13C,EAAWqI,GAGzE,GAFAyK,EAAOK,MAAP,qBAA2BziC,KAAKikD,MAAM6sB,GAAtC,UAEI5rE,MAAM4rE,KAAgBoS,EACtB,OAAO9S,EAGX,GAAIjmC,EAAc8mC,uBAAuBtuC,EAAWrZ,GAAIgG,KAAey/C,GAAAA,aACnE,OAAOqB,EAQX,IAJA,IAAIzJ,EAAcp3C,EAAUo3C,YACxB9tC,EAAkBs3C,EAAauB,wBAAwBD,iBACvDwO,EAAiBtZ,EAAY,GAAGpjC,UAAY,IAC5Cy8C,EAAiBrZ,EAAYA,EAAYtxE,OAAS,GAAGkuC,UAAY,IAC5DxnC,EAAI,EAAGA,EAAI4qE,EAAYtxE,OAAQ0G,IAAK,CACzC,IAAI2H,EAAIijE,EAAY5qE,GAAGwnC,UAAY,IAC/B7/B,EAAIs8E,EACJA,EAAiBt8E,EACZA,EAAIu8E,IACTA,EAAiBv8E,EAExB,CAGD,IACI2/E,EADiB1c,EAAYsc,GAAgB1/C,UACP,IACtCwN,EAAc3G,EAAYgwC,sBAAsB9qD,GAAW,GAC3Dg0D,GAA4BvyC,EAAYxjB,UAAUvpB,UAAY+sC,EAAYzjB,SAAStpB,WAAa,IAChGi9E,EAAsBqC,EAA2BzqD,EAAkByqD,EAA2BzqD,EAAkB,EACpH8oD,EAAahB,mBAAmB9nD,EAAiBmnD,EAAgBC,GACjE0B,EAAaZ,kBAAkBsC,EAAoBpC,EAAqB90C,EAAS8R,GAKjF,IAAIu+B,EAAyB8E,GAAmB50D,GAASxxB,OAAO,CAC5DumF,cApFW,IAqFXC,UApFO,GAqFP7oD,gBAAAA,EACA8oD,aAAAA,IAgBJ,OAVAvR,EAActgD,QAAUkzD,EAAmB3G,eAAe9sD,EAAwB,IAAbuhD,EAAmB3kC,EAAS27B,EAAoB7pB,EAAcglC,EAAgBzG,GACnJpM,EAAc/1E,OAAS,CAAEy2E,WAAYA,EAAY3kC,QAASA,GAC1DikC,EAAc97B,SAAWs6B,GAAAA,SAAAA,OAEzB6B,EAAmBU,mBAAmB,GAElCf,EAActgD,UAAYmzD,GAC1B7gD,EAAOK,MAAM,qBAAuBnT,EAAY,iCAAkC8gD,EAActgD,QAAS,qBAAsB9vB,KAAKikD,MAAM6sB,GAAa,QAGpJV,CAGV,CAFC,MAAOxqE,GACL,MAAMA,CACT,CACJ,EAoBGkgC,MANJ,WAPIk9C,EAAmBl9C,QACnB67C,EAAa77C,OAQhB,GA3GG1D,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChDinE,EAAqBhI,GAAsBtuD,GAASxxB,SACpDymF,EAAe7B,GAAiBpzD,GAASxxB,SAkHtC6gB,CACV,CAEDgnE,GAAS93D,sBAAwB,WACjC,OAAeE,EAAAA,gBAA6B43D,IC7ItCQ,GAAuB,qBACvBC,GAAyB,uBAG/B,SAASC,GAAmB3uE,GAExBA,EAASA,GAAU,CAAC,EACpB,IAQI4uE,EACAC,EATEj3D,EAAUlvB,KAAKkvB,QAEf0lD,EAAmBt9D,EAAOs9D,iBAC1BwR,EAAwB9uE,EAAO8uE,sBAC/Bx5C,EAAct1B,EAAOs1B,YACrBtzC,EAAWge,EAAOhe,SA2FxB,SAAS+sF,EAAoBC,GACzB,OAAOA,EAAQpvF,QAAO,SAAAqvF,GAAE,OAAIA,EAAGj0D,QAAU8+C,GAAAA,SAAjB,GAC3B,CAOD,SAASoV,EAAoBF,GACzB,IAEI/nF,EACA6M,EACA2K,EACAuc,EACAz1B,EANE5E,EAAS,CAAC,EACZwuF,EAAe,KAOnB,GAAuB,IAAnBH,EAAQzuF,OAAZ,CAQA,IAJAI,EAAOm5E,GAAAA,SAAAA,QAAiC,CAAE9+C,QAAS8+C,GAAAA,UAAyBv0E,OAAQ,MACpF5E,EAAOm5E,GAAAA,SAAAA,MAA+B,CAAE9+C,QAAS8+C,GAAAA,UAAyBv0E,OAAQ,MAClF5E,EAAOm5E,GAAAA,SAAAA,SAAkC,CAAE9+C,QAAS8+C,GAAAA,UAAyBv0E,OAAQ,MAEhF0B,EAAI,EAAG6M,EAAMk7E,EAAQzuF,OAAQ0G,EAAI6M,EAAK7M,GAAK,GAC5CwX,EAAMuwE,EAAQ/nF,IACN+zB,UAAY8+C,GAAAA,YAEZn5E,EAAO8d,EAAI+gC,UAAUxkB,UAAY8+C,GAAAA,WAA2Bn5E,EAAO8d,EAAI+gC,UAAUxkB,QAAUvc,EAAIuc,WAC/Fr6B,EAAO8d,EAAI+gC,UAAUxkB,QAAUvc,EAAIuc,QACnCr6B,EAAO8d,EAAI+gC,UAAUj6C,OAASkZ,EAAIlZ,QAAU,MAsBxD,OAjBI5E,EAAOm5E,GAAAA,SAAAA,MAA6B9+C,UAAY8+C,GAAAA,YAChDqV,EAAexuF,EAAOm5E,GAAAA,SAAAA,OAGtBn5E,EAAOm5E,GAAAA,SAAAA,SAAgC9+C,UAAY8+C,GAAAA,YACnDqV,EAAexuF,EAAOm5E,GAAAA,SAAAA,UAGtBn5E,EAAOm5E,GAAAA,SAAAA,QAA+B9+C,UAAY8+C,GAAAA,YAClDqV,EAAexuF,EAAOm5E,GAAAA,SAAAA,SAGtBqV,IACAn0D,EAAUm0D,EAAan0D,QACvBz1B,EAAS4pF,EAAa5pF,QAGnBu0E,GAAcliD,GAASxxB,OAAO40B,EAASz1B,EAlC7C,CAmCJ,CA6CD,MATW,CACPirC,WAjLJ,WACIo+C,EAAqB,GACrBC,EAAuB,GAEnB7sF,EAAS8c,MAAMwlC,UAAU8F,IAAIa,qBAGzBjpD,EAAS8c,MAAMwlC,UAAU8F,IAAIE,cAAgBlZ,EAAAA,iBAC7Cw9C,EAAmBnuF,KACf2iF,GAAQxrD,GAASxxB,OAAO,CACpBkvC,YAAaA,EACbtzC,SAAUA,KAKbA,EAAS8c,MAAMwlC,UAAU8F,IAAIE,cAAgBlZ,EAAAA,kBAClDw9C,EAAmBnuF,KACfwtF,GAASr2D,GAASxxB,OAAO,CACrBkvC,YAAaA,MAMrBs5C,EAAmBnuF,KACfk/E,GAAS/nD,GAASxxB,OAAO,CACrBkvC,YAAaA,EACbgoC,iBAAkBA,EAClBt7E,SAAUA,KAIlB4sF,EAAmBnuF,KACf06E,GAAevjD,GAASxxB,OAAO,CAC3BkvC,YAAaA,KAIjBtzC,EAAS8c,MAAMwlC,UAAU8F,IAAIG,mBAAmBC,wBAChDokC,EAAmBnuF,KACf67E,GAAuB1kD,GAASxxB,OAAO,CACnCkvC,YAAaA,EACbtzC,SAAAA,KAKRA,EAAS8c,MAAMwlC,UAAU8F,IAAIG,mBAAmBE,mBAChDmkC,EAAmBnuF,KACfy+E,GAAkBtnD,GAASxxB,UAI/BpE,EAAS8c,MAAMwlC,UAAU8F,IAAIG,mBAAmBG,mBAChDkkC,EAAmBnuF,KACf+9E,GAAkB5mD,GAASxxB,UAI/BpE,EAAS8c,MAAMwlC,UAAU8F,IAAIG,mBAAmBI,qBAChDkkC,EAAqBpuF,KACjBy8E,GAAoBtlD,GAASxxB,OAAO,CAChCkvC,YAAaA,EACbgoC,iBAAkBA,EAClBt7E,SAAUA,OAQV8sF,EAAsBM,oBAC9Bv0C,SAAQ,SAAU0jC,GACtBA,EAAK34E,OAAS6oF,IACdG,EAAmBnuF,KAAK89E,EAAKA,KAAK3mD,GAASxxB,UAG3Cm4E,EAAK34E,OAAS8oF,IACdG,EAAqBpuF,KAAK89E,EAAKA,KAAK3mD,GAASxxB,SAEpD,GACJ,EA+FG4qC,MAhBJ,WACI,CAAC49C,EAAoBC,GAAsBh0C,SAAQ,SAAAw0C,GAC3CA,GAASA,EAAM9uF,QACf8uF,EAAMx0C,SAAQ,SAAA0jC,GAAI,OAAIA,EAAKvtC,OAASutC,EAAKvtC,OAAvB,GAEzB,IACD49C,EAAqB,GACrBC,EAAuB,EAC1B,EASGS,cArCJ,SAAuBjU,GAKnB,OAFmB6T,EADCH,EADOH,EAAmB7+D,KAAI,SAAAwuD,GAAI,OAAIA,EAAKnD,YAAYC,EAArB,OAIjCvB,GAAcliD,GAASxxB,QAC/C,EAgCG8oF,oBAAAA,EACAK,sBA/BJ,SAA+BlU,EAAcrjC,GACzC,IAEMulC,EAAgB2R,EADFH,EADQF,EAAqB9+D,KAAI,SAAAwuD,GAAI,OAAIA,EAAKhB,cAAclC,EAAcrjC,EAArC,MAQzD,OAJIulC,IACAA,EAAch4E,OAAOiqF,cAAe,GAGjCjS,GAAiBzD,GAAcliD,GAASxxB,QAClD,EAsBGqpF,sBAVJ,WACI,OAAOb,CACV,EAYJ,CAEDD,GAAmBx4D,sBAAwB,qBAC3C,IAAM92B,GAAUg3B,EAAAA,gBAA6Bs4D,IAC7CtvF,GAAQovF,qBAAuBA,GAC/BpvF,GAAQqvF,uBAAyBA,GACjCr4D,EAAAA,uBAAoCs4D,GAAmBx4D,sBAAuB92B,IAE9E,UCvNA,SAASqwF,KAEL,IAAIzoE,EACA0oE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEEr4D,EAAUlvB,KAAKkvB,QACf51B,EAAWmiD,GAASvsB,GAASM,cASnC,SAAS62C,IACL8gB,EAAwB,GACxBC,EAAyB,GACzBC,EAA4B,GAC5BE,EAAiB,GACjBD,EAAsC,KACtCL,EAAmB,EACtB,CAsHD,SAASO,EAAkBtwC,EAAShgD,GAChC,IAAIyB,GAAS,EACbu+C,EAAQnG,MAAK,SAACr1C,EAAM6C,GAChB,GAAI7C,IAASxE,EAET,OADAyB,EAAQ4F,GACD,CAEd,IACG5F,EAAQ,GACZu+C,EAAQz3C,OAAO9G,EAAO,EACzB,CAOD,SAAS8uF,EAAwBC,GAC7B,IAAInpF,EACJ,IAAKA,EAAI,EAAGA,EAAIgpF,EAAe1vF,OAAQ0G,IACnC,GAAIgpF,EAAehpF,GAAGmpF,WAAaA,EAC/B,OAAOnpF,EAGf,OAAQ,CACX,CAuED,SAASopF,EAAmBl9B,EAAatyD,GACrCyvF,EAAsBn9B,EAAatyD,GACnC,IAAI0vF,EAAK,IAAIr8B,GACbq8B,EAAGp9B,YAAcA,EACjBo9B,EAAG1vF,MAAQA,EACX8uF,EAAiBlvF,KAAK8vF,EACzB,CAeD,SAASD,EAAsBn9B,EAAatyD,GACxC24E,GAAmBrmB,EAAa,UAChCqmB,GAAmB34E,EAAO,UAC1B8uF,EAAiB90C,SAAQ,SAAUjlC,EAAK2pC,GAChC3pC,EAAIu9C,cAAgBA,GAAev9C,EAAI/U,QAAUA,GACjD8uF,EAAiBxnF,OAAOo3C,EAAK,EAEpC,GACJ,CA+DD,OA9BAt4B,EAAW,CACPupE,uCAvPJ,WACI,OAAOR,CACV,EAsPGS,uCAvQJ,SAAgDC,GAC5CV,EAAsCU,CACzC,EAsQGC,yCAjQJ,WACIX,EAAsC,IACzC,EAgQGY,0BA1OJ,WACI,OAAOd,CACV,EAyOGe,yBAnPJ,WACI,OAAOhB,CACV,EAkPGiB,6BAhMJ,WACI,OAAOf,CACV,EA+LGgB,iCAvLJ,SAA0CnxF,GACtCmwF,EAA0BtvF,KAAKb,EAClC,EAsLGoxF,8BA1NJ,SAAuCpxF,GACnCkwF,EAAuBrvF,KAAKb,EAC/B,EAyNGqxF,6BArOJ,SAAsCrxF,GAClCiwF,EAAsBpvF,KAAKb,EAC9B,EAoOGsxF,mCAlLJ,SAA4CtxF,GACxCswF,EAAkBH,EAA2BnwF,EAChD,EAiLGuxF,gCA7MJ,SAAyCvxF,GACrCswF,EAAkBJ,EAAwBlwF,EAC7C,EA4MGwxF,+BAtNJ,SAAwCxxF,GACpCswF,EAAkBL,EAAuBjwF,EAC5C,EAqNGyxF,iBAvIJ,SAA0BzrF,EAAMwqF,EAAU7R,GACtC,GAAoB,iBAAT34E,GAAsBA,IAAS+oF,GAAAA,wBAA6C/oF,IAAS+oF,GAAAA,sBACxE,iBAAbyB,EACP,MAAMh/C,EAAAA,mBAEV,IAAI/vC,EAAQ8uF,EAAwBC,IACrB,IAAX/uF,EAEA4uF,EAAexvF,KAAK,CAChBmF,KAAMA,EACNwqF,SAAUA,EACV7R,KAAMA,KAIV0R,EAAe5uF,GAAOuE,KAAOA,EAC7BqqF,EAAe5uF,GAAOk9E,KAAOA,EAEpC,EAsHG+S,uBA9FJ,WACIrB,EAAiB,EACpB,EA6FGsB,oBAhHJ,SAA6BnB,GACzB,GAAIA,EAAU,CACV,IAAI/uF,EAAQ8uF,EAAwBC,IAErB,IAAX/uF,GAEA4uF,EAAe9nF,OAAO9G,EAAO,EAEpC,MAEG4uF,EAAiB,EAExB,EAqGGb,kBAxFJ,WACI,OAAOa,CACV,EAuFGI,mBAAAA,EACAC,sBAAAA,EACApkB,oBArEJ,WACI,OAAOyjB,CACV,EAoEG6B,6BAhDJ,WACI7B,EAAmB,EACtB,EA+CG8B,+BA1CJ,WACI,IAAIC,EAAyB1vF,EAAS8c,MAAMwlC,UAAUsD,mBAAmBU,oBACzE+nC,EAAmBqB,EAAuBnpC,OAAQmpC,EAAuB7wF,MAC5E,EAwCG8wF,6BAtCJ,SAASA,EAA6B/rF,EAAM/E,GACnC+E,EAKDgqF,EAAmBhqF,KAAU/E,EAJ7B8B,OAAO8L,KAAKmhF,GAAoB/0C,SAAQ,SAAA94C,GACpC4vF,EAA6B5vF,EAAKlB,EACrC,GAIR,EA+BG+wF,6BA7BJ,SAAsChsF,GAClC,IAAMisF,EAAWjC,EAAmBhqF,GAEpC,YAAoBlF,IAAbmxF,EAAyBjC,EAAkB,QAAWiC,CAChE,EA0BGxjB,UArSJ,WAEC,EAoSGr9B,MA1SJ,WACI+9B,GACH,GAlBG6gB,EAAqB,CACjBkC,SAlByB,GAoB7B/iB,IA4TG9nD,CACV,CAEDyoE,GAAsBv5D,sBAAwB,wBAC9C,OAAeE,EAAAA,oBAAiCq5D,6HCpUhD,SAASqC,GAAWp1C,GAEhBA,EAAMA,GAAO,CAAC,EAEd,IAWI11B,EACA6zB,EACAk3C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAvD,EACAniC,EACArf,EAEa,EAvBX1V,EAAUlvB,KAAKkvB,QACfC,EAAa8kB,EAAI9kB,WACjByd,EAAcqH,EAAIrH,YAClBgoC,EAAmB3gC,EAAI2gC,iBACvBphC,EAAkBS,EAAIT,gBACtB0Q,EAAYjQ,EAAIiQ,UAChBp2B,EAASmmB,EAAInmB,OACb87D,EAAiB31C,EAAI21C,gBAAkB,EACvC5kD,EAAWyR,GAASvnB,GAASM,cAC7Bl2B,EAAWmiD,GAASvsB,GAASM,cAoCnC,SAASq6D,EAAavyE,EAAQwyE,GAAmB,QAUzCv2C,EATE9N,EAAUnuB,EAAOmuB,QACjBskD,EAAS,GACXC,GAAgB,EAChBC,GAAoB,EACpB/1C,EAAmB,IAAI5tC,KACvB4jF,EAAgBh2C,EAChBi2C,EAAyB,EACzBC,EAAkB,KAClBC,EAAiB,KAGrB,IAAK72C,IAAoB5G,IAAgBzd,EACrC,MAAM,IAAI/2B,MAAM,2CAGpB,IA6KIkhE,EA7KEgxB,EAAuB,SAASC,GAClC9kD,EAAQtT,iBAAmB+hB,EAC3BzO,EAAQpT,eAAiB,IAAI/rB,KAC7Bm/B,EAAQrT,cAAgBqT,EAAQrT,eAAiB8hB,EACjDzO,EAAQ4kD,eAAiBA,EAEzB,IAAMG,EAAcj3C,EAAYnlC,SAAWmlC,EAAYnlC,SAAS22C,YAAc,KACxE0lC,EAAiBl3C,EAAYnlC,SAAWmlC,EAAYnlC,SAASV,OAAS,KACtEu3C,EAAkB1R,EAAYnlC,UAAYmlC,EAAYnlC,SAASs8E,sBAAwBn3C,EAAYnlC,SAASs8E,wBAC9Gn3C,EAAYnlC,SAAWmlC,EAAYnlC,SAAS62C,gBAAkB,KAE5D90B,EAAO80B,GAAmB3rD,EAAS8c,MAAMwlC,UAAUzrB,MAAQ72B,EAAS8c,MAAMwlC,UAAUzrB,KAAKgvB,QAAUuqC,EAAUlc,qBAAqBvoB,EAAiBxf,EAAQ3T,WAAa,KAE9K8a,EAAY+9C,eAAellD,EAAS+kD,EAAaC,EAAgBxlC,EAAiBslC,EAAUR,EAAS,KAAM55D,EAC9G,EAEKy6D,EAAe,SAAUL,GAC3BN,GAAoB,EAEpBK,EAAqBC,GAEjB9kD,EAAQvoC,OAASwyB,EAAYmB,WAC7B+b,EAAYi+C,kBAAkBplD,GAC9BT,EAASqK,QAAQgI,GAAAA,0BAAkC,CAAE5R,QAAAA,IAE5D,EAEKhvB,EAAY,WAKd,GAJI2zE,IACAU,aAAaV,GACbA,EAAkB,OAEiB,IAAnCh4C,EAAS75C,QAAQg7C,KAGjBnB,EAAS3yC,OAAO2yC,EAAS75C,QAAQg7C,GAAc,GAG/C02C,GAGA,GAFAW,GAAa,GAETd,EAAoB,EAAG,CAGvB,IACQxwF,EAAS8c,MAAMwlC,UAAUsD,mBAAmBS,+CAAiDla,EAAQvoC,OAASwyB,EAAYuB,oBAE1F2jD,EAAiBmW,wBAAwBr7D,EAAYuB,sBACrD64D,GAC5B9kD,EAASqK,QAAQgI,GAAAA,wBAK5B,CAFC,MAAOjvC,GAER,CAED0hF,IACA,IAAIkB,EAAe,CAAE1zE,OAAQA,GAC7BiyE,EAAcxxF,KAAKizF,GACnBA,EAAar2C,QAAU/pC,YAAW,YACe,IAAzC2+E,EAAchxF,QAAQyyF,KAGtBzB,EAAc9pF,OAAO8pF,EAAchxF,QAAQyyF,GAAe,GAE9DnB,EAAavyE,EAAQwyE,GACxB,GAAElV,EAAiBqW,yBAAyBxlD,EAAQvoC,MACxD,KAAM,CACH,GAAIuoC,EAAQvoC,OAASwyB,EAAYyB,+BAC7B,OAGJhC,EAAWthB,MAAM,IAAIu0D,GAAYonB,EAA8B/jD,EAAQvoC,MAAOuoC,EAAQ7V,IAAM,oBAAqB,CAC7G6V,QAASA,EACTr3B,SAAUmlC,EAAYnlC,YAGtBkJ,EAAOzJ,OACPyJ,EAAOzJ,MAAM43B,EAAS,QAAS8N,EAAYnlC,SAAS02C,WAAYvR,EAAYnlC,UAG5EkJ,EAAO4zE,UACP5zE,EAAO4zE,SAASzlD,EAAS8N,EAAYnlC,SAAS02C,WAErD,CAER,EAwFGrf,EAAQ3qC,eAAe,8BAAoE,IAArC2qC,EAAQY,0BAAsC96B,OAAOrL,OAAkC,gBAAzBulC,EAAQ5S,cAAkC4S,EAAQvoC,OAASwyB,EAAYuB,qBAC3LqoC,EAAStV,GAAY90B,GAASxxB,OAAO,CACjC81C,gBAAiBA,EACjByQ,0BAAAA,EACAC,UAAWA,KAER8E,MAAM,CACTpc,YAAAA,IAEJy9C,EAAiB3hD,EAAAA,kBAAAA,QAEjB4wB,EAAStlB,GAAU9kB,GAASxxB,OAAO,CAC/B81C,gBAAiBA,IAErB62C,EAAiB3hD,EAAAA,kBAAAA,KAGrB,IAAIgL,EAAU,KACV0B,EAAc5B,EAAgBM,iBAAmBN,EAAgBM,iBAAiBrO,EAAQ7V,KAAO6V,EAAQ7V,IAEvGu7D,EAAyB1lD,aAAH,EAAGA,EAASvT,gBAClCk5D,EAAyB3lD,SAAH,UAAGA,EAAS1T,iBAAZ,iBAAG,EAAoBjG,UAAvB,aAAG,EAAwBllB,WAEvD,GAD0B+iF,EAAyBvb,wBAAwB3oC,EAAQvoC,KAAMiuF,IAA2BxB,EAAyBzb,sBAAsBkd,IAC1I3B,EAAUriB,gBAAiB,CAChD,IAAMC,EAAiBoiB,EAAUniB,gCAC3B+jB,EAAWhkB,EAAe7yD,KAAO6yD,EAAe7yD,KAAOlb,EAAS8c,MAAMwlC,UAAUsH,KAAK1uC,KAC3F,GAAI62E,IAAa3iD,EAAAA,gBAA2B,CACxC,IAAM4iD,EAkElB,SAAsC7lD,GAClC,IACI,IAAM6lD,EAA2B,GAC3BC,EAAqB9B,EAAUje,kBAAkB/lC,GAMvD,OAJI8lD,GACAD,EAAyBvzF,KAAKwzF,GAG3BD,CAGV,CAFC,MAAOljF,GACL,MAAO,EACV,CACJ,CA/E4CojF,CAA6B/lD,GAC9D2P,EAAcr3C,GAAAA,gCAAsCq3C,EAAak2C,EACpE,MAAUD,IAAa3iD,EAAAA,mBACpBgL,EAAU+1C,EAAU7d,oBAAoBnmC,GAE/C,CAED,IAAMmO,EAAkBwyC,EAAsB8C,6BAA6BzjD,EAAQvoC,MAGnF,GAAIuoC,EAAQG,YAAa,CACrB,IAAMA,EAAc3rC,OAAO8L,KAAK0/B,EAAQG,aAAave,KAAI,SAAChuB,GACtD,MAAO,CACHA,IAAAA,EACAlB,MAAOstC,EAAQG,YAAYvsC,GAElC,IACD+7C,EAAcr3C,GAAAA,gCAAsCq3C,EAAaxP,EACpE,CAEDH,EAAQ7V,IAAMwlB,EAEd7B,EAAc,CACV3jB,IAAKwlB,EACL3B,OAAQ/jB,EAAYiB,IACpBijB,gBAAiBA,EACjBnO,QAASA,EACT1rB,OA7FW,WACPw5B,EAAYnlC,SAASV,QAAU,KAAO6lC,EAAYnlC,SAASV,QAAU,MACrEk9E,GAAa,GAETtzE,EAAOizE,SACPjzE,EAAOizE,QAAQh3C,EAAYnlC,SAASA,SAAUmlC,EAAYnlC,SAAS02C,WAAYvR,EAAYnlC,SAAS22C,aAGpGztC,EAAO4zE,UACP5zE,EAAO4zE,SAASzlD,EAAS8N,EAAYnlC,SAAS02C,YAGzD,EAkFGvQ,MAAO99B,EACPtD,QAASsD,EACTg+B,SA/Ia,SAAU0Q,GACvB,IAAMsmC,EAAc,IAAInlF,KAEpB0jF,IACAA,GAAgB,IACX7kC,EAAM8B,kBACN9B,EAAM8B,kBAAoB9B,EAAME,QAAUF,EAAMC,UACjD3f,EAAQrT,cAAgBq5D,IAI5BtmC,EAAM8B,mBACNxhB,EAAQ/S,YAAcyyB,EAAMC,OAC5B3f,EAAQ9S,WAAawyB,EAAME,OAG1BF,EAAMyD,UACPmhC,EAAOhyF,KAAK,CACRsP,EAAG6iF,EACH1/D,EAAG26B,EAAMzpB,KAAOypB,EAAMzpB,KAAO+vD,EAAYjlF,UAAY0jF,EAAc1jF,UACnEN,EAAG,CAACi/C,EAAMC,OAASD,EAAMC,OAAS+kC,EAAyB,KAG/DD,EAAgBuB,EAChBtB,EAAyBhlC,EAAMC,QAG/BglC,IACAU,aAAaV,GACbA,EAAkB,MAGlB9wF,EAAS8c,MAAMwlC,UAAU0F,+BAAiC,IAC1D8oC,EAAkBx/E,YAAW,WAEzBg6B,EAAO50B,KAAK,iBAAmBujC,EAAY3jB,IAAM,4BACjD2jB,EAAYnlC,SAAS8C,QAAU,KAC/BqiC,EAAY+lB,OAAOzmB,MAAMU,GACzB98B,GACH,GAAEnd,EAAS8c,MAAMwlC,UAAU0F,iCAG5BhqC,EAAOm9B,UAAY0Q,GACnB7tC,EAAOm9B,SAAS0Q,EAEvB,EAmGGj0C,QAnFY,WACZo5E,GAAqB,GAEjBF,IACAU,aAAaV,GACbA,EAAkB,MAElB9yE,EAAOu7B,OACPv7B,EAAOu7B,MAAMpN,EAEpB,EA0EGiP,UAxEc,SAAUyQ,GACxB,IAAIumC,EACJ,GAAIvmC,EAAM8B,iBAAkB,CACxB,IAAI0kC,EAAsBxmC,EAAMC,OAASD,EAAME,MAAS,IACxDqmC,EAAiB,4BAA8BvmC,EAAMC,OAAS,aAAeD,EAAME,MAAQ,MAAQsmC,EAAmBpwD,QAAQ,GAAK,aACtI,MACGmwD,EAAiB,gDAErB9mD,EAAO50B,KAAK07E,EACf,EAgEGpyB,OAAQA,EACR3kB,QAASi1C,EACTl2C,QAASA,GAIb,IAAIzE,GAAM,IAAI3oC,MAAOE,UACrB,GAAIkB,MAAM+9B,EAAQ7S,mBAAqBqc,GAAOxJ,EAAQ7S,iBAElDwf,EAASr6C,KAAKw7C,GACd+lB,EAAOvmB,KAAKQ,OACT,CAEH,IAAIq4C,EAAiB,CAAEr4C,YAAaA,GACpC+1C,EAAgBvxF,KAAK6zF,GACrBA,EAAeC,aAAejhF,YAAW,WACrC,IAAiD,IAA7C0+E,EAAgB/wF,QAAQqzF,GAA5B,CAGItC,EAAgB7pF,OAAO6pF,EAAgB/wF,QAAQqzF,GAAiB,GAEpE,IACI13C,EAAmB,IAAI5tC,KACvB4jF,EAAgBh2C,EAChB9B,EAASr6C,KAAK6zF,EAAer4C,aAC7B+lB,EAAOvmB,KAAK64C,EAAer4C,YAG9B,CAFC,MAAOnrC,GACLwjF,EAAer4C,YAAYpgC,SAC9B,CARA,CASJ,GAAGsyB,EAAQ7S,iBAAmBqc,EAClC,CACJ,CA8ED,OAPA1wB,EAAW,CACPw0B,KAjDJ,SAAcz7B,GACNA,EAAOmuB,QACPokD,EACIvyE,EACAs9D,EAAiBmW,wBACbzzE,EAAOmuB,QAAQvoC,OAInBoa,EAAOzJ,OACPyJ,EAAOzJ,MAAMyJ,EAAOmuB,QAAS,QAGxC,EAqCGoN,MA9BJ,WACI02C,EAAcp3C,SAAQ,SAAArpC,GAClBgiF,aAAahiF,EAAE6rC,SAEX7rC,EAAEwO,OAAOmuB,SAAW38B,EAAEwO,OAAOu7B,OAC7B/pC,EAAEwO,OAAOu7B,MAAM/pC,EAAEwO,OAAOmuB,QAE/B,IACD8jD,EAAgB,GAEhBD,EAAgBn3C,SAAQ,SAAAl1B,GAAC,OAAI6tE,aAAa7tE,EAAE4uE,aAAnB,IACzBvC,EAAkB,GAElBl3C,EAASD,SAAQ,SAAAl1B,GAETA,EAAEwoB,QAAQvoC,OAASwyB,EAAYyB,iCAOnClU,EAAExG,UAAYwG,EAAE9J,QAAU8J,EAAEu3B,gBAAax8C,EACzCilB,EAAEq8C,OAAOzmB,MAAM51B,GAClB,IACDm1B,EAAW,EACd,GAnXGxN,EAAS6V,GAAMvrB,GAASM,cAAcgZ,UAAUjqB,GAChD6zB,EAAW,GACXk3C,EAAkB,GAClBC,EAAgB,GAChBE,EAAY7jB,GAAU12C,GAASM,cAC/Bm6D,EAA2B1b,GAAyB/+C,GAASM,cAC7Dk6D,EAAYhd,GAAUx9C,GAASM,cAC/By0B,EAA4BqqB,GAA0Bp/C,GAASM,cAC/D42D,EAAwBY,GAAsB93D,GAASM,cAE1B,QACxBE,EAAYmB,SAAW/C,EAAOghC,iCADN,KAExBp/B,EAAYoB,qBAAuBhD,EAAOohC,8BAFlB,KAGxBx/B,EAAYqB,kBAAoBjD,EAAOmhC,uCAHf,KAIxBv/B,EAAYuB,mBAAqBnD,EAAOkhC,gCAJhB,KAKxBt/B,EAAYsB,mBAAqBlD,EAAOkhC,gCALhB,KAMxBt/B,EAAYwB,iCAAmCpD,EAAOkhC,gCAN9B,KAOxBt/B,EAAY6B,WAAazD,EAAOkhC,gCAPrCw6B,EAA6B,EAkX1BjrE,CACV,CAED8qE,GAAW57D,sBAAwB,aAEnC,IACA,GADgBE,EAAAA,gBAA6B07D,IC5a7C,SAASyC,KAEL,IAEIC,EAYJ,SAASC,IACLD,EAAkB,CAAC,CACtB,CAcD,SAASzjD,IACL0jD,GACH,CAgBD,OAbI1jD,IAKO,CACP2jD,UAvBJ,SAAmBr8D,GAGf,IAAK,IAAIiwB,KAAUksC,EACf,GAAIA,EAAgBjxF,eAAe+kD,IAAWjwB,EAAIs8D,WAAWrsC,GACzD,OAAOksC,EAAgBlsC,GAI/B,OAAOwpC,EACV,EAcG8C,eAtCJ,SAAwBtsC,EAAQyZ,GAC5ByyB,EAAgBlsC,GAAUyZ,CAC7B,EAqCG8yB,iBAnCJ,SAA0BvsC,GAClBksC,EAAgBlsC,WACTksC,EAAgBlsC,EAE9B,EAgCGmsC,oBAAqBA,EACrB1jD,MAAOA,EAId,CAEDwjD,GAAoBr+D,sBAAwB,sBAC5C,IACA,GADgBE,EAAAA,oBAAiCm+D,ICrDjD,SAASO,GAAUp4C,GAEfA,EAAMA,GAAO,CAAC,EACd,IAGIq4C,EACAhzB,EAJEpqC,EAAUlvB,KAAKkvB,QAqCrB,OA/BAo9D,EAAsBR,GAAoB58D,GAASM,cA0BxC,CACPujB,KAzBJ,SAAcz7B,GACV,IAAKgiD,EAAQ,CACT,IAAIizB,EAAgBD,EAAoBL,UAAU30E,GAAUA,EAAOmuB,QAAUnuB,EAAOmuB,QAAQ7V,IAAM,MAClG0pC,EAASizB,EAAcr9D,GAASxxB,OAAO,CACnCyxB,WAAY8kB,EAAI9kB,WAChBylD,iBAAkB3gC,EAAI2gC,iBACtBphC,gBAAiBS,EAAIT,gBACrB5G,YAAaqH,EAAIrH,YACjBsX,UAAWjQ,EAAIiQ,UAAYjQ,EAAIiQ,UAAY,KAC3CsoC,UAAWv4C,EAAIu4C,UAAYv4C,EAAIu4C,UAAY,KAC3C1/C,cAAemH,EAAInH,cAAgBmH,EAAInH,cAAgB,KACvD5H,SAAU+O,EAAI/O,SAAW+O,EAAI/O,SAAW,KACxC0kD,eAAiBliF,MAAMusC,EAAI21C,gBAAuC,EAArB31C,EAAI21C,eACjD97D,OAAQmmB,EAAInmB,QAEnB,CACDwrC,EAAOvmB,KAAKz7B,EACf,EASGu7B,MAPJ,WACQymB,GACAA,EAAOzmB,OAEd,EAQJ,CACDw5C,GAAU5+D,sBAAwB,YAElC,IACA,GADgBE,EAAAA,gBAA6B0+D,upBCzC7C,GAPMI,SAAAA,8oBACF,WAAY78D,GAAK,mHACb,cAAMA,IACD88D,uBAAwB,EAFhB,CAGhB,UAJCD,CAAoBj7D,GCA1B,SAASm7D,GAAer1E,GAEpBA,EAASA,GAAU,CAAC,EACpB,IAOIiH,EACAquE,EARE19D,EAAUlvB,KAAKkvB,QACf8V,EAAW1tB,EAAO0tB,SAClB3Q,EAAS/c,EAAO+c,OAChB6Q,EAAW5tB,EAAO4tB,SAClBpX,EAASxW,EAAOwW,OAChBwhB,EAAWh4B,EAAOg4B,SA8HxB,OATA/wB,EAAW,CACPsuE,kBAlGJ,SAA2BpnD,GACvB,IAAMqnD,EAAS,SAAUvC,GACrBvlD,EAASqK,QAAQhb,EAAOujB,8BAA+B,CAAEnS,QAASA,EAASsnD,OAAQxC,GAEtF,EAED,GAAI9kD,EAAS,CACT,IAAIunD,EAAc,IAAIP,GAAYhnD,EAAQ7V,KAC1Cg9D,EAAU75C,KAAK,CACXtN,QAASunD,EACTzC,QAAS,WACLuC,GAAO,EACV,EACDj/E,MAAO,WACHi/E,GAAO,EACV,GAER,MACGA,GAAO,EAEd,EA+EG/5C,KA7EJ,SAActN,GACV,IAAMqnD,EAAS,SAAUhqF,EAAM+K,GAC3Bm3B,EAASqK,QAAQhb,EAAO4e,kBAAmB,CACvCxN,QAASA,EACTr3B,SAAUtL,GAAQ,KAClB+K,MAAOA,GAAS,KAChBgkC,OAAQtzB,GAEf,EAEGknB,EACAmnD,EAAU75C,KAAK,CACXtN,QAASA,EACTgP,SAAU,SAAU0Q,GAChBngB,EAASqK,QAAQhb,EAAOgkB,iBAAkB,CACtC5S,QAASA,EACT6f,OAAQH,EAAMG,OACdhW,SAAAA,IAEA6V,EAAMriD,MACNkiC,EAASqK,QAAQhb,EAAO6e,sBAAuB,CAC3CzN,QAASA,EACTr3B,SAAU+2C,EAAMriD,MAAQ,KACxB+K,MAAO,KACPgkC,OAAQtzB,GAGnB,EACDgsE,QAAS,SAAUznF,GACfgqF,EAAOhqF,EACV,EACD+K,MAAO,SAAU43B,EAASqf,EAAYmoC,GAClCH,OACI90F,EACA,IAAIoqE,GACAt0C,EAAOwgC,2CACP2+B,EACAnoC,GAGX,EACDjS,MAAO,SAAUpN,GACTA,GACAT,EAASqK,QAAQhb,EAAO8e,kBAAmB,CACvCrhB,UAAW2T,EAAQ3T,UACnB2T,QAASA,EACToM,OAAQtzB,GAGnB,IAGLuuE,OACI90F,EACA,IAAIoqE,GACAt0C,EAAOygC,wCACPzgC,EAAOiiC,4CAItB,EAkBGld,MAhBJ,WACQ+5C,GACAA,EAAU/5C,OAEjB,EAaGvK,MAXJ,WACQskD,IACAA,EAAU/5C,QACV+5C,EAAY,KAEnB,GA7GGA,EAAYP,GAAUn9D,GAASxxB,OAAO,CAClCyxB,WAAY7X,EAAO6X,WACnBrB,OAAQA,EACR8e,YAAat1B,EAAOs1B,YACpBgoC,iBAAkBt9D,EAAOs9D,iBACzBphC,gBAAiBl8B,EAAOk8B,gBACxBtO,SAAUA,EACVsnD,UAAW9jD,EACXwb,UAAW5sC,EAAO4sC,UAClBpX,cAAex1B,EAAOw1B,cACtB88C,eAAgBtyE,EAAOhe,SAAS8c,MAAMwlC,UAAUyF,yBA8GjD9iC,CACV,CAEDouE,GAAel/D,sBAAwB,iBACvC,OAAeE,EAAAA,gBAA6Bg/D,ICxI5C,SAASO,GAAuB51E,GAE5BA,EAASA,GAAU,CAAC,EACpB,IAwBIiH,EACAqmB,EACA7S,EACAo7D,EACAC,EACAC,EACA9gD,EACA+gD,EACAC,EACAnoD,EACAooD,EAlCEt+D,EAAUlvB,KAAKkvB,QACf8V,EAAW1tB,EAAO0tB,SAClB3Q,EAAS/c,EAAO+c,OAChBvG,EAASxW,EAAOwW,OAChBmX,EAAQ3tB,EAAO2tB,MACfunD,EAAYl1E,EAAOk1E,UACnBlzF,EAAWge,EAAOhe,SAClBwzC,EAAgBx1B,EAAOw1B,cACvB7gB,EAAa3U,EAAOwU,GACpB5uB,EAAOoa,EAAOpa,KACdioC,EAAa7tB,EAAO6tB,WACpBhW,EAAa7X,EAAO6X,WACpBylD,EAAmBt9D,EAAOs9D,iBAC1BjoC,EAAgBr1B,EAAOq1B,cACvBE,EAAqBv1B,EAAOu1B,mBAC5BE,EAAUz1B,EAAOy1B,QACjBH,EAAct1B,EAAOs1B,YACrBvH,EAAoB/tB,EAAO+tB,kBAC3BpL,EAAoB3iB,EAAO2iB,kBAC3Bu2B,EAAUl5C,EAAOk5C,QACjBi9B,EAAyBn2E,EAAOm2E,uBAChCC,EAAcp2E,EAAOq2E,WAAar2E,EAAOq2E,UAAUC,UACnDC,EAAav2E,EAAOq2E,WAAar2E,EAAOq2E,UAAUG,YAkGxD,SAASC,EAA2B3lF,GAChC,GAAIA,EAAEypC,SAAWw7C,EAAjB,CAIA,GAAkB,OAAdjlF,EAAEq9B,QAAkB,CACpB,IAAIuoD,EATgB,0BASO5lF,EAAEq9B,QATlBvoC,KAUP+wF,EAASD,EAAS,OAAS5lF,EAAEq9B,QAAQ9sC,MACrCu1F,EAAe9lF,EAAEq9B,QAAQvY,iBAAmB,IAAM+gE,EACtDR,EAAuBlhE,cAAcN,EAAYiiE,EAAc9lF,EAAEgG,UAC5DjB,MAAK,WACG6gF,GAEDP,EAAuBxgE,8BAA8BhB,EAAY7jB,EAAEq9B,QAAQvY,iBAAkB,CACzFv0B,MAAOyP,EAAEq9B,QAAQ9sC,MACjBw0B,WAAYmgE,GAGvB,GACR,CAEGllF,EAAEyF,OAASzF,EAAEq9B,QAAQvT,kBAAoBs7D,EACzCH,EAAcv6C,eAAe1qC,EAAEq9B,UAE/B6nD,IACAa,IAtBH,CAwBJ,CAED,SAASC,EAA4BhmF,GAC7BA,EAAEilF,gBAAkBA,IAGxBzoD,EAAO9kB,KAAP,WAAgBmM,EAAhB,yBACAoiE,IACAX,IACH,CAcD,SAASW,IACDb,IAGJA,GAAY,EACf,CA2DD,SAASW,IACL,IAAIX,GAIA9lF,MAAM0lF,EAAyBngD,4BAA6B,CAC5D,IAAIxH,EAAU,KACT8nD,GAID9nD,EA5CD0nD,EAAajmD,sBAAsB2rC,IAAgBua,EAAyBngD,4BAmG/E4gD,GACAA,EAAWtvE,EAAU+uE,EAAoBgB,OA3DrC7oD,EArDH2nD,EAAyBngD,2BAIvBkgD,EAAapmD,eAAe8rC,IAAgBua,EAAyBngD,4BAHjE,KAqDHsgD,GAAgB,GAQhB9nD,GACAb,EAAO9kB,KAAP,WAAgBmM,EAAhB,gCAAkDwZ,EAAQ7V,MAC1Dy9D,EAAcv6C,eAAerN,IAE7Bb,EAAO9kB,KAAP,WAAgBmM,EAAhB,iCAEP,CACJ,CAiCD,SAAS4mD,IACL,OAAO9gD,CACV,CAED,SAASu8D,IACL,OAAOlB,EAAyBngD,2BAA2B/E,iBAAmB,CACjF,CAQD,SAAS3C,IACLgoD,GAAgB,EAChBD,EAAqB,EACrB/gD,GAAW,CACd,CA8BD,OAhBAhuB,EAAW,CACPupB,WAtNJ,SAAoBymD,GAChBx8D,EAAYw8D,EACZpB,EAAarlD,YAAW,GAyJ5B,SAA8B/V,GAC1Bwa,GAAW,EAEX,IAAI60B,EAAoBr0B,EAAQ6tB,qBAAqB7oC,GAGjDO,EAAU8uC,EAAkBotB,WAAU,SAACx1D,GACvC,OAAOA,EAAelN,KAAO0kC,EAAQ1kC,EACxC,IAEG5uB,IAASsvF,EAAU5jD,OAAS1rC,IAASsvF,EAAU3jD,OAAS3rC,IAASsvF,EAAU1jD,KAK/EskD,EAAyBr9C,WAAW,KAAMqxB,EAAmBlkE,EAAM60B,EAAUme,aAAc5d,GAJvFia,GAAW,CAKlB,CAxKGkiD,CAAqB18D,EACxB,EAmNG8gD,aAAcA,EACd6b,4BAxKJ,WACI,OAAOtB,CACV,EAuKG/7C,iCArJJ,SAA0C3V,GAClC2xD,GACAA,EAAch8C,iCAAiC3V,EAEtD,EAkJG4J,QAzCJ,WACI,OAAOpoC,CACV,EAwCGyxF,oBAvKJ,WACI,OAAOvB,EAAyBngD,2BAA2BnhB,EAC9D,EAsKGkhB,WA/CJ,WACI,OAAOT,CACV,EA8CGpwC,MA3HJ,WACI,GAAIixF,EAA0B,CAC1B,IAAKA,EAAyBngD,2BAC1B,MAAM,IAAI70C,MAAM,0CAEpBo1F,GAAY,EAEZC,EAAuBrgE,8BAA8BnB,EAAYmhE,EAAyBngD,2BAA2BnhB,IAChH3e,MAAK,SAAClB,GACCA,IACAkhF,EAAayB,gBAAgB3iF,EAAMtT,OACnC20F,EAAqBrhF,EAAMkhB,YAE/BghE,GACH,IAPL,OAQW,WAEHA,GACH,GACR,CACJ,EAwGGE,KAAMA,EACNC,2BAA4BA,EAC5BhmD,MAnBJ,WACI/C,IACA4nD,EAAa7kD,QAEbtD,EAASuD,IAAIlU,EAAOglB,4BAA6B+0C,EAA6B7vE,GAC9EymB,EAASuD,IAAIlU,EAAOW,2BAA4B+4D,EAA4BxvE,EAC/E,GA5RGgnB,IACAX,EAASK,EAAMuD,UAAUjqB,GAEzB6mB,EAAqBuzB,GAAmBzpC,GAASxxB,OAAO,CACpD22B,OAAAA,EACA2Q,SAAAA,EACAG,WAAAA,EACAlL,kBAAAA,EACA6S,cAAAA,EACA+rB,sBAAuBvhD,EAAOuhD,sBAC9B37D,KAAAA,IAGJiwF,EAAexoD,EAAYzV,GAASxxB,OAAO,CACvCynC,WAAYA,EACZjoC,KAAMA,EACN+8B,kBAAmBA,EACnB2S,YAAaA,EACbgoC,iBAAkBA,EAClBvvC,kBAAmBA,EACnBlW,WAAYA,EACZ71B,SAAUA,EAEV0rC,SAAUA,EACV3Q,OAAQA,EACR4Q,MAAOA,EACPuO,gBAAiBK,GAAgB3kB,GAASM,cAC1Csd,cAAeA,EACf0/C,UAAWA,EACXpnD,mBAAoBA,EACpBF,SAAUsoB,GAASt+B,GAASM,gBAGhC49D,EAA2B/gD,EAAyBnd,GAASxxB,OAAO,CAChEynC,WAAYA,EACZjoC,KAAMA,EACNyvC,cAAeA,EACfC,YAAaA,EACbC,mBAAoBA,EACpB5S,kBAAmBA,EACnB6S,cAAeA,EACfzY,OAAQA,EACR2Q,SAAUA,EACVlX,OAAQA,EACRif,QAAAA,EACA3H,mBAAoBA,IAGxBioD,EAAgB58C,EAAcvhB,GAASxxB,OAAO,CAC1CynC,WAAYA,EACZyH,YAAaA,EACbgE,eAAgB+7C,GAAez9D,GAASxxB,OAAO,CAC3CkvC,YAAaA,EACbgoC,iBAAkBA,EAClBzlD,WAAYA,EACZqkB,gBAAiBK,GAAgB3kB,GAASM,cAC1Cl2B,SAAUA,EACV0rC,SAAUA,EACV3Q,OAAQA,EACRvG,OAAQA,EACR0+D,UAAWA,EACX1/C,cAAeA,EACf5H,SAAUsoB,GAASt+B,GAASM,gBAEhCyV,MAAOA,EACPD,SAAUA,EACV3Q,OAAQA,IAGZ2Q,EAASyD,GAAGpU,EAAOglB,4BAA6B+0C,EAA6B7vE,GAC7EymB,EAASyD,GAAGpU,EAAOW,2BAA4B+4D,EAA4BxvE,GAwOxEA,CACV,CAED2uE,GAAuBz/D,sBAAwB,yBAC/C,IACA,GADgBC,OAAOC,aAAa8B,gBAAgBy9D,ICvVpD,SAAS2B,GAAcv3E,GAEnBA,EAASA,GAAU,CAAC,EACpB,IAwBIiH,EACAuwE,EACAC,EACAC,EACA7pD,EACA8pD,EACAC,EACAC,EA/BEjgE,EAAUlvB,KAAKkvB,QACf8V,EAAW1tB,EAAO0tB,SAClB3Q,EAAS/c,EAAO+c,OAChBvG,EAASxW,EAAOwW,OAChB0+D,EAAYl1E,EAAOk1E,UACnB1/C,EAAgBx1B,EAAOw1B,cACvBxzC,EAAWge,EAAOhe,SAClB2rC,EAAQ3tB,EAAO2tB,MACf9V,EAAa7X,EAAO6X,WACpBylD,EAAmBt9D,EAAOs9D,iBAC1BjoC,EAAgBr1B,EAAOq1B,cACvBE,EAAqBv1B,EAAOu1B,mBAC5BE,EAAUz1B,EAAOy1B,QACjBH,EAAct1B,EAAOs1B,YACrBvH,EAAoB/tB,EAAO+tB,kBAC3BpL,EAAoB3iB,EAAO2iB,kBAC3B4+B,EAAwBvhD,EAAOuhD,sBAC/B40B,EAAyBn2E,EAAOm2E,uBAChCxhE,EAAa3U,EAAOwU,GACpBsjE,EAAY93E,EAAOq2E,WAAar2E,EAAOq2E,UAAU0B,QACjDC,EAAgBh4E,EAAOq2E,WAAar2E,EAAOq2E,UAAUG,YACrDyB,EAAaj4E,EAAOq2E,WAAar2E,EAAOq2E,UAAU6B,SAClDrjE,EAAiB7U,EAAOq2E,WAAar2E,EAAOq2E,UAAU8B,qBAkB5D,SAASlqD,IACLJ,EAAa,KACb2pD,EAA0B,GAC1BC,EAAiC,EACjCC,EAAkC,EAClCE,EAAqB,GACrBD,EAA0B,GAC1BE,EAAkB,CAAC,CACtB,CAqDD,SAASO,EAAgCxyF,EAAMioC,GAE3C,IAAIwqD,EAAsB5iD,EAAQ6iD,uBAAuBzqD,EAAYjoC,GAsBrE,OArBAyyF,EAAoBx9C,SAAQ,SAACvZ,GACzBA,EAAMuwC,YAAcvwC,EAAMuwC,YAAYjyE,QAAO,SAACs5D,GAC1C,SAAI0+B,EAAmBhyF,KAA2D,IAAlDgyF,EAAmBhyF,GAAM3E,QAAQi4D,EAAQ1kC,IAI5E,GACJ,KAED6jE,EAAsBA,EAAoBz4F,QAAO,SAAC0hC,GAC9C,OAAQA,EAAMuwC,aAAevwC,EAAMuwC,YAAYtxE,OAAS,CAC3D,KAGmBs6C,SAAQ,SAACpgB,GACrBA,EAAUo3C,aACVp3C,EAAUo3C,YAAYh3B,SAAQ,SAACqe,GAC3Bq/B,EAAsB99D,EAAWy+B,EACpC,GAER,IACMm/B,CACV,CAED,SAASE,EAAuB99D,EAAWy+B,GAEvC,IAAI0Z,EAAkBgjB,GAAuBh+D,GAASxxB,OAAO,CACzDouB,GAAIG,EACJkZ,WAAYA,EACZF,MAAOA,EACP5Q,OAAQA,EACRvG,OAAQA,EACRkX,SAAUA,EACVwnD,UAAWA,EACX1/C,cAAeA,EACfxzC,SAAUA,EACV4D,KAAM60B,EAAU70B,KAChBqsD,SAAUx3B,EAAUw3B,SACpBiH,QAASA,EACTrhC,WAAYA,EACZylD,iBAAkBA,EAClBjoC,cAAeA,EACfE,mBAAoBA,EACpBE,QAASA,EACTH,YAAaA,EACbvH,kBAAmBA,EACnBpL,kBAAmBA,EACnBwzD,uBAAwBA,EACxB50B,sBAAuBA,EACvB80B,UAAW,CACPC,UAAWkC,EACXhC,YAAaiC,KAGrBjB,EAAwB/2F,KAAKmyE,GAC7BA,EAAgBpiC,WAAW/V,GAE3Bo9D,EAAgB3+B,EAAQ1kC,IAAM,IACjC,CAED,SAASgkE,MACLd,IACwCF,EAAwBj3F,QAC5D03F,EAAW,CAAC19C,OAAQ7xC,KAAM8rB,GAAIG,EAAYoD,QAAS,iEAE1D,CAED,SAAS0gE,EAAoB7lB,EAAiBojB,EAAoBx1B,GAC9Dq3B,EAAgBjlB,EAAgBykB,uBAAyB,CACrDrB,mBAAAA,EACAx1B,kBAAAA,GAGJ,IAEIk4B,EAFAriD,EAAW,EACXsiD,EAAc,EAElB,IAAK,IAAIC,KAAYf,EACbA,EAAgBr0F,eAAeo1F,KACG,OAA9Bf,EAAgBe,GAChBF,GAAqB,GAErBriD,GAAYwhD,EAAgBe,GAAU5C,mBACtC2C,GAAed,EAAgBe,GAAUp4B,qBAKhDk4B,GAAsBV,GAEnBW,EAAc,GACdX,EAAc/wE,EAAUovB,EAAUsiD,EAG7C,CAED,SAASE,EAAsB/nF,GAK3B,IAAIk9D,EAJAl9D,EAAE8mC,sBAAsBvB,UAAYvlC,EAAE8mC,sBAAsBvB,SAAS91C,OAAS,GAC9Eo3F,EAAwBl3F,KAAKqQ,EAAE8mC,uBAKnC,IAAK,IAAI3wC,EAAI,EAAGA,EAAIuwF,EAAwBj3F,OAAQ0G,IAChD,GAAIuwF,EAAwBvwF,GAAGmwF,8BAA8BppD,YAAcl9B,EAAE0pB,UAAW,CACpFwzC,EAAKwpB,EAAwBvwF,GAC7B,KACH,CAGD+mE,GAKR,aACIypB,IACuCD,EAAwBj3F,SAC3Du3F,EAAU,CAACv9C,OAAQ7xC,KAAM8rB,GAAIG,EAAYoD,QAAS,0CAE9C4/D,EAAwBp3F,OAAS,EACjCs0B,EAAe,CAAC0lB,OAAQ7xC,KAAM8rB,GAAIG,EAAYmkE,gBAAiBnB,IAE/DoB,IAGX,CAfOC,EAEP,CA8BD,SAASC,IACL,IAAK,IAAIhyF,EAAI,EAAGA,EAAIuwF,EAAwBj3F,OAAQ0G,IAChDuwF,EAAwBvwF,GAAG8vF,MAElC,CAKD,SAASgC,IACL,IAAK,IAAI9xF,EAAI,EAAGA,EAAIuwF,EAAwBj3F,OAAQ0G,IAChDuwF,EAAwBvwF,GAAGpC,OAElC,CAiCD,OAZAoiB,EAAW,CACPupB,WAnOJ,SAAoB0oD,GAChBrrD,EAAaqrD,EACbxrD,EAASyD,GAAGpU,EAAOob,sBAAuB0gD,EAAuB5xE,EACpE,EAiOG6oB,YA/NJ,WACI,OAAOjC,EAAWrZ,EACrB,EA8NG2kE,cAzNJ,WACI,IAAIC,EAAa3jD,EAAQ6iD,uBAAuBzqD,EAAYqnD,EAAU5jD,OAEtE8nD,GADAA,EAAaA,EAAW90F,OAAOmxC,EAAQ6iD,uBAAuBzqD,EAAYqnD,EAAU3jD,SAC5DjtC,OAAOmxC,EAAQ6iD,uBAAuBzqD,EAAYqnD,EAAU1jD,OAKpF9D,EAASqK,QAAQhb,EAAOs8D,8BAA+B,CACnD7kE,GAAIG,EACJykE,WAAYA,GAEnB,EA8MGE,4BAxMJ,SAAqCC,GACjC3B,EAAqB2B,EAQzB,SAAyB1rD,GACrBuqD,EAAgClD,EAAU5jD,MAAMzD,GAChDuqD,EAAgClD,EAAU3jD,MAAM1D,GAChDuqD,EAAgClD,EAAU1jD,KAAK3D,GAC/CuqD,EAAgClD,EAAUzjD,MAAM5D,GAChDuqD,EAAgClD,EAAUxjD,MAAM7D,EACnD,CAbG2rD,CAAgB3rD,EACnB,EAsMGkC,cAtDJ,WACI,OAAOlC,CACV,EAqDGorD,4BAA6BA,EAC7BF,6BAA8BA,EAC9B/nD,MAhBJ,WACIioD,IAZJ,WAEI,IADA,IAAIliD,EAAKygD,EAA0BA,EAAwBj3F,OAAS,EAC3D0G,EAAI,EAAGA,EAAI8vC,EAAI9vC,IACpBuwF,EAAwBvwF,GAAG8yC,kCA5BxBlM,EAAaA,EAAWhpC,MAAQy1B,MAIhCuT,EAAaA,EAAWnT,SAAWJ,MAyBtCk9D,EAAwBvwF,GAAG+pC,OAElC,CAOGyoD,GACAxrD,IAEAP,EAASuD,IAAIlU,EAAOob,sBAAuB0gD,EAAuB5xE,EACrE,GApPGgnB,IAkQGhnB,CACV,CAEDswE,GAAcphE,sBAAwB,gBACtC,OAAeC,OAAOC,aAAa8B,gBAAgBo/D,IClT7CmC,GAAWxlE,EAAAA,MAAAA,YAGjB,SAASylE,GAA6B35E,GAElC,IAOIiH,EACA2yE,EACAtsD,EATE3Y,EAAa3U,EAAO2U,WACpBklE,EAAgB75E,EAAO65E,cACvBjsD,EAAW5tB,EAAO4tB,SAClBD,EAAQ3tB,EAAO2tB,MACf6H,EAAgBx1B,EAAOw1B,cACvB0/C,EAAYl1E,EAAOk1E,UAwDzB,SAAS4E,EAAqBC,GAC1B,IAAIC,EACA9kE,EACAU,EAEA0C,EAAM,GAAH,OAtEU,wBAsEV,OAAyB3D,EAAzB,KAIP,GAAwB,KAFxBqlE,EAAWD,EAAWE,qBAAqBzkD,EAAc7Q,WAE5CpkC,OAAc,CAEvB,IAAIiS,EAAUonF,EAAI7mF,cAAcyiC,EAAc7Q,UAC9CnyB,EAAQ0nF,UAAY5hE,EACpByhE,EAAW1mF,YAAYb,EAC1B,CACDwnF,EAAWD,EAAWE,qBAAqBzkD,EAAc7Q,UACzD,IAAK,IAAI19B,EAAI,EAAGA,EAAI+yF,EAASz5F,OAAQ0G,IAAK,CACtC,IAAIhB,EAAS+zF,EAAS/yF,GAAGiM,WAEzB,GAAIjN,EAAOk0F,WAAa3kD,EAAchQ,IAClCw0D,EAAS/yF,GAAGizF,UAAY5hE,OACrB,GAAIryB,EAAOk0F,WAAa3kD,EAAcrQ,eAAgB,CACzD,IAAIi1D,EAAiBn0F,EAAOiN,WACxBknF,EAAeD,UAAY3kD,EAActQ,iBAErC0I,EAASooB,QAAQgkC,EAAS/yF,GAAGizF,YAActsD,EAASmoB,UAAUikC,EAAS/yF,GAAGizF,YAC1EhlE,EAAamlE,EAAcL,EAAS/yF,GAAGizF,WACvCtkE,EAAmB0kE,EAAwBF,GAC3CJ,EAAS/yF,GAAGizF,UAAY5hE,EAAM1C,EAAmB,IAAMV,GACtB,OAA1B8kE,EAAS/yF,GAAGizF,UACnBF,EAAS/yF,GAAGizF,UAAY5hE,GAExBpD,EAAamlE,EAAcL,EAAS/yF,GAAGizF,WACvCtkE,EAAmB0kE,EAAwBF,GAC3CJ,EAAS/yF,GAAGizF,UAAYtkE,EAAmB,IAAMV,GAG5D,MACG8kE,EAAS/yF,GAAGizF,UAAY5hE,CAE/B,CACJ,CAQD,SAASiiE,EAAcR,EAAYr4D,GAE/B,IADA,IAAI84D,EAAUT,EAAWE,qBAAqBzkD,EAAc/P,QACnD5nB,EAAI,EAAGA,EAAI28E,EAAQj6F,OAAQsd,IAChC48E,EAAqBD,EAAQ38E,GAAI6jB,EAExC,CAQD,SAAS+4D,EAAqBC,EAAe/C,GAQzC,IAPA,IAAIyC,EACAO,EACAC,EACA9B,EAIK7xF,GAFTmzF,EAAiBM,EAAcT,qBAAqBzkD,EAActQ,iBAEtC3kC,OAAS,EAAG0G,GAAK,EAAGA,IAE5C,GADA0zF,EAAuBP,EAAenzF,GAWlC,GATA2zF,EAAwBC,EAAmBF,GAG3CG,EAAuCH,EAFrBI,EAAoBJ,GAEwCC,GAE9E9B,EAAkBiC,EAAoBJ,GAEtCK,EAAkBL,GAEa,IAA3B7B,EAAgBv4F,OAChBm6F,EAAcvnF,YAAYwnF,OACvB,CAEH,IAAK,IAAI1zF,EAAI,EAAGA,EAAI6xF,EAAgBv4F,OAAQ0G,IAAK,CAC7C,IAAIs8D,EAAMu1B,EAAgB7xF,GACtBg0F,EAA6B13B,EAkJtC02B,qBAAqBzkD,EAAc1Q,cAjJ1Bm2D,EAAY16F,QAAU,GACtB26F,EAA0BD,EAAa13B,EAE9C,CAED,IAAI43B,EAAkBC,EAAmBT,GAOzC,GALIQ,EAAgB56F,QAAU,GAC1B86F,EAA8BF,GAI9BxD,GAA2BA,EAAwBp3F,OAAS,EAAI,CAEhE,IADA,IAAI+6F,OAAW,EACNr0F,EAAI,EAAGA,EAAI6xF,EAAgBv4F,OAAQ0G,IAExC,IADA,IAAIs8D,EAAMu1B,EAAgB7xF,GACjB4W,EAAI,EAAG85E,GAA2B95E,EAAI85E,EAAwBp3F,OAAQsd,IAC3E,GAAI85E,EAAwB95E,GAAG2W,KAAO+uC,EAAI/uC,GAAI,CAC1C8mE,EAAc3D,EAAwB95E,GACtC,KACH,CAGT09E,EAA6BZ,EAAsBW,EACtD,CACJ,CAGZ,CAQD,SAAST,EAAmBF,GACxB,OA4BOt2B,EA5BQs2B,EA4BgBzF,EAAUzjD,OA3B9ByjD,EAAUzjD,MAed4yB,EAdes2B,EAcSzF,EAAU3jD,OAb9B2jD,EAAU3jD,MAgBzB,SAAoB/N,GAChB,OAAO6gC,EAAY7gC,EAAY0xD,EAAU5jD,MAC5C,CAjBcqzB,CAAWg2B,GACXzF,EAAU5jD,MAkBzB,SAAmB9N,GACf,OAAO6gC,EAAY7gC,EAAY0xD,EAAU1jD,KAC5C,CAnBcozB,CAAU+1B,GACVzF,EAAU1jD,KAwBzB,SAAoBhO,GAChB,OAAO6gC,EAAY7gC,EAAY0xD,EAAUxjD,MAC5C,CAzBcmzB,CAAW81B,GACXzF,EAAUxjD,MAGd,IACV,CAuBD,SAAS2yB,EAAY7gC,EAAY59B,GAE7B,IAAK49B,EACD,MAAM,IAAI1iC,MAAM,6BAGpB,IAAK8E,EACD,MAAM,IAAI9E,MAAM,uBAGpB,OAGJ,SAAsB0iC,EAAY59B,GAC9B,IAAI6+D,EAAiB7+D,IAASsvF,EAAU1jD,KAAQ,IAAIpiC,OAAOxJ,GAAQ,IAAIwJ,OAAO,cAE1E6iD,EAAWupC,EAAah4D,GAC5B,GAAIyuB,EACA,OAAOwS,EAActmD,KAAK8zC,GAI9B,IAAI6mC,EAAkBiC,EAAoBv3D,GAC1C,GAAIs1D,EACA,IAAK,IAAI7xF,EAAI,EAAGA,EAAI6xF,EAAgBv4F,OAAQ0G,IAGxC,GADAgrD,EAAWupC,EADU1C,EAAgB7xF,IAGjC,OAAOw9D,EAActmD,KAAK8zC,GAItC,OAAO,CACV,CAvBUwpC,CAAaj4D,EAAY59B,EACnC,CA8BD,SAAS41F,EAAax6F,GAClB,OAAOA,EAAI06F,aAAalmD,EAAcjP,UACzC,CAQD,SAASw0D,EAAoBv3D,GACzB,OAAOA,EAAWy2D,qBAAqBzkD,EAAcrQ,eACxD,CAQD,SAASi2D,EAAmBT,GACxB,OAAOA,EAAqBV,qBAAqBzkD,EAAc3Q,iBAClE,CAYD,SAASm2D,EAAkBh6F,GAEvB,IADA,IAAI26F,EAAW36F,EAAIi5F,qBAAqBzkD,EAAc5Q,cAC7C39B,EAAI,EAAGA,EAAI00F,EAASp7F,OAAQ0G,IAAK,CACtC,IAAI20F,EAAcD,EAAS10F,GAC3B20F,EAAY1oF,WAAWC,YAAYyoF,EACtC,CACJ,CAyCD,SAASP,EAA8BQ,GACnC,IAAK,IAAI50F,EAAI,EAAGA,EAAI40F,EAAkBt7F,OAAQ0G,IAAK,CAC/C,IAAIq6B,EAAQu6D,EAAkB50F,GAAGy0F,aAAalmD,EAAcvP,OAC5D3E,EAAQ,8BAAgCA,EAAMnf,UAAUmf,EAAMrgC,QAAQ,KAAMqgC,EAAM/gC,QAClFs7F,EAAkB50F,GAAG60F,aAAatmD,EAAc7L,aAAc,KAC9DkyD,EAAkB50F,GAAG60F,aAAatmD,EAAcvP,MAAO3E,GACvDu6D,EAAkB50F,GAAG60F,aAAatmD,EAAcjQ,qBAAqB,0BACxE,CACJ,CAQD,SAAS21D,EAA0Ba,EAAcr6D,GAE7C,IADA,IAAIy2C,EAAQz2C,EAAeg6D,aAAalmD,EAAc5P,IAC7C3+B,EAAI,EAAGA,EAAI80F,EAAax7F,OAAQ0G,IAAK,CAE1C,IAAIg0F,EAAcc,EAAa90F,GAC3B+0F,EAAiBf,EAAYhB,qBAAqBzkD,EAAclQ,gBACpE,GAAI02D,EAAgB,CAChB,IAAI7xB,EAAY6xB,EAAe,GAAGN,aAAalmD,EAAchM,YAC7D2gC,EAAY,GAAH,OAAMgO,EAAN,SACT6jB,EAAe,GAAGF,aAAatmD,EAAchM,WAAY2gC,EAC5D,CACD,IAAI8xB,EAAchB,EAAYhB,qBAAqBzkD,EAAczQ,aAEjE,GAAIk3D,EACA,IAAK,IAAIp+E,EAAI,EAAGA,EAAIo+E,EAAY17F,OAAQsd,IAAK,CACzC,IAAIq+E,EAAaD,EAAYp+E,GACzByjB,EAAQ46D,EAAWR,aAAalmD,EAAcvP,OAClD3E,EAAQ,GAAH,OAAM62C,EAAN,YAAet6D,GACpBq+E,EAAWJ,aAAatmD,EAAcvP,MAAO3E,EAChD,CAER,CACJ,CAOD,SAASi6D,EAA6B1kB,EAAetT,GACjD,IAAI44B,EAAyBvC,EAAI7mF,cAAcyiC,EAAc3Q,kBAC7Ds3D,EAAuBL,aAAatmD,EAAc7L,aAAc,KAChEwyD,EAAuBL,aAAatmD,EAAcvP,MAAO,6BACzDk2D,EAAuBL,aAAatmD,EAAcjQ,qBAAqB,2BAnF3E,SAAoC41D,EAAiB53B,GACjD,IAAI64B,EAAIxC,EAAI7mF,cAAc,KAC1B,GAAIwwD,GAAOA,EAAIltB,SAAU,CAGrB,IAFA,IAAIgmD,EAAyBzC,EAAI7mF,cAAcyiC,EAAcxQ,kBACzDs3D,EAcZ,SAAgC/4B,GAC5B,IAAI99C,EAAQ,GACZA,EAAMhlB,KAAK,GACX,IAAK,IAAIwG,EAAI,EAAGA,EAAIs8D,EAAIltB,SAAS91C,OAAQ0G,IACjCs8D,EAAIltB,SAASpvC,EAAI,GAAGyzB,WAAa6oC,EAAIltB,SAASpvC,GAAGyzB,UACjDjV,EAAMhlB,KAAKwG,GAGnB,OAAOwe,CACV,CAvB6B82E,CAAuBh5B,GACpCt8D,EAAI,EAAGA,EAAIq1F,EAAgB/7F,OAAQ0G,IAAK,CAC7C,IAAIu1F,EAAcv1F,EAAI,EAAIq1F,EAAgB/7F,OAAU+7F,EAAgBr1F,EAAI,GAAKq1F,EAAgBr1F,GAAM,EAAI,EACnGu1F,EAAc,GACdJ,EAAEN,aAAa,IAAKU,GAExBJ,EAAEN,aAAa,IAAKv4B,EAAIltB,SAASimD,EAAgBr1F,IAAIyzB,UACrD2hE,EAAuBhpF,YAAY+oF,GACnCA,EAAIxC,EAAI7mF,cAAc,IACzB,CACDooF,EAAgB9nF,YAAYgpF,EAC/B,CACJ,CAoEGI,CAA2BN,EAAwB54B,GACnDsT,EAAcxjE,YAAY8oF,EAC7B,CASD,SAASrB,EAAuCH,EAAsB7B,EAAiB4D,GACnF,IAAM,IAAIz1F,EAAI6xF,EAAgBv4F,OAAS,EAAG0G,GAAK,EAAGA,IAAK,CACnD,IAAIy6B,EAAiBo3D,EAAgB7xF,GACjCkxE,EAAQz2C,EAAeg6D,aAAalmD,EAAc5P,IAClDi0D,EAAc6C,KAAqE,IAAlD7C,EAAc6C,GAAgBz7F,QAAQk3E,IAEvEwiB,EAAqBxnF,YAAYuuB,EAExC,CACJ,CASD,SAAS44D,EAAwBK,GAC7B,IAAIgC,EAAqBhC,EAAqBV,qBAAqBzkD,EAAcrQ,gBAAgB,GAEjG,OADA1sB,QAAQ+c,IAAImnE,EAAmBjB,aAAalmD,EAAc5P,KACnD+2D,EAAmBjB,aAAalmD,EAAc5P,GACxD,CAQD,SAASy0D,EAAc/hE,GACnB,IAAIskE,EAAYtkE,EAAIh3B,YAAY,KAEhC,OAAOg3B,EAAInW,UAAUy6E,EAAUtkE,EAAI/3B,OACtC,CAQD,OAnbI+sC,EAASK,EAAMuD,UAAUjqB,GA+alB,CACP/kB,MAtaJ,SAAe26F,EAAQn7D,GACnB,OAAO,IAAIltB,SAAQ,SAAUkB,EAASD,GAKlC,IAFA,IAAIi5B,GADJkrD,GAAM,IAAIkD,WAAYC,gBAAgBF,EAAQ,oBAChC5C,qBAAqBzkD,EAAchQ,KAAOo0D,EAAIK,qBAAqBzkD,EAAchQ,KAAO,KAE7Fv+B,EAAI,EAAGA,EAAIynC,EAAInuC,OAAQ0G,IACb,OAAXynC,EAAIznC,KACJ6yF,EAAqBprD,EAAIznC,IACzBszF,EAAc7rD,EAAIznC,GAAIy6B,IAI9B,IAAIs7D,EAeZ,SAAwBpD,GAEpB,OADAtsD,EAAO9kB,KAAK,oBAAqB,IAAIy0E,eAAgBC,kBAAkBtD,KAChE,IAAIF,IAAWhyF,QAAO,IAAIu1F,eAAgBC,kBAAkBtD,GACtE,CAlB6BuD,CAAevD,GACb,KAApBoD,EACAtnF,EAAQsnF,GAERvnF,EAAO,gBAEd,GACJ,EAsZJ,CACDkkF,GAA6BxjE,sBAAwB,+BACrD,OAAeC,OAAOC,aAAa8B,gBAAgBwhE,6OC1cnD,SAASyD,GAAWC,GAEhB,SAASC,EAAYC,EAAYC,GAC7B,IAAK,IAAI58F,KAAQ28F,EACRC,EAAUh6F,eAAe5C,KAC1B48F,EAAU58F,GAAQ28F,EAAW38F,GAGxC,CAED,SAAS68F,EAAc9lF,EAAY1R,EAAQy3F,GACvC,IAAK,IAAIz2F,EAAI,EAAG6M,EAAM6D,EAAWpX,OAAQ0G,EAAI6M,IAAO7M,EAAG,CACnD,IAAM2xF,EAAWjhF,EAAW1Q,GAE5B,GAAIhB,EAAO2yF,EAASh4F,MAChB,GAAI88F,EAAM9E,EAASh4F,OAEf,GAAIg4F,EAAS38D,MAAO,CAChB,IAAM0hE,EAAc13F,EAAO2yF,EAASh4F,MAC9Bg9F,EAAaF,EAAM9E,EAASh4F,MAGP,WAAvB,GAAO+8F,IAAkD,WAAtB,GAAOC,GAC1CN,EAAYK,EAAaC,GAIzBF,EAAM9E,EAASh4F,MAAQ+8F,EAAcC,CAE5C,OAGDF,EAAM9E,EAASh4F,MAAQqF,EAAO2yF,EAASh4F,KAGlD,CACJ,CAED,SAASi9F,EAAQz5F,EAAM0hE,GACnB,IAAK,IAAI7+D,EAAI,EAAG6M,EAAM1P,EAAK05F,SAASv9F,OAAQ0G,EAAI6M,IAAO7M,EAAG,CACtD,IAAMu2F,EAAYp5F,EAAK05F,SAAS72F,GAE1Bwe,EAAQqgD,EAAK03B,EAAU58F,KAAO,YACpC,GAAI6kB,EACA,IAAK,IAAIsc,EAAI,EAAGg8D,EAAOt4E,EAAMllB,OAAQwhC,EAAIg8D,IAAQh8D,EAAG,CAChD,IAAMi8D,EAAYv4E,EAAMsc,GACxB07D,EAAcr5F,EAAKuT,WAAYmuD,EAAMk4B,GACrCH,EAAQL,EAAWQ,EACtB,CAER,CACJ,CA8BD,MAAO,CACHC,IA7BJ,SAAa/4F,GAET,GAAe,OAAXA,GAAqC,WAAlB,GAAOA,GAC1B,OAAOA,EAGX,GAAIA,EAAOypC,gBAAkB,WAAY0uD,EAGrC,IAFA,IAAMa,EAAeb,EAAQ55D,OACvB+2D,EAAUt1F,EAAOypC,eACd1nC,EAAI,EAAG6M,EAAM0mF,EAAQj6F,OAAQ0G,EAAI6M,IAAO7M,EAAG,CAChD,IAAMw8B,EAAS+2D,EAAQvzF,GAGvB,GAFA42F,EAAQK,EAAcz6D,GAElB,kBAAmB45D,EAAS,CAC5B,IAAMr5B,EAAiBvgC,EAAOmL,sBAC9B,GAAIo1B,EAEA,IADA,IAAMm6B,EAAsBd,EAAQe,cAC3Bn3F,EAAI,EAAG6M,EAAMkwD,EAAezjE,OAAQ0G,EAAI6M,IAAO7M,EACpD42F,EAAQM,EAAqBn6B,EAAe/8D,GAGvD,CACJ,CAGL,OAAO/B,CACV,EAKJ,CAGDk4F,GAAWjnE,sBAAwB,aACnC,IACA,GADgBE,EAAAA,gBAA6B+mE,IC6e7C,GA1kBA,SAAcp9E,QAUmBtf,KAL7Bsf,EAASA,GAAU,CAAC,GAKNq+E,aACNr+E,EAAOq+E,YAAa,QAGO39F,IAA3Bsf,EAAOs+E,kBACPt+E,EAAOs+E,gBAAkB,KAG7Bt+E,EAAOu+E,gBAAkBv+E,EAAOu+E,iBAAmB,OACnDv+E,EAAOw+E,cAAgBx+E,EAAOw+E,eAAiB,YAEd99F,IAA9Bsf,EAAOy+E,qBACNz+E,EAAOy+E,oBAAqB,GAEhCz+E,EAAO0+E,qBAAuB1+E,EAAO0+E,sBAAwB,QACtBh+F,IAApCsf,EAAO2+E,2BACN3+E,EAAO2+E,0BAA2B,QAEPj+F,IAA5Bsf,EAAO4+E,mBACN5+E,EAAO4+E,kBAAmB,GAE9B5+E,EAAO6+E,wBAA0B7+E,EAAO6+E,yBAA2B,QAErCn+F,IAA3Bsf,EAAO8+E,kBACN9+E,EAAO8+E,iBAAkB,GAG7B9+E,EAAO++E,kBAAoB/+E,EAAO++E,mBAAqB,GACvD/+E,EAAOg/E,qBAAuBh/E,EAAOg/E,sBAAwB,QAErCt+F,IAArBsf,EAAOi/E,YACNj/E,EAAOi/E,WAAY,QAGGv+F,IAAtBsf,EAAOk/E,aACPl/E,EAAOk/E,YAAa,GAe5B,SAASC,EAAkBr5B,GACvB,IAAIs5B,EAAgBt5B,EAAKu5B,UAKzB,OAJoB,MAAjBD,IACCA,EAAgBt5B,EAAKw5B,UACL,MAAjBF,GAAwC,IAAfA,IACxBA,EAAgBt5B,EAAKq0B,UAClBiF,CACV,CAMD,SAASG,EAAej0F,GACpB,MAAkB,iBAARA,EACCA,EAAIhJ,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,UAE7GgJ,CACd,CAMD,SAASk0F,EAA2BC,EAAqB7pF,EAAKhV,EAAMgpB,GAEhE,IADA,IAAI21B,EAAM,EACJA,EAAMkgD,EAAoBl/F,OAAQg/C,IAAO,CAC3C,IAAImgD,EAAaD,EAAoBlgD,GACrC,GAA0B,iBAAfmgD,GACP,GAAGA,GAAc91E,EACb,WAGR,GAAI81E,aAAsBtwF,QACtB,GAAGswF,EAAWvhF,KAAKyL,GACf,WAGR,GAA0B,mBAAf81E,GACJA,EAAW9pF,EAAKhV,EAAMgpB,GACrB,KAEX,CACD,OAAO21B,GAAKkgD,EAAoBl/F,MACnC,CAED,SAASo/F,EAAkB/pF,EAAKgqF,EAAWh2E,GAE9B,aADF5J,EAAOu+E,kBAED3oF,EAAIgqF,aAAsB/yF,MAG3B+I,EAAIgqF,EAAU,YAAchqF,EAAIgqF,GAFhChqF,EAAIgqF,EAAU,YAAc,CAAChqF,EAAIgqF,OAQxChqF,EAAIgqF,aAAsB/yF,QAAUmT,EAAO0+E,qBAAqBn+F,OAAS,GACvEi/F,EAA2Bx/E,EAAO0+E,qBAAsB9oF,EAAKgqF,EAAWh2E,KACvEhU,EAAIgqF,GAAa,CAAChqF,EAAIgqF,IAGjC,CAED,SAASC,EAAgBptE,GAGrB,IAAIqtE,EAAOrtE,EAAKtxB,MAAM,YAElB+xB,EAAI,IAAIlkB,KAAK8wF,EAAK,GAAIA,EAAK,GAAG,EAAGA,EAAK,IACtCC,EAAaD,EAAK,GAAG3+F,MAAM,KAM/B,GALA+xB,EAAE8sE,SAASF,EAAK,GAAIA,EAAK,GAAIC,EAAW,IACrCA,EAAWx/F,OAAO,GACjB2yB,EAAE+sE,gBAAgBF,EAAW,IAG9BD,EAAK,IAAMA,EAAK,GAAI,CACnB,IAAII,EAA0B,GAAVJ,EAAK,GAAUltC,OAAOktC,EAAK,IAI/CI,EAAgB,GAAa,MAHlB,kBAAkB/hF,KAAKsU,GAAO,IAAM,MAGZ,EAAIytE,EAAgBA,GAGvDhtE,EAAEitE,WAAWjtE,EAAEktE,aAAeF,EAAgBhtE,EAAEmtE,oBACnD,MAE8C,IAAxC5tE,EAAKxxB,QAAQ,IAAKwxB,EAAKlyB,OAAS,KAC/B2yB,EAAI,IAAIlkB,KAAKA,KAAKsxF,IAAIptE,EAAEqtE,cAAertE,EAAEstE,WAAYttE,EAAEutE,UAAWvtE,EAAEwtE,WAAYxtE,EAAEktE,aAAcltE,EAAEytE,aAAcztE,EAAE0tE,qBAI1H,OAAO1tE,CACV,CAeD,SAAS2tE,EAAuBjrF,EAAKkrF,EAAWlB,EAAWmB,GACvD,QAxHmB,GAwHfD,GAA0C9gF,EAAO++E,kBAAkBx+F,OAAS,IACrEi/F,EAA2Bx/E,EAAO++E,kBAAmBnpF,EAAKgqF,EAAWmB,EAInF,CAED,SAASC,EAAkBl7B,EAAMl8C,GAC7B,GA5HoB,GA4HjBk8C,EAAKm7B,SAAwC,CAI5C,IAHA,IAAI98F,EAAS,IAAIxB,OACbu+F,EAAep7B,EAAKq7B,WAEhBC,EAAK,EAAGA,EAAMF,EAAa3gG,OAAQ6gG,IApI5B,IAqIP1D,EAAQwD,EAAaE,IAChBH,WACDjhF,EAAOk/E,WACP/6F,EAAS68F,EAAiBtD,IAE1Bv5F,EAAS,CAAC,GACNy7F,EAAYT,EAAiBzB,IACbsD,EAAiBtD,IAIjD,OAAOv5F,CACV,CAED,GAnJmB,GAmJhB2hE,EAAKm7B,SAAuC,EACvC98F,EAAS,IAAIxB,QACV0+F,MAAM,EAEb,IAAIvD,EAAW,GAIf,IAHIoD,EAAep7B,EAAKq7B,WAGhBC,EAAK,EAAGA,EAAMF,EAAa3gG,OAAQ6gG,IAAQ,CAC/C,IAAI1D,EACAkC,EAAYT,EADZzB,EAAQwD,EAAaE,IAGzB,GA5JU,GA4JP1D,EAAMuD,SAAsC,CAC3C,IAAIF,EAAYn3E,EAAK,IAAIg2E,EACzB,GAAIiB,EAAuB18F,EAAOu5F,EAAMuD,SAASrB,EAAUmB,GAEvD,GADA58F,EAAOk9F,QACiB,MAArBl9F,EAAOy7F,GAAoB,CAC1B,IAAIz4F,EAAI65F,EAAiBtD,EAAOqD,IACf,SAAbnB,GAAwB,QAAQzhF,KAAKhX,OACjCwK,EAAI,CAAC,GACPiuF,GAAaz4F,EACf22F,EAASr9F,KAAKkR,IAElBxN,EAAOy7F,GAAaz4F,EACpBw4F,EAAkBx7F,EAAQy7F,EAAWmB,EACxC,KACI,CAQD,IAEQpvF,EATgB,MAArBxN,EAAOy7F,KACAz7F,EAAOy7F,aAAsB/yF,QAC/B1I,EAAOy7F,GAAa,CAACz7F,EAAOy7F,IAC5BD,EAAkBx7F,EAAQy7F,EAAWmB,KAIzC55F,EAAI65F,EAAiBtD,EAAOqD,IACf,SAAbnB,GAAwB,QAAQzhF,KAAKhX,OACjCwK,EAAI,CAAC,GACPiuF,GAAaz4F,EACf22F,EAASr9F,KAAMkR,IAElBxN,EAAOy7F,GAAYz7F,EAAOy7F,GAAWr/F,QAAU4G,CACnD,CAER,CACJ,CAEDhD,EAAOm9F,WAAaxD,EAIpB,IADA,IAAIsB,EAAgBD,EAAiBr5B,GAC7By7B,EAAK,EAAGA,EAAMz7B,EAAK07B,WAAWjhG,OAAQghG,IAAQ,CAClD,IAAIE,EAAO37B,EAAK07B,WAAWD,GAC3Bp9F,EAAOk9F,QAGP,IADA,IAAIK,EAASD,EAAK5gG,MACVw8D,EAAE,EAAGskC,EAAG3hF,EAAO4hF,SAASrhG,OAAQ88D,EAAIskC,EAAItkC,IAAK,CACjD,IAAIwkC,EAAW7hF,EAAO4hF,SAASvkC,GAC3BwkC,EAAS1jF,KAAKsjF,EAAMrC,KACpBsC,EAASG,EAASC,UAAUL,EAAK5gG,OACxC,CAEDsD,EAAO6b,EAAOs+E,gBAAgBmD,EAAK7gG,MAAM8gG,CAC5C,CAGD,IAAIK,EAjMZ,SAAuBj8B,GACnB,OAAOA,EAAKk8B,MACf,CA+LwBC,CAAcn8B,GAoD/B,OAnDe,MAAZi8B,GAAgC,IAAZA,IACnB59F,EAAOk9F,QACPl9F,EAAO+9F,SAASH,GAGA,MAAjB59F,EAAO,WACNA,EAAOgiE,OAAShiE,EAAO,SACpBA,EAAOgiE,kBAAkBt5D,QACxB1I,EAAOgiE,OAAShiE,EAAOgiE,OAAOrjE,KAAK,OAIpCkd,EAAO4+E,mBACNz6F,EAAOgiE,OAAShiE,EAAOgiE,OAAO72C,eAC3BnrB,EAAO,SACa,YAAxB6b,EAAOu+E,wBACCp6F,EAAO,iBAClBA,EAAOgiE,OA5HnB,SAAmCtlE,EAAO++F,EAAWuC,GACjD,GAAGniF,EAAO6+E,wBAAwBt+F,OAAS,EAAG,CAC1C,IAAIqpB,EAAOu4E,EAAShhG,MAAM,MAAO,GACjC,OAAGq+F,EAA2Bx/E,EAAO6+E,wBAAyBh+F,EAAO++F,EAAWh2E,GACrEi2E,EAAgBh/F,GAGhBA,CACd,CAEG,OAAOA,CACd,CAiH2BuhG,CAA0Bj+F,EAAOgiE,OAAQy5B,EAAWh2E,EAAK,IAAIg2E,IAEpD,MAA1Bz7F,EAAO,oBACNA,EAAOynE,QAAUznE,EAAO,yBACjBA,EAAO,kBACa,YAAxB6b,EAAOu+E,wBACCp6F,EAAO,2BAGF,GAAhBA,EAAOk9F,OAAoC,QAAtBrhF,EAAOw+E,cAC5Br6F,EAAS,GAGO,GAAhBA,EAAOk9F,OAA6B,MAAfl9F,EAAOgiE,OAC5BhiE,EAASA,EAAOgiE,OAGA,GAAhBhiE,EAAOk9F,OAA8B,MAAhBl9F,EAAOynE,SAAkB5rD,EAAOi/E,UAIpD96F,EAAOk9F,MAAQ,GAAoB,MAAfl9F,EAAOgiE,QAAgBnmD,EAAO2+E,2BAC9C3+E,EAAO4+E,kBAAmC,IAAfz6F,EAAOgiE,QAAsC,IAAtBhiE,EAAOgiE,OAAO72C,gBAC1DnrB,EAAOgiE,OALlBhiE,EAASA,EAAOynE,eAQbznE,EAAOk9F,OAEVrhF,EAAOy+E,oBAAsC,MAAft6F,EAAOgiE,QAAgC,MAAhBhiE,EAAOynE,UAC5DznE,EAAOmL,SAAW,WACd,OAAqB,MAAb5G,KAAKy9D,OAAcz9D,KAAKy9D,OAAO,KAAoB,MAAdz9D,KAAKkjE,QAAgBljE,KAAKkjE,QAAQ,GAClF,GAGEznE,CACV,CAED,GA1QmB,GA0QhB2hE,EAAKm7B,UAzQa,GAyQyBn7B,EAAKm7B,SAC/C,OAAOn7B,EAAKu8B,SAEnB,CAED,SAASC,EAASC,EAAS/vF,EAASgwF,EAAUC,GAC1C,IAAIC,EAAY,KAAiB,MAATH,GAAmC,MAAlBA,EAAQL,SAAkBK,EAAQL,SAAS,IAAK,IAAM1vF,EAC/F,GAAa,MAAVgwF,EACC,IAAI,IAAIjB,EAAO,EAAGA,EAAOiB,EAASjiG,OAAQghG,IAAQ,CAC9C,IAAIoB,EAAWH,EAASjB,GACpBqB,EAAUL,EAAQI,GACnB3iF,EAAOq+E,aACNuE,EAAQrD,EAAeqD,IAC3BF,GAAW,IAAIC,EAASxyF,OAAO6P,EAAOs+E,gBAAgB/9F,QAAQ,IAC3Dyf,EAAO8+E,gBACN4D,GAAW,IAAIE,EAAQ,IAEvBF,GAAW,IAAIE,EAAQ,GAC9B,CAML,OADIF,GAHAD,EAGW,KAFA,IAIlB,CAED,SAASI,EAAON,EAAQO,GACpB,MAAO,MAAyB,MAAlBP,EAAQL,SAAiBK,EAAQL,SAAS,IAAK,IAAIY,EAAY,GAChF,CAMD,SAASC,EAAqBR,EAASS,GACnC,MAA4B,YAAxBhjF,EAAOu+E,kBALQ5H,EAKyD,YAJhB,KAD9CrrF,EAKqC03F,EAAa1zF,YAJrDrO,QAAQ01F,EAAQrrF,EAAI/K,OAASo2F,EAAOp2F,UAKqB,GAAzDyiG,EAAa1zF,WAAWrO,QAAQ+e,EAAOs+E,kBACA,GAAvC0E,EAAa1zF,WAAWrO,QAAQ,OAC/BshG,EAAQS,aAAyBzvE,SARjD,IAAkBjoB,EAAKqrF,CAYtB,CAED,SAASsM,EAAmBV,GACxB,IAAIW,EAAc,EAClB,GAAGX,aAAmB5/F,OAClB,IAAK,IAAIwgG,KAAMZ,EACRQ,EAAqBR,EAASY,IAEjCD,IAGR,OAAOA,CACV,CAED,SAASE,EAA6Bb,EAASc,EAAcC,GACzD,OAA6C,GAAtCtjF,EAAOg/E,qBAAqBz+F,QACf,IAAb+iG,GACA9D,EAA2Bx/E,EAAOg/E,qBAAsBuD,EAASc,EAAcC,EACzF,CAED,SAASC,EAAsBhB,GAC3B,IAAIC,EAAW,GACf,GAAGD,aAAmB5/F,OAClB,IAAK,IAAI6gG,KAAOjB,GACuB,GAAhCiB,EAAIl0F,WAAWrO,QAAQ,OAA8D,GAAhDuiG,EAAIl0F,WAAWrO,QAAQ+e,EAAOs+E,kBAClEkE,EAAS/hG,KAAK+iG,GAI1B,OAAOhB,CACV,CAkBD,SAASiB,EAAsBC,GAC3B,IAAIv/F,EAAQ,GAaZ,OAXIu/F,aAAsB/gG,OACtBwB,GApBR,SAA8Bu/F,GAC1B,IAAIv/F,EAAQ,GAYZ,OAVuB,MAApBu/F,EAAW93B,UACVznE,GAAQ,YAAYu/F,EAAW93B,QAAQ,OAGrB,MAAnB83B,EAAWv9B,SACPnmD,EAAOq+E,WACNl6F,GAAQo7F,EAAemE,EAAWv9B,QAElChiE,GAAQu/F,EAAWv9B,QAEpBhiE,CACV,CAMew/F,CAAqBD,GAGd,MAAZA,IACI1jF,EAAOq+E,WACNl6F,GAAQo7F,EAAemE,GAEvBv/F,GAAQu/F,GAGbv/F,CACV,CAED,SAASy/F,EAAoBN,EAAaO,GACtC,MAAkB,KAAdP,EACOO,EAGAP,EAAY,IAAIO,CAC9B,CAED,SAASC,EAAiBC,EAAaC,EAAYxB,EAAUc,GACzD,IAAIn/F,EAAS,GACb,GAAyB,GAAtB4/F,EAAYxjG,OACX4D,GAAQm+F,EAASyB,EAAaC,EAAYxB,GAAU,QAGpD,IAAI,IAAIyB,EAAQ,EAAGA,EAAQF,EAAYxjG,OAAQ0jG,IAC3C9/F,GAAQm+F,EAASyB,EAAYE,GAAQD,EAAYT,EAAoBQ,EAAYE,KAAS,GAC1F9/F,GAAQ+/F,EAAgBH,EAAYE,GAAQL,EAAoBN,EAAYU,IAC5E7/F,GAAQ0+F,EAAOkB,EAAYE,GAAOD,GAG1C,OAAO7/F,CACV,CAED,SAAS+/F,EAAkB3B,EAASe,GAChC,IAAIn/F,EAAS,GAIb,GAFkB8+F,EAAmBV,GAEpB,EACb,IAAK,IAAIY,KAAMZ,EAEX,IAAGQ,EAAqBR,EAASY,KAAqB,IAAbG,GAAoBF,EAA6Bb,EAASY,EAAIS,EAAoBN,EAAYH,KAAvI,CAGA,IAAIgB,EAAS5B,EAAQY,GAEjBX,EAAWe,EAAqBY,GAEvB,MAAVA,GAA4BzjG,MAAVyjG,EACjBhgG,GAAQm+F,EAAS6B,EAAQhB,EAAIX,GAAU,GAGxC2B,aAAkBxhG,OAEdwhG,aAAkBt3F,MACjB1I,GAAQ2/F,EAAgBK,EAAQhB,EAAIX,EAAUc,GAE1Ca,aAAkBn1F,MACtB7K,GAAQm+F,EAAS6B,EAAQhB,EAAIX,GAAU,GACvCr+F,GAAQggG,EAAOC,cACfjgG,GAAQ0+F,EAAOsB,EAAOhB,IAGEF,EAAmBkB,GACpB,GAAoB,MAAfA,EAAOh+B,QAAgC,MAAhBg+B,EAAOv4B,SACtDznE,GAAQm+F,EAAS6B,EAAQhB,EAAIX,GAAU,GACvCr+F,GAAQ+/F,EAAgBC,EAAQP,EAAoBN,EAAYH,IAChEh/F,GAAQ0+F,EAAOsB,EAAOhB,IAGtBh/F,GAAQm+F,EAAS6B,EAAQhB,EAAIX,GAAU,IAK/Cr+F,GAAQm+F,EAAS6B,EAAQhB,EAAIX,GAAU,GACvCr+F,GAAQs/F,EAAoBU,GAC5BhgG,GAAQ0+F,EAAOsB,EAAOhB,GAnCd,CAyCpB,OAFAh/F,EAAQs/F,EAAoBlB,EAG/B,CAED75F,KAAK27F,eAAiB,SAASC,GAC3B,IAIIC,EAHJ,GADiBtwF,OAAOuwF,eAAoCvwF,YAC1CvT,IAAd4jG,EACA,OAAO,KAGX,GAAIrwF,OAAO6oF,UAAW,CAClB,IAAIj3F,EAAO,IAAIoO,OAAO6oF,UAEtB,KACIyH,EAAS1+F,EAAOk3F,gBAAiBuH,EAAW,aAClCG,uBAAuB,IAAK,eAAelkG,OAAS,IAC1DgkG,EAAS,KAKhB,CAFD,MAAMzpF,GACFypF,EAAS,IACZ,CACJ,MAG+B,GAAzBD,EAAUrjG,QAAQ,QACjBqjG,EAAYA,EAAUn0F,OAAQm0F,EAAUrjG,QAAQ,MAAQ,KAE5DsjG,EAAO,IAAIC,cAAc,qBAClBE,MAAM,QACbH,EAAOI,QAAQL,GAEnB,OAAOC,CACV,EAED77F,KAAKk8F,QAAU,SAASnyE,GACpB,YAAa/xB,IAAT+xB,GAA8B,MAARA,EACf,GAERA,aAAgB5lB,MACR4lB,EAEA,CAACA,EACf,EAED/pB,KAAKm8F,cAAgB,SAAStmD,GAC1B,OAAGA,aAAcvvC,KACNuvC,EAAG6lD,cAEI,iBAAR7lD,EACC,IAAIvvC,KAAKuvC,GAAI6lD,cAEb,IACd,EAED17F,KAAKo8F,WAAa,SAASryE,GACvB,MAAmB,iBAATA,EACCotE,EAAgBptE,GAGhBA,CACd,EAED/pB,KAAKq8F,SAAW,SAAUR,GACtB,OAAOvD,EAAmBuD,EAC7B,EAED77F,KAAKs8F,aAAe,SAAUV,GAC1B,IAAIC,EAAS77F,KAAK27F,eAAeC,GACjC,OAAW,MAARC,EACQ77F,KAAKq8F,SAASR,GAEd,IACd,EAED77F,KAAKu8F,aAAe,SAAU1C,GAC1B,OAAO2B,EAAkB3B,EAAS,GACrC,EAED75F,KAAKw8F,SAAW,SAAU3C,GACtB,IAAI+B,EAAY57F,KAAKu8F,aAAc1C,GACnC,OAAO75F,KAAK27F,eAAeC,EAC9B,EAED57F,KAAKy8F,WAAa,WACd,MAnkBU,OAokBb,CACJ,6KC/iBD,GAfMC,WACF,WAAYjnF,EAAM2jF,gGAAW,SACzBp5F,KAAK28F,MAAQlnF,EACbzV,KAAK48F,WAAaxD,CACrB,wCAED,WACI,OAAOp5F,KAAK28F,KACf,wBAED,WACI,OAAO38F,KAAK48F,UACf,0BAZCF,+wBCgDN,GAjDMG,SAAAA,8oBACF,aAAc,yHAEN,SAAC9D,EAAMtH,GAAa,MACVqL,GAAqB,QACtB9gE,EAAAA,IAA+C,CAAEA,EAAAA,GAAkBA,EAAAA,WAD7C,KAEtBA,EAAAA,OAA+C,CAAEA,EAAAA,KAF3B,KAGtBA,EAAAA,SAA+C,CAAEA,EAAAA,iBAAgCA,EAAAA,aAH3D,KAItBA,EAAAA,aAA+C,CAAEA,EAAAA,cAJ3B,KAKtBA,EAAAA,eAA+C,CAAEA,EAAAA,QAL3B,KAMtBA,EAAAA,qBAA+C,CAAEA,EAAAA,QAN3B,KAOtBA,EAAAA,aAA+C,CAAEA,EAAAA,cAP3B,KAQtBA,EAAAA,oBAA+C,CAAEA,EAAAA,QAR3B,KAStBA,EAAAA,YAA+C,CAAEA,EAAAA,YAA2BA,EAAAA,cATtD,KAUtBA,EAAAA,iBAA+C,CAAEA,EAAAA,YAA2BA,EAAAA,MAAqBA,EAAAA,MAAqBA,EAAAA,qBAAoCA,EAAAA,4BAVpI,KAWtBA,EAAAA,iBAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAXhD,KAYtBA,EAAAA,aAA+C,CAAEA,EAAAA,QAZ3B,KAatBA,EAAAA,eAA+C,CAAEA,EAAAA,SAAwBA,EAAAA,UAAyBA,EAAAA,iBAAgCA,EAAAA,OAAsBA,EAAAA,eAblI,KActBA,EAAAA,cAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAdhD,KAetBA,EAAAA,4BAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAfhD,KAgBtBA,EAAAA,mBAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAhBhD,KAiBtBA,EAAAA,mBAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAjBhD,KAkBtBA,EAAAA,sBAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAlBhD,KAmBtBA,EAAAA,oBAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAnBhD,KAoBtBA,EAAAA,cAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KApBhD,KAqBtBA,EAAAA,KAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KArBhD,KAsBtBA,EAAAA,OAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAtBhD,KAuBtBA,EAAAA,UAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KAvBhD,KAwBtBA,EAAAA,kBAA+C,CAAEA,EAAAA,eAxB3B,KAyBtBA,EAAAA,eAA+C,CAAEA,EAAAA,GAAkBA,EAAAA,cAA6BA,EAAAA,4BAzB1E,KA0BtBA,EAAAA,OAA+C,CAAEA,EAAAA,KA1B3B,KA2BtBA,EAAAA,QAA+C,CAAEA,EAAAA,gBA3B3B,KA4BtBA,EAAAA,UAA+C,CAAEA,EAAAA,MAAqBA,EAAAA,KA5BhD,GA8B3B,GAAI8gE,EAAsBhiG,eAAe22F,GAAW,CAChD,IAAIsL,EAAYD,EAAsBrL,GACtC,YAAkBz5F,IAAd+kG,GACOA,EAAUxkG,QAAQwgG,EAAK7gG,OAAS,CAI9C,CACD,OAAO,CACV,IACD,SAAA0K,GAAG,OAAInJ,OAAOmJ,EAAX,GAEV,UA9CCi6F,CAAsBH,mpBCC5B,IAAMM,GAAgB,qFAgDtB,GAxCMC,SAAAA,8oBACF,aAAc,yHAEN,SAAAlE,GASI,IARA,IAAMmE,EAAgB,CAClBlhE,EAAAA,gBAA+BA,EAAAA,4BAC/BA,EAAAA,sBAAqCA,EAAAA,uBAAsCA,EAAAA,qBAC3EA,EAAAA,wBAAuCA,EAAAA,6BAA4CA,EAAAA,MACnF0M,EAAAA,WAAsB1M,EAAAA,UAEpB5wB,EAAM8xF,EAAcrlG,OAEjB0G,EAAI,EAAGA,EAAI6M,EAAK7M,IACrB,GAAIw6F,EAAKtH,WAAayL,EAAc3+F,GAChC,OAAOy+F,GAAcvnF,KAAKsjF,EAAK5gG,OAIvC,OAAO,CACV,IACD,SAAAyK,GAEI,IAAM5J,EAAQgkG,GAAc71E,KAAKvkB,GAC7BnH,EA7BI,QA6BM6/B,WAAWtiC,EAAM,IAAM,GA5B5B,OA6BLsiC,WAAWtiC,EAAM,IAAM,GA5BpB,MA6BHsiC,WAAWtiC,EAAM,IAAM,GA5BnB,KA6BJsiC,WAAWtiC,EAAM,IAAM,GA5BpB,GA6BHsiC,WAAWtiC,EAAM,KAAO,GACxBsiC,WAAWtiC,EAAM,KAAO,GAM5B,YAJiBhB,IAAbgB,EAAM,KACNyC,GAAUA,GAGPA,CACV,GAER,UArCCwhG,CAAwBP,mpBCV9B,IAIMS,GAAgB,wHAkCtB,GAhCMC,SAAAA,8oBACF,aAAc,yHAEN,SAAArE,GAAI,OAAIoE,GAAc1nF,KAAKsjF,EAAK5gG,MAA5B,IACJ,SAAAyK,GACI,IACIy6F,EADErkG,EAAQmkG,GAAch2E,KAAKvkB,GAgBjC,GAVAy6F,EAAU/2F,KAAKsxF,IACXpwF,SAASxO,EAAM,GAAI,IACnBwO,SAASxO,EAAM,GAAI,IAAM,EACzBwO,SAASxO,EAAM,GAAI,IACnBwO,SAASxO,EAAM,GAAI,IACnBwO,SAASxO,EAAM,GAAI,IAClBA,EAAM,IAAMwO,SAASxO,EAAM,GAAI,KAAO,EACtCA,EAAM,IAtBK,IAsBCsiC,WAAWtiC,EAAM,KAAkC,GAGhEA,EAAM,IAAMA,EAAM,IAAK,CACvB,IAAMskG,EA3BF,GA2BmB91F,SAASxO,EAAM,GAAI,IAAwBwO,SAASxO,EAAM,IAAK,IACtFqkG,IAAyB,MAAbrkG,EAAM,IAAc,EAAI,GAAMskG,EA7BvC,GAES,GA4Bf,CAED,OAAO,IAAIh3F,KAAK+2F,EACnB,GAER,UA7BCD,CAAwBV,mpBCN9B,IAAMa,GAAe,4CAWrB,GATMC,SAAAA,8oBACF,aAAc,yHAEN,SAAAzE,GAAI,OAAIwE,GAAa9nF,KAAKsjF,EAAK5gG,MAA3B,IACJ,SAAAyK,GAAG,OAAI04B,WAAW14B,EAAf,GAEV,UANC46F,CAAuBd,syBCiC7B,GAjCMe,SAAAA,8oBACF,aAAc,yHAEN,SAAC1E,EAAMtH,GAAa,MACVqL,GAAqB,QACtB9gE,EAAAA,eAA+C,CAAEA,EAAAA,OAD3B,KAEtBA,EAAAA,eAA+C,CAAEA,EAAAA,OAF3B,KAGtBA,EAAAA,kBAA+C,CAAEA,EAAAA,OAH3B,KAItBA,EAAAA,MAA+C,CAAEA,EAAAA,OAJ3B,KAKtBA,EAAAA,YAA+C,CAAEA,EAAAA,OAL3B,GAQ3B,GAAI8gE,EAAsBhiG,eAAe22F,GAAW,CAChD,IAAIsL,EAAYD,EAAsBrL,GACtC,YAAkBz5F,IAAd+kG,GACOA,EAAUxkG,QAAQwgG,EAAK7gG,OAAS,CAI9C,CACD,OAAO,CACV,IACD,SAAA0K,GAEI,OADW86F,KAAe96F,IAInBnJ,OAAOmJ,EACjB,GAER,UA9BC66F,CAAoBf,+KCgB1B,GAlBMiB,WACF,WAAYzlG,GACR,IACO6Q,+FAFO,SAId/I,KAAK49F,MAAQ1lG,EACb8H,KAAK69F,QAHE90F,EAG8B7Q,IAHnB6Q,EAAElR,QAAUkR,EAAElQ,OAAO,KAAOkQ,EAAElQ,OAAO,GAAG+B,aAI7D,wCAED,WACI,OAAOoF,KAAK49F,KACf,oBAED,WACI,OAAO59F,KAAK69F,MACf,0BAfCF,8KC0BN,GA1BMG,WACF,WAAY5lG,EAAM+W,EAAYmmF,GAAU,iHACpCp1F,KAAK49F,MAAQ1lG,GAAQ,GACrB8H,KAAK+9F,YAAc,GACnB/9F,KAAKg+F,UAAY5I,GAAY,GAEzBjxF,MAAM0B,QAAQoJ,IACdA,EAAWkjC,SAAQ,SAAA74B,GACf,EAAKykF,YAAYhmG,KAAK,IAAI4lG,GAAerkF,GAC5C,GAER,wCAED,WACI,OAAOtZ,KAAK49F,KACf,uBAED,WACI,OAAO59F,KAAKg+F,SACf,yBAED,WACI,OAAOh+F,KAAK+9F,WACf,0BAvBCD,spBCeN,GAdMG,SAAAA,8oBACF,0GAAc,SACV,IAAMC,EAAmB,CACrBliE,EAAAA,SAAwBA,EAAAA,MAAqBA,EAAAA,OAAsBA,EAAAA,IAAmBA,EAAAA,UAAyBA,EAAAA,oBAAmCA,EAAAA,UAAyBA,EAAAA,iBAAgCA,EAAAA,OAAsBA,EAAAA,mBAAkCA,EAAAA,eAA8BA,EAAAA,iBAAgCA,EAAAA,kBAAiCA,EAAAA,UAAyBA,EAAAA,cAA6BA,EAAAA,4BAA2CA,EAAAA,mBAAkCA,EAAAA,mBAAkCA,EAAAA,mBAAiC,WAAYA,EAAAA,sBAAqCA,EAAAA,qBAFnlB,mBAKJA,EAAAA,eAA8BkiE,EAAkB,CAClD,IAAIJ,GAAQ9hE,EAAAA,eAA8BkiE,EAAkB,CACxD,IAAIJ,GAAQ9hE,EAAAA,mBAAkCkiE,MAGzD,UAXCD,CAAoCH,upBCc1C,GAdMK,SAAAA,8oBACF,0GAAc,SACV,IAAMD,EAAmB,CACrBliE,EAAAA,aAA4BA,EAAAA,iBAAgCA,EAAAA,cAFtD,mBAKJA,EAAAA,OAAsBkiE,EAAkB,CAC1C,IAAIJ,GAAQ9hE,EAAAA,eAA8BkiE,EAAkB,CACxD,IAAIJ,GAAQ9hE,EAAAA,eAA8BkiE,MAGrD,UAXCC,CAAyBL,ICK/B,SAASM,GAAW9mF,GAEhBA,EAASA,GAAU,CAAC,EACpB,IAGIiH,EACAqmB,EACAs0D,EACAE,EACAiF,EAPEnvE,EAAUlvB,KAAKkvB,QACf+V,EAAQ3tB,EAAO2tB,MAuFrB,OARA1mB,EAAW,CACP/kB,MArCJ,SAAesJ,GACX,IAAIopB,EACEyF,EAAYpmB,OAAOi9C,YAAYvZ,MAIrC,KAFA/iB,EAAWktE,EAAUkD,aAAax5F,IAG9B,MAAM,IAAI1K,MAAM,+BAGpB,IAAMkmG,EAAW/yF,OAAOi9C,YAAYvZ,MAGhC/iB,EAASqyE,QACTryE,EAAWA,EAASqyE,OAEPC,aACTtyE,EAASsyE,YAAYrsD,SAAQ,SAACssD,GAAD,OAAaJ,EAAW9I,IAAIkJ,EAA5B,IAE7BvyE,EAASwyE,iBACTxyE,EAASwyE,gBAAgBvsD,SAAQ,SAACssD,GAAD,OAAaJ,EAAW9I,IAAIkJ,EAA5B,MAIrCvyE,EAAWA,EAAS4Q,IACpBuhE,EAAW9I,IAAIrpE,IAGnB,IAAMyyE,EAAapzF,OAAOi9C,YAAYvZ,MAKtC,OAJArK,EAAO9kB,KAAK,kCAAoCw+E,EAAW3sE,GAAWkmC,YAAY,GAAK,oBAAsB8mC,EAAaL,GAAUzmC,YAAY,GAAK,gBAAkB8mC,EAAahtE,GAAa,KAAMkmC,YAAY,GAAK,MAExN3rC,EAASiqB,SAAW,OAEbjqB,CACV,EAIG0yE,YA9CJ,WACI,OAAO1F,CACV,EA6CG2F,QA3CJ,WACI,OAAOR,CACV,GAhCGz5D,EAASK,EAAMuD,UAAUjqB,GACzB26E,EAAW,CACP,IAAI+D,GACJ,IAAIG,GACJ,IAAII,GACJ,IAAIC,GACJ,IAAIZ,IAGRzD,EAAY,IAAI0F,GAAK,CACjBnJ,YAAY,EACZC,gBAAiB,GACjBC,gBAAiB,WACjBC,cAAe,SACfI,kBAAkB,EAClBH,oBAAoB,EACpBS,YAAY,EACZ0C,SAAUA,IAGdmF,EAAa3J,GAAWxlE,GAASxxB,OAAO,CACpCg4F,cAAe,IAAIuI,GACnBljE,OAAQ,IAAIojE,KAwDb5/E,CACV,CAED6/E,GAAW3wE,sBAAwB,aACnC,OAAeE,EAAAA,gBAA6BywE,ICpG5C,SAASW,GAAgBznF,GACrBA,EAASA,GAAU,CAAC,EAEpB,IAuBIiH,EACAqmB,EACAo6D,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EApCEzwE,EAAUlvB,KAAKkvB,QACf0wE,EAAiBtoF,EAAOsoF,eACxBhrB,EAAmBt9D,EAAOs9D,iBAC1BjoC,EAAgBr1B,EAAOq1B,cACvBE,EAAqBv1B,EAAOu1B,mBAC5BE,EAAUz1B,EAAOy1B,QACjBH,EAAct1B,EAAOs1B,YACrB3S,EAAoB3iB,EAAO2iB,kBAC3BwzD,EAAyBn2E,EAAOm2E,uBAChCxhE,EAAa3U,EAAOwU,GACpBkZ,EAAW1tB,EAAO0tB,SAClB7V,EAAa7X,EAAO6X,WACpBkF,EAAS/c,EAAO+c,OAChBvG,EAASxW,EAAOwW,OAChBx0B,EAAWge,EAAOhe,SAClB2rC,EAAQ3tB,EAAO2tB,MACf46D,EAAkBvoF,EAAOuoF,gBACzBx6D,EAAoB/tB,EAAO+tB,kBAC3BwzB,EAAwBvhD,EAAOuhD,sBAC/B2zB,EAAYl1E,EAAOk1E,UACnB1/C,EAAgBx1B,EAAOw1B,cACvB5H,EAAW5tB,EAAO4tB,SAuFxB,SAAS46D,IACL,OAAOT,CACV,CAED,SAASU,EAAkB33F,GACvB,IAAIk3F,IAGCl3F,EAAEyF,MACH,IACIuxF,EAAYh3F,EAAE8jB,QAWjB,CAVC,MAAO9Z,GACLutF,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAASjd,EAAIid,QACbvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,IAGnB,CAER,CAED,SAASK,EAAqB53F,GACtBA,EAAE0jB,KAAOG,IAGR7jB,EAAEyF,OAAwB,OAAfoe,GASZ0zE,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAAS,yBACTvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,EACR9xF,MAAOzF,EAAEyF,WAfjB8xF,EAAU70E,EAAAA,uBACV2iE,EAAuB1gE,qBAAqBd,EAAY0zE,GAASxyF,MAAK,WAClE63B,EAASqK,QAAQhb,EAAO4rE,uBAAwB,CAC5Cn0E,GAAIG,EACJoD,QAAS,yCAEhB,KAaR,CAED,SAAS6wE,EAAoB56C,EAAQn4B,EAAYgzE,GAE7CV,EAAiBn6C,EAAOje,gBAAgBvb,IAAM,CAC1CqB,WAAAA,EACAgzE,UAAAA,GAGJ,IAEInQ,EAFAriD,EAAW,EACXsiD,EAAc,EAElB,IAAK,IAAIC,KAAYuP,EACbA,EAAiB3kG,eAAeo1F,KACG,OAA/BuP,EAAiBvP,GACjBF,GAAqB,GAErBriD,GAAY8xD,EAAiBvP,GAAU/iE,WACvC8iE,GAAewP,EAAiBvP,GAAUiQ,YAKjDnQ,IAED0P,EAAe/xD,EAAWsiD,EAG1BxC,EAAuB5hE,gBAAgBI,GAClC9e,MAAK,SAACzR,GAEH,OADAA,EAAK+4C,SAAWirD,EACTnwE,EAAsB7zB,EAChC,IAEZ,CAED,SAAS0kG,EAAsBh4F,GACvBA,EAAE0jB,KAAOG,IAGR7jB,EAAEyF,OAAwB,OAAfoe,GAWZ0zE,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAAS,4BACTvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,EACR9xF,MAAOzF,EAAEyF,WAjBjB8xF,EAAU70E,EAAAA,wBACV2iE,EAAuB1gE,qBAAqBd,EAAY0zE,GACnDxyF,MAAK,WACF63B,EAASqK,QAAQhb,EAAOgsE,wBAAyB,CAC7Cv0E,GAAIG,EACJoD,QAAS,kEAEbixE,GACH,KAaZ,CAED,SAASC,EAAuBn4F,GACxBA,EAAE0jB,KAAOG,IAIbszE,EAA2Bn3F,EAAEgoF,iBAEAv4F,OAAS,GAClC2nG,EAAuBhmG,MAAM0lG,EAAcK,GAA0BpyF,MAAK,SAAUqzF,GAChF,GAAuB,OAAnBA,GAA0C,OAAfv0E,EAY3B,KAAM,mCAXNwhE,EAAuB5hE,gBAAgBI,GAClC9e,MAAK,SAACzR,GAEH,OADAA,EAAKwwB,SAAWs0E,EACTjxE,EAAsB7zB,EAChC,IACAyR,MAAK,WACF,IAAK,IAAI5O,EAAI,EAAG8vC,EAAK8wD,EAAStnG,OAAQ0G,EAAI8vC,EAAI9vC,IAC1C4gG,EAAS5gG,GAAG8xF,8BAEnB,GAIZ,IAfD,OAeS,SAAUj+E,GACf,MAAMA,CACT,GAER,CAED,SAASquF,IACL,IACI1zD,EAAQ2zD,cAActB,GACtB/5D,EAAkByC,WAAWs3D,GAC7B,IAAMuB,EAAc5zD,EAAQ6zD,iBACD,IAAvBD,EAAY9oG,SACZ8nG,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAAS,+BACTvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,MAIpB,IAAK,IAAIphG,EAAI,EAAG8vC,EAAKsyD,EAAY9oG,OAAQ0G,EAAI8vC,EAAI9vC,IAAK,CAClD,IAAM4mC,EAAaw7D,EAAYpiG,GAC3B+mD,EAASupC,GAAc3/D,GAASxxB,OAAO,CACvCouB,GAAIG,EACJ0hE,UAAW,CACP0B,QAAS2Q,EACTlS,YAAaoS,EACb1Q,SAAU4Q,EACV3Q,qBAAsB8Q,GAE1B/T,UAAWA,EACX1/C,cAAeA,EACf9H,SAAUA,EACV3Q,OAAQA,EACRvG,OAAQA,EACRx0B,SAAUA,EACV2rC,MAAOA,EACP9V,WAAYA,EACZylD,iBAAkBA,EAClBjoC,cAAeA,EACfE,mBAAoBA,EACpBD,YAAaA,EACbvH,kBAAmBA,EACnBpL,kBAAmBA,EACnB8S,QAASA,EACT8rB,sBAAuBA,EACvB40B,uBAAwBA,IAE5B0R,EAASpnG,KAAKutD,GAGdA,EAAOxd,WAAW3C,GAClBs6D,EAAiBt6D,EAAWrZ,IAAM,IACrC,CACDwzE,GAAc,CAajB,CAZC,MAAOl3F,GACLw8B,EAAO9kB,KAAK1X,GACZu3F,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAASjnB,EAAEinB,QACXvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,EACR9xF,MAAOzF,EAAEyF,QAGpB,CACJ,CAaD,SAASgf,EAAoBZ,GACzB,OAAOwhE,EAAuB5gE,oBAAoBZ,EACrD,CAgBD,SAASsD,EAAsBsxE,GAC3B,OAAOpT,EAAuBl+D,sBAAsBsxE,EACvD,CAMD,SAASC,EAAyB14F,GAM9B,OAJA48B,EAASuD,IAAIlU,EAAO+jB,yBAA0B0oD,EAA0BviF,GAExE2gF,EAAe92F,EAAE24F,iBAEb3B,EAAUliG,OAAS4vC,EAActM,SACjCm/D,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAAS,iCACTvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,UAGhB/6D,EAAO/2B,MAAM,mCAKbuxF,EAAUn5D,eAAepuC,OAAS,GAClC8nG,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAAS,6CACTvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,UAGhB/6D,EAAO/2B,MAAM,gDAQjB4yF,IA3EAtB,EAAShtD,SAAQ,SAAAmT,GACbA,EAAOmrC,eACV,SA8EDzrD,EAASqK,QAAQhb,EAAO8kB,kBAC3B,CAED,SAASy3C,EAA4BoQ,GACjC,IAAK,IAAIziG,EAAI,EAAGA,EAAI4gG,EAAStnG,OAAQ0G,IACjC4gG,EAAS5gG,GAAGqyF,4BAA4BoQ,EAE/C,CA0FD,SAASC,IACL,GAAmB,OAAfh1E,GAAuB6zE,IAAiB,CACxC,IAAK,IAAIvhG,EAAI,EAAG8vC,EAAK8wD,EAAStnG,OAAQ0G,EAAI8vC,EAAI9vC,IAC1C4gG,EAAS5gG,GAAGgyF,8BAIhB4O,EAAW,GAEXG,GAAc,EAEdK,EAAU70E,EAAAA,uBAEV2iE,EAAuB1gE,qBAAqBd,EAAY0zE,GAASxyF,MAAK,WAClE63B,EAASqK,QAAQhb,EAAO6sE,uBAAwB,CAC5CrvD,OAAQ7xC,KACR8rB,GAAIG,EACJve,OAAQiyF,EACRtwE,QAAS,mDAEbgwE,GAAuB,CAC1B,GACJ,CACJ,CAqDD,SAASiB,IACL,IAAK,IAAI/hG,EAAI,EAAG8vC,EAAK8wD,EAAStnG,OAAQ0G,EAAI8vC,EAAI9vC,IAC1C4gG,EAAS5gG,GAAG+pC,QAEhBk3D,EAAyB,KACzBH,GAAuB,EACvBF,EAAW,GACXn6D,EAASuD,IAAIlU,EAAOikB,iBAAkBynD,EAAmBxhF,GACzDymB,EAASuD,IAAIlU,EAAO+jB,yBAA0B0oD,EAA0BviF,GAYxEymB,EAASyD,GAAGpU,EAAOU,MAAOxnB,EAASgR,EAVtC,CAED,SAAShR,EAAQnF,GACTA,EAAEyF,MAAMjR,OAASqxB,EAAAA,8BACjB7lB,EAAEyF,MAAMjR,OAASqxB,EAAAA,+BACjBgzE,GAEP,CAsCD,OApBA1iF,EAAW,CACP+pB,MATJ,WACQw3D,KACAQ,IAEJj7D,EAAkBiD,QAClBu3D,EAAgBv3D,OACnB,EAIG23B,MA7iBJ,WACI,OAAOh0C,CACV,EA4iBGk1E,cA1iBJ,WACI,OAAOlC,CACV,EAyiBGmC,eAviBJ,WACI,OAAOpC,CACV,EAsiBGqC,UApiBJ,WACI,OAAO1B,CACV,EAmiBG2B,gBAjiBJ,SAAyBr1F,GACrBgzF,EAAchzF,EAAM2jB,IACpB8vE,EAAezzF,EAAMwoC,SACrBuqD,EAAe/yF,EAAM+pC,YACrB2pD,EAAU1zF,EAAMyB,MACnB,EA6hBG6zF,aAvgBJ,WACI3B,EAAe7sD,KAAKisD,GACpBK,GAAuB,CAC1B,EAqgBGmC,gBAvhBJ,SAAyB5xE,GAYrB,OAXAovE,EAAepvE,EACfqvE,EAAc,GAAH,OAAMn0E,EAAAA,eAAN,cAA2CmB,GACtD0zE,EAAU70E,EAAAA,uBAkBVka,EAASyD,GAAGpU,EAAOikB,iBAAkBynD,EAAmBxhF,GACxDymB,EAASyD,GAAGpU,EAAO+jB,yBAA0B0oD,EAA0BviF,GAKvEymB,EAASyD,GAAGpU,EAAOU,MAAOxnB,EAASgR,GAuORsiF,EA7PL,CAClB,cAAiB50E,EACjB,OAAU0zE,EACV,WAAc1zE,EACd,IAAOgzE,EACP,YAAervE,GAyPZ69D,EAAuBn+D,sBAAsBuxE,GADxD,IAA+BA,CArP9B,EA2gBGY,cAxLJ,SAAuB/Q,GACnB,IACI,IAAI71B,EA1BZ,SAAoC61B,GAChC,IAAI71B,EAAM,CAAC,EAoBX,OAnBAA,EAAI2xB,EAAU5jD,OAAS,GACvBiyB,EAAI2xB,EAAU3jD,OAAS,GACvBgyB,EAAI2xB,EAAU1jD,MAAQ,GAYtB4nD,EAAWv+C,SAAQ,SAAApgB,GACfA,EAAUo3C,YAAYh3B,SAAQ,SAAAqe,GAC1BqK,EAAI9oC,EAAU70B,MAAMnF,KAAKy4D,EAAQ1kC,GACpC,GACJ,IACM+uC,CACV,CAIiB6mC,CAA2BhR,GAErCjD,EAAuB9gE,4BAA4BV,EAAY4uC,GAC1D1tD,MAAK,WACF,OAAO0f,EAAoBZ,EAC9B,IACA9e,MAAK,WACF,OAwBiB6zF,EAxBcnmC,GAyB3C2kC,EAAyBvO,GAA6B/hE,GAASxxB,OAAO,CAClEuuB,WAAYA,EACZklE,cAAe6P,EACf/7D,MAAOA,EACP6H,cAAeA,EACf0/C,UAAWA,EACXtnD,SAAUA,KAGgB1rC,MAAM0lG,GAAc/xF,MAAK,SAAUqzF,GAC7D,OAAuB,OAAnBA,EACO/S,EAAuB5hE,gBAAgBI,GACzC9e,MAAK,SAACzR,GAIH,OAHAA,EAAKimG,YAAcvC,EAAUxvE,IAC7Bl0B,EAAKqlG,iBAAmB7B,EACxBxjG,EAAKwwB,SAAWs0E,EACTjxE,EAAsB7zB,EAChC,IAEEoQ,QAAQiB,OAAO,mCAE7B,IAZM,OAYE,SAAUqF,GACf,OAAOtG,QAAQiB,OAAOqF,EACzB,IAxBL,IAAiC4uF,CAvBpB,IACA7zF,MAAK,WACFyjF,EAA4B/1B,EAC/B,GAWR,CAVC,MAAOzoD,GACLutF,EAAU70E,EAAAA,qBACVqE,EAAWthB,MAAM,CACbjR,KAAMqxB,EAAAA,cACNoB,QAASjd,EAAIid,QACbvsB,KAAM,CACFgpB,GAAIG,EACJve,OAAQiyF,IAGnB,CACJ,EAgKGsB,aAAcA,EACdW,eArFJ,WAOI,IAAIZ,EANAlB,MAIJT,GAAuB,EAIvB5R,EAAuB5hE,gBAAgBI,GAClC9e,MAAK,SAACzR,GACH,IAAIyB,EAASihG,GAAWlvE,GAASxxB,OAAO,CAAEunC,MAAOA,IASjD,OARAm6D,EAAYjiG,EAAO3D,MAAMkC,EAAKqlG,kBAE9BN,IAEAO,EAA0BtlG,EAAKkxB,SAE/BoY,EAASqK,QAAQhb,EAAO8kB,kBAEjBtsB,EAAoBZ,EAC9B,IACA9e,MAAK,WACFyjF,EAA4BoQ,EAC/B,IACR,EA6DGa,eA9FJ,WACIZ,GACH,EA6FGa,uBAxDJ,WACI,OAAOt/F,KAAKikD,MAAqB,IAAfi5C,EACrB,EAuDGI,cAAeA,EACfQ,cAAeA,GApkBf17D,EAASK,EAAMuD,UAAUjqB,GACzBshF,EAAgB/3D,aAChBq3D,EAAW,GACXE,GAAuB,EACvBC,GAAc,EACdG,EAAmB,CAAC,EACpBC,EAAe,EACfC,OAAU3nG,EAkkBPumB,CACV,CAEDwgF,GAAgBtxE,sBAAwB,kBACxC,OAAeC,OAAOC,aAAa8B,gBAAgBsvE,IC5nBnD,SAASgD,GAAqBzqF,GAC1BA,EAASA,GAAU,CAAC,EACpB,IAKIiH,EACA0Q,EANEC,EAAUlvB,KAAKkvB,QACfgW,EAAW5tB,EAAO4tB,SAClBsnD,EAAYl1E,EAAOk1E,UACnB1/C,EAAgBx1B,EAAOw1B,cA6D7B,OAvDI7d,EAAevD,EAAawD,GAASM,cAkDzCjR,EAAW,CACPw0B,KAvCJ,SAAcz7B,GACV,GAAIA,EAAOmuB,QAAS,CAChB,IAAIxZ,GAXY2D,EAWetY,EAAOmuB,QAAQ7V,IAVtCsV,EAASqoB,eAAe39B,GAClBn3B,MAAM,KACX,IAST,GAAIwzB,EAAa,GAAM,EACnB,GACI3U,EAAOmuB,QAAQ3T,YAAc06D,EAAU3jD,OACvCvxB,EAAOmuB,QAAQ3T,YAAc06D,EAAU5jD,OACvCtxB,EAAOmuB,QAAQ3T,YAAc06D,EAAU1jD,MACvCxxB,EAAOmuB,QAAQ3T,YAAc06D,EAAUzjD,OACvCzxB,EAAOmuB,QAAQ3T,YAAc06D,EAAUxjD,MACzC,CACE,IAAIilD,EAAiC,0BAAxB32E,EAAOmuB,QAAQvoC,KAAmC,OAASoa,EAAOmuB,QAAQ9sC,MACnFU,EAAMie,EAAOmuB,QAAQvY,iBAAmB,IAAM+gE,EAClDh/D,EAAa5C,iBAAiBJ,EAAY5yB,GAAK8T,MAAK,SAAU60F,GAC1D1qF,EAAOizE,QAAQyX,EAAU,KAAM1qF,EAAOmuB,QAAQ7V,IAAK48D,EAAU/gD,aAChE,IAFD,OAES,SAAUr5B,GACfkF,EAAOzJ,MAAMuE,EAChB,GACJ,MAAUkF,EAAOmuB,QAAQvoC,OAAS4vC,EAAchQ,KAC7C7N,EAAapD,gBAAgBI,GAAY9e,MAAK,SAAUzR,GACpDuzB,EAAapC,oBAAoBnxB,EAAK4wB,eACtChV,EAAOizE,QAAQ7uF,EAAKwwB,SAAU,KAAM5U,EAAOmuB,QAAQ7V,IAAK48D,EAAUhhD,IACrE,IAHD,OAGS,SAAUp5B,GACfkF,EAAOzJ,MAAMyJ,EAAOmuB,QAAS,IAAKrzB,EACrC,SAGLkF,EAAOzJ,MAAMyJ,EAAOmuB,QAAS,KAAM,6BAE1C,CAtCL,IAAwB7V,CAuCvB,EAUGijB,MARJ,WAEC,GASMt0B,CACV,CAEDwjF,GAAqBt0E,sBAAwB,uBAC7C,IACA,GADgBC,OAAOC,aAAa8B,gBAAgBsyE,ICrEpD,SAASE,KAoCL,MANiB,CACbC,SA1BJ,WACI,OAAOp3E,EAAAA,iBACV,EAyBG+a,WAdJ,WACI,OAAO,CACV,EAaG0nB,eAnBJ,SAAwB39B,GACpB,OAAOA,EAAIh2B,QAAQ,gBAAiB,GACvC,EAkBGoT,QAZJ,SAAiB4iB,EAAK+8B,GAIlB,MAH4C,MAAxCA,EAAQ9zD,OAAO8zD,EAAQ90D,OAAS,KAChC80D,EAAUA,EAAQ/wD,OAAO,MAEtB+wD,EAAU/8B,CACpB,EAUJ,CAEDqyE,GAAgBx0E,sBAAwB,kBACxC,OAAeC,OAAOC,aAAaC,oBAAoBq0E,upBCrCvD,GADoB,IA9BdE,SAAAA,8oBACF,aAAe,mHACX,gBAMKxR,8BAAgC,qCAMrC,EAAKsP,uBAAyB,8BAM9B,EAAKiB,uBAAyB,8BAM9B,EAAKb,wBAA0B,+BAzBpB,CA0Bd,UA3BC8B,CAAsB/tE,ICuC5B,GATI,0GAAc,SACVp0B,KAAK8rB,GAAK,KACV9rB,KAAK4vB,IAAM,KACX5vB,KAAKg2C,YAAc,KACnBh2C,KAAK0N,OAAS,KACd1N,KAAKy0C,SAAW,IACnB,ECIL,SAAS2tD,GAAkB9qF,GAEvB,IAuBIiH,EACA8jF,EACAz9D,EACA6oD,EACA6U,EA3BEpzE,EAAUlvB,KAAKkvB,QACfC,EAAa7X,EAAO6X,WACpBkF,EAAS/c,EAAO+c,OAChBvG,EAASxW,EAAOwW,OAChBx0B,EAAWge,EAAOhe,SAClB0rC,EAAW1tB,EAAO0tB,SAClBC,EAAQ3tB,EAAO2tB,MACf26D,EAAiBtoF,EAAOsoF,eACxB2C,EAAgBjrF,EAAOirF,cACvB3tB,EAAmBt9D,EAAOs9D,iBAC1BjoC,EAAgBr1B,EAAOq1B,cACvBE,EAAqBv1B,EAAOu1B,mBAC5BD,EAAct1B,EAAOs1B,YACrB3S,EAAoB3iB,EAAO2iB,kBAC3B4+B,EAAwBvhD,EAAOuhD,sBAC/B9rB,EAAUz1B,EAAOy1B,QACjB8yD,EAAkBvoF,EAAOuoF,gBACzBx6D,EAAoB/tB,EAAO+tB,kBAC3BinD,EAAsBh1E,EAAOg1E,oBAC7BE,EAAYl1E,EAAOk1E,UACnB1/C,EAAgBx1B,EAAOw1B,cACvB5H,EAAW5tB,EAAO4tB,SA0BxB,SAASs9D,EAAkB12E,GAIvB,OAHeu2E,EAAU/5B,MAAK,SAAC5sE,GAC3B,OAAOA,EAAKukE,UAAYn0C,CAC3B,GAEJ,CAED,SAAS22E,EAAqB32E,GAC1B,IAAIqiE,EAiCJ,OAhCAA,EAAWqU,EAAkB12E,MAIzBqiE,EAAW4Q,GAAgB7vE,GAASxxB,OAAO,CACvCouB,GAAIA,EACJkZ,SAAUA,EACV3Q,OAAQA,EACRvG,OAAQA,EACRx0B,SAAUA,EACVsmG,eAAgBA,EAChB2C,cAAeA,EACf3tB,iBAAkBA,EAClBirB,gBAAiBA,EACjBx6D,kBAAmBA,EACnBsH,cAAeA,EACfE,mBAAoBA,EACpBE,QAASA,EACTH,YAAaA,EACb3S,kBAAmBA,EACnB9K,WAAYA,EACZ0pC,sBAAuBA,EACvB40B,uBAAwBA,EACxBxoD,MAAOA,EACPunD,UAAWA,EACX1/C,cAAeA,EACf5H,SAAUA,IAGdm9D,EAAUtqG,KAAKo2F,IAGZA,CACV,CAuBD,SAASuU,EAAqB52E,GAC1B,OAAO,IAAIhgB,SAAQ,SAAUkB,EAASD,GAClC,IAAIohF,EAAWqU,EAAkB12E,GAC7B62E,GAAuB,EAC3B,GAAIxU,EAAU,CAENA,EAAS2R,kBAET6C,GAAuB,EASvB39D,EAASyD,GAAGpU,EAAO6sE,wBARK,SAAlB0B,IAEF,OADA59D,EAASuD,IAAIlU,EAAO6sE,uBAAwB0B,EAAiBrkF,GACtDkvE,EAAuBjgE,mBAAmB1B,GAAI3e,MAAK,WACtDH,GACH,IAFM,OAEE,SAAUoF,GACfrF,EAAOqF,EACV,GACJ,GAC2DmM,IAEhE4vE,EAAS0T,iBACT,IAAIlpG,EAAQ0pG,EAAU9pG,QAAQ41F,GAC9BkU,EAAU5iG,OAAO9G,EAAO,EAC3B,CAEIgqG,GACD31F,GAEP,GACJ,CAoKD,SAAS61F,IACLR,EAAUlwD,SAAQ,SAACg8C,GACfA,EAASmS,eACZ,GACJ,CA0BD,OAfA/hF,EAAW,CACPukF,uBA9JJ,WACI,OAAO,IAAIh3F,SAAQ,SAAUkB,EAASD,GAClC0gF,EAAuB1hE,kBAAkB5e,MAAK,SAAC6/D,GAC3CA,EAAMhhD,UAAUmmB,SAAQ,SAAC4wD,IA1ErC,SAAmCA,GAC/B,IAAI5U,EAAWqU,EAAkBO,EAAQ92E,YAEzC,IAAKkiE,EAAU,CACXA,EAAWsU,EAAqBM,EAAQ92E,YACxC,IAAIve,EAASq1F,EAAQr1F,OACjBA,IAAWod,EAAAA,yBACXpd,EAASod,EAAAA,wBAGbqjE,EAASmT,gBAAgB,CACrB1xE,IAAKmzE,EAAQnzE,IACb6kB,SAAUsuD,EAAQtuD,SAClBuB,YAAa+sD,EAAQpB,YACrBj0F,OAAQA,GAEf,CAGJ,CAwDes1F,CAA0BD,EAC7B,IAED/1F,GACH,IAND,OAMS,SAAC5E,GACNw8B,EAAO/2B,MAAM,4BAA8BzF,GAC3C2E,EAAO3E,EACV,GACJ,GACJ,EAkJG66F,aAnHJ,SAAsBC,GAClB,OAAO,IAAIp3F,SAAQ,SAAUkB,EAASD,GAClC,IAAI+e,GAjEQ,IAAIxlB,MAAOE,UAoEnB2nF,EAAWsU,EAAqB32E,GAEpCqiE,EAASqT,gBAAgB0B,GAAa/1F,MAAK,WACvCghF,EAASoT,eACTv0F,EAAQ8e,EACX,IAHD,OAIW,SAAC1jB,GACJw8B,EAAO/2B,MAAM,sBAAwBzF,GACrCs6F,EAAqB52E,GAAI3e,MAAK,WAC1BJ,EAAO3E,EACV,GACJ,GACR,GACJ,EAkGG+6F,YAxFJ,SAAqBr3E,EAAI4kE,GACrB,IAAIvC,EAAWqU,EAAkB12E,GAC7BqiE,GACAA,EAASsT,cAAc/Q,EAE9B,EAoFG0S,WA3EJ,SAAoBt3E,GAChB,IAAIqiE,EAAWqU,EAAkB12E,GAC7BqiE,GACAA,EAAS8S,cAEhB,EAuEGoC,aA9DJ,SAAsBv3E,GAClB,IAAIqiE,EAAWqU,EAAkB12E,GAC7BqiE,GACAA,EAASyT,gBAEhB,EA0DG0B,aAjDJ,SAAsBx3E,GAClB,OAAO42E,EAAqB52E,GAAI3e,MAAK,WACjC,OAAOsgF,EAAuBjgE,mBAAmB1B,EACpD,GACJ,EA8CGy3E,qBAnCJ,SAA8Bz3E,GAC1B,IAAIqiE,EAAWqU,EAAkB12E,GACjC,OAAIqiE,EACOA,EAAS2T,yBAEb,CACV,EA8BG0B,cA/IJ,WACI,IAAIC,EAAU,GAUd,OATApB,EAAUlwD,SAAQ,SAACg8C,GACf,IAAMuV,EAAS,IAAIC,GACnBD,EAAO53E,GAAKqiE,EAASluB,QACrByjC,EAAOjvD,SAAW05C,EAAS2T,yBAC3B4B,EAAO9zE,IAAMu+D,EAASgT,gBACtBuC,EAAO1tD,YAAcm4C,EAASiT,iBAC9BsC,EAAOh2F,OAASygF,EAASkT,YACzBoC,EAAQ1rG,KAAK2rG,EAChB,IACMD,CACV,EAoIGZ,aAAcA,EACdv6D,MAfJ,WACIu6D,IACAvW,EAAoBF,iBAAiBthE,EAAAA,eACxC,GA/RG8Z,EAASK,EAAMuD,UAAUjqB,GACzBkvE,EAAyBz+D,EAAuBE,GAASxxB,OAAO,CAC5DsnC,SAAU1tB,EAAO0tB,SACjB7V,WAAYA,IAEhBmzE,EAAkBL,GAAgB/yE,GAASM,cAC3C0V,EAAS6oB,iBAAiBu0C,EAAgBJ,WAAYI,GACtDhW,EAAoBH,eAAerhE,EAAAA,eAAiCi3E,IAEpEM,EAAY,GAuST9jF,CACV,CAED6jF,GAAkB30E,sBAAwB,oBAC1C,IAAM92B,GAAU+2B,OAAOC,aAAa8B,gBAAgB2yE,IACpDzrG,GAAQ09B,OAAS8tE,GACjBxrG,GAAQm3B,OAASG,EACjBP,OAAOC,aAAawG,mBAAmBiuE,GAAkB30E,sBAAuB92B,IAChF,UCnWIu4B,GAA6B,oBAAX3jB,QAA0BA,QAAWlC,EAAAA,EAEvDqkB,GAASwB,GAAQxB,OAChBA,KACDA,GAASwB,GAAQxB,OAAS,CAAC,GAG/BA,GAAO00E,kBAAoBA,GAE3B","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/./node_modules/bcp-47-match/index.js","webpack://dashjs/./node_modules/bcp-47-normalize/index.js","webpack://dashjs/./node_modules/bcp-47-normalize/lib/index.js","webpack://dashjs/./node_modules/bcp-47/index.js","webpack://dashjs/./node_modules/bcp-47/lib/parse.js","webpack://dashjs/./node_modules/bcp-47/lib/stringify.js","webpack://dashjs/./node_modules/codem-isoboxer/dist/iso_boxer.js","webpack://dashjs/./node_modules/fast-deep-equal/index.js","webpack://dashjs/./node_modules/html-entities/index.js","webpack://dashjs/./node_modules/html-entities/lib/html4-entities.js","webpack://dashjs/./node_modules/html-entities/lib/html5-entities.js","webpack://dashjs/./node_modules/html-entities/lib/xml-entities.js","webpack://dashjs/./node_modules/is-alphabetical/index.js","webpack://dashjs/./node_modules/is-alphanumerical/index.js","webpack://dashjs/./node_modules/is-decimal/index.js","webpack://dashjs/./node_modules/localforage/dist/localforage.js","webpack://dashjs/./node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/ua-parser-js/src/ua-parser.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/amd options","webpack://dashjs/webpack/runtime/compat get default export","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/global","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/./src/offline/constants/OfflineConstants.js","webpack://dashjs/./src/offline/storage/IndexDBStore.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/offline/errors/OfflineErrors.js","webpack://dashjs/./src/offline/controllers/OfflineStoreController.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/dash/vo/Segment.js","webpack://dashjs/./src/dash/utils/SegmentsUtils.js","webpack://dashjs/./src/dash/constants/DashConstants.js","webpack://dashjs/./src/dash/DashHandler.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/dash/controllers/RepresentationController.js","webpack://dashjs/./src/streaming/models/FragmentModel.js","webpack://dashjs/./src/streaming/utils/RequestModifier.js","webpack://dashjs/./src/streaming/net/XHRLoader.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/EventBus.js","webpack://dashjs/./src/core/events/Events.js","webpack://dashjs/./src/core/events/CoreEvents.js","webpack://dashjs/./src/core/Debug.js","webpack://dashjs/./src/core/Settings.js","webpack://dashjs/./src/streaming/net/FetchLoader.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/metrics/MetricsReportingEvents.js","webpack://dashjs/./src/dash/vo/Representation.js","webpack://dashjs/./src/dash/vo/AdaptationSet.js","webpack://dashjs/./src/dash/vo/Period.js","webpack://dashjs/./src/dash/vo/Mpd.js","webpack://dashjs/./src/dash/vo/UTCTiming.js","webpack://dashjs/./src/dash/vo/Event.js","webpack://dashjs/./src/dash/vo/BaseURL.js","webpack://dashjs/./src/dash/vo/EventStream.js","webpack://dashjs/./src/dash/vo/ProducerReferenceTime.js","webpack://dashjs/./src/dash/vo/ContentSteering.js","webpack://dashjs/./src/dash/vo/DescriptorType.js","webpack://dashjs/./src/streaming/utils/ObjectUtils.js","webpack://dashjs/./src/streaming/utils/DefaultURLUtils.js","webpack://dashjs/./src/streaming/utils/URLUtils.js","webpack://dashjs/./src/core/errors/Errors.js","webpack://dashjs/./src/streaming/vo/ThumbnailTrackInfo.js","webpack://dashjs/./src/streaming/vo/IsoBox.js","webpack://dashjs/./src/streaming/utils/IsoFile.js","webpack://dashjs/./src/streaming/vo/IsoBoxSearchInfo.js","webpack://dashjs/./src/streaming/utils/BoxParser.js","webpack://dashjs/./src/dash/utils/TimelineSegmentsGetter.js","webpack://dashjs/./src/dash/utils/TemplateSegmentsGetter.js","webpack://dashjs/./src/dash/utils/ListSegmentsGetter.js","webpack://dashjs/./src/dash/utils/SegmentBaseGetter.js","webpack://dashjs/./src/dash/controllers/SegmentsController.js","webpack://dashjs/./src/streaming/thumbnail/ThumbnailTracks.js","webpack://dashjs/./src/dash/vo/MpdLocation.js","webpack://dashjs/./src/dash/vo/PatchLocation.js","webpack://dashjs/./src/dash/vo/ClientDataReporting.js","webpack://dashjs/./src/dash/models/DashManifestModel.js","webpack://dashjs/./src/streaming/models/CmcdModel.js","webpack://dashjs/./src/streaming/models/CmsdModel.js","webpack://dashjs/./src/streaming/models/ClientDataReportingModel.js","webpack://dashjs/./src/streaming/models/LowLatencyThroughputModel.js","webpack://dashjs/./src/streaming/utils/SupervisorTools.js","webpack://dashjs/./src/streaming/rules/SwitchRequest.js","webpack://dashjs/./src/streaming/constants/MetricsConstants.js","webpack://dashjs/./src/streaming/rules/abr/ThroughputRule.js","webpack://dashjs/./src/streaming/rules/abr/InsufficientBufferRule.js","webpack://dashjs/./src/streaming/rules/abr/AbandonRequestsRule.js","webpack://dashjs/./src/streaming/rules/abr/DroppedFramesRule.js","webpack://dashjs/./src/streaming/rules/abr/SwitchHistoryRule.js","webpack://dashjs/./src/streaming/rules/abr/BolaRule.js","webpack://dashjs/./src/streaming/rules/abr/L2ARule.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LearningAbrController.js","webpack://dashjs/./src/streaming/rules/abr/lolp/QoeInfo.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpQoEEvaluator.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpWeightSelector.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpRule.js","webpack://dashjs/./src/streaming/rules/abr/ABRRulesCollection.js","webpack://dashjs/./src/streaming/models/CustomParametersModel.js","webpack://dashjs/./src/streaming/net/HTTPLoader.js","webpack://dashjs/./src/streaming/net/SchemeLoaderFactory.js","webpack://dashjs/./src/streaming/net/URLLoader.js","webpack://dashjs/./src/streaming/vo/HeadRequest.js","webpack://dashjs/./src/streaming/FragmentLoader.js","webpack://dashjs/./src/offline/OfflineStreamProcessor.js","webpack://dashjs/./src/offline/OfflineStream.js","webpack://dashjs/./src/offline/utils/OfflineIndexDBManifestParser.js","webpack://dashjs/./src/dash/parser/objectiron.js","webpack://dashjs/./externals/xml2json.js","webpack://dashjs/./src/dash/parser/matchers/BaseMatcher.js","webpack://dashjs/./src/dash/parser/matchers/StringMatcher.js","webpack://dashjs/./src/dash/parser/matchers/DurationMatcher.js","webpack://dashjs/./src/dash/parser/matchers/DateTimeMatcher.js","webpack://dashjs/./src/dash/parser/matchers/NumericMatcher.js","webpack://dashjs/./src/dash/parser/matchers/LangMatcher.js","webpack://dashjs/./src/dash/parser/maps/CommonProperty.js","webpack://dashjs/./src/dash/parser/maps/MapNode.js","webpack://dashjs/./src/dash/parser/maps/RepresentationBaseValuesMap.js","webpack://dashjs/./src/dash/parser/maps/SegmentValuesMap.js","webpack://dashjs/./src/dash/parser/DashParser.js","webpack://dashjs/./src/offline/OfflineDownload.js","webpack://dashjs/./src/offline/net/IndexDBOfflineLoader.js","webpack://dashjs/./src/offline/utils/OfflineUrlUtils.js","webpack://dashjs/./src/offline/events/OfflineEvents.js","webpack://dashjs/./src/offline/vo/OfflineDownloadVo.js","webpack://dashjs/./src/offline/controllers/OfflineController.js","webpack://dashjs/./src/offline/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, function() {\nreturn ","'use strict'\n\n// See https://tools.ietf.org/html/rfc4647#section-3.1\n// for more information on the algorithms.\n\nexports.basicFilter = factory(basic, true)\nexports.extendedFilter = factory(extended, true)\nexports.lookup = factory(lookup)\n\n// Basic Filtering (Section 3.3.1) matches a language priority list consisting\n// of basic language ranges (Section 2.1) to sets of language tags.\nfunction basic(tag, range) {\n  return range === '*' || tag === range || tag.indexOf(range + '-') > -1\n}\n\n// Extended Filtering (Section 3.3.2) matches a language priority list\n// consisting of extended language ranges (Section 2.2) to sets of language\n// tags.\nfunction extended(tag, range) {\n  // 3.3.2.1\n  var left = tag.split('-')\n  var right = range.split('-')\n  var leftIndex = 0\n  var rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}\n\n// Lookup (Section 3.4) matches a language priority list consisting of basic\n// language ranges to sets of language tags to find the one exact language tag\n// that best matches the range.\nfunction lookup(tag, range) {\n  var right = range\n  var index\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}\n\n// Factory to perform a filter or a lookup.\n// This factory creates a function that accepts a list of tags and a list of\n// ranges, and contains logic to exit early for lookups.\n// `check` just has to deal with one tag and one range.\n// This match function iterates over ranges, and for each range,\n// iterates over tags.  That way, earlier ranges matching any tag have\n// precedence over later ranges.\nfunction factory(check, filter) {\n  return match\n\n  function match(tags, ranges) {\n    var left = cast(tags, 'tag')\n    var right = cast(ranges == null ? '*' : ranges, 'range')\n    var matches = []\n    var rightIndex = -1\n    var range\n    var leftIndex\n    var next\n\n    while (++rightIndex < right.length) {\n      range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      leftIndex = -1\n      next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) return left[leftIndex]\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return filter ? matches : undefined\n  }\n}\n\n// Validate tags or ranges, and cast them to arrays.\nfunction cast(values, name) {\n  var value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar bcp47 = require('bcp-47')\nvar match = require('bcp-47-match')\nvar matches = require('./matches.json')\nvar fields = require('./fields.json')\nvar defaults = require('./defaults.json')\nvar many = require('./many.json')\n\nmodule.exports = normalize\n\nvar own = {}.hasOwnProperty\n\nvar collator = new Intl.Collator()\n\nvar emptyExtraFields = {\n  variants: [],\n  extensions: [],\n  privateuse: [],\n  irregular: null,\n  regular: null\n}\n\nfunction normalize(value, options) {\n  var settings = options || {}\n  // 1. normalize and lowercase the tag (`sgn-be-fr` -> `sfb`).\n  var schema = bcp47.parse(String(value || '').toLowerCase(), settings)\n  var tag = bcp47.stringify(schema)\n  var index = -1\n  var key\n\n  if (!tag) {\n    return tag\n  }\n\n  // 2. Do fancy, expensive replaces (`ha-latn-gh` -> `ha-gh`).\n  while (++index < matches.length) {\n    if (match.extendedFilter(tag, matches[index].from).length) {\n      replace(schema, matches[index].from, matches[index].to)\n      tag = bcp47.stringify(schema)\n    }\n  }\n\n  // 3. Do basic field replaces (`en-840` -> `en-us`).\n  index = -1\n\n  while (++index < fields.length) {\n    if (remove(schema, fields[index].from.field, fields[index].from.value)) {\n      add(schema, fields[index].to.field, fields[index].to.value)\n    }\n  }\n\n  // 4. Remove defaults (`nl-nl` -> `nl`).\n  tag = bcp47.stringify(Object.assign({}, schema, emptyExtraFields))\n  index = -1\n\n  while (++index < defaults.length) {\n    if (tag === defaults[index]) {\n      replace(\n        schema,\n        defaults[index],\n        defaults[index].split('-').slice(0, -1).join('-')\n      )\n      tag = bcp47.stringify(Object.assign({}, schema, emptyExtraFields))\n    }\n  }\n\n  // 5. Sort extensions on singleton.\n  schema.extensions.sort(compareSingleton)\n\n  // 6. Warn if fields (currently only regions) should be updated but have\n  // multiple choices.\n  if (settings.warning) {\n    for (key in many) {\n      if (own.call(many[key], schema[key])) {\n        settings.warning(\n          'Deprecated ' +\n            key +\n            ' `' +\n            schema[key] +\n            '`, expected one of `' +\n            many[key][schema[key]].join('`, `') +\n            '`',\n          null,\n          7\n        )\n      }\n    }\n  }\n\n  // 7. Add proper casing back.\n  // Format script (ISO 15924) as titlecase (example: `Latn`):\n  if (schema.script) {\n    schema.script =\n      schema.script.charAt(0).toUpperCase() + schema.script.slice(1)\n  }\n\n  // Format region (ISO 3166) as uppercase (note: this doesn’t affect numeric\n  // codes, which is fine):\n  if (schema.region) {\n    schema.region = schema.region.toUpperCase()\n  }\n\n  return bcp47.stringify(schema)\n}\n\nfunction replace(schema, from, to) {\n  var left = bcp47.parse(from)\n  var right = bcp47.parse(to)\n  var removed = []\n  var key\n\n  // Remove values from `from`:\n  for (key in left) {\n    if (left[key] && left[key].length && remove(schema, key, left[key])) {\n      removed.push(key)\n    }\n  }\n\n  // Add values from `to`:\n  for (key in right) {\n    // Only add values that are defined on `to`, and that were either removed by\n    // `from` or are currently empty.\n    if (\n      right[key] &&\n      right[key].length &&\n      (removed.indexOf(key) > -1 || !schema[key] || !schema[key].length)\n    ) {\n      add(schema, key, right[key])\n    }\n  }\n}\n\nfunction remove(object, key, value) {\n  var removed = false\n  var current\n  var result\n  var index\n  var item\n\n  /* istanbul ignore else - this is currently done by wrapping code, so else is\n   * never reached.\n   * However, that could change in the future, so leave this guard here. */\n  if (value) {\n    current = object[key]\n    result = current\n\n    if (current && typeof current === 'object') {\n      result = []\n      index = -1\n\n      while (++index < current.length) {\n        item = current[index]\n\n        if (value.indexOf(item) < 0) {\n          result.push(item)\n        } else {\n          removed = true\n        }\n      }\n    } else if (current === value) {\n      result = null\n      removed = true\n    }\n\n    object[key] = result\n  }\n\n  return removed\n}\n\nfunction add(object, key, value) {\n  var current = object[key]\n  var list\n  var index\n  var item\n\n  if (current && typeof current === 'object') {\n    list = [].concat(value)\n    index = -1\n\n    while (++index < list.length) {\n      item = list[index]\n\n      /* istanbul ignore else - this currently can’t happen, but guard for the\n       * future. */\n      if (current.indexOf(item) < 0) {\n        current.push(item)\n      }\n    }\n  } else {\n    object[key] = value\n  }\n}\n\nfunction compareSingleton(left, right) {\n  return collator.compare(left.singleton, right.singleton)\n}\n","'use strict'\n\nexports.parse = require('./lib/parse')\nexports.stringify = require('./lib/stringify')\n","'use strict'\n\nvar alphanumeric = require('is-alphanumerical')\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\nvar regular = require('./regular.json')\nvar normal = require('./normalize.json')\n\nmodule.exports = parse\n\nvar own = {}.hasOwnProperty\n\n// Parse a BCP 47 language tag.\n/* eslint-disable-next-line complexity */\nfunction parse(tag, options) {\n  var settings = options || {}\n  var result = empty()\n  var source = String(tag)\n  var value = source.toLowerCase()\n  var index = 0\n  var start\n  var groups\n  var offset\n\n  // Check input.\n  if (tag == null) {\n    throw new Error('Expected string, got `' + tag + '`')\n  }\n\n  // Let’s start.\n  // First: the edge cases.\n  if (own.call(normal, value)) {\n    if ((settings.normalize == null || settings.normalize) && normal[value]) {\n      return parse(normal[value])\n    }\n\n    result[regular.indexOf(value) === -1 ? 'irregular' : 'regular'] = source\n\n    return result\n  }\n\n  // Now, to actually parse, eat what could be a language.\n  while (alphabetical(value.charCodeAt(index)) && index < 9) index++\n\n  // A language.\n  if (index > 1 /* Min 639. */ && index < 9 /* Max subtag. */) {\n    // 5 and up is a subtag.\n    // 4 is the size of reserved languages.\n    // 3 an ISO 639-2 or ISO 639-3.\n    // 2 is an ISO 639-1.\n    // <https://github.com/wooorm/iso-639-2>\n    // <https://github.com/wooorm/iso-639-3>\n    result.language = source.slice(0, index)\n\n    if (index < 4 /* Max 639. */) {\n      groups = 0\n\n      while (\n        value.charCodeAt(index) === 45 /* `-` */ &&\n        alphabetical(value.charCodeAt(index + 1)) &&\n        alphabetical(value.charCodeAt(index + 2)) &&\n        alphabetical(value.charCodeAt(index + 3)) &&\n        !alphabetical(value.charCodeAt(index + 4))\n      ) {\n        if (groups > 2 /* Max extended language subtag count. */) {\n          return fail(\n            index,\n            3,\n            'Too many extended language subtags, expected at most 3 subtags'\n          )\n        }\n\n        // Extended language subtag.\n        result.extendedLanguageSubtags.push(source.slice(index + 1, index + 4))\n        index += 4\n        groups++\n      }\n    }\n\n    // ISO 15924 script.\n    // <https://github.com/wooorm/iso-15924>\n    if (\n      value.charCodeAt(index) === 45 /* `-` */ &&\n      alphabetical(value.charCodeAt(index + 1)) &&\n      alphabetical(value.charCodeAt(index + 2)) &&\n      alphabetical(value.charCodeAt(index + 3)) &&\n      alphabetical(value.charCodeAt(index + 4)) &&\n      !alphabetical(value.charCodeAt(index + 5))\n    ) {\n      result.script = source.slice(index + 1, index + 5)\n      index += 5\n    }\n\n    if (value.charCodeAt(index) === 45 /* `-` */) {\n      // ISO 3166-1 region.\n      // <https://github.com/wooorm/iso-3166>\n      if (\n        alphabetical(value.charCodeAt(index + 1)) &&\n        alphabetical(value.charCodeAt(index + 2)) &&\n        !alphabetical(value.charCodeAt(index + 3))\n      ) {\n        result.region = source.slice(index + 1, index + 3)\n        index += 3\n      }\n      // UN M49 region.\n      // <https://github.com/wooorm/un-m49>\n      else if (\n        decimal(value.charCodeAt(index + 1)) &&\n        decimal(value.charCodeAt(index + 2)) &&\n        decimal(value.charCodeAt(index + 3)) &&\n        !decimal(value.charCodeAt(index + 4))\n      ) {\n        result.region = source.slice(index + 1, index + 4)\n        index += 4\n      }\n    }\n\n    while (value.charCodeAt(index) === 45 /* `-` */) {\n      offset = start = index + 1\n\n      while (alphanumeric(value.charCodeAt(offset))) {\n        if (offset - start > 7 /* Max variant. */) {\n          return fail(\n            offset,\n            1,\n            'Too long variant, expected at most 8 characters'\n          )\n        }\n\n        offset++\n      }\n\n      if (\n        // Long variant.\n        offset - start > 4 /* Min alpha numeric variant. */ ||\n        // Short variant.\n        (offset - start > 3 /* Min variant. */ &&\n          decimal(value.charCodeAt(start)))\n      ) {\n        result.variants.push(source.slice(start, offset))\n        index = offset\n      }\n      // Something else.\n      else {\n        break\n      }\n    }\n\n    // Extensions.\n    while (value.charCodeAt(index) === 45 /* `-` */) {\n      // Exit if this isn’t an extension.\n      if (\n        value.charCodeAt(index + 1) === 120 /* `x` */ ||\n        !alphanumeric(value.charCodeAt(index + 1)) ||\n        value.charCodeAt(index + 2) !== 45 /* `-` */ ||\n        !alphanumeric(value.charCodeAt(index + 3))\n      ) {\n        break\n      }\n\n      offset = index + 2\n      groups = 0\n\n      while (\n        value.charCodeAt(offset) === 45 /* `-` */ &&\n        alphanumeric(value.charCodeAt(offset + 1)) &&\n        alphanumeric(value.charCodeAt(offset + 2))\n      ) {\n        start = offset + 1\n        offset = start + 2\n        groups++\n\n        while (alphanumeric(value.charCodeAt(offset))) {\n          if (offset - start > 7 /* Max extension. */) {\n            return fail(\n              offset,\n              2,\n              'Too long extension, expected at most 8 characters'\n            )\n          }\n\n          offset++\n        }\n      }\n\n      if (!groups) {\n        return fail(\n          offset,\n          4,\n          'Empty extension, extensions must have at least 2 characters of content'\n        )\n      }\n\n      result.extensions.push({\n        singleton: source.charAt(index + 1),\n        extensions: source.slice(index + 3, offset).split('-')\n      })\n\n      index = offset\n    }\n  }\n  // Not a language.\n  else {\n    index = 0\n  }\n\n  // Private use.\n  if (\n    (index === 0 && value.charCodeAt(index) === 120) /* `x` */ ||\n    (value.charCodeAt(index) === 45 /* `-` */ &&\n      value.charCodeAt(index + 1) === 120) /* `x` */\n  ) {\n    offset = index = index ? index + 2 : 1\n\n    while (\n      value.charCodeAt(offset) === 45 /* `-` */ &&\n      alphanumeric(value.charCodeAt(offset + 1))\n    ) {\n      offset = start = index + 1\n\n      while (alphanumeric(value.charCodeAt(offset))) {\n        if (offset - start > 7 /* Max private use. */) {\n          return fail(\n            offset,\n            5,\n            'Too long private-use area, expected at most 8 characters'\n          )\n        }\n\n        offset++\n      }\n\n      result.privateuse.push(source.slice(index + 1, offset))\n      index = offset\n    }\n  }\n\n  if (index !== source.length) {\n    return fail(index, 6, 'Found superfluous content after tag')\n  }\n\n  return result\n\n  function fail(offset, code, reason) {\n    if (settings.warning) settings.warning(reason, code, offset)\n    return settings.forgiving ? result : empty()\n  }\n}\n\n// Create an empty results object.\nfunction empty() {\n  return {\n    language: null,\n    extendedLanguageSubtags: [],\n    script: null,\n    region: null,\n    variants: [],\n    extensions: [],\n    privateuse: [],\n    irregular: null,\n    regular: null\n  }\n}\n","'use strict'\n\nmodule.exports = stringify\n\n// Compile a language schema to a BCP 47 language tag.\nfunction stringify(schema) {\n  var fields = schema || {}\n  var result = []\n  var values\n  var index\n  var value\n\n  if (fields.irregular || fields.regular) {\n    return fields.irregular || fields.regular\n  }\n\n  if (fields.language) {\n    result = result.concat(\n      fields.language,\n      fields.extendedLanguageSubtags || [],\n      fields.script || [],\n      fields.region || [],\n      fields.variants || []\n    )\n\n    values = fields.extensions || []\n    index = -1\n\n    while (++index < values.length) {\n      value = values[index]\n\n      if (value.singleton && value.extensions && value.extensions.length) {\n        result = result.concat(value.singleton, value.extensions)\n      }\n    }\n  }\n\n  if (fields.privateuse && fields.privateuse.length) {\n    result = result.concat('x', fields.privateuse)\n  }\n\n  return result.join('-')\n}\n","/*! codem-isoboxer v0.3.9 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function(type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function() {\n  return new ISOFile();\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createBox = function(type, parent, pos) {\n  var newBox = ISOBox.create(type);\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n  return newBox;\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createFullBox = function(type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function(string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | (c >> 6));\n        u.push(0x80 | (63 & c));\n      } else if (c < 0x10000) {\n        u.push(0xE0 | (c >> 12));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      } else {\n        u.push(0xF0 | (c >> 18));\n        u.push(0x80 | (63 & (c >> 12)));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      }\n    }\n  }\n  return u;\n};\n\n// Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\nISOBoxer.Utils.appendBox = function(parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = (parent._root ? parent._root : parent);\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer     = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile      = ISOBoxer.createFile;\n  exports.createBox       = ISOBoxer.createBox;\n  exports.createFullBox   = ISOBoxer.createFullBox;\n  exports.Utils           = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\n\nvar ISOFile = function(arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n};\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n};\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n};\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function() {\n\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function(type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];\n\nISOBox.prototype._boxProcessors = {};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  }\n  else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function() {\n  this._procField('version', 'uint', 8);\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function(name, length, fn) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function(entry, name, length, fn) {\n  var i;\n  if (this._parsing) {\n    entry[name] = [];\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function(name, length) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\nISOBox.prototype._readField = function(type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n    case 'int':\n      return this._readInt(size);\n    case 'template':\n      return this._readTemplate(size);\n    case 'string':\n      return (size === -1) ? this._readTerminatedString() : this._readString(size);\n    case 'data':\n      return this._readData(size);\n    case 'utf8':\n      return this._readUTF8String();\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(offset);\n    break;\n  case 16:\n    result = this._raw.getInt16(offset);\n    break;\n  case 32:\n    result = this._raw.getInt32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(offset);\n    var s2 = this._raw.getInt32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readUint = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1, s2;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(offset);\n    break;\n  case 16:\n    result = this._raw.getUint16(offset);\n    break;\n  case 24:\n    s1 = this._raw.getUint16(offset);\n    s2 = this._raw.getUint8(offset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    s1 = this._raw.getUint32(offset);\n    s2 = this._raw.getUint32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n};\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readData = function(size) {\n  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));\n  if (length > 0) {\n    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);\n\n    this._cursor.offset += length;\n    return data;\n  }\n  else {\n    return null;\n  }\n};\n\nISOBox.prototype._readUTF8String = function() {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n  }\n \n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._parseBox = function() {\n  this._parsing = true;\n  this._cursor.offset = this._offset;\n\n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  switch(this.size) {\n  case 0:\n    // Size zero indicates last box in the file. Consume remaining buffer.\n    this._raw = new DataView(this._raw.buffer, this._offset);\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else{\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function() {\n  this.boxes = [];\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\nISOBox.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function() {\n  this._parsing = false;\n  this._rawo = null;\n\n  this.size = 0;\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function() {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch(this.size) {\n  case 0:\n    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));\n    break;\n  case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n    break;\n  default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function(size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    switch(size) {\n    case 8:\n      this._rawo.setInt8(offset, value);\n      break;\n    case 16:\n      this._rawo.setInt16(offset, value);\n      break;\n    case 32:\n      this._rawo.setInt32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = Math.floor(value / Math.pow(2,32));\n      var s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeUint = function(size, value) {\n\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1, s2;\n    switch(size) {\n    case 8:\n      this._rawo.setUint8(offset, value);\n      break;\n    case 16:\n      this._rawo.setUint16(offset, value);\n      break;\n    case 24:\n      s1 = (value & 0xFFFF00) >> 8;\n      s2 = (value & 0x0000FF);\n      this._rawo.setUint16(offset, s1);\n      this._rawo.setUint8(offset + 2, s2);\n      break;\n    case 32:\n      this._rawo.setUint32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = Math.floor(value / Math.pow(2,32));\n      s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeString = function(size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function(str) {\n  if (str.length === 0) {\n    return;\n  }\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function(size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n  this._writeUint(size / 2, pre);\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function(data) {\n  var i;\n  //data to copy\n  if (data) {\n    if (this._rawo) {\n      //Array and Uint8Array has also to be managed\n      if (data instanceof Array) {\n        var offset = this._cursor.offset - this._rawo.byteOffset;\n        for (var i = 0; i < data.length; i++) {\n          this._rawo.setInt8(offset + i, data[i]);\n        }\n        this._cursor.offset += data.length;\n      } \n\n      if (data instanceof Uint8Array) {\n        this._root.bytes.set(data, this._cursor.offset);\n        this._cursor.offset += data.length;\n      }\n\n    } else {\n      //nothing to copy only size to compute\n      this.size += data.length;\n    }\n  }\n};\n\nISOBox.prototype._writeUTF8String = function(string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function(type, size, value) {\n  switch (type) {\n  case 'uint':\n    this._writeUint(size, value);\n    break;\n  case 'int':\n    this._writeInt(size, value);\n    break;\n  case 'template':\n    this._writeTemplate(size, value);\n    break;\n  case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n      break;\n  case 'data':\n    this._writeData(value);\n    break;\n  case 'utf8':\n    this._writeUTF8String(value);\n    break;\n  default:\n    break;\n  }\n};\n\n// ISO/IEC 14496-15:2014 - avc1/2/3/4, hev1, hvc1, encv\nISOBox.prototype._boxProcessors['avc1'] =\nISOBox.prototype._boxProcessors['avc2'] =\nISOBox.prototype._boxProcessors['avc3'] =\nISOBox.prototype._boxProcessors['avc4'] =\nISOBox.prototype._boxProcessors['hvc1'] =\nISOBox.prototype._boxProcessors['hev1'] =\nISOBox.prototype._boxProcessors['encv'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // VisualSampleEntry fields\n  this._procField('pre_defined1',         'uint',     16);\n  this._procField('reserved2',            'uint',     16);\n  this._procFieldArray('pre_defined2', 3, 'uint',     32);\n  this._procField('width',                'uint',     16);\n  this._procField('height',               'uint',     16);\n  this._procField('horizresolution',      'template', 32);\n  this._procField('vertresolution',       'template', 32);\n  this._procField('reserved3',            'uint',     32);\n  this._procField('frame_count',          'uint',     16);\n  this._procFieldArray('compressorname', 32,'uint',    8);\n  this._procField('depth',                'uint',     16);\n  this._procField('pre_defined3',         'int',      16);\n  // Codec-specific fields\n  this._procField('config', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.1.3 Composition Time To Sample Box\nISOBox.prototype._boxProcessors['ctts'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_count', 'uint', 32);\n    this._procEntryField(entry, 'sample_offset', (this.version === 1) ? 'int' : 'uint', 32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['dref'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxProcessors['elst'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_rate_integer',   'int',  16);\n    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);\n  });\n};\n\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxProcessors['emsg'] = function() {\n  this._procFullBox();\n  if (this.version == 1) {\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time',        'uint',   64);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n  } else {\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time_delta',  'uint',   32);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n  }\n  this._procField('message_data',             'data',   -1);\n};\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\nISOBox.prototype._boxProcessors['frma'] = function() {\n  this._procField('data_format', 'uint', 32);\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxProcessors['ftyp'] =\nISOBox.prototype._boxProcessors['styp'] = function() {\n  this._procField('major_brand', 'string', 4);\n  this._procField('minor_version', 'uint', 32);\n  var nbCompatibleBrands = -1;\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxProcessors['hdlr'] = function() {\n  this._procFullBox();\n  this._procField('pre_defined',      'uint',   32);\n  this._procField('handler_type',     'string', 4);\n  this._procFieldArray('reserved', 3, 'uint', 32);\n  this._procField('name',             'string', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxProcessors['mdat'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxProcessors['mdhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint', 32);\n  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |\n                    ((this.language.charCodeAt(1) - 0x60) << 5) |\n                    ((this.language.charCodeAt(2) - 0x60));\n  }\n  this._procField('language',           'uint', 16);\n  if (this._parsing) {\n    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,\n                                        ((this.language >> 5) & 0x1F) + 0x60,\n                                        (this.language & 0x1F) + 0x60);\n  }\n  this._procField('pre_defined',        'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\nISOBox.prototype._boxProcessors['mehd'] = function() {\n  this._procFullBox();\n  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxProcessors['mfhd'] = function() {\n  this._procFullBox();\n  this._procField('sequence_number', 'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\nISOBox.prototype._boxProcessors['mfro'] = function() {\n  this._procFullBox();\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n};\n\n\n// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // AudioSampleEntry fields\n  this._procFieldArray('reserved2', 2,    'uint', 32);\n  this._procField('channelcount',         'uint', 16);\n  this._procField('samplesize',           'uint', 16);\n  this._procField('pre_defined',          'uint', 16);\n  this._procField('reserved3',            'uint', 16);\n  this._procField('samplerate',           'template', 32);\n  // ESDescriptor fields\n  this._procField('esds',                 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxProcessors['mvhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('rate',               'template', 32);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved1',          'uint',  16);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procFieldArray('pre_defined', 6,'uint',   32);\n  this._procField('next_track_ID',      'uint',     32);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxProcessors['payl'] = function() {\n  this._procField('cue_text', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.5 Producer Reference Time\nISOBox.prototype._boxProcessors['prft'] = function() {\n  this._procFullBox();\n  this._procField('reference_track_ID', 'uint', 32);\n  this._procField('ntp_timestamp_sec', 'uint', 32);\n  this._procField('ntp_timestamp_frac', 'uint', 32);\n  this._procField('media_time', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\nISOBox.prototype._boxProcessors['pssh'] = function() {\n  this._procFullBox();\n  \n  this._procFieldArray('SystemID', 16, 'uint', 8);\n  this._procField('DataSize', 'uint', 32);\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n};\n// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\nISOBox.prototype._boxProcessors['schm'] = function() {\n    this._procFullBox();\n    \n    this._procField('scheme_type', 'uint', 32);\n    this._procField('scheme_version', 'uint', 32);\n\n    if (this.flags & 0x000001) {\n        this._procField('scheme_uri', 'string', -1);\n    }\n};\n// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \nISOBox.prototype._boxProcessors['sdtp'] = function() {\n  this._procFullBox();\n\n  var sample_count = -1;\n  if (this._parsing) {\n    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxProcessors['sidx'] = function() {\n  this._procFullBox();\n  this._procField('reference_ID', 'uint', 32);\n  this._procField('timescale', 'uint', 32);\n  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('reserved', 'uint', 16);\n  this._procField('reference_count', 'uint', 16);\n  this._procEntries('references', this.reference_count, function(entry) {\n    if (!this._parsing) {\n      entry.reference  = (entry.reference_type  & 0x00000001) << 31;\n      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);\n      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;\n      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);\n    }\n    this._procEntryField(entry, 'reference', 'uint', 32);\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n    this._procEntryField(entry, 'sap', 'uint', 32);\n    if (this._parsing) {\n      entry.reference_type = (entry.reference >> 31) & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;\n      entry.SAP_type = (entry.sap >> 28) & 0x00000007;\n      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);\n    }\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\nISOBox.prototype._boxProcessors['smhd'] = function() {\n  this._procFullBox();\n  this._procField('balance',  'uint', 16);\n  this._procField('reserved', 'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxProcessors['ssix'] = function() {\n  this._procFullBox();\n  this._procField('subsegment_count', 'uint', 32);\n  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\nISOBox.prototype._boxProcessors['stsd'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Settings Box.\nISOBox.prototype._boxProcessors['sttg'] = function() {\n    this._procField('settings', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.1.2 Decoding Time To Sample Box\nISOBox.prototype._boxProcessors['stts'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_count', 'uint', 32);\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n  });\n};\n\n// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n};\n\n//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\nISOBox.prototype._boxProcessors['tenc'] = function() {\n    this._procFullBox();\n\n    this._procField('default_IsEncrypted', 'uint', 24);\n    this._procField('default_IV_size', 'uint', 8);\n    this._procFieldArray('default_KID', 16,    'uint', 8);\n };\n\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxProcessors['tfdt'] = function() {\n  this._procFullBox();\n  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxProcessors['tfhd'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\nISOBox.prototype._boxProcessors['tfra'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;\n    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);\n  }\n  this._procField('reserved', 'uint', 32);\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = (this.reserved & 0x00000003);\n  }\n  this._procField('number_of_entry', 'uint', 32);\n  this._procEntries('entries', this.number_of_entry, function(entry) {\n    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxProcessors['tkhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('track_ID',           'uint',     32);\n  this._procField('reserved1',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procField('layer',              'uint',     16);\n  this._procField('alternate_group',    'uint',     16);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved3',          'uint',     16);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procField('width',              'template', 32);\n  this._procField('height',             'template', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\nISOBox.prototype._boxProcessors['trex'] = function() {\n  this._procFullBox();\n  this._procField('track_ID',                         'uint', 32);\n  this._procField('default_sample_description_index', 'uint', 32);\n  this._procField('default_sample_duration',          'uint', 32);\n  this._procField('default_sample_size',              'uint', 32);\n  this._procField('default_sample_flags',             'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxProcessors['trun'] = function() {\n  this._procFullBox();\n  this._procField('sample_count', 'uint', 32);\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n  this._procEntries('samples', this.sample_count, function(sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {\n  this._procFullBox();\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n  this._procField('location', 'string', -1);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxProcessors['vlab'] = function() {\n  this._procField('source_label', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\nISOBox.prototype._boxProcessors['vmhd'] = function() {\n  this._procFullBox();\n  this._procField('graphicsmode', 'uint', 16);\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxProcessors['vttC'] = function() {\n  this._procField('config', 'utf8');\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxProcessors['vtte'] = function() {\n  // Nothing should happen here.\n};\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","module.exports = {\n  XmlEntities: require('./lib/xml-entities.js'),\n  Html4Entities: require('./lib/html4-entities.js'),\n  Html5Entities: require('./lib/html5-entities.js'),\n  AllHtmlEntities: require('./lib/html5-entities.js')\n};\n","var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n","var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n","var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLenght = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n","'use strict'\n\nmodule.exports = alphabetical\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.37\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.37',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // Heytap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 ' + BROWSER]], [\n            /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 ' + BROWSER], VERSION], [                    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i,                                             // Links\n            /panasonic;(viera)/i                                                // Panasonic Viera\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,                             // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2| pro)?)/i                                                // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Offline constants declaration\r\n * @class\r\n * @ignore\r\n */\r\nclass OfflineConstants {\r\n\r\n    init() {\r\n        this.OFFLINE_SCHEME = 'offline_indexeddb';\r\n        this.OFFLINE_URL_REGEX = /^offline_indexeddb:\\/\\//i;\r\n        this.OFFLINE_STATUS_CREATED = 'created';\r\n        this.OFFLINE_STATUS_STARTED = 'started';\r\n        this.OFFLINE_STATUS_STOPPED = 'stopped';\r\n        this.OFFLINE_STATUS_FINISHED = 'finished';\r\n        this.OFFLINE_STATUS_ERROR = 'error';\r\n    }\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nlet constants = new OfflineConstants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst localforage = require('localforage');\r\nconst entities = require('html-entities').XmlEntities;\r\n\r\nfunction IndexDBStore() {\r\n\r\n    let instance,\r\n        manifestStore,\r\n        fragmentStores;\r\n\r\n    function setup() {\r\n        fragmentStores = {};\r\n\r\n        if (typeof window === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        localforage.config({\r\n            driver: localforage.INDEXEDDB,\r\n            name: 'dash_offline_db'\r\n        });\r\n\r\n        manifestStore = localforage.createInstance({\r\n            driver: localforage.INDEXEDDB,\r\n            name: 'dash_offline_db',\r\n            version: 1.0,\r\n            storeName: 'manifest'\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////\r\n    //\r\n    // GET/SET Methods\r\n    //\r\n    ////////////////////////////////////////\r\n\r\n    /**\r\n     * Creates an instance of localforage to store fragments in indexed db\r\n     * @param {string} storeName\r\n     * @instance\r\n     */\r\n    function createFragmentStore(storeName) {\r\n\r\n        if (!fragmentStores[storeName]) {\r\n            console.log('setStore  ' + storeName);\r\n            let fragmentStore = localforage.createInstance({\r\n                driver: localforage.INDEXEDDB,\r\n                name: 'dash_offline_db',\r\n                version: 1.0,\r\n                storeName: storeName\r\n            });\r\n            fragmentStores[storeName] = fragmentStore;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update download status\r\n     * @param {number} manifestId\r\n     * @param {string} newStatus\r\n     * @returns {Promise} promise\r\n     * @instance\r\n     */\r\n    function setDownloadingStatus(manifestId, newStatus) {\r\n        return getManifestById(manifestId).then(function (item) {\r\n            item.status = newStatus;\r\n            return updateManifest(item).catch(function () {\r\n                return Promise.reject('Cannot set status ' + newStatus + ' for this stream !');\r\n            });\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updat last downloaded fragment index for representationId\r\n     * @param {number} manifestId - manifest id\r\n      * @param {string} representationId - representation\r\n     * @param {number} state - representation state\r\n     * @returns {Promise} promise\r\n     * @instance\r\n     */\r\n    function setRepresentationCurrentState(manifestId, representationId, state) {\r\n        return getManifestById(manifestId).then(function (item) {\r\n            if (!item.state) {\r\n                item.state = {};\r\n            }\r\n\r\n            if (!item.state[representationId]) {\r\n                item.state[representationId] = {\r\n                    index: -1,\r\n                    downloaded: 0\r\n                };\r\n            }\r\n\r\n            item.state[representationId] = state;\r\n            return updateManifest(item).catch(function () {\r\n                return Promise.reject('Cannot set current index for represenation id ' + representationId);\r\n            });\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns current downloaded segment index for representation\r\n     * @param {number} manifestId - manifest id\r\n     * @param {string} representationId - representation\r\n     * @returns {Promise} promise\r\n     * @instance\r\n     */\r\n    function getRepresentationCurrentState(manifestId, representationId) {\r\n        return getManifestById(manifestId).then(function (item) {\r\n            let state = {\r\n                index: -1,\r\n                downloaded: 0\r\n            };\r\n            if (item.state && item.state[representationId]) {\r\n                state = item.state[representationId];\r\n            }\r\n            return Promise.resolve(state);\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns a fragment from its key\r\n     * @param {number} manifestId\r\n     * @param {number} key\r\n     * @returns {Promise} fragment\r\n     * @instance\r\n     */\r\n    function getFragmentByKey(manifestId, key) {\r\n        let fragmentStore = fragmentStores[manifestId];\r\n\r\n        if (!fragmentStore) {\r\n            return Promise.reject(new Error (`No fragment store found for manifest ${manifestId}`));\r\n        }\r\n\r\n        return fragmentStore.getItem(key).then(function (value) {\r\n            return Promise.resolve(value);\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns a manifest from its identifier\r\n     * @param {number} id\r\n     * @returns {Promise} {Object[]} manifests\r\n     * @instance\r\n     */\r\n    function getManifestById(id) {\r\n        return getAllManifests().then(function (array) {\r\n            if (array) {\r\n                let item = null;\r\n                for (let i = 0; i < array.manifests.length; i++) {\r\n                    if (array.manifests[i].manifestId === parseInt(id)) {\r\n                        item = array.manifests[i];\r\n                    }\r\n                }\r\n                if (item !== null) {\r\n                    item.manifest = entities.decode(item.manifest);\r\n                    return Promise.resolve(item);\r\n                } else {\r\n                    return Promise.reject('Cannot found manifest with this manifestId : ' + id);\r\n                }\r\n            } else {\r\n                return Promise.reject('Any manifests stored in DB !');\r\n            }\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns all offline manifests\r\n     * @returns {Promise} {Object[]} manifests\r\n     * @instance\r\n     */\r\n    function getAllManifests() {\r\n        return manifestStore.getItem('manifest').then(function (array) {\r\n            return Promise.resolve(array ? array : {\r\n                'manifests': []\r\n            });\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Return higher manifest id\r\n     * @returns {Promise} number\r\n     * @instance\r\n     */\r\n    function getCurrentHigherManifestId() {\r\n        return getAllManifests().then(function (array) {\r\n            let higherManifestId = 0;\r\n            if (array) {\r\n                for (let i = 0; i < array.manifests.length; i++) {\r\n                    if (array.manifests[i].manifestId > higherManifestId) {\r\n                        higherManifestId = array.manifests[i].manifestId;\r\n                    }\r\n                }\r\n                return Promise.resolve(higherManifestId);\r\n            } else {\r\n                return Promise.resolve(higherManifestId);\r\n            }\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update manifest\r\n     * @param {Object} manifest updated manifest\r\n     * @returns {Promise} promise asynchronously resolved\r\n     * @instance\r\n     */\r\n    function updateManifest(manifest) {\r\n        return getAllManifests().then(function (array) {\r\n            try {\r\n                for (let i = 0; i < array.manifests.length; i++) {\r\n                    if (array.manifests[i].manifestId === manifest.manifestId) {\r\n                        array.manifests[i] = manifest;\r\n                    }\r\n                }\r\n                return manifestStore.setItem('manifest', array);\r\n            } catch (err) {\r\n                throw new Error('Any results found !');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * save selected representation by user\r\n     * @param {Object} manifest updated manifest\r\n     * @param {Object} selected selected representations\r\n     * @returns {Promise} promise asynchronously resolved\r\n     * @instance\r\n     */\r\n    function saveSelectedRepresentations(manifest, selected) {\r\n        return getManifestById(manifest).then(function (item) {\r\n            if (!item.selected) {\r\n                item.selected = {};\r\n            }\r\n\r\n            item.selected = selected;\r\n            return updateManifest(item).catch(function () {\r\n                return Promise.reject('Cannot save selected representations');\r\n            });\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Store a manifest in manifest array\r\n     * @param {Object} manifest\r\n     * @instance\r\n     */\r\n    function storeManifest(manifest) {\r\n        return manifestStore.getItem('manifest').then(function (results) {\r\n            let array = results ? results : {\r\n                'manifests': []\r\n            };\r\n            array.manifests.push(manifest);\r\n            return manifestStore.setItem('manifest', array);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Store a fragment in fragment store\r\n     * @param {number} manifestId\r\n     * @param {number} fragmentId\r\n     * @param {Object} fragmentData\r\n     * @returns {Promise} promise asynchronously resolved\r\n     * @instance\r\n     */\r\n    function storeFragment(manifestId, fragmentId, fragmentData) {\r\n        let fragmentStore = fragmentStores[manifestId];\r\n\r\n        if (!fragmentStore) {\r\n            return Promise.reject(new Error (`No fragment store found for manifest ${manifestId}`));\r\n        }\r\n\r\n        return fragmentStore.setItem(fragmentId, fragmentData, function () {\r\n            return Promise.resolve();\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////\r\n    //\r\n    // DROP Methods\r\n    //\r\n    ////////////////////////////////////////\r\n\r\n    /**\r\n     * Remove all manifest and fragment store\r\n     * @returns {Promise} promise asynchronously resolved\r\n     * @instance\r\n     */\r\n    function dropAll() {\r\n        return localforage.clear().then(function () {\r\n            return Promise.resolve();\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove framgent store given its name\r\n     * @param {string} storeName\r\n     * @instance\r\n     */\r\n    function dropFragmentStore(storeName) {\r\n        localforage.dropInstance({\r\n            driver: localforage.INDEXEDDB,\r\n            name: 'dash_offline_db',\r\n            version: 1.0,\r\n            storeName: storeName\r\n        }).then(function () {\r\n            delete fragmentStores[storeName];\r\n        }).catch(function (err) {\r\n            console.log('dropFragmentStore failed ' + err);\r\n        });\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Remove download given its id (fragmentStore + manifest entry in manifest array)\r\n     * @param {number} manifestId\r\n     * @returns {Promise} promise asynchronously resolved\r\n     * @instance\r\n     */\r\n    function deleteDownloadById(manifestId) {\r\n        return manifestStore.getItem('manifest').then(function (array) {\r\n            if (array) {\r\n                return deleteFragmentStore(manifestId).then(function () {\r\n                    for (let i = 0; i < array.manifests.length; i++) {\r\n                        if (array.manifests[i].manifestId === parseInt(manifestId)) {\r\n                            array.manifests.splice(i, 1);\r\n                        }\r\n                    }\r\n                    return manifestStore.setItem('manifest', array).then(function () {\r\n                        return Promise.resolve('This stream has been successfull removed !');\r\n                    }).catch(function () {\r\n                        return Promise.reject('An error occured when trying to delete this manifest');\r\n                    });\r\n                });\r\n            } else {\r\n                return Promise.resolve('Nothing to delete !');\r\n            }\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove fragment store\r\n     * @param {string} storeName\r\n     * @returns {Promise} promise asynchronously resolved\r\n     * @instance\r\n     */\r\n    function deleteFragmentStore(storeName) {\r\n        localforage.createInstance({\r\n            name: 'dash_offline_db',\r\n            storeName: storeName\r\n        });\r\n        return localforage.dropInstance({\r\n            name: 'dash_offline_db',\r\n            storeName: storeName\r\n        }).then(function () {\r\n            delete fragmentStores[storeName];\r\n            return Promise.resolve();\r\n        }).catch(function (err) {\r\n            console.log(err);\r\n            return Promise.reject(err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    setup();\r\n\r\n    instance = {\r\n        dropAll: dropAll,\r\n        getFragmentByKey: getFragmentByKey,\r\n        getManifestById: getManifestById,\r\n        storeFragment: storeFragment,\r\n        storeManifest: storeManifest,\r\n        updateManifest: updateManifest,\r\n        saveSelectedRepresentations: saveSelectedRepresentations,\r\n        createFragmentStore: createFragmentStore,\r\n        setDownloadingStatus: setDownloadingStatus,\r\n        setRepresentationCurrentState: setRepresentationCurrentState,\r\n        getRepresentationCurrentState: getRepresentationCurrentState,\r\n        getCurrentHigherManifestId: getCurrentHigherManifestId,\r\n        getAllManifests: getAllManifests,\r\n        dropFragmentStore: dropFragmentStore,\r\n        deleteDownloadById: deleteDownloadById\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nIndexDBStore.__dashjs_factory_name = 'IndexDBStore';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(IndexDBStore); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../core/errors/ErrorsBase';\r\n/**\r\n * Offline Errors declaration\r\n * @class\r\n */\r\nclass OfflineErrors extends ErrorsBase {\r\n    constructor () {\r\n\r\n        super();\r\n\r\n        /**\r\n         * Error code returned when an error occurs in offline module\r\n         */\r\n        this.OFFLINE_ERROR = 11000;\r\n\r\n        // Based upon https://developer.mozilla.org/fr/docs/Web/API/DOMException\r\n        this.INDEXEDDB_QUOTA_EXCEED_ERROR = 11001;\r\n        this.INDEXEDDB_INVALID_STATE_ERROR = 11002;\r\n        this.INDEXEDDB_NOT_READABLE_ERROR = 11003;\r\n        this.INDEXEDDB_NOT_FOUND_ERROR = 11004;\r\n        this.INDEXEDDB_NETWORK_ERROR = 11005;\r\n        this.INDEXEDDB_DATA_ERROR = 11006;\r\n        this.INDEXEDDB_TRANSACTION_INACTIVE_ERROR = 11007;\r\n        this.INDEXEDDB_NOT_ALLOWED_ERROR = 11008;\r\n        this.INDEXEDDB_NOT_SUPPORTED_ERROR = 11009;\r\n        this.INDEXEDDB_VERSION_ERROR = 11010;\r\n        this.INDEXEDDB_TIMEOUT_ERROR = 11011;\r\n        this.INDEXEDDB_ABORT_ERROR = 11012;\r\n        this.INDEXEDDB_UNKNOWN_ERROR = 11013;\r\n    }\r\n}\r\n\r\nlet offlineErrors = new OfflineErrors();\r\nexport default offlineErrors;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport IndexDBStore from '../storage/IndexDBStore';\r\nimport OfflineErrors from '../errors/OfflineErrors';\r\n\r\n/**\r\n * @class OfflineStoreController\r\n * @description This class manages database store\r\n * @param {object} config\r\n * @ignore\r\n */\r\nfunction OfflineStoreController(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const errHandler = config.errHandler;\r\n\r\n    let instance,\r\n        indexDBStore;\r\n\r\n    function setup() {\r\n        indexDBStore = IndexDBStore(context).getInstance();\r\n    }\r\n\r\n    function createFragmentStore(manifestId, storeName) {\r\n        try {\r\n            indexDBStore.createFragmentStore(manifestId, storeName);\r\n        } catch (err) {\r\n            manageDOMError(err);\r\n        }\r\n    }\r\n\r\n    function storeFragment(manifestId, fragmentId, fragmentData) {\r\n        return indexDBStore.storeFragment(manifestId, fragmentId, fragmentData).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function createOfflineManifest(manifest) {\r\n        return indexDBStore.storeManifest(manifest).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function updateOfflineManifest(manifest) {\r\n        return indexDBStore.updateManifest(manifest).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function getManifestById(manifestId) {\r\n        return indexDBStore.getManifestById(manifestId).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function saveSelectedRepresentations (manifestId, selected) {\r\n        return indexDBStore.saveSelectedRepresentations(manifestId, selected).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function getCurrentHigherManifestId() {\r\n        return indexDBStore.getCurrentHigherManifestId().catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function getAllManifests() {\r\n        return indexDBStore.getAllManifests().catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function deleteDownloadById(manifestId) {\r\n        return indexDBStore.deleteDownloadById(manifestId).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function setDownloadingStatus(manifestId, status) {\r\n        return indexDBStore.setDownloadingStatus(manifestId, status).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function setRepresentationCurrentState(manifestId, representationId, state) {\r\n        return indexDBStore.setRepresentationCurrentState(manifestId, representationId, state).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function getRepresentationCurrentState(manifestId, representationId) {\r\n        return indexDBStore.getRepresentationCurrentState(manifestId, representationId).catch(function (err) {\r\n            manageDOMError(err);\r\n        });\r\n    }\r\n\r\n    function manageDOMError(err) {\r\n        let error;\r\n        if (err) {\r\n            switch (err.name) {\r\n                case 'QuotaExceededError':\r\n                    error = OfflineErrors.INDEXEDDB_QUOTA_EXCEED_ERROR;\r\n                    break;\r\n                case 'InvalidStateError':\r\n                    error = OfflineErrors.INDEXEDDB_INVALID_STATE_ERROR;\r\n                    break;\r\n                case 'NotFoundError':\r\n                    error = OfflineErrors.INDEXEDDB_NOT_FOUND_ERROR;\r\n                    break;\r\n                case 'VersionError':\r\n                    error = OfflineErrors.INDEXEDDB_VERSION_ERROR;\r\n                    break;\r\n                // TODO : Manage all DOM cases\r\n            }\r\n\r\n            // avoid importing DashJSError object from streaming\r\n            errHandler.error({code: error, message: err.name, data: err});\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        storeFragment: storeFragment,\r\n        createOfflineManifest: createOfflineManifest,\r\n        updateOfflineManifest: updateOfflineManifest,\r\n        getManifestById: getManifestById,\r\n        saveSelectedRepresentations: saveSelectedRepresentations,\r\n        createFragmentStore: createFragmentStore,\r\n        getCurrentHigherManifestId: getCurrentHigherManifestId,\r\n        getAllManifests: getAllManifests,\r\n        deleteDownloadById: deleteDownloadById,\r\n        setDownloadingStatus: setDownloadingStatus,\r\n        setRepresentationCurrentState: setRepresentationCurrentState,\r\n        getRepresentationCurrentState: getRepresentationCurrentState\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nOfflineStoreController.__dashjs_factory_name = 'OfflineStoreController';\r\nexport default dashjs.FactoryMaker.getClassFactory(OfflineStoreController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n        /**\r\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\r\n         * @public\r\n         */\r\n        this.cmsd = null;\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n        /**\r\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\r\n         */\r\n        this._fileLoaderType = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\r\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport {HTTPRequest, HTTPRequestTrace};\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass FragmentRequest {\r\n    constructor(url) {\r\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\r\n        this.startTime = NaN;\r\n        this.mediaStartTime = NaN;\r\n        this.mediaType = null;\r\n        this.mediaInfo = null;\r\n        this.type = null;\r\n        this.duration = NaN;\r\n        this.timescale = NaN;\r\n        this.range = null;\r\n        this.url = url || null;\r\n        this.serviceLocation = null;\r\n        this.requestStartDate = null;\r\n        this.firstByteDate = null;\r\n        this.requestEndDate = null;\r\n        this.quality = NaN;\r\n        this.index = NaN;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = null;\r\n        this.wallStartTime = null;\r\n        this.bytesLoaded = NaN;\r\n        this.bytesTotal = NaN;\r\n        this.delayLoadingTime = NaN;\r\n        this.responseType = 'arraybuffer';\r\n        this.representationId = null;\r\n    }\r\n\r\n    isInitializationRequest() {\r\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\r\n    }\r\n\r\n    setInfo(info) {\r\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\r\n        this.url = info && info.url ? info.url : null;\r\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\r\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\r\n    }\r\n}\r\n\r\nFragmentRequest.ACTION_DOWNLOAD = 'download';\r\nFragmentRequest.ACTION_COMPLETE = 'complete';\r\n\r\nexport default FragmentRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @module FactoryMaker\r\n * @ignore\r\n */\r\nconst FactoryMaker = (function () {\r\n\r\n    let instance;\r\n    let singletonContexts = [];\r\n    const singletonFactories = {};\r\n    const classFactories = {};\r\n\r\n    function extend(name, childInstance, override, context) {\r\n        if (!context[name] && childInstance) {\r\n            context[name] = {\r\n                instance: childInstance,\r\n                override: override\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this method from your extended object.  this.factory is injected into your object.\r\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\r\n     * will return the video model for use in the extended object.\r\n     *\r\n     * @param {Object} context - injected into extended object as this.context\r\n     * @param {string} className - string name found in all dash.js objects\r\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\r\n     * @returns {*} Context aware instance of specified singleton name.\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function getSingletonInstance(context, className) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                return obj.instance;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\r\n     *\r\n     * @param {Object} context\r\n     * @param {string} className\r\n     * @param {Object} instance\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function setSingletonInstance(context, className, instance) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                singletonContexts[i].instance = instance;\r\n                return;\r\n            }\r\n        }\r\n        singletonContexts.push({\r\n            name: className,\r\n            context: context,\r\n            instance: instance\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use this method to remove all singleton instances associated with a particular context.\r\n     *\r\n     * @param {Object} context\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function deleteSingletonInstances(context) {\r\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Factories storage Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function getFactoryByName(name, factoriesArray) {\r\n        return factoriesArray[name];\r\n    }\r\n\r\n    function updateFactory(name, factory, factoriesArray) {\r\n        if (name in factoriesArray) {\r\n            factoriesArray[name] = factory;\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Class Factories Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateClassFactory(name, factory) {\r\n        updateFactory(name, factory, classFactories);\r\n    }\r\n\r\n    function getClassFactoryByName(name) {\r\n        return getFactoryByName(name, classFactories);\r\n    }\r\n\r\n    function getClassFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\r\n\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    create: function () {\r\n                        return merge(classConstructor, context, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n        return factory;\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Singleton Factory MAangement\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateSingletonFactory(name, factory) {\r\n        updateFactory(name, factory, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactoryByName(name) {\r\n        return getFactoryByName(name, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                let instance;\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    getInstance: function () {\r\n                        // If we don't have an instance yet check for one on the context\r\n                        if (!instance) {\r\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\r\n                        }\r\n                        // If there's no instance on the context then create one\r\n                        if (!instance) {\r\n                            instance = merge(classConstructor, context, arguments);\r\n                            singletonContexts.push({\r\n                                name: classConstructor.__dashjs_factory_name,\r\n                                context: context,\r\n                                instance: instance\r\n                            });\r\n                        }\r\n                        return instance;\r\n                    }\r\n                };\r\n            };\r\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n\r\n        return factory;\r\n    }\r\n\r\n    function merge(classConstructor, context, args) {\r\n\r\n        let classInstance;\r\n        const className = classConstructor.__dashjs_factory_name;\r\n        const extensionObject = context[className];\r\n\r\n        if (extensionObject) {\r\n\r\n            let extension = extensionObject.instance;\r\n\r\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\r\n\r\n                classInstance = classConstructor.apply({context}, args);\r\n                extension = extension.apply({\r\n                    context,\r\n                    factory: instance,\r\n                    parent: classInstance\r\n                }, args);\r\n\r\n                for (const prop in extension) {\r\n                    if (classInstance.hasOwnProperty(prop)) {\r\n                        classInstance[prop] = extension[prop];\r\n                    }\r\n                }\r\n\r\n            } else { //replace parent object completely with new object. Same as dijon.\r\n\r\n                return extension.apply({\r\n                    context,\r\n                    factory: instance\r\n                }, args);\r\n\r\n            }\r\n        } else {\r\n            // Create new instance of the class\r\n            classInstance = classConstructor.apply({context}, args);\r\n        }\r\n\r\n        // Add getClassName function to class instance prototype (used by Debug)\r\n        classInstance.getClassName = function () {return className;};\r\n\r\n        return classInstance;\r\n    }\r\n\r\n    instance = {\r\n        extend: extend,\r\n        getSingletonInstance: getSingletonInstance,\r\n        setSingletonInstance: setSingletonInstance,\r\n        deleteSingletonInstances: deleteSingletonInstances,\r\n        getSingletonFactory: getSingletonFactory,\r\n        getSingletonFactoryByName: getSingletonFactoryByName,\r\n        updateSingletonFactory: updateSingletonFactory,\r\n        getClassFactory: getClassFactory,\r\n        getClassFactoryByName: getClassFactoryByName,\r\n        updateClassFactory: updateClassFactory\r\n    };\r\n\r\n    return instance;\r\n\r\n}());\r\n\r\nexport default FactoryMaker;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../core/events/EventsBase';\r\n\r\n/**\r\n * @class\r\n * @implements EventsBase\r\n */\r\nclass MediaPlayerEvents extends EventsBase {\r\n\r\n    /**\r\n     * @description Public facing external events to be used when developing a player that implements dash.js.\r\n     */\r\n    constructor() {\r\n        super();\r\n        /**\r\n         * Triggered when playback will not start yet\r\n         * as the MPD's availabilityStartTime is in the future.\r\n         * Check delay property in payload to determine time before playback will start.\r\n         * @event MediaPlayerEvents#AST_IN_FUTURE\r\n         */\r\n        this.AST_IN_FUTURE = 'astInFuture';\r\n\r\n        /**\r\n         * Triggered when the BaseURLs have been updated.\r\n         * @event MediaPlayerEvents#BASE_URLS_UPDATED\r\n         */\r\n        this.BASE_URLS_UPDATED = 'baseUrlsUpdated';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to stalled.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_EMPTY\r\n         */\r\n        this.BUFFER_EMPTY = 'bufferStalled';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes to loaded.\r\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\r\n         * @event MediaPlayerEvents#BUFFER_LOADED\r\n         */\r\n        this.BUFFER_LOADED = 'bufferLoaded';\r\n\r\n        /**\r\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\r\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\r\n         */\r\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\r\n\r\n        /**\r\n         * Triggered when the buffer level of a media type has been updated\r\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\r\n         */\r\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\r\n\r\n        /**\r\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\r\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\r\n         */\r\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\r\n\r\n        /**\r\n         * Triggered when there is an error from the element or MSE source buffer.\r\n         * @event MediaPlayerEvents#ERROR\r\n         */\r\n        this.ERROR = 'error';\r\n        /**\r\n         * Triggered when a fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\r\n         */\r\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\r\n\r\n        /**\r\n         * Triggered when a partial fragment download has completed.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\r\n         */\r\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\r\n        /**\r\n         * Triggered when a fragment download has started.\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\r\n         */\r\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\r\n\r\n        /**\r\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\r\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\r\n         */\r\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\r\n\r\n        /**\r\n         * Triggered when {@link module:Debug} logger methods are called.\r\n         * @event MediaPlayerEvents#LOG\r\n         */\r\n        this.LOG = 'log';\r\n\r\n        /**\r\n         * Triggered when the manifest load is started\r\n         * @event MediaPlayerEvents#MANIFEST_LOADING_STARTED\r\n         */\r\n        this.MANIFEST_LOADING_STARTED = 'manifestLoadingStarted';\r\n\r\n        /**\r\n         * Triggered when the manifest loading is finished, providing the request object information\r\n         * @event MediaPlayerEvents#MANIFEST_LOADING_FINISHED\r\n         */\r\n        this.MANIFEST_LOADING_FINISHED = 'manifestLoadingFinished';\r\n\r\n        /**\r\n         * Triggered when the manifest load is complete, providing the payload\r\n         * @event MediaPlayerEvents#MANIFEST_LOADED\r\n         */\r\n        this.MANIFEST_LOADED = 'manifestLoaded';\r\n\r\n        /**\r\n         * Triggered anytime there is a change to the overall metrics.\r\n         * @event MediaPlayerEvents#METRICS_CHANGED\r\n         */\r\n        this.METRICS_CHANGED = 'metricsChanged';\r\n\r\n        /**\r\n         * Triggered when an individual metric is added, updated or cleared.\r\n         * @event MediaPlayerEvents#METRIC_CHANGED\r\n         */\r\n        this.METRIC_CHANGED = 'metricChanged';\r\n\r\n        /**\r\n         * Triggered every time a new metric is added.\r\n         * @event MediaPlayerEvents#METRIC_ADDED\r\n         */\r\n        this.METRIC_ADDED = 'metricAdded';\r\n\r\n        /**\r\n         * Triggered every time a metric is updated.\r\n         * @event MediaPlayerEvents#METRIC_UPDATED\r\n         */\r\n        this.METRIC_UPDATED = 'metricUpdated';\r\n\r\n        /**\r\n         * Triggered when a new stream (period) starts.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\r\n         */\r\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\r\n\r\n        /**\r\n         * Triggered at the stream end of a period.\r\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\r\n         */\r\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\r\n\r\n        /**\r\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\r\n         */\r\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\r\n\r\n        /**\r\n         * Triggered when the new ABR quality is being rendered on-screen.\r\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\r\n         */\r\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\r\n\r\n        /**\r\n         * Triggered when the new track is being rendered.\r\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\r\n         */\r\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is being loaded\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\r\n         */\r\n        this.STREAM_INITIALIZING = 'streamInitializing';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is loaded\r\n         * @event MediaPlayerEvents#STREAM_UPDATED\r\n         */\r\n        this.STREAM_UPDATED = 'streamUpdated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is activated\r\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\r\n         */\r\n        this.STREAM_ACTIVATED = 'streamActivated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is deactivated\r\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\r\n         */\r\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\r\n\r\n        /**\r\n         * Triggered when a stream (period) is activated\r\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\r\n         */\r\n        this.STREAM_INITIALIZED = 'streamInitialized';\r\n\r\n        /**\r\n         * Triggered when the player has been reset.\r\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\r\n         */\r\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\r\n\r\n        /**\r\n         * Triggered once all text tracks detected in the MPD are added to the video element.\r\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\r\n         */\r\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\r\n\r\n        /**\r\n         * Triggered when a text track is added to the video element's TextTrackList\r\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\r\n         */\r\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\r\n\r\n        /**\r\n         * Triggered when a throughput measurement based on the last segment request has been stored\r\n         * @event MediaPlayerEvents#THROUGHPUT_MEASUREMENT_STORED\r\n         */\r\n        this.THROUGHPUT_MEASUREMENT_STORED = 'throughputMeasurementStored';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk is parsed.\r\n         * @event MediaPlayerEvents#TTML_PARSED\r\n         */\r\n        this.TTML_PARSED = 'ttmlParsed';\r\n\r\n        /**\r\n         * Triggered when a ttml chunk has to be parsed.\r\n         * @event MediaPlayerEvents#TTML_TO_PARSE\r\n         */\r\n        this.TTML_TO_PARSE = 'ttmlToParse';\r\n\r\n        /**\r\n         * Triggered when a caption is rendered.\r\n         * @event MediaPlayerEvents#CAPTION_RENDERED\r\n         */\r\n        this.CAPTION_RENDERED = 'captionRendered';\r\n\r\n        /**\r\n         * Triggered when the caption container is resized.\r\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\r\n         */\r\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\r\n\r\n        /**\r\n         * Sent when enough data is available that the media can be played,\r\n         * at least for a couple of frames.  This corresponds to the\r\n         * HAVE_ENOUGH_DATA readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY\r\n         */\r\n        this.CAN_PLAY = 'canPlay';\r\n\r\n        /**\r\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\r\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\r\n         */\r\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\r\n\r\n        /**\r\n         * Sent when playback completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\r\n         */\r\n        this.PLAYBACK_ENDED = 'playbackEnded';\r\n\r\n        /**\r\n         * Sent when an error occurs.  The element's error\r\n         * attribute contains more information.\r\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\r\n         */\r\n        this.PLAYBACK_ERROR = 'playbackError';\r\n\r\n        /**\r\n         * Sent when playback is not allowed (for example if user gesture is needed).\r\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\r\n         */\r\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\r\n\r\n        /**\r\n         * The media's metadata has finished loading; all attributes now\r\n         * contain as much useful information as they're going to.\r\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\r\n         */\r\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\r\n\r\n        /**\r\n         * The event is fired when the frame at the current playback position of the media has finished loading;\r\n         * often the first frame\r\n         * @event MediaPlayerEvents#PLAYBACK_LOADED_DATA\r\n         */\r\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\r\n\r\n        /**\r\n         * Sent when playback is paused.\r\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\r\n         */\r\n        this.PLAYBACK_PAUSED = 'playbackPaused';\r\n\r\n        /**\r\n         * Sent when the media begins to play (either for the first time, after having been paused,\r\n         * or after ending and then restarting).\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\r\n         */\r\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\r\n\r\n        /**\r\n         * Sent periodically to inform interested parties of progress downloading\r\n         * the media. Information about the current amount of the media that has\r\n         * been downloaded is available in the media element's buffered attribute.\r\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\r\n         */\r\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\r\n\r\n        /**\r\n         * Sent when the playback speed changes.\r\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\r\n         */\r\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\r\n\r\n        /**\r\n         * Sent when a seek operation completes.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\r\n         */\r\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\r\n\r\n        /**\r\n         * Sent when a seek operation begins.\r\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\r\n         */\r\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\r\n\r\n        /**\r\n         * Sent when the video element reports stalled\r\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\r\n         */\r\n        this.PLAYBACK_STALLED = 'playbackStalled';\r\n\r\n        /**\r\n         * Sent when playback of the media starts after having been paused;\r\n         * that is, when playback is resumed after a prior pause event.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\r\n         */\r\n        this.PLAYBACK_STARTED = 'playbackStarted';\r\n\r\n        /**\r\n         * The time indicated by the element's currentTime attribute has changed.\r\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\r\n         */\r\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\r\n\r\n        /**\r\n         * Sent when the video element reports that the volume has changed\r\n         * @event MediaPlayerEvents#PLAYBACK_VOLUME_CHANGED\r\n         */\r\n        this.PLAYBACK_VOLUME_CHANGED = 'playbackVolumeChanged';\r\n\r\n        /**\r\n         * Sent when the media playback has stopped because of a temporary lack of data.\r\n         *\r\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\r\n         */\r\n        this.PLAYBACK_WAITING = 'playbackWaiting';\r\n\r\n        /**\r\n         * Manifest validity changed - As a result of an MPD validity expiration event.\r\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\r\n         */\r\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\r\n\r\n        /**\r\n         * Dash events are triggered at their respective start points on the timeline.\r\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\r\n         */\r\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\r\n\r\n        /**\r\n         * Dash events are triggered as soon as they were parsed.\r\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\r\n         */\r\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\r\n\r\n        /**\r\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\r\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\r\n         */\r\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\r\n\r\n        /**\r\n         * Event that is dispatched whenever the player switches to a different representation\r\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\r\n         */\r\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\r\n\r\n        /**\r\n         * Event that is dispatched whenever an adaptation set is removed due to all representations not being supported.\r\n         * @event MediaPlayerEvents#ADAPTATION_SET_REMOVED_NO_CAPABILITIES\r\n         */\r\n        this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = 'adaptationSetRemovedNoCapabilities';\r\n\r\n        /**\r\n         * Triggered when a content steering request has completed.\r\n         * @event MediaPlayerEvents#CONTENT_STEERING_REQUEST_COMPLETED\r\n         */\r\n        this.CONTENT_STEERING_REQUEST_COMPLETED = 'contentSteeringRequestCompleted';\r\n\r\n        /**\r\n         * Triggered when an inband prft (ProducerReferenceTime) boxes has been received.\r\n         * @event MediaPlayerEvents#INBAND_PRFT\r\n         */\r\n        this.INBAND_PRFT = 'inbandPrft';\r\n\r\n        /**\r\n         * The streaming attribute of the Managed Media Source is true\r\n         * @type {string}\r\n         */\r\n        this.MANAGED_MEDIA_SOURCE_START_STREAMING = 'managedMediaSourceStartStreaming';\r\n\r\n        /**\r\n         * The streaming attribute of the Managed Media Source is false\r\n         * @type {string}\r\n         */\r\n        this.MANAGED_MEDIA_SOURCE_END_STREAMING = 'managedMediaSourceEndStreaming';\r\n    }\r\n}\r\n\r\nlet mediaPlayerEvents = new MediaPlayerEvents();\r\nexport default mediaPlayerEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Segment {\r\n    constructor() {\r\n        this.indexRange = null;\r\n        // The index of the segment in the list of segments. We start at 0\r\n        this.index = null;\r\n        this.mediaRange = null;\r\n        this.media = null;\r\n        this.duration = NaN;\r\n        // this is the time that should be inserted into the media url\r\n        this.replacementTime = null;\r\n        // this is the number that should be inserted into the media url\r\n        this.replacementNumber = NaN;\r\n        // This is supposed to match the time encoded in the media Segment\r\n        this.mediaStartTime = NaN;\r\n        // When the source buffer timeOffset is set to MSETimeOffset this is the\r\n        // time that will match the seekTarget and video.currentTime\r\n        this.presentationStartTime = NaN;\r\n        // Do not schedule this segment until\r\n        this.availabilityStartTime = NaN;\r\n        // Ignore and  discard this segment after\r\n        this.availabilityEndTime = NaN;\r\n        // For dynamic mpd's, this is the wall clock time that the video\r\n        // element currentTime should be presentationStartTime\r\n        this.wallStartTime = NaN;\r\n        this.representation = null;\r\n    }\r\n}\r\n\r\nexport default Segment;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport Segment from './../vo/Segment';\r\n\r\n\r\nfunction zeroPadToLength(numStr, minStrLength) {\r\n    while (numStr.length < minStrLength) {\r\n        numStr = '0' + numStr;\r\n    }\r\n    return numStr;\r\n}\r\n\r\nfunction getNumberForSegment(segment, segmentIndex) {\r\n    return segment.representation.startNumber + segmentIndex;\r\n}\r\n\r\nexport function unescapeDollarsInTemplate(url) {\r\n    return url ? url.split('$$').join('$') : url;\r\n}\r\n\r\nexport function replaceIDForTemplate(url, value) {\r\n    if (!value || !url || url.indexOf('$RepresentationID$') === -1) {\r\n        return url;\r\n    }\r\n    let v = value.toString();\r\n    return url.split('$RepresentationID$').join(v);\r\n}\r\n\r\nexport function replaceTokenForTemplate(url, token, value) {\r\n    const formatTag = '%0';\r\n\r\n    let startPos,\r\n        endPos,\r\n        formatTagPos,\r\n        specifier,\r\n        width,\r\n        paddedValue;\r\n\r\n    const tokenLen = token.length;\r\n    const formatTagLen = formatTag.length;\r\n\r\n    if (!url) {\r\n        return url;\r\n    }\r\n\r\n    // keep looping round until all instances of <token> have been\r\n    // replaced. once that has happened, startPos below will be -1\r\n    // and the completed url will be returned.\r\n    while (true) {\r\n\r\n        // check if there is a valid $<token>...$ identifier\r\n        // if not, return the url as is.\r\n        startPos = url.indexOf('$' + token);\r\n        if (startPos < 0) {\r\n            return url;\r\n        }\r\n\r\n        // the next '$' must be the end of the identifier\r\n        // if there isn't one, return the url as is.\r\n        endPos = url.indexOf('$', startPos + tokenLen);\r\n        if (endPos < 0) {\r\n            return url;\r\n        }\r\n\r\n        // now see if there is an additional format tag suffixed to\r\n        // the identifier within the enclosing '$' characters\r\n        formatTagPos = url.indexOf(formatTag, startPos + tokenLen);\r\n        if (formatTagPos > startPos && formatTagPos < endPos) {\r\n\r\n            specifier = url.charAt(endPos - 1);\r\n            width = parseInt(url.substring(formatTagPos + formatTagLen, endPos - 1), 10);\r\n\r\n            // support the minimum specifiers required by IEEE 1003.1\r\n            // (d, i , o, u, x, and X) for completeness\r\n            switch (specifier) {\r\n                // treat all int types as uint,\r\n                // hence deliberate fallthrough\r\n                case 'd':\r\n                case 'i':\r\n                case 'u':\r\n                    paddedValue = zeroPadToLength(value.toString(), width);\r\n                    break;\r\n                case 'x':\r\n                    paddedValue = zeroPadToLength(value.toString(16), width);\r\n                    break;\r\n                case 'X':\r\n                    paddedValue = zeroPadToLength(value.toString(16), width).toUpperCase();\r\n                    break;\r\n                case 'o':\r\n                    paddedValue = zeroPadToLength(value.toString(8), width);\r\n                    break;\r\n                default:\r\n                    return url;\r\n            }\r\n        } else {\r\n            paddedValue = value;\r\n        }\r\n\r\n        url = url.substring(0, startPos) + paddedValue + url.substring(endPos + 1);\r\n    }\r\n}\r\n\r\nfunction getSegment(representation, duration, presentationStartTime, mediaStartTime, timelineConverter, presentationEndTime, isDynamic, index) {\r\n    let seg = new Segment();\r\n\r\n    seg.representation = representation;\r\n    seg.duration = duration;\r\n    seg.presentationStartTime = presentationStartTime;\r\n    seg.mediaStartTime = mediaStartTime;\r\n    seg.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationEndTime, representation, isDynamic);\r\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime + duration, representation, isDynamic);\r\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\r\n    seg.replacementNumber = getNumberForSegment(seg, index);\r\n    seg.index = index;\r\n\r\n    return seg;\r\n}\r\n\r\nfunction isSegmentAvailable(timelineConverter, representation, segment, isDynamic) {\r\n    const voPeriod = representation.adaptation.period;\r\n\r\n    // Avoid requesting segments that overlap the period boundary\r\n    if (isFinite(voPeriod.duration) && voPeriod.start + voPeriod.duration <= segment.presentationStartTime) {\r\n        return false;\r\n    }\r\n\r\n    if (isDynamic) {\r\n\r\n        if (representation.availabilityTimeOffset === 'INF') {\r\n            return true;\r\n        }\r\n\r\n        // For dynamic manifests we check if the presentation start time + duration is included in the availability window\r\n        // SAST = Period@start + seg@presentationStartTime + seg@duration\r\n        // ASAST = SAST - ATO\r\n        // SAET = SAST + TSBD + seg@duration\r\n        // refTime serves as an anchor time to compare the availability time of the segments against.\r\n        const refTime = timelineConverter.getClientReferenceTime();\r\n        return segment.availabilityStartTime.getTime() <= refTime && (!isFinite(segment.availabilityEndTime) || segment.availabilityEndTime.getTime() >= refTime);\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function getIndexBasedSegment(timelineConverter, isDynamic, representation, index) {\r\n    let duration,\r\n        presentationStartTime,\r\n        presentationEndTime;\r\n\r\n\r\n    duration = representation.segmentDuration;\r\n\r\n    /*\r\n     * From spec - If neither @duration attribute nor SegmentTimeline element is present, then the Representation\r\n     * shall contain exactly one Media Segment. The MPD start time is 0 and the MPD duration is obtained\r\n     * in the same way as for the last Media Segment in the Representation.\r\n     */\r\n    if (isNaN(duration)) {\r\n        duration = representation.adaptation.period.duration;\r\n    }\r\n\r\n    presentationStartTime = parseFloat((representation.adaptation.period.start + (index * duration)).toFixed(5));\r\n    presentationEndTime = parseFloat((presentationStartTime + duration).toFixed(5));\r\n\r\n    const mediaTime = timelineConverter.calcMediaTimeFromPresentationTime(presentationStartTime, representation);\r\n\r\n    const segment = getSegment(representation, duration, presentationStartTime, mediaTime,\r\n        timelineConverter, presentationEndTime, isDynamic, index);\r\n\r\n    if (!isSegmentAvailable(timelineConverter, representation, segment, isDynamic)) {\r\n        return null;\r\n    }\r\n\r\n    return segment;\r\n}\r\n\r\nexport function getTimeBasedSegment(timelineConverter, isDynamic, representation, time, duration, fTimescale, url, range, index, tManifest) {\r\n    const scaledTime = time / fTimescale;\r\n    const scaledDuration = duration / fTimescale;\r\n\r\n    let presentationStartTime,\r\n        presentationEndTime,\r\n        seg;\r\n\r\n    presentationStartTime = timelineConverter.calcPresentationTimeFromMediaTime(scaledTime, representation);\r\n    presentationEndTime = presentationStartTime + scaledDuration;\r\n\r\n    seg = getSegment(representation, scaledDuration, presentationStartTime,\r\n        scaledTime,\r\n        timelineConverter, presentationEndTime, isDynamic, index);\r\n\r\n    if (!isSegmentAvailable(timelineConverter, representation, seg, isDynamic)) {\r\n        return null;\r\n    }\r\n\r\n    seg.replacementTime = tManifest ? tManifest : time;\r\n\r\n    url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\r\n    url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\r\n    seg.media = url;\r\n    seg.mediaRange = range;\r\n\r\n    return seg;\r\n}\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Dash constants declaration\r\n * @class\r\n * @ignore\r\n */\r\nclass DashConstants {\r\n\r\n    init() {\r\n        this.BASE_URL = 'BaseURL';\r\n        this.SEGMENT_BASE = 'SegmentBase';\r\n        this.SEGMENT_TEMPLATE = 'SegmentTemplate';\r\n        this.SEGMENT_LIST = 'SegmentList';\r\n        this.SEGMENT_URL = 'SegmentURL';\r\n        this.SEGMENT_TIMELINE = 'SegmentTimeline';\r\n        this.SEGMENT_PROFILES = 'segmentProfiles';\r\n        this.ADAPTATION_SET = 'AdaptationSet';\r\n        this.REPRESENTATION = 'Representation';\r\n        this.REPRESENTATION_INDEX = 'RepresentationIndex';\r\n        this.SUB_REPRESENTATION = 'SubRepresentation';\r\n        this.INITIALIZATION = 'Initialization';\r\n        this.INITIALIZATION_MINUS = 'initialization';\r\n        this.MPD = 'MPD';\r\n        this.PERIOD = 'Period';\r\n        this.ASSET_IDENTIFIER = 'AssetIdentifier';\r\n        this.EVENT_STREAM = 'EventStream';\r\n        this.ID = 'id';\r\n        this.PROFILES = 'profiles';\r\n        this.SERVICE_LOCATION = 'serviceLocation';\r\n        this.RANGE = 'range';\r\n        this.INDEX = 'index';\r\n        this.MEDIA = 'media';\r\n        this.BYTE_RANGE = 'byteRange';\r\n        this.INDEX_RANGE = 'indexRange';\r\n        this.MEDIA_RANGE = 'mediaRange';\r\n        this.VALUE = 'value';\r\n        this.CONTENT_TYPE = 'contentType';\r\n        this.MIME_TYPE = 'mimeType';\r\n        this.BITSTREAM_SWITCHING = 'BitstreamSwitching';\r\n        this.BITSTREAM_SWITCHING_MINUS = 'bitstreamSwitching';\r\n        this.CODECS = 'codecs';\r\n        this.DEPENDENCY_ID = 'dependencyId';\r\n        this.MEDIA_STREAM_STRUCTURE_ID = 'mediaStreamStructureId';\r\n        this.METRICS = 'Metrics';\r\n        this.METRICS_MINUS = 'metrics';\r\n        this.REPORTING = 'Reporting';\r\n        this.WIDTH = 'width';\r\n        this.HEIGHT = 'height';\r\n        this.SAR = 'sar';\r\n        this.FRAMERATE = 'frameRate';\r\n        this.AUDIO_SAMPLING_RATE = 'audioSamplingRate';\r\n        this.MAXIMUM_SAP_PERIOD = 'maximumSAPPeriod';\r\n        this.START_WITH_SAP = 'startWithSAP';\r\n        this.MAX_PLAYOUT_RATE = 'maxPlayoutRate';\r\n        this.CODING_DEPENDENCY = 'codingDependency';\r\n        this.SCAN_TYPE = 'scanType';\r\n        this.FRAME_PACKING = 'FramePacking';\r\n        this.AUDIO_CHANNEL_CONFIGURATION = 'AudioChannelConfiguration';\r\n        this.CONTENT_PROTECTION = 'ContentProtection';\r\n        this.ESSENTIAL_PROPERTY = 'EssentialProperty';\r\n        this.SUPPLEMENTAL_PROPERTY = 'SupplementalProperty';\r\n        this.SUPPLEMENTAL_PROPERTY_ASARRAY = 'SupplementalProperty_asArray';\r\n        this.INBAND_EVENT_STREAM = 'InbandEventStream';\r\n        this.PRODUCER_REFERENCE_TIME = 'ProducerReferenceTime';\r\n        this.INBAND = 'inband';\r\n        this.TYPE = 'type';\r\n        this.ACCESSIBILITY = 'Accessibility';\r\n        this.ROLE = 'Role';\r\n        this.RATING = 'Rating';\r\n        this.CONTENT_COMPONENT = 'ContentComponent';\r\n        this.SUBSET = 'Subset';\r\n        this.LANG = 'lang';\r\n        this.VIEWPOINT = 'Viewpoint';\r\n        this.VIEWPOINT_ASARRAY = 'Viewpoint_asArray';\r\n        this.ROLE_ASARRAY = 'Role_asArray';\r\n        this.REPRESENTATION_ASARRAY = 'Representation_asArray';\r\n        this.PRODUCERREFERENCETIME_ASARRAY = 'ProducerReferenceTime_asArray';\r\n        this.ACCESSIBILITY_ASARRAY = 'Accessibility_asArray';\r\n        this.AUDIOCHANNELCONFIGURATION_ASARRAY = 'AudioChannelConfiguration_asArray';\r\n        this.CONTENTPROTECTION_ASARRAY = 'ContentProtection_asArray';\r\n        this.MAIN = 'main';\r\n        this.DYNAMIC = 'dynamic';\r\n        this.STATIC = 'static';\r\n        this.MEDIA_PRESENTATION_DURATION = 'mediaPresentationDuration';\r\n        this.MINIMUM_UPDATE_PERIOD = 'minimumUpdatePeriod';\r\n        this.CODEC_PRIVATE_DATA = 'codecPrivateData';\r\n        this.BANDWITH = 'bandwidth';\r\n        this.SOURCE_URL = 'sourceURL';\r\n        this.TIMESCALE = 'timescale';\r\n        this.DURATION = 'duration';\r\n        this.START_NUMBER = 'startNumber';\r\n        this.PRESENTATION_TIME_OFFSET = 'presentationTimeOffset';\r\n        this.AVAILABILITY_START_TIME = 'availabilityStartTime';\r\n        this.AVAILABILITY_END_TIME = 'availabilityEndTime';\r\n        this.TIMESHIFT_BUFFER_DEPTH = 'timeShiftBufferDepth';\r\n        this.MAX_SEGMENT_DURATION = 'maxSegmentDuration';\r\n        this.PRESENTATION_TIME = 'presentationTime';\r\n        this.MIN_BUFFER_TIME = 'minBufferTime';\r\n        this.MAX_SUBSEGMENT_DURATION = 'maxSubsegmentDuration';\r\n        this.START = 'start';\r\n        this.AVAILABILITY_TIME_OFFSET = 'availabilityTimeOffset';\r\n        this.AVAILABILITY_TIME_COMPLETE = 'availabilityTimeComplete';\r\n        this.CENC_DEFAULT_KID = 'cenc:default_KID';\r\n        this.DVB_PRIORITY = 'dvb:priority';\r\n        this.DVB_WEIGHT = 'dvb:weight';\r\n        this.SUGGESTED_PRESENTATION_DELAY = 'suggestedPresentationDelay';\r\n        this.SERVICE_DESCRIPTION = 'ServiceDescription';\r\n        this.SERVICE_DESCRIPTION_SCOPE = 'Scope';\r\n        this.SERVICE_DESCRIPTION_LATENCY = 'Latency';\r\n        this.SERVICE_DESCRIPTION_PLAYBACK_RATE = 'PlaybackRate';\r\n        this.SERVICE_DESCRIPTION_OPERATING_QUALITY = 'OperatingQuality';\r\n        this.SERVICE_DESCRIPTION_OPERATING_BANDWIDTH = 'OperatingBandwidth';\r\n        this.PATCH_LOCATION = 'PatchLocation';\r\n        this.PATCH_LOCATION_AS_ARRAY = 'PatchLocation_asArray';\r\n        this.LOCATION = 'Location';\r\n        this.LOCATION_AS_ARRAY = 'Location_asArray';\r\n        this.PUBLISH_TIME = 'publishTime';\r\n        this.ORIGINAL_PUBLISH_TIME = 'originalPublishTime';\r\n        this.ORIGINAL_MPD_ID = 'mpdId';\r\n        this.WALL_CLOCK_TIME = 'wallClockTime';\r\n        this.PRESENTATION_TIME = 'presentationTime';\r\n        this.LABEL = 'Label';\r\n        this.GROUP_LABEL = 'GroupLabel';\r\n        this.CONTENT_STEERING = 'ContentSteering';\r\n        this.CONTENT_STEERING_AS_ARRAY = 'ContentSteering_asArray';\r\n        this.DEFAULT_SERVICE_LOCATION = 'defaultServiceLocation';\r\n        this.QUERY_BEFORE_START = 'queryBeforeStart';\r\n        this.CLIENT_REQUIREMENT = 'clientRequirement';\r\n        this.TTL = 'ttl';\r\n        this.CONTENT_STEERING_RESPONSE = {\r\n            VERSION: 'VERSION',\r\n            TTL: 'TTL',\r\n            RELOAD_URI: 'RELOAD-URI',\r\n            PATHWAY_PRIORITY : 'PATHWAY-PRIORITY',\r\n            PATHWAY_CLONES : 'PATHWAY-CLONES',\r\n            BASE_ID: 'BASE-ID',\r\n            ID: 'ID',\r\n            URI_REPLACEMENT: 'URI-REPLACEMENT',\r\n            HOST: 'HOST',\r\n            PARAMS: 'PARAMS'\r\n        };\r\n        this.PRODUCER_REFERENCE_TIME_TYPE = {\r\n            ENCODER: 'encoder',\r\n            CAPTURED: 'captured',\r\n            APPLICATION: 'application'\r\n        }\r\n        this.SEGMENT_ALIGNMENT = 'segmentAlignment';\r\n        this.SUB_SEGMENT_ALIGNMENT = 'subsegmentAlignment';\r\n        this.CLIENT_DATA_REPORTING = 'ClientDataReporting';\r\n        this.CLIENT_DATA_REPORTING_AS_ARRAY = 'ClientDataReporting_asArray';\r\n        this.CMCD_PARAMETERS = 'CMCDParameters';\r\n        this.CMCD_PARAMETERS_AS_ARRAY = 'CMCDParameters_asArray';\r\n        this.SERVICE_LOCATIONS = 'serviceLocations';\r\n        this.ADAPTATION_SETS = 'adaptationSets';\r\n    }\r\n\r\n    constructor () {\r\n        this.init();\r\n    }\r\n}\r\n\r\nlet constants = new DashConstants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\r\nimport FactoryMaker from '../core/FactoryMaker';\r\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents';\r\nimport {\r\n    replaceIDForTemplate,\r\n    replaceTokenForTemplate,\r\n    unescapeDollarsInTemplate\r\n} from './utils/SegmentsUtils';\r\nimport DashConstants from './constants/DashConstants';\r\n\r\n\r\nconst DEFAULT_ADJUST_SEEK_TIME_THRESHOLD = 0.5;\r\nconst SEGMENT_START_TIME_DELTA = 0.001;\r\n\r\nfunction DashHandler(config) {\r\n\r\n    config = config || {};\r\n\r\n    const eventBus = config.eventBus;\r\n    const debug = config.debug;\r\n    const urlUtils = config.urlUtils;\r\n    const type = config.type;\r\n    const streamInfo = config.streamInfo;\r\n    const segmentsController = config.segmentsController;\r\n    const timelineConverter = config.timelineConverter;\r\n    const baseURLController = config.baseURLController;\r\n\r\n    let instance,\r\n        logger,\r\n        lastSegment,\r\n        isDynamicManifest,\r\n        mediaHasFinished;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        resetInitialSettings();\r\n\r\n        eventBus.on(MediaPlayerEvents.DYNAMIC_TO_STATIC, _onDynamicToStatic, instance);\r\n    }\r\n\r\n    function initialize(isDynamic) {\r\n        isDynamicManifest = isDynamic;\r\n        mediaHasFinished = false;\r\n        segmentsController.initialize(isDynamic);\r\n    }\r\n\r\n    function getStreamId() {\r\n        return streamInfo.id;\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    function getStreamInfo() {\r\n        return streamInfo;\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        lastSegment = null;\r\n    }\r\n\r\n    function reset() {\r\n        resetInitialSettings();\r\n        eventBus.off(MediaPlayerEvents.DYNAMIC_TO_STATIC, _onDynamicToStatic, instance);\r\n    }\r\n\r\n    function _setRequestUrl(request, destination, representation) {\r\n        const baseURL = baseURLController.resolve(representation.path);\r\n        let url,\r\n            serviceLocation,\r\n            queryParams = {};\r\n\r\n        if (!baseURL || (destination === baseURL.url) || (!urlUtils.isRelative(destination))) {\r\n            url = destination;\r\n        } else {\r\n            url = baseURL.url;\r\n            serviceLocation = baseURL.serviceLocation;\r\n            queryParams = baseURL.queryParams;\r\n\r\n            if (destination) {\r\n                url = urlUtils.resolve(destination, url);\r\n            }\r\n        }\r\n\r\n        if (urlUtils.isRelative(url)) {\r\n            return false;\r\n        }\r\n\r\n        request.url = url;\r\n        request.serviceLocation = serviceLocation;\r\n        request.queryParams = queryParams;\r\n\r\n        return true;\r\n    }\r\n\r\n    function getInitRequest(mediaInfo, representation) {\r\n        if (!representation) return null;\r\n        return _generateInitRequest(mediaInfo, representation, getType());\r\n    }\r\n\r\n    function _generateInitRequest(mediaInfo, representation, mediaType) {\r\n        const request = new FragmentRequest();\r\n        const period = representation.adaptation.period;\r\n        const presentationStartTime = period.start;\r\n\r\n        request.mediaType = mediaType;\r\n        request.type = HTTPRequest.INIT_SEGMENT_TYPE;\r\n        request.range = representation.range;\r\n        request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, representation, isDynamicManifest);\r\n        request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, representation, isDynamicManifest);\r\n        request.quality = representation.index;\r\n        request.mediaInfo = mediaInfo;\r\n        request.representationId = representation.id;\r\n\r\n        if (_setRequestUrl(request, representation.initialization, representation)) {\r\n            request.url = replaceTokenForTemplate(request.url, 'Bandwidth', representation.bandwidth);\r\n            return request;\r\n        }\r\n    }\r\n\r\n    function _getRequestForSegment(mediaInfo, segment) {\r\n        if (segment === null || segment === undefined) {\r\n            return null;\r\n        }\r\n\r\n        const request = new FragmentRequest();\r\n        const representation = segment.representation;\r\n        const bandwidth = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].bandwidth;\r\n        let url = segment.media;\r\n\r\n        url = replaceTokenForTemplate(url, 'Number', segment.replacementNumber);\r\n        url = replaceTokenForTemplate(url, 'Time', segment.replacementTime);\r\n        url = replaceTokenForTemplate(url, 'Bandwidth', bandwidth);\r\n        url = replaceIDForTemplate(url, representation.id);\r\n        url = unescapeDollarsInTemplate(url);\r\n\r\n        request.mediaType = getType();\r\n        request.type = HTTPRequest.MEDIA_SEGMENT_TYPE;\r\n        request.range = segment.mediaRange;\r\n        request.startTime = segment.presentationStartTime;\r\n        request.mediaStartTime = segment.mediaStartTime;\r\n        request.duration = segment.duration;\r\n        request.timescale = representation.timescale;\r\n        request.availabilityStartTime = segment.availabilityStartTime;\r\n        request.availabilityEndTime = segment.availabilityEndTime;\r\n        request.availabilityTimeComplete = representation.availabilityTimeComplete;\r\n        request.wallStartTime = segment.wallStartTime;\r\n        request.quality = representation.index;\r\n        request.index = segment.index;\r\n        request.mediaInfo = mediaInfo;\r\n        request.adaptationIndex = representation.adaptation.index;\r\n        request.representationId = representation.id;\r\n\r\n        if (_setRequestUrl(request, url, representation)) {\r\n            return request;\r\n        }\r\n    }\r\n\r\n    function isLastSegmentRequested(representation, bufferingTime) {\r\n        if (!representation || !lastSegment) {\r\n            return false;\r\n        }\r\n\r\n        // Either transition from dynamic to static was done or no next static segment found\r\n        if (mediaHasFinished) {\r\n            return true;\r\n        }\r\n\r\n        // Period is endless\r\n        if (!isFinite(representation.adaptation.period.duration)) {\r\n            return false;\r\n        }\r\n\r\n        // we are replacing existing stuff in the buffer for instance after a track switch\r\n        if (lastSegment.presentationStartTime + lastSegment.duration > bufferingTime) {\r\n            return false;\r\n        }\r\n\r\n        // Additional segment references may be added to the last period.\r\n        // Additional periods may be added to the end of the MPD.\r\n        // Segment references SHALL NOT be added to any period other than the last period.\r\n        // An MPD update MAY combine adding segment references to the last period with adding of new periods. An MPD update that adds content MAY be combined with an MPD update that removes content.\r\n        // The index of the last requested segment is higher than the number of available segments.\r\n        // For SegmentTimeline and SegmentTemplate the index does not include the startNumber.\r\n        // For SegmentList the index includes the startnumber which is why the numberOfSegments includes this as well\r\n        if (representation.mediaFinishedInformation && !isNaN(representation.mediaFinishedInformation.numberOfSegments) && !isNaN(lastSegment.index) && lastSegment.index >= (representation.mediaFinishedInformation.numberOfSegments - 1)) {\r\n            // For static manifests and Template addressing we can compare the index against the number of available segments\r\n            if (!isDynamicManifest || representation.segmentInfoType === DashConstants.SEGMENT_TEMPLATE) {\r\n                return true;\r\n            }\r\n            // For SegmentList we need to check if the next period is signaled\r\n            else if (isDynamicManifest && representation.segmentInfoType === DashConstants.SEGMENT_LIST && representation.adaptation.period.nextPeriodId) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        // For dynamic SegmentTimeline manifests we need to check if the next period is already signaled and the segment we fetched before is the last one that is signaled.\r\n        // We can not simply use the index, as numberOfSegments might have decreased after an MPD update\r\n        return !!(isDynamicManifest && representation.adaptation.period.nextPeriodId && representation.segmentInfoType === DashConstants.SEGMENT_TIMELINE && representation.mediaFinishedInformation &&\r\n            !isNaN(representation.mediaFinishedInformation.mediaTimeOfLastSignaledSegment) && lastSegment && !isNaN(lastSegment.mediaStartTime) && !isNaN(lastSegment.duration) && lastSegment.mediaStartTime + lastSegment.duration >= (representation.mediaFinishedInformation.mediaTimeOfLastSignaledSegment - 0.05));\r\n    }\r\n\r\n\r\n    function getSegmentRequestForTime(mediaInfo, representation, time) {\r\n        let request = null;\r\n\r\n        if (!representation || !representation.segmentInfoType) {\r\n            return request;\r\n        }\r\n\r\n        const segment = segmentsController.getSegmentByTime(representation, time);\r\n        if (segment) {\r\n            lastSegment = segment;\r\n            logger.debug('Index for time ' + time + ' is ' + segment.index);\r\n            request = _getRequestForSegment(mediaInfo, segment);\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * This function returns the next segment request without modifying any internal variables. Any class (e.g CMCD Model) that needs information about the upcoming request should use this method.\r\n     * @param {object} mediaInfo\r\n     * @param {object} representation\r\n     * @return {FragmentRequest|null}\r\n     */\r\n    function getNextSegmentRequestIdempotent(mediaInfo, representation) {\r\n        let request = null;\r\n        let indexToRequest = lastSegment ? lastSegment.index + 1 : 0;\r\n        const segment = segmentsController.getSegmentByIndex(\r\n            representation,\r\n            indexToRequest,\r\n            lastSegment ? lastSegment.mediaStartTime : -1\r\n        );\r\n        if (!segment) return null;\r\n        request = _getRequestForSegment(mediaInfo, segment);\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Main function to get the next segment request.\r\n     * @param {object} mediaInfo\r\n     * @param {object} representation\r\n     * @return {FragmentRequest|null}\r\n     */\r\n    function getNextSegmentRequest(mediaInfo, representation) {\r\n        if (!representation || !representation.segmentInfoType) {\r\n            return null;\r\n        }\r\n\r\n        let indexToRequest = lastSegment ? lastSegment.index + 1 : 0;\r\n\r\n        return _getRequest(mediaInfo, representation, indexToRequest);\r\n    }\r\n\r\n    function repeatSegmentRequest(mediaInfo, representation) {\r\n        if (!representation || !representation.segmentInfoType) {\r\n            return null;\r\n        }\r\n\r\n        let indexToRequest = lastSegment ? lastSegment.index : 0;\r\n\r\n        return _getRequest(mediaInfo, representation, indexToRequest);\r\n    }\r\n\r\n    function _getRequest(mediaInfo, representation, indexToRequest) {\r\n        let request = null;\r\n        const segment = segmentsController.getSegmentByIndex(representation, indexToRequest, lastSegment ? lastSegment.mediaStartTime : -1);\r\n\r\n        // No segment found\r\n        if (!segment) {\r\n            // Dynamic manifest there might be something available in the next iteration\r\n            if (isDynamicManifest && !mediaHasFinished) {\r\n                logger.debug(getType() + ' No segment found at index: ' + indexToRequest + '. Wait for next loop');\r\n                return null;\r\n            } else {\r\n                mediaHasFinished = true;\r\n            }\r\n        } else {\r\n            request = _getRequestForSegment(mediaInfo, segment);\r\n            lastSegment = segment;\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * This function returns a time larger than the current time for which we can generate a request.\r\n     * This is useful in scenarios in which the user seeks into a gap in a dynamic Timeline manifest. We will not find a valid request then and need to adjust the seektime.\r\n     * @param {number} time\r\n     * @param {object} mediaInfo\r\n     * @param {object} representation\r\n     * @param {number} targetThreshold\r\n     * @return {number}\r\n     */\r\n    function getValidTimeAheadOfTargetTime(time, mediaInfo, representation, targetThreshold) {\r\n        try {\r\n\r\n            if (isNaN(time) || !mediaInfo || !representation) {\r\n                return NaN;\r\n            }\r\n\r\n            if (time < 0) {\r\n                time = 0;\r\n            }\r\n\r\n            if (isNaN(targetThreshold)) {\r\n                targetThreshold = DEFAULT_ADJUST_SEEK_TIME_THRESHOLD;\r\n            }\r\n\r\n            if (getSegmentRequestForTime(mediaInfo, representation, time)) {\r\n                return time;\r\n            }\r\n\r\n            if (representation.adaptation.period.start + representation.adaptation.period.duration < time) {\r\n                return NaN;\r\n            }\r\n\r\n            // If we have a duration look until the end of the duration, otherwise maximum 30 seconds\r\n            const end = isFinite(representation.adaptation.period.duration) ? representation.adaptation.period.start + representation.adaptation.period.duration : time + 30;\r\n            let currentUpperTime = Math.min(time + targetThreshold, end);\r\n            let adjustedTime = NaN;\r\n            let targetRequest = null;\r\n\r\n            while (currentUpperTime <= end) {\r\n                let upperRequest = null;\r\n\r\n                if (currentUpperTime <= end) {\r\n                    upperRequest = getSegmentRequestForTime(mediaInfo, representation, currentUpperTime);\r\n                }\r\n\r\n                if (upperRequest) {\r\n                    adjustedTime = currentUpperTime;\r\n                    targetRequest = upperRequest;\r\n                    break;\r\n                }\r\n\r\n                currentUpperTime += targetThreshold;\r\n            }\r\n\r\n            if (targetRequest) {\r\n                const requestEndTime = targetRequest.startTime + targetRequest.duration;\r\n\r\n                // Keep the original start time in case it is covered by a segment\r\n                if (time > targetRequest.startTime && requestEndTime - time > targetThreshold) {\r\n                    return time;\r\n                }\r\n\r\n                if (!isNaN(targetRequest.startTime) && time < targetRequest.startTime && adjustedTime > targetRequest.startTime) {\r\n                    // Apply delta to segment start time to get around rounding issues\r\n                    return targetRequest.startTime + SEGMENT_START_TIME_DELTA;\r\n                }\r\n\r\n                return Math.min(requestEndTime - targetThreshold, adjustedTime);\r\n            }\r\n\r\n            return adjustedTime;\r\n\r\n\r\n        } catch (e) {\r\n            return NaN;\r\n        }\r\n    }\r\n\r\n    function getCurrentIndex() {\r\n        return lastSegment ? lastSegment.index : -1;\r\n    }\r\n\r\n    function _onDynamicToStatic() {\r\n        logger.debug('Dynamic stream complete');\r\n        mediaHasFinished = true;\r\n    }\r\n\r\n    instance = {\r\n        getCurrentIndex,\r\n        getInitRequest,\r\n        getNextSegmentRequest,\r\n        getNextSegmentRequestIdempotent,\r\n        getSegmentRequestForTime,\r\n        getStreamId,\r\n        getStreamInfo,\r\n        getType,\r\n        getValidTimeAheadOfTargetTime,\r\n        initialize,\r\n        isLastSegmentRequested,\r\n        repeatSegmentRequest,\r\n        reset,\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDashHandler.__dashjs_factory_name = 'DashHandler';\r\nexport default FactoryMaker.getClassFactory(DashHandler);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Constants declaration\r\n * @class\r\n * @ignore\r\n * @hideconstructor\r\n */\r\nclass Constants {\r\n\r\n    init() {\r\n        /**\r\n         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STREAM = 'stream';\r\n\r\n        /**\r\n         *  @constant {string} VIDEO Video media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VIDEO = 'video';\r\n\r\n        /**\r\n         *  @constant {string} AUDIO Audio media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.AUDIO = 'audio';\r\n\r\n        /**\r\n         *  @constant {string} TEXT Text media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TEXT = 'text';\r\n\r\n        /**\r\n         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MUXED = 'muxed';\r\n\r\n        /**\r\n         *  @constant {string} IMAGE Image media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.IMAGE = 'image';\r\n\r\n        /**\r\n         *  @constant {string} STPP STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STPP = 'stpp';\r\n\r\n        /**\r\n         *  @constant {string} TTML STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TTML = 'ttml';\r\n\r\n        /**\r\n         *  @constant {string} VTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VTT = 'vtt';\r\n\r\n        /**\r\n         *  @constant {string} WVTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.WVTT = 'wvtt';\r\n\r\n        /**\r\n         *  @constant {string} Content Steering\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CONTENT_STEERING = 'contentSteering';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_BOLA = 'abrBola';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_L2A = 'abrL2A';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_LoLP = 'abrLoLP';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA = 'abrFetchThroughputCalculationDownloadedData';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING = 'abrFetchThroughputCalculationMoofParsing';\r\n\r\n        /**\r\n        *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_AAST Throughput calculation based on adjusted availability start time in low latency mode\r\n        *  @memberof Constants#\r\n        *  @static\r\n        */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_AAST = 'abrFetchThroughputCalculationAAST';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_DEFAULT = 'liveCatchupModeDefault';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_LOLP = 'liveCatchupModeLoLP';\r\n\r\n        /**\r\n         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\r\n\r\n        /**\r\n         *  @constant {string} EWMA Exponential moving average\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_EWMA = 'ewma';\r\n\r\n        /**\r\n         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.BAD_ARGUMENT_ERROR = 'Invalid Arguments';\r\n\r\n        /**\r\n         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_FIRST_TRACK = 'firstTrack';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY = 'highestEfficiency';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY = 'highestSelectionPriority';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_QUERY = 'query';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_HEADER = 'header';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_AVAILABLE_KEYS specifies all the availables keys for CDCD metrics.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_AVAILABLE_KEYS = ['br', 'd', 'ot', 'tb', 'bl', 'dl', 'mtp', 'nor', 'nrr', 'su', 'bs', 'rtp', 'cid', 'pr', 'sf', 'sid', 'st', 'v'];\r\n\r\n        /**\r\n         *  @constant {string} CMCD_AVAILABLE_REQUESTS specifies all the availables requests type for CDCD metrics.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_AVAILABLE_REQUESTS = ['segment','mpd','xlink','steering'];\r\n\r\n        this.INITIALIZE = 'initialize';\r\n        this.TEXT_SHOWING = 'showing';\r\n        this.TEXT_HIDDEN = 'hidden';\r\n        this.CC1 = 'CC1';\r\n        this.CC3 = 'CC3';\r\n        this.UTF8 = 'utf-8';\r\n        this.SCHEME_ID_URI = 'schemeIdUri';\r\n        this.START_TIME = 'starttime';\r\n        this.SERVICE_DESCRIPTION_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:scope:2019';\r\n        this.SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:critical:2019';\r\n        this.XML = 'XML';\r\n        this.ARRAY_BUFFER = 'ArrayBuffer';\r\n        this.DVB_REPORTING_URL = 'dvb:reportingUrl';\r\n        this.DVB_PROBABILITY = 'dvb:probability';\r\n        this.VIDEO_ELEMENT_READY_STATES = {\r\n            HAVE_NOTHING: 0,\r\n            HAVE_METADATA: 1,\r\n            HAVE_CURRENT_DATA: 2,\r\n            HAVE_FUTURE_DATA: 3,\r\n            HAVE_ENOUGH_DATA: 4\r\n        };\r\n        this.FILE_LOADER_TYPES = {\r\n            FETCH: 'fetch_loader',\r\n            XHR: 'xhr_loader'\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nconst constants = new Constants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from '../../streaming/constants/Constants';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents';\r\nimport {getTimeBasedSegment} from '../utils/SegmentsUtils';\r\n\r\nfunction RepresentationController(config) {\r\n\r\n    config = config || {};\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const abrController = config.abrController;\r\n    const dashMetrics = config.dashMetrics;\r\n    const playbackController = config.playbackController;\r\n    const timelineConverter = config.timelineConverter;\r\n    const type = config.type;\r\n    const streamInfo = config.streamInfo;\r\n    const dashConstants = config.dashConstants;\r\n    const segmentsController = config.segmentsController;\r\n    const isDynamic = config.isDynamic;\r\n    const adapter = config.adapter;\r\n\r\n    let instance,\r\n        realAdaptation,\r\n        updating,\r\n        voAvailableRepresentations,\r\n        currentRepresentationInfo,\r\n        currentVoRepresentation;\r\n\r\n    function setup() {\r\n        resetInitialSettings();\r\n\r\n        eventBus.on(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\r\n    }\r\n\r\n    function getStreamId() {\r\n        return streamInfo.id;\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!abrController || !dashMetrics || !playbackController || !timelineConverter) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getData() {\r\n        return realAdaptation;\r\n    }\r\n\r\n    function isUpdating() {\r\n        return updating;\r\n    }\r\n\r\n    function getCurrentRepresentation() {\r\n        return currentVoRepresentation;\r\n    }\r\n\r\n    function getCurrentRepresentationInfo() {\r\n        return currentRepresentationInfo\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        realAdaptation = null;\r\n        updating = true;\r\n        voAvailableRepresentations = [];\r\n        currentRepresentationInfo = null;\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\r\n\r\n        resetInitialSettings();\r\n    }\r\n\r\n    function updateData(newRealAdaptation, availableRepresentations, type, isFragmented, quality) {\r\n        return new Promise((resolve, reject) => {\r\n            updating = true;\r\n            voAvailableRepresentations = availableRepresentations;\r\n            realAdaptation = newRealAdaptation;\r\n            const rep = getRepresentationForQuality(quality)\r\n            _setCurrentVoRepresentation(rep);\r\n\r\n            if (type !== Constants.VIDEO && type !== Constants.AUDIO && (type !== Constants.TEXT || !isFragmented)) {\r\n                endDataUpdate();\r\n                resolve();\r\n                return;\r\n            }\r\n\r\n            const promises = [];\r\n            for (let i = 0, ln = voAvailableRepresentations.length; i < ln; i++) {\r\n                const currentRep = voAvailableRepresentations[i];\r\n                promises.push(_updateRepresentation(currentRep));\r\n            }\r\n\r\n            Promise.all(promises)\r\n                .then(() => {\r\n                    // Update the current representation again as we have now the reference to the segments\r\n                    const rep = getRepresentationForQuality(quality)\r\n                    _setCurrentVoRepresentation(rep);\r\n                    resolve();\r\n                })\r\n                .catch((e) => {\r\n                    reject(e);\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    function _updateRepresentation(currentRep) {\r\n        return new Promise((resolve, reject) => {\r\n            const hasInitialization = currentRep.hasInitialization();\r\n            const hasSegments = currentRep.hasSegments();\r\n\r\n            // If representation has initialization and segments information we are done\r\n            // otherwise, it means that a request has to be made to get initialization and/or segments information\r\n            const promises = [];\r\n\r\n            promises.push(segmentsController.updateInitData(currentRep, hasInitialization));\r\n            promises.push(segmentsController.updateSegmentData(currentRep, hasSegments));\r\n\r\n            Promise.all(promises)\r\n                .then((data) => {\r\n                    if (data[0] && !data[0].error) {\r\n                        currentRep = _onInitLoaded(currentRep, data[0]);\r\n                    }\r\n                    if (data[1] && !data[1].error) {\r\n                        currentRep = _onSegmentsLoaded(currentRep, data[1]);\r\n                    }\r\n                    _setMediaFinishedInformation(currentRep);\r\n                    _onRepresentationUpdated(currentRep);\r\n                    resolve();\r\n                })\r\n                .catch((e) => {\r\n                    reject(e);\r\n                });\r\n        });\r\n    }\r\n\r\n    function _setMediaFinishedInformation(representation) {\r\n        representation.mediaFinishedInformation = segmentsController.getMediaFinishedInformation(representation);\r\n    }\r\n\r\n    function _onInitLoaded(representation, e) {\r\n        if (!e || e.error || !e.representation) {\r\n            return representation;\r\n        }\r\n        return e.representation;\r\n    }\r\n\r\n    function _onSegmentsLoaded(representation, e) {\r\n        if (!e || e.error) return;\r\n\r\n        const fragments = e.segments;\r\n        const segments = [];\r\n        let count = 0;\r\n\r\n        let i,\r\n            len,\r\n            s,\r\n            seg;\r\n\r\n        for (i = 0, len = fragments ? fragments.length : 0; i < len; i++) {\r\n            s = fragments[i];\r\n\r\n            seg = getTimeBasedSegment(\r\n                timelineConverter,\r\n                isDynamic,\r\n                representation,\r\n                s.startTime,\r\n                s.duration,\r\n                s.timescale,\r\n                s.media,\r\n                s.mediaRange,\r\n                count);\r\n\r\n            if (seg) {\r\n                segments.push(seg);\r\n                seg = null;\r\n                count++;\r\n            }\r\n        }\r\n\r\n        if (segments.length > 0) {\r\n            representation.segments = segments;\r\n        }\r\n\r\n        return representation;\r\n    }\r\n\r\n    function _addRepresentationSwitch() {\r\n        checkConfig();\r\n        const now = new Date();\r\n        const currentRepresentation = getCurrentRepresentation();\r\n        const currentVideoTimeMs = playbackController.getTime() * 1000;\r\n        if (currentRepresentation) {\r\n            dashMetrics.addRepresentationSwitch(currentRepresentation.adaptation.type, now, currentVideoTimeMs, currentRepresentation.id);\r\n        }\r\n\r\n        eventBus.trigger(MediaPlayerEvents.REPRESENTATION_SWITCH, {\r\n            mediaType: type,\r\n            streamId: streamInfo.id,\r\n            currentRepresentation,\r\n            numberOfRepresentations: voAvailableRepresentations.length\r\n        }, { streamId: streamInfo.id, mediaType: type })\r\n    }\r\n\r\n    function getRepresentationForQuality(quality) {\r\n        return quality === null || quality === undefined || quality >= voAvailableRepresentations.length ? null : voAvailableRepresentations[quality];\r\n    }\r\n\r\n    function getQualityForRepresentation(voRepresentation) {\r\n        return voAvailableRepresentations.indexOf(voRepresentation);\r\n    }\r\n\r\n    function isAllRepresentationsUpdated() {\r\n        for (let i = 0, ln = voAvailableRepresentations.length; i < ln; i++) {\r\n            let segmentInfoType = voAvailableRepresentations[i].segmentInfoType;\r\n            if (!voAvailableRepresentations[i].hasInitialization() ||\r\n                ((segmentInfoType === dashConstants.SEGMENT_BASE || segmentInfoType === dashConstants.BASE_URL) && !voAvailableRepresentations[i].segments)\r\n            ) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function endDataUpdate(error) {\r\n        updating = false;\r\n        eventBus.trigger(events.DATA_UPDATE_COMPLETED,\r\n            {\r\n                data: realAdaptation,\r\n                currentRepresentation: currentVoRepresentation,\r\n                error: error\r\n            },\r\n            { streamId: streamInfo.id, mediaType: type }\r\n        );\r\n    }\r\n\r\n    function _onRepresentationUpdated(r) {\r\n        if (!isUpdating()) return;\r\n\r\n        let manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate();\r\n        let alreadyAdded = false;\r\n        let repInfo,\r\n            repSwitch;\r\n\r\n\r\n        if (manifestUpdateInfo) {\r\n            for (let i = 0; i < manifestUpdateInfo.representationInfo.length; i++) {\r\n                repInfo = manifestUpdateInfo.representationInfo[i];\r\n                if (repInfo.index === r.index && repInfo.mediaType === getType()) {\r\n                    alreadyAdded = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!alreadyAdded) {\r\n                dashMetrics.addManifestUpdateRepresentationInfo(r, getType());\r\n            }\r\n        }\r\n\r\n        if (isAllRepresentationsUpdated()) {\r\n            abrController.setPlaybackQuality(type, streamInfo, getQualityForRepresentation(currentVoRepresentation));\r\n            const dvrInfo = dashMetrics.getCurrentDVRInfo(type);\r\n            if (dvrInfo) {\r\n                dashMetrics.updateManifestUpdateInfo({ latency: dvrInfo.range.end - playbackController.getTime() });\r\n            }\r\n\r\n            repSwitch = dashMetrics.getCurrentRepresentationSwitch(getCurrentRepresentation().adaptation.type);\r\n\r\n            if (!repSwitch) {\r\n                _addRepresentationSwitch();\r\n            }\r\n            endDataUpdate();\r\n        }\r\n    }\r\n\r\n    function prepareQualityChange(newQuality) {\r\n        const newRep = getRepresentationForQuality(newQuality)\r\n        _setCurrentVoRepresentation(newRep);\r\n        _addRepresentationSwitch();\r\n    }\r\n\r\n    function _setCurrentVoRepresentation(value) {\r\n        currentVoRepresentation = value;\r\n        currentRepresentationInfo = adapter.convertRepresentationToRepresentationInfo(currentVoRepresentation);\r\n    }\r\n\r\n    function onManifestValidityChanged(e) {\r\n        if (e.newDuration) {\r\n            const representation = getCurrentRepresentation();\r\n            if (representation && representation.adaptation.period) {\r\n                const period = representation.adaptation.period;\r\n                period.duration = e.newDuration;\r\n            }\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        getStreamId,\r\n        getType,\r\n        getData,\r\n        isUpdating,\r\n        updateData,\r\n        getCurrentRepresentation,\r\n        getCurrentRepresentationInfo,\r\n        getRepresentationForQuality,\r\n        prepareQualityChange,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nRepresentationController.__dashjs_factory_name = 'RepresentationController';\r\nexport default FactoryMaker.getClassFactory(RepresentationController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport FragmentRequest from '../vo/FragmentRequest';\r\n\r\nconst FRAGMENT_MODEL_LOADING = 'loading';\r\nconst FRAGMENT_MODEL_EXECUTED = 'executed';\r\nconst FRAGMENT_MODEL_CANCELED = 'canceled';\r\nconst FRAGMENT_MODEL_FAILED = 'failed';\r\n\r\nfunction FragmentModel(config) {\r\n\r\n    config = config || {};\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const dashMetrics = config.dashMetrics;\r\n    const fragmentLoader = config.fragmentLoader;\r\n    const debug = config.debug;\r\n    const streamInfo = config.streamInfo;\r\n    const type = config.type;\r\n\r\n    let instance,\r\n        logger,\r\n        executedRequests,\r\n        loadingRequests;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        resetInitialSettings();\r\n        eventBus.on(events.LOADING_COMPLETED, onLoadingCompleted, instance);\r\n        eventBus.on(events.LOADING_DATA_PROGRESS, onLoadingInProgress, instance);\r\n        eventBus.on(events.LOADING_ABANDONED, onLoadingAborted, instance);\r\n    }\r\n\r\n    function getStreamId() {\r\n        return streamInfo.id;\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    function isFragmentLoaded(request) {\r\n        const isEqualComplete = function (req1, req2) {\r\n            return ((req1.action === FragmentRequest.ACTION_COMPLETE) && (req1.action === req2.action));\r\n        };\r\n\r\n        const isEqualMedia = function (req1, req2) {\r\n            return !isNaN(req1.index) && (req1.startTime === req2.startTime) && (req1.adaptationIndex === req2.adaptationIndex) && (req1.type === req2.type);\r\n        };\r\n\r\n        const isEqualInit = function (req1, req2) {\r\n            return isNaN(req1.index) && isNaN(req2.index) && (req1.quality === req2.quality);\r\n        };\r\n\r\n        const check = function (requests) {\r\n            let isLoaded = false;\r\n\r\n            requests.some(req => {\r\n                if (isEqualMedia(request, req) || isEqualInit(request, req) || isEqualComplete(request, req)) {\r\n                    isLoaded = true;\r\n                    return isLoaded;\r\n                }\r\n            });\r\n            return isLoaded;\r\n        };\r\n\r\n        if (!request) {\r\n            return false;\r\n        }\r\n\r\n        return check(executedRequests);\r\n    }\r\n\r\n    function isFragmentLoadedOrPending(request) {\r\n        let isLoaded = false;\r\n        let i = 0;\r\n        let req;\r\n\r\n        // First, check if the fragment has already been loaded\r\n        isLoaded = isFragmentLoaded(request);\r\n\r\n        // Then, check if the fragment is about to be loeaded\r\n        if (!isLoaded) {\r\n            for (i = 0; i < loadingRequests.length; i++) {\r\n                req = loadingRequests[i];\r\n                if ((request.url === req.url) && (request.startTime === req.startTime)) {\r\n                    isLoaded = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isLoaded;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Gets an array of {@link FragmentRequest} objects\r\n     *\r\n     * @param {Object} filter The object with properties by which the method filters the requests to be returned.\r\n     *  the only mandatory property is state, which must be a value from\r\n     *  other properties should match the properties of {@link FragmentRequest}. E.g.:\r\n     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns\r\n     *  all the requests from executedRequests array where requests.quality = filter.quality\r\n     *\r\n     * @returns {Array}\r\n     * @memberof FragmentModel#\r\n     */\r\n    function getRequests(filter) {\r\n        const states = filter ? filter.state instanceof Array ? filter.state : [filter.state] : [];\r\n\r\n        let filteredRequests = [];\r\n        states.forEach(state => {\r\n            const requests = getRequestsForState(state);\r\n            filteredRequests = filteredRequests.concat(filterRequests(requests, filter));\r\n        });\r\n\r\n        return filteredRequests;\r\n    }\r\n\r\n    function getRequestThreshold(req) {\r\n        return isNaN(req.duration) ? 0.25 : Math.min(req.duration / 8, 0.5);\r\n    }\r\n\r\n    function removeExecutedRequestsBeforeTime(time) {\r\n        executedRequests = executedRequests.filter(req => {\r\n            const threshold = getRequestThreshold(req);\r\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime >= time - threshold : false);\r\n        });\r\n    }\r\n\r\n    function removeExecutedRequestsAfterTime(time) {\r\n        executedRequests = executedRequests.filter(req => {\r\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime < time : false);\r\n        });\r\n    }\r\n\r\n    function removeExecutedRequestsInTimeRange(start, end) {\r\n        if (end <= start + 0.5) {\r\n            return;\r\n        }\r\n\r\n        executedRequests = executedRequests.filter(req => {\r\n            const threshold = getRequestThreshold(req);\r\n            return (isNaN(req.startTime) || req.startTime >= (end - threshold)) ||\r\n                (isNaN(req.duration) || (req.startTime + req.duration) <= (start + threshold));\r\n        });\r\n    }\r\n\r\n    // Remove requests that are not \"represented\" by any of buffered ranges\r\n    function syncExecutedRequestsWithBufferedRange(bufferedRanges, streamDuration) {\r\n        if (!bufferedRanges || bufferedRanges.length === 0) {\r\n            removeExecutedRequestsBeforeTime();\r\n            return;\r\n        }\r\n\r\n        let start = 0;\r\n        for (let i = 0, ln = bufferedRanges.length; i < ln; i++) {\r\n            removeExecutedRequestsInTimeRange(start, bufferedRanges.start(i));\r\n            start = bufferedRanges.end(i);\r\n        }\r\n        if (streamDuration > 0) {\r\n            removeExecutedRequestsInTimeRange(start, streamDuration);\r\n        }\r\n    }\r\n\r\n    function abortRequests() {\r\n        logger.debug('abort requests');\r\n        fragmentLoader.abort();\r\n        loadingRequests = [];\r\n    }\r\n\r\n    function executeRequest(request) {\r\n        switch (request.action) {\r\n            case FragmentRequest.ACTION_DOWNLOAD:\r\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_LOADING);\r\n                loadingRequests.push(request);\r\n                loadCurrentFragment(request);\r\n                break;\r\n            default:\r\n                logger.warn('Unknown request action.');\r\n        }\r\n    }\r\n\r\n    function loadCurrentFragment(request) {\r\n        eventBus.trigger(events.FRAGMENT_LOADING_STARTED,\r\n            { request: request },\r\n            { streamId: streamInfo.id, mediaType: type }\r\n        );\r\n        fragmentLoader.load(request);\r\n    }\r\n\r\n    function getRequestForTime(arr, time, threshold) {\r\n        // loop through the executed requests and pick the one for which the playback interval matches the given time\r\n        const lastIdx = arr.length - 1;\r\n        for (let i = lastIdx; i >= 0; i--) {\r\n            const req = arr[i];\r\n            const start = req.startTime;\r\n            const end = start + req.duration;\r\n            threshold = !isNaN(threshold) ? threshold : getRequestThreshold(req);\r\n            if ((!isNaN(start) && !isNaN(end) && ((time + threshold) >= start) && ((time - threshold) < end)) || (isNaN(start) && isNaN(time))) {\r\n                return req;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function filterRequests(arr, filter) {\r\n        // for time use a specific filtration function\r\n        if (filter.hasOwnProperty('time')) {\r\n            return [getRequestForTime(arr, filter.time, filter.threshold)];\r\n        }\r\n\r\n        return arr.filter(request => {\r\n            for (const prop in filter) {\r\n                if (prop === 'state') continue;\r\n                if (filter.hasOwnProperty(prop) && request[prop] != filter[prop]) return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    function getRequestsForState(state) {\r\n        let requests;\r\n        switch (state) {\r\n            case FRAGMENT_MODEL_LOADING:\r\n                requests = loadingRequests;\r\n                break;\r\n            case FRAGMENT_MODEL_EXECUTED:\r\n                requests = executedRequests;\r\n                break;\r\n            default:\r\n                requests = [];\r\n        }\r\n        return requests;\r\n    }\r\n\r\n    function addSchedulingInfoMetrics(request, state) {\r\n        dashMetrics.addSchedulingInfo(request, state);\r\n        dashMetrics.addRequestsQueue(request.mediaType, loadingRequests, executedRequests);\r\n    }\r\n\r\n    function onLoadingCompleted(e) {\r\n        if (e.sender !== fragmentLoader) return;\r\n\r\n        loadingRequests.splice(loadingRequests.indexOf(e.request), 1);\r\n\r\n        if (e.response && !e.error) {\r\n            executedRequests.push(e.request);\r\n        }\r\n\r\n        addSchedulingInfoMetrics(e.request, e.error ? FRAGMENT_MODEL_FAILED : FRAGMENT_MODEL_EXECUTED);\r\n\r\n        eventBus.trigger(events.FRAGMENT_LOADING_COMPLETED,\r\n            {\r\n                request: e.request,\r\n                response: e.response,\r\n                error: e.error,\r\n                sender: this\r\n            },\r\n            { streamId: streamInfo.id, mediaType: type }\r\n        );\r\n    }\r\n\r\n    function onLoadingInProgress(e) {\r\n        if (e.sender !== fragmentLoader) return;\r\n\r\n        eventBus.trigger(events.FRAGMENT_LOADING_PROGRESS,\r\n            {\r\n                request: e.request,\r\n                response: e.response,\r\n                error: e.error,\r\n                sender: this\r\n            },\r\n            { streamId: streamInfo.id, mediaType: type }\r\n        );\r\n    }\r\n\r\n    function onLoadingAborted(e) {\r\n        if (e.sender !== fragmentLoader) return;\r\n\r\n        eventBus.trigger(events.FRAGMENT_LOADING_ABANDONED,\r\n            { request: e.request },\r\n            { streamId: streamInfo.id, mediaType: type }\r\n        );\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        executedRequests = [];\r\n        loadingRequests = [];\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(events.LOADING_COMPLETED, onLoadingCompleted, this);\r\n        eventBus.off(events.LOADING_DATA_PROGRESS, onLoadingInProgress, this);\r\n        eventBus.off(events.LOADING_ABANDONED, onLoadingAborted, this);\r\n\r\n        if (fragmentLoader) {\r\n            fragmentLoader.reset();\r\n        }\r\n        resetInitialSettings();\r\n    }\r\n\r\n    function addExecutedRequest(request) {\r\n        executedRequests.push(request);\r\n    }\r\n\r\n    instance = {\r\n        getStreamId,\r\n        getType,\r\n        getRequests,\r\n        isFragmentLoaded,\r\n        isFragmentLoadedOrPending,\r\n        removeExecutedRequestsBeforeTime,\r\n        removeExecutedRequestsAfterTime,\r\n        syncExecutedRequestsWithBufferedRange,\r\n        abortRequests,\r\n        executeRequest,\r\n        reset,\r\n        resetInitialSettings,\r\n        addExecutedRequest\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nFragmentModel.__dashjs_factory_name = 'FragmentModel';\r\nconst factory = FactoryMaker.getClassFactory(FragmentModel);\r\nfactory.FRAGMENT_MODEL_LOADING = FRAGMENT_MODEL_LOADING;\r\nfactory.FRAGMENT_MODEL_EXECUTED = FRAGMENT_MODEL_EXECUTED;\r\nfactory.FRAGMENT_MODEL_CANCELED = FRAGMENT_MODEL_CANCELED;\r\nfactory.FRAGMENT_MODEL_FAILED = FRAGMENT_MODEL_FAILED;\r\nFactoryMaker.updateClassFactory(FragmentModel.__dashjs_factory_name, factory);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nexport function modifyRequest(httpRequest, requestModifier) {\r\n    const request = {\r\n        url: httpRequest.url,\r\n        method: httpRequest.method,\r\n        headers: Object.assign({}, httpRequest.headers),\r\n        credentials: httpRequest.withCredentials ? 'include' : undefined,\r\n    };\r\n\r\n    return Promise.resolve(requestModifier.modifyRequest(request))\r\n        .then(() =>\r\n            Object.assign(httpRequest, request, { withCredentials: request.credentials === 'include' })\r\n        );\r\n}\r\n\r\nfunction RequestModifier() {\r\n\r\n    let instance;\r\n\r\n    function modifyRequestURL(url) {\r\n        return url;\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    function modifyRequestHeader(request, { url }) {\r\n        return request;\r\n    }\r\n\r\n    instance = {\r\n        modifyRequest: null,\r\n        modifyRequestURL: modifyRequestURL,\r\n        modifyRequestHeader: modifyRequestHeader\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nRequestModifier.__dashjs_factory_name = 'RequestModifier';\r\nexport default FactoryMaker.getSingletonFactory(RequestModifier);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport { modifyRequest } from '../utils/RequestModifier';\r\n\r\n/**\r\n * @module XHRLoader\r\n * @ignore\r\n * @description Manages download of resources via HTTP.\r\n * @param {Object} cfg - dependencies from parent\r\n */\r\nfunction XHRLoader(cfg) {\r\n\r\n    cfg = cfg || {};\r\n    const requestModifier = cfg.requestModifier;\r\n\r\n    let instance;\r\n\r\n    function load(httpRequest) {\r\n        if (requestModifier && requestModifier.modifyRequest) {\r\n            modifyRequest(httpRequest, requestModifier)\r\n                .then(() => request(httpRequest));\r\n        }\r\n        else {\r\n            request(httpRequest);\r\n        }\r\n    }\r\n\r\n    function request(httpRequest) {\r\n        // Variables will be used in the callback functions\r\n        const requestStartTime = new Date();\r\n        const request = httpRequest.request;\r\n\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open(httpRequest.method, httpRequest.url, true);\r\n\r\n        if (request.responseType) {\r\n            xhr.responseType = request.responseType;\r\n        }\r\n\r\n        if (request.range) {\r\n            xhr.setRequestHeader('Range', 'bytes=' + request.range);\r\n        }\r\n\r\n        if (!request.requestStartDate) {\r\n            request.requestStartDate = requestStartTime;\r\n        }\r\n\r\n        if (requestModifier && requestModifier.modifyRequestHeader) {\r\n            xhr = requestModifier.modifyRequestHeader(xhr, {\r\n                url: httpRequest.url\r\n            });\r\n        }\r\n\r\n        if (httpRequest.headers) {\r\n            for (let header in httpRequest.headers) {\r\n                let value = httpRequest.headers[header];\r\n                if (value) {\r\n                    xhr.setRequestHeader(header, value);\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.withCredentials = httpRequest.withCredentials;\r\n\r\n        xhr.onload = httpRequest.onload;\r\n        xhr.onloadend = httpRequest.onend;\r\n        xhr.onerror = httpRequest.onerror;\r\n        xhr.onprogress = httpRequest.progress;\r\n        xhr.onabort = httpRequest.onabort;\r\n        xhr.ontimeout = httpRequest.ontimeout;\r\n        xhr.timeout = httpRequest.timeout;\r\n\r\n        xhr.send();\r\n\r\n        httpRequest.response = xhr;\r\n    }\r\n\r\n    function abort(request) {\r\n        const x = request.response;\r\n        x.onloadend = x.onerror = x.onprogress = undefined; //Ignore events from aborted requests.\r\n        x.abort();\r\n    }\r\n\r\n    instance = {\r\n        load: load,\r\n        abort: abort\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nXHRLoader.__dashjs_factory_name = 'XHRLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(XHRLoader);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nimport path from 'path-browserify'\r\nimport { UAParser } from 'ua-parser-js'\r\n\r\nclass Utils {\r\n    static mixin(dest, source, copy) {\r\n        let s;\r\n        let empty = {};\r\n        if (dest) {\r\n            for (let name in source) {\r\n                if (source.hasOwnProperty(name)) {\r\n                    s = source[name];\r\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\r\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\r\n                            dest[name] = Utils.mixin(dest[name], s, copy);\r\n                        } else {\r\n                            dest[name] = copy(s);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dest;\r\n    }\r\n\r\n    static clone(src) {\r\n        if (!src || typeof src !== 'object') {\r\n            return src; // anything\r\n        }\r\n        let r;\r\n        if (src instanceof Array) {\r\n            // array\r\n            r = [];\r\n            for (let i = 0, l = src.length; i < l; ++i) {\r\n                if (i in src) {\r\n                    r.push(Utils.clone(src[i]));\r\n                }\r\n            }\r\n        } else {\r\n            r = {};\r\n        }\r\n        return Utils.mixin(r, src, Utils.clone);\r\n    }\r\n\r\n    static addAditionalQueryParameterToUrl(url, params) {\r\n        try {\r\n            if (!params || params.length === 0) {\r\n                return url;\r\n            }\r\n\r\n            let modifiedUrl = new URL(url);\r\n\r\n            params.forEach((param) => {\r\n                if (param.key && param.value) {\r\n                    modifiedUrl.searchParams.set(param.key, param.value);\r\n                }\r\n            });\r\n\r\n            return modifiedUrl.href;\r\n\r\n\r\n        } catch (e) {\r\n            return url;\r\n        }\r\n    }\r\n\r\n    static parseHttpHeaders(headerStr) {\r\n        let headers = {};\r\n        if (!headerStr) {\r\n            return headers;\r\n        }\r\n\r\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\r\n        // which send a string starting with a \"\\n\" character\r\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\r\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\r\n            let headerPair = headerPairs[i];\r\n            let index = headerPair.indexOf('\\u003a\\u0020');\r\n            if (index > 0) {\r\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    static generateUuid() {\r\n        let dt = new Date().getTime();\r\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            const r = (dt + Math.random() * 16) % 16 | 0;\r\n            dt = Math.floor(dt / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n\r\n    static generateHashCode(string) {\r\n        let hash = 0;\r\n\r\n        if (string.length === 0) {\r\n            return hash;\r\n        }\r\n\r\n        for (let i = 0; i < string.length; i++) {\r\n            const chr = string.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * Compares both urls and returns a relative url (target relative to original)\r\n     * @param {string} originalUrl\r\n     * @param {string} targetUrl\r\n     * @return {string|*}\r\n     */\r\n    static getRelativeUrl(originalUrl, targetUrl) {\r\n        try {\r\n            const original = new URL(originalUrl);\r\n            const target = new URL(targetUrl);\r\n\r\n            // Unify the protocol to compare the origins\r\n            original.protocol = target.protocol;\r\n            if (original.origin !== target.origin) {\r\n                return targetUrl;\r\n            }\r\n\r\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\r\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\r\n\r\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\r\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\r\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\r\n\r\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\r\n            if (target.pathname.length < relativePath.length) {\r\n                return target.pathname;\r\n            }\r\n            return relativePath;\r\n        } catch (e) {\r\n            return targetUrl\r\n        }\r\n    }\r\n\r\n    static parseUserAgent(ua = null) {\r\n        try {\r\n            const uaString = ua === null ? typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '' : '';\r\n\r\n            return UAParser(uaString);\r\n        }\r\n        catch(e) {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks for existence of \"http\" or \"https\" in a string\r\n     * @param string\r\n     * @returns {boolean}\r\n     */\r\n    static stringHasProtocol(string) {\r\n        return (/(http(s?)):\\/\\//i.test(string))\r\n    }\r\n}\r\n\r\nexport default Utils;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from './FactoryMaker';\r\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents';\r\n\r\nconst EVENT_PRIORITY_LOW = 0;\r\nconst EVENT_PRIORITY_HIGH = 5000;\r\n\r\nfunction EventBus() {\r\n\r\n    let handlers = {};\r\n\r\n    function on(type, listener, scope, options = {}) {\r\n\r\n        if (!type) {\r\n            throw new Error('event type cannot be null or undefined');\r\n        }\r\n        if (!listener || typeof (listener) !== 'function') {\r\n            throw new Error('listener must be a function: ' + listener);\r\n        }\r\n\r\n        let priority = options.priority || EVENT_PRIORITY_LOW;\r\n\r\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\r\n\r\n        handlers[type] = handlers[type] || [];\r\n\r\n        const handler = {\r\n            callback: listener,\r\n            scope,\r\n            priority\r\n        };\r\n\r\n        if (scope && scope.getStreamId) {\r\n            handler.streamId = scope.getStreamId();\r\n        }\r\n        if (scope && scope.getType) {\r\n            handler.mediaType = scope.getType();\r\n        }\r\n        if (options && options.mode) {\r\n            handler.mode = options.mode;\r\n        }\r\n\r\n        const inserted = handlers[type].some((item, idx) => {\r\n            if (item && priority > item.priority) {\r\n                handlers[type].splice(idx, 0, handler);\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (!inserted) {\r\n            handlers[type].push(handler);\r\n        }\r\n    }\r\n\r\n    function off(type, listener, scope) {\r\n        if (!type || !listener || !handlers[type]) return;\r\n        const idx = getHandlerIdx(type, listener, scope);\r\n        if (idx < 0) return;\r\n        handlers[type][idx] = null;\r\n    }\r\n\r\n    function trigger(type, payload = {}, filters = {}) {\r\n        if (!type || !handlers[type]) return;\r\n\r\n        payload = payload || {};\r\n\r\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\r\n\r\n        payload.type = type;\r\n\r\n        if (filters.streamId) {\r\n            payload.streamId = filters.streamId;\r\n        }\r\n        if (filters.mediaType) {\r\n            payload.mediaType = filters.mediaType;\r\n        }\r\n\r\n        handlers[type]\r\n            .filter((handler) => {\r\n                if (!handler) {\r\n                    return false;\r\n                }\r\n                if (filters.streamId && handler.streamId && handler.streamId !== filters.streamId) {\r\n                    return false;\r\n                }\r\n                if (filters.mediaType && handler.mediaType && handler.mediaType !== filters.mediaType) {\r\n                    return false;\r\n                }\r\n                // This is used for dispatching DASH events. By default we use the onStart mode. Consequently we filter everything that has a non matching mode and the onReceive events for handlers that did not specify a mode.\r\n                if ((filters.mode && handler.mode && handler.mode !== filters.mode) || (!handler.mode && filters.mode && filters.mode === MediaPlayerEvents.EVENT_MODE_ON_RECEIVE)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            })\r\n            .forEach(handler => handler && handler.callback.call(handler.scope, payload));\r\n    }\r\n\r\n    function getHandlerIdx(type, listener, scope) {\r\n\r\n        let idx = -1;\r\n\r\n        if (!handlers[type]) return idx;\r\n\r\n        handlers[type].some((item, index) => {\r\n            if (item && item.callback === listener && (!scope || scope === item.scope)) {\r\n                idx = index;\r\n                return true;\r\n            }\r\n        });\r\n        return idx;\r\n    }\r\n\r\n    function reset() {\r\n        handlers = {};\r\n    }\r\n\r\n    const instance = {\r\n        on: on,\r\n        off: off,\r\n        trigger: trigger,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nEventBus.__dashjs_factory_name = 'EventBus';\r\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\r\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\r\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\r\nFactoryMaker.updateSingletonFactory(EventBus.__dashjs_factory_name, factory);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nimport CoreEvents from './CoreEvents';\r\nclass Events extends CoreEvents {\r\n}\r\nlet events = new Events();\r\nexport default events;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from './EventsBase';\r\n\r\n/**\r\n * These are internal events that should not be needed at the player level.\r\n * If you find and event in here that you would like access to from MediaPlayer level\r\n * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new\r\n * @class\r\n * @ignore\r\n */\r\nclass CoreEvents extends EventsBase {\r\n    constructor () {\r\n        super();\r\n        this.ATTEMPT_BACKGROUND_SYNC = 'attemptBackgroundSync';\r\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\r\n        this.BUFFER_CLEARED = 'bufferCleared';\r\n        this.BYTES_APPENDED_END_FRAGMENT = 'bytesAppendedEndFragment';\r\n        this.BUFFER_REPLACEMENT_STARTED = 'bufferReplacementStarted';\r\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\r\n        this.CMSD_STATIC_HEADER = 'cmsdStaticHeader';\r\n        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged';\r\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\r\n        this.INBAND_EVENTS = 'inbandEvents';\r\n        this.INITIAL_STREAM_SWITCH = 'initialStreamSwitch';\r\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\r\n        this.INIT_FRAGMENT_NEEDED = 'initFragmentNeeded';\r\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\r\n        this.ORIGINAL_MANIFEST_LOADED = 'originalManifestLoaded';\r\n        this.LOADING_COMPLETED = 'loadingCompleted';\r\n        this.LOADING_PROGRESS = 'loadingProgress';\r\n        this.LOADING_DATA_PROGRESS = 'loadingDataProgress';\r\n        this.LOADING_ABANDONED = 'loadingAborted';\r\n        this.MANIFEST_UPDATED = 'manifestUpdated';\r\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\r\n        this.MEDIA_FRAGMENT_NEEDED = 'mediaFragmentNeeded';\r\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\r\n        this.SEGMENT_LOCATION_BLACKLIST_ADD = 'segmentLocationBlacklistAdd';\r\n        this.SEGMENT_LOCATION_BLACKLIST_CHANGED = 'segmentLocationBlacklistChanged';\r\n        this.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD = 'serviceLocationBlacklistAdd';\r\n        this.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\r\n        this.SERVICE_LOCATION_LOCATION_BLACKLIST_ADD = 'serviceLocationLocationBlacklistAdd';\r\n        this.SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED = 'serviceLocationLocationBlacklistChanged';\r\n        this.SET_FRAGMENTED_TEXT_AFTER_DISABLED = 'setFragmentedTextAfterDisabled';\r\n        this.SET_NON_FRAGMENTED_TEXT = 'setNonFragmentedText';\r\n        this.SOURCE_BUFFER_ERROR = 'sourceBufferError';\r\n        this.STREAMS_COMPOSED = 'streamsComposed';\r\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\r\n        this.STREAM_REQUESTING_COMPLETED = 'streamRequestingCompleted';\r\n        this.TEXT_TRACKS_QUEUE_INITIALIZED = 'textTracksQueueInitialized';\r\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\r\n        this.UPDATE_TIME_SYNC_OFFSET = 'updateTimeSyncOffset';\r\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\r\n        this.VIDEO_CHUNK_RECEIVED = 'videoChunkReceived';\r\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\r\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\r\n        this.XLINK_READY = 'xlinkReady';\r\n        this.SEEK_TARGET = 'seekTarget';\r\n        this.SETTING_UPDATED_LIVE_DELAY = 'settingUpdatedLiveDelay';\r\n        this.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT = 'settingUpdatedLiveDelayFragmentCount';\r\n        this.SETTING_UPDATED_CATCHUP_ENABLED = 'settingUpdatedCatchupEnabled';\r\n        this.SETTING_UPDATED_PLAYBACK_RATE_MIN = 'settingUpdatedPlaybackRateMin';\r\n        this.SETTING_UPDATED_PLAYBACK_RATE_MAX = 'settingUpdatedPlaybackRateMax';\r\n    }\r\n}\r\n\r\nexport default CoreEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from './EventBus';\r\nimport Events from './events/Events';\r\nimport FactoryMaker from './FactoryMaker';\r\n\r\nconst LOG_LEVEL_NONE = 0;\r\nconst LOG_LEVEL_FATAL = 1;\r\nconst LOG_LEVEL_ERROR = 2;\r\nconst LOG_LEVEL_WARNING = 3;\r\nconst LOG_LEVEL_INFO = 4;\r\nconst LOG_LEVEL_DEBUG = 5;\r\n\r\n/**\r\n * @module Debug\r\n * @param {object} config\r\n * @ignore\r\n */\r\nfunction Debug(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const settings = config.settings;\r\n\r\n    const logFn = [];\r\n\r\n    let instance,\r\n        showLogTimestamp,\r\n        showCalleeName,\r\n        startTime;\r\n\r\n    function setup() {\r\n        showLogTimestamp = true;\r\n        showCalleeName = true;\r\n        startTime = new Date().getTime();\r\n\r\n        if (typeof window !== 'undefined' && window.console) {\r\n            logFn[LOG_LEVEL_FATAL] = getLogFn(window.console.error);\r\n            logFn[LOG_LEVEL_ERROR] = getLogFn(window.console.error);\r\n            logFn[LOG_LEVEL_WARNING] = getLogFn(window.console.warn);\r\n            logFn[LOG_LEVEL_INFO] = getLogFn(window.console.info);\r\n            logFn[LOG_LEVEL_DEBUG] = getLogFn(window.console.debug);\r\n        }\r\n    }\r\n\r\n    function getLogFn(fn) {\r\n        if (fn && fn.bind) {\r\n            return fn.bind(window.console);\r\n        }\r\n        // if not define, return the default function for reporting logs\r\n        return window.console.log.bind(window.console);\r\n    }\r\n\r\n    /**\r\n     * Retrieves a logger which can be used to write logging information in browser console.\r\n     * @param {object} instance Object for which the logger is created. It is used\r\n     * to include calle object information in log messages.\r\n     * @memberof module:Debug\r\n     * @returns {Logger}\r\n     * @instance\r\n     */\r\n    function getLogger(instance) {\r\n        return {\r\n            fatal: fatal.bind(instance),\r\n            error: error.bind(instance),\r\n            warn: warn.bind(instance),\r\n            info: info.bind(instance),\r\n            debug: debug.bind(instance)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Prepends a timestamp in milliseconds to each log message.\r\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\r\n     * @default LOG_LEVEL_WARNING\r\n     * @memberof module:Debug\r\n     * @instance\r\n     */\r\n    function setLogTimestampVisible(value) {\r\n        showLogTimestamp = value;\r\n    }\r\n\r\n    /**\r\n     * Prepends the callee object name, and media type if available, to each log message.\r\n     * @param {boolean} value Set to true if you want to see the callee object name and media type in each log message.\r\n     * @default true\r\n     * @memberof module:Debug\r\n     * @instance\r\n     */\r\n    function setCalleeNameVisible(value) {\r\n        showCalleeName = value;\r\n    }\r\n\r\n    function fatal(...params) {\r\n        doLog(LOG_LEVEL_FATAL, this, ...params);\r\n    }\r\n\r\n    function error(...params) {\r\n        doLog(LOG_LEVEL_ERROR, this, ...params);\r\n    }\r\n\r\n    function warn(...params) {\r\n        doLog(LOG_LEVEL_WARNING, this, ...params);\r\n    }\r\n\r\n    function info(...params) {\r\n        doLog(LOG_LEVEL_INFO, this, ...params);\r\n    }\r\n\r\n    function debug(...params) {\r\n        doLog(LOG_LEVEL_DEBUG, this, ...params);\r\n    }\r\n\r\n    function doLog(level, _this, ...params) {\r\n        let message = '';\r\n        let logTime = null;\r\n\r\n        if (showLogTimestamp) {\r\n            logTime = new Date().getTime();\r\n            message += '[' + (logTime - startTime) + ']';\r\n        }\r\n\r\n        if (showCalleeName && _this && _this.getClassName) {\r\n            message += '[' + _this.getClassName() + ']';\r\n            if (_this.getType) {\r\n                message += '[' + _this.getType() + ']';\r\n            }\r\n        }\r\n\r\n        if (message.length > 0) {\r\n            message += ' ';\r\n        }\r\n\r\n        Array.apply(null, params).forEach(function (item) {\r\n            message += item + ' ';\r\n        });\r\n\r\n        // log to console if the log level is high enough\r\n        if (logFn[level] && settings && settings.get().debug.logLevel >= level) {\r\n            logFn[level](message);\r\n        }\r\n\r\n        // send log event regardless of log level\r\n        if (settings && settings.get().debug.dispatchEvent) {\r\n            eventBus.trigger(Events.LOG, { message: message, level: level });\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        getLogger: getLogger,\r\n        setLogTimestampVisible: setLogTimestampVisible,\r\n        setCalleeNameVisible: setCalleeNameVisible\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDebug.__dashjs_factory_name = 'Debug';\r\n\r\nconst factory = FactoryMaker.getSingletonFactory(Debug);\r\nfactory.LOG_LEVEL_NONE = LOG_LEVEL_NONE;\r\nfactory.LOG_LEVEL_FATAL = LOG_LEVEL_FATAL;\r\nfactory.LOG_LEVEL_ERROR = LOG_LEVEL_ERROR;\r\nfactory.LOG_LEVEL_WARNING = LOG_LEVEL_WARNING;\r\nfactory.LOG_LEVEL_INFO = LOG_LEVEL_INFO;\r\nfactory.LOG_LEVEL_DEBUG = LOG_LEVEL_DEBUG;\r\nFactoryMaker.updateSingletonFactory(Debug.__dashjs_factory_name, factory);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from './FactoryMaker';\r\nimport Utils from './Utils.js';\r\nimport Debug from '../core/Debug';\r\nimport Constants from '../streaming/constants/Constants';\r\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\r\nimport EventBus from './EventBus';\r\nimport Events from './events/Events';\r\n\r\n/** @module Settings\r\n * @description Define the configuration parameters of Dash.js MediaPlayer.\r\n * @see {@link module:Settings~PlayerSettings PlayerSettings} for further information about the supported configuration properties.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} PlayerSettings\r\n * @property {module:Settings~DebugSettings} [debug]\r\n * Debug related settings.\r\n * @property {module:Settings~ErrorSettings} [errors]\r\n * Error related settings\r\n * @property {module:Settings~StreamingSettings} [streaming]\r\n * Streaming related settings.\r\n * @example\r\n *\r\n * // Full settings object\r\n * settings = {\r\n *        debug: {\r\n *            logLevel: Debug.LOG_LEVEL_WARNING,\r\n *            dispatchEvent: false\r\n *        },\r\n *        streaming: {\r\n *            abandonLoadTimeout: 10000,\r\n *            wallclockTimeUpdateInterval: 100,\r\n *            manifestUpdateRetryInterval: 100,\r\n *            cacheInitSegments: false,\r\n *            applyServiceDescription: true,\r\n *            applyProducerReferenceTime: true,\r\n *            applyContentSteering: true,\r\n *            eventControllerRefreshDelay: 100,\r\n *            enableManifestDurationMismatchFix: true,\r\n *            enableManifestTimescaleMismatchFix: false,\r\n *            parseInbandPrft: false,\r\n *            capabilities: {\r\n *               filterUnsupportedEssentialProperties: true,\r\n *               useMediaCapabilitiesApi: false\r\n *            },\r\n *            timeShiftBuffer: {\r\n *                calcFromSegmentTimeline: false,\r\n *                fallbackToSegmentTimeline: true\r\n *            },\r\n *            metrics: {\r\n *              maxListDepth: 100\r\n *            },\r\n *            delay: {\r\n *                liveDelayFragmentCount: NaN,\r\n *                liveDelay: NaN,\r\n *                useSuggestedPresentationDelay: true\r\n *            },\r\n *            protection: {\r\n *                keepProtectionMediaKeys: false,\r\n *                ignoreEmeEncryptedEvent: false,\r\n *                detectPlayreadyMessageFormat: true,\r\n *            },\r\n *            buffer: {\r\n *                enableSeekDecorrelationFix: false,\r\n *                fastSwitchEnabled: true,\r\n *                flushBufferAtTrackSwitch: false,\r\n *                reuseExistingSourceBuffers: true,\r\n *                bufferPruningInterval: 10,\r\n *                bufferToKeep: 20,\r\n *                bufferTimeAtTopQuality: 30,\r\n *                bufferTimeAtTopQualityLongForm: 60,\r\n *                initialBufferLevel: NaN,\r\n *                stableBufferTime: 12,\r\n *                longFormContentDurationThreshold: 600,\r\n *                stallThreshold: 0.3,\r\n *                useAppendWindow: true,\r\n *                setStallState: true,\r\n *                avoidCurrentTimeRangePruning: false,\r\n *                useChangeTypeForTrackSwitch: true,\r\n *                mediaSourceDurationInfinity: true,\r\n *                resetSourceBuffersForTrackSwitch: false\r\n *            },\r\n *            gaps: {\r\n *                jumpGaps: true,\r\n *                jumpLargeGaps: true,\r\n *                smallGapLimit: 1.5,\r\n *                threshold: 0.3,\r\n *                enableSeekFix: true,\r\n *                enableStallFix: false,\r\n *                stallSeek: 0.1\r\n *            },\r\n *            utcSynchronization: {\r\n *                enabled: true,\r\n *                useManifestDateHeaderTimeSource: true,\r\n *                backgroundAttempts: 2,\r\n *                timeBetweenSyncAttempts: 30,\r\n *                maximumTimeBetweenSyncAttempts: 600,\r\n *                minimumTimeBetweenSyncAttempts: 2,\r\n *                timeBetweenSyncAttemptsAdjustmentFactor: 2,\r\n *                maximumAllowedDrift: 100,\r\n *                enableBackgroundSyncAfterSegmentDownloadError: true,\r\n *                defaultTimingSource: {\r\n *                    scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',\r\n *                    value: 'http://time.akamai.com/?iso&ms'\r\n *                }\r\n *            },\r\n *            scheduling: {\r\n *                defaultTimeout: 500,\r\n *                lowLatencyTimeout: 0,\r\n *                scheduleWhilePaused: true\r\n *            },\r\n *            text: {\r\n *                defaultEnabled: true,\r\n *                extendSegmentedCues: true,\r\n *                webvtt: {\r\n *                    customRenderingEnabled: false\r\n *                }\r\n *            },\r\n *            liveCatchup: {\r\n *                maxDrift: NaN,\r\n *                playbackRate: {min: NaN, max: NaN},\r\n *                playbackBufferMin: 0.5,\r\n *                enabled: null,\r\n *                mode: Constants.LIVE_CATCHUP_MODE_DEFAULT\r\n *            },\r\n *            lastBitrateCachingInfo: { enabled: true, ttl: 360000 },\r\n *            lastMediaSettingsCachingInfo: { enabled: true, ttl: 360000 },\r\n *            saveLastMediaSettingsForCurrentStreamingSession: true,\r\n *            cacheLoadThresholds: { video: 50, audio: 5 },\r\n *            trackSwitchMode: {\r\n *                audio: Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE,\r\n *                video: Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\r\n *            },\r\n *            selectionModeForInitialTrack: Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY,\r\n *            fragmentRequestTimeout: 20000,\r\n *            fragmentRequestProgressTimeout: -1,\r\n *            manifestRequestTimeout: 10000,\r\n *            retryIntervals: {\r\n *                [HTTPRequest.MPD_TYPE]: 500,\r\n *                [HTTPRequest.XLINK_EXPANSION_TYPE]: 500,\r\n *                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 1000,\r\n *                [HTTPRequest.INIT_SEGMENT_TYPE]: 1000,\r\n *                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 1000,\r\n *                [HTTPRequest.INDEX_SEGMENT_TYPE]: 1000,\r\n *                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 1000,\r\n *                [HTTPRequest.LICENSE]: 1000,\r\n *                [HTTPRequest.OTHER_TYPE]: 1000,\r\n *                lowLatencyReductionFactor: 10\r\n *            },\r\n *            retryAttempts: {\r\n *                [HTTPRequest.MPD_TYPE]: 3,\r\n *                [HTTPRequest.XLINK_EXPANSION_TYPE]: 1,\r\n *                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 3,\r\n *                [HTTPRequest.INIT_SEGMENT_TYPE]: 3,\r\n *                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 3,\r\n *                [HTTPRequest.INDEX_SEGMENT_TYPE]: 3,\r\n *                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 3,\r\n *                [HTTPRequest.LICENSE]: 3,\r\n *                [HTTPRequest.OTHER_TYPE]: 3,\r\n *                lowLatencyMultiplyFactor: 5\r\n *            },\r\n *            abr: {\r\n *                movingAverageMethod: Constants.MOVING_AVERAGE_SLIDING_WINDOW,\r\n *                ABRStrategy: Constants.ABR_STRATEGY_DYNAMIC,\r\n *                additionalAbrRules: {\r\n *                   insufficientBufferRule: true,\r\n *                   switchHistoryRule: true,\r\n *                   droppedFramesRule: true,\r\n *                   abandonRequestsRule: true\r\n *                },\r\n *                abrRulesParameters: {\r\n *                     abandonRequestsRule: {\r\n *                         graceTimeThreshold: 500,\r\n *                         abandonMultiplier: 1.8,\r\n *                         minLengthToAverage: 5\r\n *                     }\r\n *                 },\r\n *                bandwidthSafetyFactor: 0.9,\r\n *                useDefaultABRRules: true,\r\n *                useDeadTimeLatency: true,\r\n *                limitBitrateByPortal: false,\r\n *                usePixelRatioInLimitBitrateByPortal: false,\r\n *                maxBitrate: { audio: -1, video: -1 },\r\n *                minBitrate: { audio: -1, video: -1 },\r\n *                maxRepresentationRatio: { audio: 1, video: 1 },\r\n *                initialBitrate: { audio: -1, video: -1 },\r\n *                initialRepresentationRatio: { audio: -1, video: -1 },\r\n *                autoSwitchBitrate: { audio: true, video: true },\r\n *                fetchThroughputCalculationMode: Constants.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA\r\n *            },\r\n *            cmcd: {\r\n *                enabled: false,\r\n *                sid: null,\r\n *                cid: null,\r\n *                rtp: null,\r\n *                rtpSafetyFactor: 5,\r\n *                mode: Constants.CMCD_MODE_QUERY,\r\n *                enabledKeys: ['br', 'd', 'ot', 'tb' , 'bl', 'dl', 'mtp', 'nor', 'nrr', 'su' , 'bs', 'rtp' , 'cid', 'pr', 'sf', 'sid', 'st', 'v']\r\n *            },\r\n *            cmsd: {\r\n *                enabled: false,\r\n *                abr: {\r\n *                    applyMb: false,\r\n *                    etpWeightRatio: 0\r\n *                }\r\n *           }\r\n *          },\r\n *          errors: {\r\n *            recoverAttempts: {\r\n *                mediaErrorDecode: 5\r\n *             }\r\n *          }\r\n * }\r\n */\r\n\r\n/**\r\n * @typedef {Object} TimeShiftBuffer\r\n * @property {boolean} [calcFromSegmentTimeline=false]\r\n * Enable calculation of the DVR window for SegmentTimeline manifests based on the entries in \\<SegmentTimeline\\>.\r\n *  * @property {boolean} [fallbackToSegmentTimeline=true]\r\n * In case the MPD uses \\<SegmentTimeline\\ and no segment is found within the DVR window the DVR window is calculated based on the entries in \\<SegmentTimeline\\>.\r\n */\r\n\r\n/**\r\n * @typedef {Object} LiveDelay\r\n * @property {number} [liveDelayFragmentCount=NaN]\r\n * Changing this value will lower or increase live stream latency.\r\n *\r\n * The detected segment duration will be multiplied by this value to define a time in seconds to delay a live stream from the live edge.\r\n *\r\n * Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.\r\n * @property {number} [liveDelay=NaN]\r\n * Equivalent in seconds of setLiveDelayFragmentCount.\r\n *\r\n * Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.\r\n *\r\n * This value should be less than the manifest duration by a couple of segment durations to avoid playback issues.\r\n *\r\n * If set, this parameter will take precedence over setLiveDelayFragmentCount and manifest info.\r\n * @property {boolean} [useSuggestedPresentationDelay=true]\r\n * Set to true if you would like to overwrite the default live delay and honor the SuggestedPresentationDelay attribute in by the manifest.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Buffer\r\n * @property {boolean} [enableSeekDecorrelationFix=false]\r\n * Enables a workaround for playback start on some devices, e.g. WebOS 4.9.\r\n * It is necessary because some browsers do not support setting currentTime on video element to a value that is outside of current buffer.\r\n *\r\n * If you experience unexpected seeking triggered by BufferController, you can try setting this value to false.\r\n\r\n * @property {boolean} [fastSwitchEnabled=true]\r\n * When enabled, after an ABR up-switch in quality, instead of requesting and appending the next fragment at the end of the current buffer range it is requested and appended closer to the current time.\r\n *\r\n * When enabled, The maximum time to render a higher quality is current time + (1.5 * fragment duration).\r\n *\r\n * Note, When ABR down-switch is detected, we appended the lower quality at the end of the buffer range to preserve the\r\n * higher quality media for as long as possible.\r\n *\r\n * If enabled, it should be noted there are a few cases when the client will not replace inside buffer range but rather just append at the end.\r\n * 1. When the buffer level is less than one fragment duration.\r\n * 2. The client is in an Abandonment State due to recent fragment abandonment event.\r\n *\r\n * Known issues:\r\n * 1. In IE11 with auto switching off, if a user switches to a quality they can not download in time the fragment may be appended in the same range as the playhead or even in the past, in IE11 it may cause a stutter or stall in playback.\r\n * @property {boolean} [flushBufferAtTrackSwitch=false]\r\n * When enabled, after a track switch and in case buffer is being replaced, the video element is flushed (seek at current playback time) once a segment of the new track is appended in buffer in order to force video decoder to play new track.\r\n *\r\n * This can be required on some devices like GoogleCast devices to make track switching functional.\r\n *\r\n * Otherwise track switching will be effective only once after previous buffered track is fully consumed.\r\n * @property {boolean} [reuseExistingSourceBuffers=true]\r\n * Enable reuse of existing MediaSource Sourcebuffers during period transition.\r\n * @property {number} [bufferPruningInterval=10]\r\n * The interval of pruning buffer in seconds.\r\n * @property {number} [bufferToKeep=20]\r\n * This value influences the buffer pruning logic.\r\n *\r\n * Allows you to modify the buffer that is kept in source buffer in seconds.\r\n * 0|-----------bufferToPrune-----------|-----bufferToKeep-----|currentTime|\r\n * @property {number} [bufferTimeAtTopQuality=30]\r\n * The time that the internal buffer target will be set to once playing the top quality.\r\n *\r\n * If there are multiple bitrates in your adaptation, and the media is playing at the highest bitrate, then we try to build a larger buffer at the top quality to increase stability and to maintain media quality.\r\n * @property {number} [bufferTimeAtTopQualityLongForm=60]\r\n * The time that the internal buffer target will be set to once playing the top quality for long form content.\r\n * @property {number} [longFormContentDurationThreshold=600]\r\n * The threshold which defines if the media is considered long form content.\r\n *\r\n * This will directly affect the buffer targets when playing back at the top quality.\r\n * @property {number} [initialBufferLevel=NaN]\r\n * Initial buffer level before playback starts\r\n * @property {number} [stableBufferTime=12]\r\n * The time that the internal buffer target will be set to post startup/seeks (NOT top quality).\r\n *\r\n * When the time is set higher than the default you will have to wait longer to see automatic bitrate switches but will have a larger buffer which will increase stability.\r\n * @property {number} [stallThreshold=0.3]\r\n * Stall threshold used in BufferController.js to determine whether a track should still be changed and which buffer range to prune.\r\n * @property {boolean} [useAppendWindow=true]\r\n * Specifies if the appendWindow attributes of the MSE SourceBuffers should be set according to content duration from manifest.\r\n * @property {boolean} [setStallState=true]\r\n * Specifies if we fire manual waiting events once the stall threshold is reached\r\n * @property {boolean} [avoidCurrentTimeRangePruning=false]\r\n * Avoids pruning of the buffered range that contains the current playback time.\r\n *\r\n * That buffered range is likely to have been enqueued for playback. Pruning it causes a flush and reenqueue in WPE and WebKitGTK based browsers. This stresses the video decoder and can cause stuttering on embedded platforms.\r\n * @property {boolean} [useChangeTypeForTrackSwitch=true]\r\n * If this flag is set to true then dash.js will use the MSE v.2 API call \"changeType()\" before switching to a different track.\r\n * Note that some platforms might not implement the changeType functio. dash.js is checking for the availability before trying to call it.\r\n * @property {boolean} [mediaSourceDurationInfinity=true]\r\n * If this flag is set to true then dash.js will allow `Infinity` to be set as the MediaSource duration otherwise the duration will be set to `Math.pow(2,32)` instead of `Infinity` to allow appending segments indefinitely.\r\n * Some platforms such as WebOS 4.x have issues with seeking when duration is set to `Infinity`, setting this flag to false resolve this.\r\n * @property {boolean} [resetSourceBuffersForTrackSwitch=false]\r\n * When switching to a track that is not compatible with the currently active MSE SourceBuffers, MSE will be reset. This happens when we switch codecs on a system\r\n * that does not properly implement \"changeType()\", such as webOS 4.0 and before.\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:Settings~AudioVideoSettings\r\n * @property {number|boolean|string} [audio]\r\n * Configuration for audio media type of tracks.\r\n * @property {number|boolean|string} [video]\r\n * Configuration for video media type of tracks.\r\n */\r\n\r\n/**\r\n * @typedef {Object} DebugSettings\r\n * @property {number} [logLevel=dashjs.Debug.LOG_LEVEL_WARNING]\r\n * Sets up the log level. The levels are cumulative.\r\n *\r\n * For example, if you set the log level to dashjs.Debug.LOG_LEVEL_WARNING all warnings, errors and fatals will be logged.\r\n *\r\n * Possible values.\r\n *\r\n * - dashjs.Debug.LOG_LEVEL_NONE\r\n * No message is written in the browser console.\r\n *\r\n * - dashjs.Debug.LOG_LEVEL_FATAL\r\n * Log fatal errors.\r\n * An error is considered fatal when it causes playback to fail completely.\r\n *\r\n * - dashjs.Debug.LOG_LEVEL_ERROR\r\n * Log error messages.\r\n *\r\n * - dashjs.Debug.LOG_LEVEL_WARNING\r\n * Log warning messages.\r\n *\r\n * - dashjs.Debug.LOG_LEVEL_INFO\r\n * Log info messages.\r\n *\r\n * - dashjs.Debug.LOG_LEVEL_DEBUG\r\n * Log debug messages.\r\n * @property {boolean} [dispatchEvent=false]\r\n * Enable to trigger a Events.LOG event whenever log output is generated.\r\n *\r\n * Note this will be dispatched regardless of log level.\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:Settings~ErrorSettings\r\n * @property {object} [recoverAttempts={mediaErrorDecode: 5}]\r\n * Defines the maximum number of recover attempts for specific media errors.\r\n *\r\n * For mediaErrorDecode the player will reset the MSE and skip the blacklisted segment that caused the decode error. The resulting gap will be handled by the GapController.\r\n */\r\n\r\n/**\r\n * @typedef {Object} CachingInfoSettings\r\n * @property {boolean} [enable]\r\n * Enable or disable the caching feature.\r\n * @property {number} [ttl]\r\n * Time to live.\r\n *\r\n * A value defined in milliseconds representing how log to cache the settings for.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Gaps\r\n * @property {boolean} [jumpGaps=true]\r\n * Sets whether player should jump small gaps (discontinuities) in the buffer.\r\n * @property {boolean} [jumpLargeGaps=true]\r\n * Sets whether player should jump large gaps (discontinuities) in the buffer.\r\n * @property {number} [smallGapLimit=1.5]\r\n * Time in seconds for a gap to be considered small.\r\n * @property {number} [threshold=0.3]\r\n * Threshold at which the gap handling is executed. If currentRangeEnd - currentTime < threshold the gap jump will be triggered.\r\n * For live stream the jump might be delayed to keep a consistent live edge.\r\n * Note that the amount of buffer at which platforms automatically stall might differ.\r\n * @property {boolean} [enableSeekFix=true]\r\n * Enables the adjustment of the seek target once no valid segment request could be generated for a specific seek time. This can happen if the user seeks to a position for which there is a gap in the timeline.\r\n * @property {boolean} [enableStallFix=false]\r\n * If playback stalled in a buffered range this fix will perform a seek by the value defined in stallSeek to trigger playback again.\r\n * @property {number} [stallSeek=0.1]\r\n * Value to be used in case enableStallFix is set to true\r\n */\r\n\r\n/**\r\n * @typedef {Object} UtcSynchronizationSettings\r\n * @property {boolean} [enabled=true]\r\n * Enables or disables the UTC clock synchronization\r\n * @property {boolean} [useManifestDateHeaderTimeSource=true]\r\n * Allows you to enable the use of the Date Header, if exposed with CORS, as a timing source for live edge detection.\r\n *\r\n * The use of the date header will happen only after the other timing source that take precedence fail or are omitted as described.\r\n * @property {number} [backgroundAttempts=2]\r\n * Number of synchronization attempts to perform in the background after an initial synchronization request has been done. This is used to verify that the derived client-server offset is correct.\r\n *\r\n * The background requests are async and done in parallel to the start of the playback.\r\n *\r\n * This value is also used to perform a resync after 404 errors on segments.\r\n * @property {number} [timeBetweenSyncAttempts=30]\r\n * The time in seconds between two consecutive sync attempts.\r\n *\r\n * Note: This value is used as an initial starting value. The internal value of the TimeSyncController is adjusted during playback based on the drift between two consecutive synchronization attempts.\r\n *\r\n * Note: A sync is only performed after an MPD update. In case the @minimumUpdatePeriod is larger than this value the sync will be delayed until the next MPD update.\r\n * @property {number} [maximumTimeBetweenSyncAttempts=600]\r\n * The maximum time in seconds between two consecutive sync attempts.\r\n *\r\n * @property {number} [minimumTimeBetweenSyncAttempts=2]\r\n * The minimum time in seconds between two consecutive sync attempts.\r\n *\r\n * @property {number} [timeBetweenSyncAttemptsAdjustmentFactor=2]\r\n * The factor used to multiply or divide the timeBetweenSyncAttempts parameter after a sync. The maximumAllowedDrift defines whether this value is used as a factor or a dividend.\r\n *\r\n * @property {number} [maximumAllowedDrift=100]\r\n * The maximum allowed drift specified in milliseconds between two consecutive synchronization attempts.\r\n *\r\n * @property {boolean} [enableBackgroundSyncAfterSegmentDownloadError=true]\r\n * Enables or disables the background sync after the player ran into a segment download error.\r\n *\r\n * @property {object} [defaultTimingSource={scheme:'urn:mpeg:dash:utc:http-xsdate:2014',value: 'http://time.akamai.com/?iso&ms'}]\r\n * The default timing source to be used. The timing sources in the MPD take precedence over this one.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Scheduling\r\n * @property {number} [defaultTimeout=500]\r\n * Default timeout between two consecutive segment scheduling attempts\r\n * @property {number} [lowLatencyTimeout=0]\r\n * Default timeout between two consecutive low-latency segment scheduling attempts\r\n * @property {boolean} [scheduleWhilePaused=true]\r\n * Set to true if you would like dash.js to keep downloading fragments in the background when the video element is paused.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Text\r\n * @property {boolean} [defaultEnabled=true]\r\n * Enable/disable subtitle rendering by default.\r\n * @property {boolean} [extendSegmentedCues=true]\r\n * Enable/disable patching of segmented cues in order to merge as a single cue by extending cue end time.\r\n * @property {object} [webvtt={customRenderingEnabled=false}]\r\n * Enables the custom rendering for WebVTT captions. For details refer to the \"Subtitles and Captions\" sample section of dash.js.\r\n * Custom WebVTT rendering requires the external library vtt.js that can be found in the contrib folder.\r\n */\r\n\r\n/**\r\n * @typedef {Object} LiveCatchupSettings\r\n * @property {number} [maxDrift=NaN]\r\n * Use this method to set the maximum latency deviation allowed before dash.js to do a seeking to live position.\r\n *\r\n * In low latency mode, when the difference between the measured latency and the target one, as an absolute number, is higher than the one sets with this method, then dash.js does a seek to live edge position minus the target live delay.\r\n *\r\n * LowLatencyMaxDriftBeforeSeeking should be provided in seconds.\r\n *\r\n * If 0, then seeking operations won't be used for fixing latency deviations.\r\n *\r\n * Note: Catch-up mechanism is only applied when playing low latency live streams.\r\n * @property {number} [playbackRate={min: NaN, max: NaN}]\r\n * Use this parameter to set the minimum and maximum catch up rates, as percentages, for low latency live streams.\r\n *\r\n * In low latency mode, when measured latency is higher/lower than the target one, dash.js increases/decreases playback rate respectively up to (+/-) the percentage defined with this method until target is reached.\r\n *\r\n * Valid values for min catch up rate are in the range -0.5 to 0 (-50% to 0% playback rate decrease)\r\n *\r\n * Valid values for max catch up rate are in the range 0 to 1 (0% to 100% playback rate increase).\r\n *\r\n * Set min and max to NaN to turn off live catch up feature.\r\n *\r\n * These playback rate limits take precedence over any PlaybackRate values in ServiceDescription elements in an MPD. If only one of the min/max properties is given a value, the property without a value will not fall back to a ServiceDescription value. Its default value of NaN will be used.\r\n *\r\n * Note: Catch-up mechanism is only applied when playing low latency live streams.\r\n * @property {number} [playbackBufferMin=0.5]\r\n * Use this parameter to specify the minimum buffer which is used for LoL+ based playback rate reduction.\r\n *\r\n *\r\n * @property {boolean} [enabled=null]\r\n * Use this parameter to enable the catchup mode for non low-latency streams.\r\n *\r\n * @property {string} [mode=\"liveCatchupModeDefault\"]\r\n * Use this parameter to switch between different catchup modes.\r\n *\r\n * Options: \"liveCatchupModeDefault\" or \"liveCatchupModeLOLP\".\r\n *\r\n * Note: Catch-up mechanism is automatically applied when playing low latency live streams.\r\n */\r\n\r\n/**\r\n * @typedef {Object} RequestTypeSettings\r\n * @property {number} [MPD]\r\n * Manifest type of requests.\r\n * @property {number} [XLinkExpansion]\r\n * XLink expansion type of requests.\r\n * @property {number} [InitializationSegment]\r\n * Request to retrieve an initialization segment.\r\n * @property {number} [IndexSegment]\r\n * Request to retrieve an index segment (SegmentBase).\r\n * @property {number} [MediaSegment]\r\n * Request to retrieve a media segment (video/audio/image/text chunk).\r\n * @property {number} [BitstreamSwitchingSegment]\r\n * Bitrate stream switching type of request.\r\n * @property {number} [FragmentInfoSegment]\r\n * Request to retrieve a FragmentInfo segment (specific to Smooth Streaming live streams).\r\n * @property {number} [other]\r\n * Other type of request.\r\n * @property {number} [lowLatencyReductionFactor]\r\n * For low latency mode, values of type of request are divided by lowLatencyReductionFactor.\r\n *\r\n * Note: It's not type of request.\r\n * @property {number} [lowLatencyMultiplyFactor]\r\n * For low latency mode, values of type of request are multiplied by lowLatencyMultiplyFactor.\r\n *\r\n * Note: It's not type of request.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Protection\r\n * @property {boolean} [keepProtectionMediaKeys=false]\r\n * Set the value for the ProtectionController and MediaKeys life cycle.\r\n *\r\n * If true, the ProtectionController and then created MediaKeys and MediaKeySessions will be preserved during the MediaPlayer lifetime.\r\n * @property {boolean} [ignoreEmeEncryptedEvent=false]\r\n * If set to true the player will ignore \"encrypted\" and \"needkey\" events thrown by the EME.\r\n *\r\n * @property {boolean} [detectPlayreadyMessageFormat=true]\r\n * If set to true the player will use the raw unwrapped message from the Playready CDM\r\n */\r\n\r\n/**\r\n * @typedef {Object} Capabilities\r\n * @property {boolean} [filterUnsupportedEssentialProperties=true]\r\n * Enable to filter all the AdaptationSets and Representations which contain an unsupported \\<EssentialProperty\\> element.\r\n * @property {boolean} [useMediaCapabilitiesApi=false]\r\n * Enable to use the MediaCapabilities API to check whether codecs are supported. If disabled MSE.isTypeSupported will be used instead.\r\n */\r\n\r\n/**\r\n * @typedef {Object} AbrRulesParameters\r\n * @property {module:Settings~AbandonRequestRuleParameters} abandonRequestRule\r\n * Configuration parameters for the AbandonRequestRule\r\n */\r\n\r\n/**\r\n * @typedef {Object} AbandonRequestRuleParameters\r\n * @property {number} [graceTimeThreshold=500]\r\n * Minimum elapsed time in milliseconds that the segment download has to run before the rule considers abandoning the download.\r\n * @property {number} [abandonMultiplier]\r\n * This value is multiplied with the segment duration and compared to the estimated time of the download to decide the request should be abandoned.\r\n * @property {number} [minLengthToAverage]\r\n * Minimum number of throughput samples required to consider abandoning the download of the segment.\r\n */\r\n\r\n/**\r\n * @typedef {Object} AbrSettings\r\n * @property {string} [movingAverageMethod=\"slidingWindow\"]\r\n * Sets the moving average method used for smoothing throughput estimates.\r\n *\r\n * Valid methods are \"slidingWindow\" and \"ewma\".\r\n *\r\n * The call has no effect if an invalid method is passed.\r\n *\r\n * The sliding window moving average method computes the average throughput using the last four segments downloaded.\r\n *\r\n * If the stream is live (as opposed to VOD), then only the last three segments are used.\r\n *\r\n * If wide variations in throughput are detected, the number of segments can be dynamically increased to avoid oscillations.\r\n *\r\n * The exponentially weighted moving average (EWMA) method computes the average using exponential smoothing.\r\n *\r\n * Two separate estimates are maintained, a fast one with a three-second half life and a slow one with an eight-second half life.\r\n *\r\n * The throughput estimate at any time is the minimum of the fast and slow estimates.\r\n *\r\n * This allows a fast reaction to a bandwidth drop and prevents oscillations on bandwidth spikes.\r\n * @property {string} [ABRStrategy=\"abrDynamic\"]\r\n * Returns the current ABR strategy being used: \"abrDynamic\", \"abrBola\" or \"abrThroughput\".\r\n * @property {object} [trackSwitchMode={video: \"neverReplace\", audio: \"alwaysReplace\"}]\r\n * @property {object} [additionalAbrRules={insufficientBufferRule: true,switchHistoryRule: true,droppedFramesRule: true,abandonRequestsRule: true}]\r\n * Enable/Disable additional ABR rules in case ABRStrategy is set to \"abrDynamic\", \"abrBola\" or \"abrThroughput\".\r\n * @property {module:Settings~AbrRulesParameters} abrRulesParameters Configuration options for the different ABR rules\r\n * @property {number} [bandwidthSafetyFactor=0.9]\r\n * Standard ABR throughput rules multiply the throughput by this value.\r\n *\r\n * It should be between 0 and 1, with lower values giving less rebuffering (but also lower quality).\r\n * @property {boolean} [useDefaultABRRules=true]\r\n * Should the default ABR rules be used, or the custom ones added.\r\n * @property {boolean} [useDeadTimeLatency=true]\r\n * If true, only the download portion will be considered part of the download bitrate and latency will be regarded as static.\r\n *\r\n * If false, the reciprocal of the whole transfer time will be used.\r\n * @property {boolean} [limitBitrateByPortal=false]\r\n * If true, the size of the video portal will limit the max chosen video resolution.\r\n * @property {boolean} [usePixelRatioInLimitBitrateByPortal=false]\r\n * Sets whether to take into account the device's pixel ratio when defining the portal dimensions.\r\n *\r\n * Useful on, for example, retina displays.\r\n * @property {module:Settings~AudioVideoSettings} [maxBitrate={audio: -1, video: -1}]\r\n * The maximum bitrate that the ABR algorithms will choose. This value is specified in kbps.\r\n *\r\n * Use -1 for no limit.\r\n * @property {module:Settings~AudioVideoSettings} [minBitrate={audio: -1, video: -1}]\r\n * The minimum bitrate that the ABR algorithms will choose. This value is specified in kbps.\r\n *\r\n * Use -1 for no limit.\r\n * @property {module:Settings~AudioVideoSettings} [maxRepresentationRatio={audio: 1, video: 1}]\r\n * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum representation allowed, as a proportion of the size of the representation set.\r\n *\r\n * You can set or remove this cap at anytime before or during playback.\r\n *\r\n * To clear this setting you set the value to 1.\r\n *\r\n * If both this and maxAllowedBitrate are defined, maxAllowedBitrate is evaluated first, then maxAllowedRepresentation, i.e. the lowest value from executing these rules is used.\r\n *\r\n * This feature is typically used to reserve higher representations for playback only when connected over a fast connection.\r\n * @property {module:Settings~AudioVideoSettings} [initialBitrate={audio: -1, video: -1}]\r\n * Explicitly set the starting bitrate for audio or video. This value is specified in kbps.\r\n *\r\n * Use -1 to let the player decide.\r\n * @property {module:Settings~AudioVideoSettings} [initialRepresentationRatio={audio: -1, video: -1}]\r\n * Explicitly set the initial representation ratio.\r\n *\r\n * If initalBitrate is specified, this is ignored.\r\n * @property {module:Settings~AudioVideoSettings} [autoSwitchBitrate={audio: true, video: true}]\r\n * Indicates whether the player should enable ABR algorithms to switch the bitrate.\r\n *\r\n * @property {string} [fetchThroughputCalculationMode=\"abrFetchThroughputCalculationDownloadedData\"]\r\n * Algorithm to determine the throughput in case the Fetch API is used for low latency streaming.\r\n *\r\n * For details please check the samples section and FetchLoader.js.\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:Settings~CmcdSettings\r\n * @property {boolean} [enable=false]\r\n * Enable or disable the CMCD reporting.\r\n * @property {string} [sid]\r\n * GUID identifying the current playback session.\r\n *\r\n * Should be in UUID format.\r\n *\r\n * If not specified a UUID will be automatically generated.\r\n * @property {string} [cid]\r\n * A unique string to identify the current content.\r\n *\r\n * If not specified it will be a hash of the MPD url.\r\n * @property {number} [rtp]\r\n * The requested maximum throughput that the client considers sufficient for delivery of the asset.\r\n *\r\n * If not specified this value will be dynamically calculated in the CMCDModel based on the current buffer level.\r\n * @property {number} [rtpSafetyFactor=5]\r\n * This value is used as a factor for the rtp value calculation: rtp = minBandwidth * rtpSafetyFactor\r\n *\r\n * If not specified this value defaults to 5. Note that this value is only used when no static rtp value is defined.\r\n * @property {number} [mode=\"query\"]\r\n * The method to use to attach cmcd metrics to the requests. 'query' to use query parameters, 'header' to use http headers.\r\n *\r\n * If not specified this value defaults to 'query'.\r\n * @property {Array.<string>} [enabledKeys]\r\n * This value is used to specify the desired CMCD parameters. Parameters not included in this list are not reported.\r\n * @property {Array.<string>} [includeInRequests]\r\n * Specifies which HTTP GET requests shall carry parameters.\r\n * \r\n * If not specified this value defaults to ['mpd', 'segment'].\r\n */\r\n\r\n/**\r\n * @typedef {Object} module:Settings~CmsdSettings\r\n * @property {boolean} [enabled=false]\r\n * Enable or disable the CMSD response headers parsing.\r\n * @property {module:Settings~CmsdAbrSettings} [abr]\r\n * Sets additional ABR rules based on CMSD response headers.\r\n */\r\n\r\n/**\r\n * @typedef {Object} CmsdAbrSettings\r\n * @property {boolean} [applyMb=false]\r\n * Set to true if dash.js should apply CMSD maximum suggested bitrate in ABR logic.\r\n * @property {number} [etpWeightRatio=0]\r\n * Sets the weight ratio (between 0 and 1) that shall be applied on CMSD estimated throuhgput compared to measured throughput when calculating throughput.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Metrics\r\n * @property {number} [metricsMaxListDepth=100]\r\n * Maximum number of metrics that are persisted per type.\r\n */\r\n\r\n/**\r\n * @typedef {Object} StreamingSettings\r\n * @property {number} [abandonLoadTimeout=10000]\r\n * A timeout value in seconds, which during the ABRController will block switch-up events.\r\n *\r\n * This will only take effect after an abandoned fragment event occurs.\r\n * @property {number} [wallclockTimeUpdateInterval=100]\r\n * How frequently the wallclockTimeUpdated internal event is triggered (in milliseconds).\r\n * @property {number} [manifestUpdateRetryInterval=100]\r\n * For live streams, set the interval-frequency in milliseconds at which dash.js will check if the current manifest is still processed before downloading the next manifest once the minimumUpdatePeriod time has.\r\n * @property {boolean} [cacheInitSegments=false]\r\n * Enables the caching of init segments to avoid requesting the init segments before each representation switch.\r\n * @property {boolean} [applyServiceDescription=true]\r\n * Set to true if dash.js should use the parameters defined in ServiceDescription elements\r\n * @property {boolean} [applyProducerReferenceTime=true]\r\n * Set to true if dash.js should use the parameters defined in ProducerReferenceTime elements in combination with ServiceDescription elements.\r\n * @property {boolean} [applyContentSteering=true]\r\n * Set to true if dash.js should use the cmcd parameters defined in MDP or js elements.\r\n * @property {boolean} [applyCMCDParameters=true]\r\n * Set to true if dash.js should apply content steering during playback.\r\n * @property {number} [eventControllerRefreshDelay=100]\r\n * For multi-period streams, overwrite the manifest mediaPresentationDuration attribute with the sum of period durations if the manifest mediaPresentationDuration is greater than the sum of period durations\r\n * @property {boolean} [enableManifestDurationMismatchFix=true]\r\n * Overwrite the manifest segments base information timescale attributes with the timescale set in initialization segments\r\n * @property {boolean} [enableManifestTimescaleMismatchFix=false]\r\n * Defines the delay in milliseconds between two consecutive checks for events to be fired.\r\n * @property {boolean} [parseInbandPrft=false]\r\n * Set to true if dash.js should parse inband prft boxes (ProducerReferenceTime) and trigger events.\r\n * @property {module:Settings~Metrics} metrics Metric settings\r\n * @property {module:Settings~LiveDelay} delay Live Delay settings\r\n * @property {module:Settings~TimeShiftBuffer} timeShiftBuffer TimeShiftBuffer settings\r\n * @property {module:Settings~Protection} protection DRM related settings\r\n * @property {module:Settings~Capabilities} capabilities Capability related settings\r\n * @property {module:Settings~Buffer}  buffer Buffer related settings\r\n * @property {module:Settings~Gaps}  gaps Gap related settings\r\n * @property {module:Settings~UtcSynchronizationSettings} utcSynchronization Settings related to UTC clock synchronization\r\n * @property {module:Settings~Scheduling} scheduling Settings related to segment scheduling\r\n * @property {module:Settings~Text} text Settings related to Subtitles and captions\r\n * @property {module:Settings~LiveCatchupSettings} liveCatchup  Settings related to live catchup.\r\n * @property {module:Settings~CachingInfoSettings} [lastBitrateCachingInfo={enabled: true, ttl: 360000}]\r\n * Set to false if you would like to disable the last known bit rate from being stored during playback and used to set the initial bit rate for subsequent playback within the expiration window.\r\n *\r\n * The default expiration is one hour, defined in milliseconds.\r\n *\r\n * If expired, the default initial bit rate (closest to 1000 kbps) will be used for that session and a new bit rate will be stored during that session.\r\n * @property {module:Settings~CachingInfoSettings} [lastMediaSettingsCachingInfo={enabled: true, ttl: 360000}]\r\n * Set to false if you would like to disable the last media settings from being stored to localStorage during playback and used to set the initial track for subsequent playback within the expiration window.\r\n *\r\n * The default expiration is one hour, defined in milliseconds.\r\n * @property {boolean} [saveLastMediaSettingsForCurrentStreamingSession=true]\r\n * Set to true if dash.js should save media settings from last selected track for incoming track selection during current streaming session.\r\n * @property {module:Settings~AudioVideoSettings} [cacheLoadThresholds={video: 50, audio: 5}]\r\n * For a given media type, the threshold which defines if the response to a fragment request is coming from browser cache or not.\r\n * @property {module:Settings~AudioVideoSettings} [trackSwitchMode={video: \"neverReplace\", audio: \"alwaysReplace\"}]\r\n * For a given media type defines if existing segments in the buffer should be overwritten once the track is switched. For instance if the user switches the audio language the existing segments in the audio buffer will be replaced when setting this value to \"alwaysReplace\".\r\n *\r\n * Possible values\r\n *\r\n * - Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE\r\n * Replace existing segments in the buffer\r\n *\r\n * - Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\r\n * Do not replace existing segments in the buffer\r\n *\r\n * @property {string} [selectionModeForInitialTrack=\"highestSelectionPriority\"]\r\n * Sets the selection mode for the initial track. This mode defines how the initial track will be selected if no initial media settings are set. If initial media settings are set this parameter will be ignored. Available options are:\r\n *\r\n * Possible values\r\n *\r\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY\r\n * This mode makes the player select the track with the highest selectionPriority as defined in the manifest. If not selectionPriority is given we fallback to TRACK_SELECTION_MODE_HIGHEST_BITRATE. This mode is a default mode.\r\n *\r\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_BITRATE\r\n * This mode makes the player select the track with a highest bitrate.\r\n *\r\n * - Constants.TRACK_SELECTION_MODE_FIRST_TRACK\r\n * This mode makes the player select the first track found in the manifest.\r\n *\r\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY\r\n * This mode makes the player select the track with the lowest bitrate per pixel average.\r\n *\r\n * - Constants.TRACK_SELECTION_MODE_WIDEST_RANGE\r\n * This mode makes the player select the track with a widest range of bitrates.\r\n *\r\n *\r\n * @property {number} [fragmentRequestTimeout=20000]\r\n * Time in milliseconds before timing out on loading a media fragment.\r\n *\r\n * @property {number} [fragmentRequestProgressTimeout=-1]\r\n * Time in milliseconds before timing out on loading progress of a media fragment.\r\n *\r\n * @property {number} [manifestRequestTimeout=10000]\r\n * Time in milliseconds before timing out on loading a manifest.\r\n *\r\n * Fragments that timeout are retried as if they failed.\r\n * @property {module:Settings~RequestTypeSettings} [retryIntervals]\r\n * Time in milliseconds of which to reload a failed file load attempt.\r\n *\r\n * For low latency mode these values are divided by lowLatencyReductionFactor.\r\n * @property {module:Settings~RequestTypeSettings} [retryAttempts]\r\n * Total number of retry attempts that will occur on a file load before it fails.\r\n *\r\n * For low latency mode these values are multiplied by lowLatencyMultiplyFactor.\r\n * @property {module:Settings~AbrSettings} abr\r\n * Adaptive Bitrate algorithm related settings.\r\n * @property {module:Settings~CmcdSettings} cmcd\r\n * Settings related to Common Media Client Data reporting.\r\n * @property {module:Settings~CmsdSettings} cmsd\r\n * Settings related to Common Media Server Data parsing.\r\n */\r\n\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nfunction Settings() {\r\n    let instance;\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const DISPATCH_KEY_MAP = {\r\n        'streaming.delay.liveDelay': Events.SETTING_UPDATED_LIVE_DELAY,\r\n        'streaming.delay.liveDelayFragmentCount': Events.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT,\r\n        'streaming.liveCatchup.enabled': Events.SETTING_UPDATED_CATCHUP_ENABLED,\r\n        'streaming.liveCatchup.playbackRate.min': Events.SETTING_UPDATED_PLAYBACK_RATE_MIN,\r\n        'streaming.liveCatchup.playbackRate.max': Events.SETTING_UPDATED_PLAYBACK_RATE_MAX\r\n    };\r\n\r\n\r\n    /**\r\n     * @const {PlayerSettings} defaultSettings\r\n     * @ignore\r\n     */\r\n    const defaultSettings = {\r\n        debug: {\r\n            logLevel: Debug.LOG_LEVEL_WARNING,\r\n            dispatchEvent: false\r\n        },\r\n        streaming: {\r\n            abandonLoadTimeout: 10000,\r\n            wallclockTimeUpdateInterval: 100,\r\n            manifestUpdateRetryInterval: 100,\r\n            cacheInitSegments: false,\r\n            applyServiceDescription: true,\r\n            applyProducerReferenceTime: true,\r\n            applyContentSteering: true,\r\n            applyCMCDParameters: true,\r\n            eventControllerRefreshDelay: 100,\r\n            enableManifestDurationMismatchFix: true,\r\n            parseInbandPrft: false,\r\n            enableManifestTimescaleMismatchFix: false,\r\n            capabilities: {\r\n                filterUnsupportedEssentialProperties: true,\r\n                useMediaCapabilitiesApi: false\r\n            },\r\n            timeShiftBuffer: {\r\n                calcFromSegmentTimeline: false,\r\n                fallbackToSegmentTimeline: true\r\n            },\r\n            metrics: {\r\n                maxListDepth: 100\r\n            },\r\n            delay: {\r\n                liveDelayFragmentCount: NaN,\r\n                liveDelay: NaN,\r\n                useSuggestedPresentationDelay: true\r\n            },\r\n            protection: {\r\n                keepProtectionMediaKeys: false,\r\n                ignoreEmeEncryptedEvent: false,\r\n                detectPlayreadyMessageFormat: true,\r\n            },\r\n            buffer: {\r\n                enableSeekDecorrelationFix: false,\r\n                fastSwitchEnabled: true,\r\n                flushBufferAtTrackSwitch: false,\r\n                reuseExistingSourceBuffers: true,\r\n                bufferPruningInterval: 10,\r\n                bufferToKeep: 20,\r\n                bufferTimeAtTopQuality: 30,\r\n                bufferTimeAtTopQualityLongForm: 60,\r\n                initialBufferLevel: NaN,\r\n                stableBufferTime: 12,\r\n                longFormContentDurationThreshold: 600,\r\n                stallThreshold: 0.3,\r\n                useAppendWindow: true,\r\n                setStallState: true,\r\n                avoidCurrentTimeRangePruning: false,\r\n                useChangeTypeForTrackSwitch: true,\r\n                mediaSourceDurationInfinity: true,\r\n                resetSourceBuffersForTrackSwitch: false\r\n            },\r\n            gaps: {\r\n                jumpGaps: true,\r\n                jumpLargeGaps: true,\r\n                smallGapLimit: 1.5,\r\n                threshold: 0.3,\r\n                enableSeekFix: true,\r\n                enableStallFix: false,\r\n                stallSeek: 0.1\r\n            },\r\n            utcSynchronization: {\r\n                enabled: true,\r\n                useManifestDateHeaderTimeSource: true,\r\n                backgroundAttempts: 2,\r\n                timeBetweenSyncAttempts: 30,\r\n                maximumTimeBetweenSyncAttempts: 600,\r\n                minimumTimeBetweenSyncAttempts: 2,\r\n                timeBetweenSyncAttemptsAdjustmentFactor: 2,\r\n                maximumAllowedDrift: 100,\r\n                enableBackgroundSyncAfterSegmentDownloadError: true,\r\n                defaultTimingSource: {\r\n                    scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',\r\n                    value: 'https://time.akamai.com/?iso&ms'\r\n                }\r\n            },\r\n            scheduling: {\r\n                defaultTimeout: 500,\r\n                lowLatencyTimeout: 0,\r\n                scheduleWhilePaused: true\r\n            },\r\n            text: {\r\n                defaultEnabled: true,\r\n                extendSegmentedCues: true,\r\n                webvtt: {\r\n                    customRenderingEnabled: false\r\n                }\r\n            },\r\n            liveCatchup: {\r\n                maxDrift: NaN,\r\n                playbackRate: {\r\n                    min: NaN,\r\n                    max: NaN\r\n                },\r\n                playbackBufferMin: 0.5,\r\n                enabled: null,\r\n                mode: Constants.LIVE_CATCHUP_MODE_DEFAULT\r\n            },\r\n            lastBitrateCachingInfo: {\r\n                enabled: true,\r\n                ttl: 360000\r\n            },\r\n            lastMediaSettingsCachingInfo: {\r\n                enabled: true,\r\n                ttl: 360000\r\n            },\r\n            saveLastMediaSettingsForCurrentStreamingSession: true,\r\n            cacheLoadThresholds: {\r\n                video: 50,\r\n                audio: 5\r\n            },\r\n            trackSwitchMode: {\r\n                audio: Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE,\r\n                video: Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\r\n            },\r\n            selectionModeForInitialTrack: Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY,\r\n            fragmentRequestTimeout: 20000,\r\n            fragmentRequestProgressTimeout: -1,\r\n            manifestRequestTimeout: 10000,\r\n            retryIntervals: {\r\n                [HTTPRequest.MPD_TYPE]: 500,\r\n                [HTTPRequest.XLINK_EXPANSION_TYPE]: 500,\r\n                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 1000,\r\n                [HTTPRequest.INIT_SEGMENT_TYPE]: 1000,\r\n                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 1000,\r\n                [HTTPRequest.INDEX_SEGMENT_TYPE]: 1000,\r\n                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 1000,\r\n                [HTTPRequest.LICENSE]: 1000,\r\n                [HTTPRequest.OTHER_TYPE]: 1000,\r\n                lowLatencyReductionFactor: 10\r\n            },\r\n            retryAttempts: {\r\n                [HTTPRequest.MPD_TYPE]: 3,\r\n                [HTTPRequest.XLINK_EXPANSION_TYPE]: 1,\r\n                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 3,\r\n                [HTTPRequest.INIT_SEGMENT_TYPE]: 3,\r\n                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 3,\r\n                [HTTPRequest.INDEX_SEGMENT_TYPE]: 3,\r\n                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 3,\r\n                [HTTPRequest.LICENSE]: 3,\r\n                [HTTPRequest.OTHER_TYPE]: 3,\r\n                lowLatencyMultiplyFactor: 5\r\n            },\r\n            abr: {\r\n                movingAverageMethod: Constants.MOVING_AVERAGE_SLIDING_WINDOW,\r\n                ABRStrategy: Constants.ABR_STRATEGY_DYNAMIC,\r\n                additionalAbrRules: {\r\n                    insufficientBufferRule: true,\r\n                    switchHistoryRule: true,\r\n                    droppedFramesRule: true,\r\n                    abandonRequestsRule: true\r\n                },\r\n                abrRulesParameters: {\r\n                    abandonRequestsRule: {\r\n                        graceTimeThreshold: 500,\r\n                        abandonMultiplier: 1.8,\r\n                        minLengthToAverage: 5\r\n                    }\r\n                },\r\n                bandwidthSafetyFactor: 0.9,\r\n                useDefaultABRRules: true,\r\n                useDeadTimeLatency: true,\r\n                limitBitrateByPortal: false,\r\n                usePixelRatioInLimitBitrateByPortal: false,\r\n                maxBitrate: {\r\n                    audio: -1,\r\n                    video: -1\r\n                },\r\n                minBitrate: {\r\n                    audio: -1,\r\n                    video: -1\r\n                },\r\n                maxRepresentationRatio: {\r\n                    audio: 1,\r\n                    video: 1\r\n                },\r\n                initialBitrate: {\r\n                    audio: -1,\r\n                    video: -1\r\n                },\r\n                initialRepresentationRatio: {\r\n                    audio: -1,\r\n                    video: -1\r\n                },\r\n                autoSwitchBitrate: {\r\n                    audio: true,\r\n                    video: true\r\n                },\r\n                fetchThroughputCalculationMode: Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING\r\n            },\r\n            cmcd: {\r\n                enabled: false,\r\n                sid: null,\r\n                cid: null,\r\n                rtp: null,\r\n                rtpSafetyFactor: 5,\r\n                mode: Constants.CMCD_MODE_QUERY,\r\n                enabledKeys: Constants.CMCD_AVAILABLE_KEYS,\r\n                includeInRequests: ['mpd', 'segment']\r\n            },\r\n            cmsd: {\r\n                enabled: false,\r\n                abr: {\r\n                    applyMb: false,\r\n                    etpWeightRatio: 0\r\n                }\r\n            }\r\n        },\r\n        errors: {\r\n            recoverAttempts: {\r\n                mediaErrorDecode: 5\r\n            }\r\n        }\r\n    };\r\n\r\n    let settings = Utils.clone(defaultSettings);\r\n\r\n    //Merge in the settings. If something exists in the new config that doesn't match the schema of the default config,\r\n    //regard it as an error and log it.\r\n    function mixinSettings(source, dest, path) {\r\n        for (let n in source) {\r\n            if (source.hasOwnProperty(n)) {\r\n                if (dest.hasOwnProperty(n)) {\r\n                    if (typeof source[n] === 'object' && !(source[n] instanceof Array) && source[n] !== null) {\r\n                        mixinSettings(source[n], dest[n], path.slice() + n + '.');\r\n                    } else {\r\n                        dest[n] = Utils.clone(source[n]);\r\n                        if (DISPATCH_KEY_MAP[path + n]) {\r\n                            eventBus.trigger(DISPATCH_KEY_MAP[path + n]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    console.error('Settings parameter ' + path + n + ' is not supported');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the settings object. Don't copy/store this object, you won't get updates.\r\n     * @func\r\n     * @instance\r\n     */\r\n    function get() {\r\n        return settings;\r\n    }\r\n\r\n    /**\r\n     * @func\r\n     * @instance\r\n     * @param {object} settingsObj - This should be a partial object of the Settings.Schema type. That is, fields defined should match the path (e.g.\r\n     * settingsObj.streaming.abr.autoSwitchBitrate.audio -> defaultSettings.streaming.abr.autoSwitchBitrate.audio). Where an element's path does\r\n     * not match it is ignored, and a warning is logged.\r\n     *\r\n     * Use to change the settings object. Any new values defined will overwrite the settings and anything undefined will not change.\r\n     * Implementers of new settings should add it in an approriate namespace to the defaultSettings object and give it a default value (that is not undefined).\r\n     *\r\n     */\r\n    function update(settingsObj) {\r\n        if (typeof settingsObj === 'object') {\r\n            mixinSettings(settingsObj, settings, '');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets the settings object. Everything is set to its default value.\r\n     * @func\r\n     * @instance\r\n     *\r\n     */\r\n    function reset() {\r\n        settings = Utils.clone(defaultSettings);\r\n    }\r\n\r\n    instance = {\r\n        get,\r\n        update,\r\n        reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\n\r\nSettings.__dashjs_factory_name = 'Settings';\r\nlet factory = FactoryMaker.getSingletonFactory(Settings);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Settings from '../../core/Settings';\r\nimport Constants from '../constants/Constants';\r\nimport { modifyRequest } from '../utils/RequestModifier';\r\n\r\n/**\r\n * @module FetchLoader\r\n * @ignore\r\n * @description Manages download of resources via HTTP using fetch.\r\n * @param {Object} cfg - dependencies from parent\r\n */\r\nfunction FetchLoader(cfg) {\r\n\r\n    cfg = cfg || {};\r\n    const context = this.context;\r\n    const requestModifier = cfg.requestModifier;\r\n    const lowLatencyThroughputModel = cfg.lowLatencyThroughputModel;\r\n    const boxParser = cfg.boxParser;\r\n    const settings = Settings(context).getInstance();\r\n    let instance, dashMetrics;\r\n\r\n    function setup(cfg) {\r\n        dashMetrics = cfg.dashMetrics;\r\n    }\r\n\r\n    function load(httpRequest) {\r\n        if (requestModifier && requestModifier.modifyRequest) {\r\n            modifyRequest(httpRequest, requestModifier)\r\n                .then(() => request(httpRequest));\r\n        }\r\n        else {\r\n            request(httpRequest);\r\n        }\r\n    }\r\n\r\n    function request(httpRequest) {\r\n        // Variables will be used in the callback functions\r\n        const requestStartTime = new Date();\r\n        const request = httpRequest.request;\r\n\r\n        const headers = new Headers(); /*jshint ignore:line*/\r\n        if (request.range) {\r\n            headers.append('Range', 'bytes=' + request.range);\r\n        }\r\n\r\n        if (httpRequest.headers) {\r\n            for (let header in httpRequest.headers) {\r\n                let value = httpRequest.headers[header];\r\n                if (value) {\r\n                    headers.append(header, value);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!request.requestStartDate) {\r\n            request.requestStartDate = requestStartTime;\r\n        }\r\n\r\n        if (requestModifier && requestModifier.modifyRequestHeader) {\r\n            // modifyRequestHeader expects a XMLHttpRequest object so,\r\n            // to keep backward compatibility, we should expose a setRequestHeader method\r\n            // TODO: Remove RequestModifier dependency on XMLHttpRequest object and define\r\n            // a more generic way to intercept/modify requests\r\n            requestModifier.modifyRequestHeader({\r\n                setRequestHeader: function (header, value) {\r\n                    headers.append(header, value);\r\n                }\r\n            }, {\r\n                url: httpRequest.url\r\n            });\r\n        }\r\n\r\n        let abortController;\r\n        if (typeof window.AbortController === 'function') {\r\n            abortController = new AbortController(); /*jshint ignore:line*/\r\n            httpRequest.abortController = abortController;\r\n            abortController.signal.onabort = httpRequest.onabort;\r\n        }\r\n\r\n        const reqOptions = {\r\n            method: httpRequest.method,\r\n            headers: headers,\r\n            credentials: httpRequest.withCredentials ? 'include' : undefined,\r\n            signal: abortController ? abortController.signal : undefined\r\n        };\r\n\r\n        const calculationMode = settings.get().streaming.abr.fetchThroughputCalculationMode;\r\n        const requestTime = Date.now();\r\n        let throughputCapacityDelayMS = 0;\r\n\r\n        new Promise((resolve) => {\r\n            if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_AAST && lowLatencyThroughputModel) {\r\n                throughputCapacityDelayMS = lowLatencyThroughputModel.getThroughputCapacityDelayMS(request, dashMetrics.getCurrentBufferLevel(request.mediaType) * 1000);\r\n                if (throughputCapacityDelayMS) {\r\n                    // safely delay the \"fetch\" call a bit to be able to meassure the throughput capacity of the line.\r\n                    // this will lead to first few chunks downloaded at max network speed\r\n                    return setTimeout(resolve, throughputCapacityDelayMS);\r\n                }\r\n            }\r\n            resolve();\r\n        })\r\n            .then(() => {\r\n                let markBeforeFetch = Date.now();\r\n\r\n                fetch(httpRequest.url, reqOptions).then(function (response) {\r\n                    if (!httpRequest.response) {\r\n                        httpRequest.response = {};\r\n                    }\r\n                    httpRequest.response.status = response.status;\r\n                    httpRequest.response.statusText = response.statusText;\r\n                    httpRequest.response.responseURL = response.url;\r\n\r\n                    if (!response.ok) {\r\n                        httpRequest.onerror();\r\n                    }\r\n\r\n                    let responseHeaders = '';\r\n                    for (const key of response.headers.keys()) {\r\n                        responseHeaders += key + ': ' + response.headers.get(key) + '\\r\\n';\r\n                    }\r\n                    httpRequest.response.responseHeaders = responseHeaders;\r\n\r\n                    if (!response.body) {\r\n                        // Fetch returning a ReadableStream response body is not currently supported by all browsers.\r\n                        // Browser compatibility: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n                        // If it is not supported, returning the whole segment when it's ready (as xhr)\r\n                        return response.arrayBuffer().then(function (buffer) {\r\n                            httpRequest.response.response = buffer;\r\n                            const event = {\r\n                                loaded: buffer.byteLength,\r\n                                total: buffer.byteLength,\r\n                                stream: false\r\n                            };\r\n                            httpRequest.progress(event);\r\n                            httpRequest.onload();\r\n                            httpRequest.onend();\r\n                            return;\r\n                        });\r\n                    }\r\n\r\n                    const totalBytes = parseInt(response.headers.get('Content-Length'), 10);\r\n                    let bytesReceived = 0;\r\n                    let signaledFirstByte = false;\r\n                    let remaining = new Uint8Array();\r\n                    let offset = 0;\r\n\r\n                    if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_AAST && lowLatencyThroughputModel) {\r\n                        let markA = markBeforeFetch;\r\n                        let markB = 0;\r\n\r\n                        function fetchMeassurement(stream) {\r\n                            const reader = stream.getReader();\r\n                            const measurement = [];\r\n\r\n                            reader.read().then(function processFetch(args) {\r\n                                const value = args.value;\r\n                                const done = args.done;\r\n                                markB = Date.now();\r\n\r\n                                if (value && value.length) {\r\n                                    const chunkDownloadDurationMS = markB - markA;\r\n                                    const chunkBytes = value.length;\r\n                                    measurement.push({\r\n                                        chunkDownloadTimeRelativeMS: markB - markBeforeFetch,\r\n                                        chunkDownloadDurationMS,\r\n                                        chunkBytes,\r\n                                        kbps: Math.round(8 * chunkBytes / (chunkDownloadDurationMS / 1000)),\r\n                                        bufferLevel: dashMetrics.getCurrentBufferLevel(request.mediaType)\r\n                                    });\r\n                                }\r\n\r\n                                if (done) {\r\n\r\n                                    const fetchDuration = markB - markBeforeFetch;\r\n                                    const bytesAllChunks = measurement.reduce((prev, curr) => prev + curr.chunkBytes, 0);\r\n\r\n                                    lowLatencyThroughputModel.addMeasurement(request, fetchDuration, measurement, requestTime, throughputCapacityDelayMS, responseHeaders);\r\n\r\n                                    httpRequest.progress({\r\n                                        loaded: bytesAllChunks,\r\n                                        total: bytesAllChunks,\r\n                                        lengthComputable: true,\r\n                                        time: lowLatencyThroughputModel.getEstimatedDownloadDurationMS(request),\r\n                                        stream: true\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                markA = Date.now();\r\n                                return reader.read().then(processFetch);\r\n                            });\r\n                        }\r\n                        // tee'ing streams is supported by all current major browsers\r\n                        // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee\r\n                        const [forMeasure, forConsumer] = response.body.tee();\r\n                        fetchMeassurement(forMeasure);\r\n                        httpRequest.reader = forConsumer.getReader();\r\n                    } else {\r\n                        httpRequest.reader = response.body.getReader();\r\n                    }\r\n\r\n                    let downloadedData = [];\r\n                    let startTimeData = [];\r\n                    let endTimeData = [];\r\n                    let lastChunkWasFinished = true;\r\n\r\n\r\n                    const processResult = function ({ value, done }) { // Bug fix Parse whenever data is coming [value] better than 1ms looking that increase CPU\r\n                        if (done) {\r\n                            if (remaining) {\r\n                                if (calculationMode !== Constants.ABR_FETCH_THROUGHPUT_CALCULATION_AAST) {\r\n                                    // If there is pending data, call progress so network metrics\r\n                                    // are correctly generated\r\n                                    // Same structure as https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/\r\n                                    let calculatedThroughput = null;\r\n                                    let calculatedTime = null;\r\n                                    if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING) {\r\n                                        calculatedThroughput = calculateThroughputByChunkData(startTimeData, endTimeData);\r\n                                        if (calculatedThroughput) {\r\n                                            calculatedTime = bytesReceived * 8 / calculatedThroughput;\r\n                                        }\r\n                                    }\r\n                                    else if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA) {\r\n                                        calculatedTime = calculateDownloadedTime(downloadedData, bytesReceived);\r\n                                    }\r\n\r\n                                    httpRequest.progress({\r\n                                        loaded: bytesReceived,\r\n                                        total: isNaN(totalBytes) ? bytesReceived : totalBytes,\r\n                                        lengthComputable: true,\r\n                                        time: calculatedTime,\r\n                                        stream: true\r\n                                    });\r\n                                }\r\n\r\n                                httpRequest.response.response = remaining.buffer;\r\n                            }\r\n                            httpRequest.onload();\r\n                            httpRequest.onend();\r\n                            return;\r\n                        }\r\n\r\n                        if (value && value.length > 0) {\r\n                            remaining = concatTypedArray(remaining, value);\r\n                            bytesReceived += value.length;\r\n\r\n                            downloadedData.push({\r\n                                ts: Date.now(),\r\n                                bytes: value.length\r\n                            });\r\n\r\n                            if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING && lastChunkWasFinished) {\r\n                                // Parse the payload and capture the the 'moof' box\r\n                                const boxesInfo = boxParser.findLastTopIsoBoxCompleted(['moof'], remaining, offset);\r\n                                if (boxesInfo.found) {\r\n                                    // Store the beginning time of each chunk download in array StartTimeData\r\n                                    lastChunkWasFinished = false;\r\n                                    startTimeData.push({\r\n                                        ts: performance.now(), /* jshint ignore:line */\r\n                                        bytes: value.length\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            const boxesInfo = boxParser.findLastTopIsoBoxCompleted(['moov', 'mdat'], remaining, offset);\r\n                            if (boxesInfo.found) {\r\n                                const end = boxesInfo.lastCompletedOffset + boxesInfo.size;\r\n\r\n                                // Store the end time of each chunk download  with its size in array EndTimeData\r\n                                if (calculationMode === Constants.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING && !lastChunkWasFinished) {\r\n                                    lastChunkWasFinished = true;\r\n                                    endTimeData.push({\r\n                                        ts: performance.now(), /* jshint ignore:line */\r\n                                        bytes: remaining.length\r\n                                    });\r\n                                }\r\n\r\n                                // If we are going to pass full buffer, avoid copying it and pass\r\n                                // complete buffer. Otherwise clone the part of the buffer that is completed\r\n                                // and adjust remaining buffer. A clone is needed because ArrayBuffer of a typed-array\r\n                                // keeps a reference to the original data\r\n                                let data;\r\n                                if (end === remaining.length) {\r\n                                    data = remaining;\r\n                                    remaining = new Uint8Array();\r\n                                } else {\r\n                                    data = new Uint8Array(remaining.subarray(0, end));\r\n                                    remaining = remaining.subarray(end);\r\n                                }\r\n                                // Announce progress but don't track traces. Throughput measures are quite unstable\r\n                                // when they are based in small amount of data\r\n                                httpRequest.progress({\r\n                                    data: data.buffer,\r\n                                    lengthComputable: false,\r\n                                    noTrace: true\r\n                                });\r\n\r\n                                offset = 0;\r\n                            } else {\r\n                                offset = boxesInfo.lastCompletedOffset;\r\n                                // Call progress so it generates traces that will be later used to know when the first byte\r\n                                // were received\r\n                                if (!signaledFirstByte) {\r\n                                    httpRequest.progress({\r\n                                        lengthComputable: false,\r\n                                        noTrace: true\r\n                                    });\r\n                                    signaledFirstByte = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        read(httpRequest, processResult);\r\n                    };\r\n                    read(httpRequest, processResult);\r\n                })\r\n                    .catch(function (e) {\r\n                        if (httpRequest.onerror) {\r\n                            httpRequest.onerror(e);\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    function read(httpRequest, processResult) {\r\n        httpRequest.reader.read()\r\n            .then(processResult)\r\n            .catch(function (e) {\r\n                if (httpRequest.onerror && httpRequest.response.status === 200) {\r\n                    // Error, but response code is 200, trigger error\r\n                    httpRequest.onerror(e);\r\n                }\r\n            });\r\n    }\r\n\r\n    function concatTypedArray(remaining, data) {\r\n        if (remaining.length === 0) {\r\n            return data;\r\n        }\r\n        const result = new Uint8Array(remaining.length + data.length);\r\n        result.set(remaining);\r\n        result.set(data, remaining.length);\r\n        return result;\r\n    }\r\n\r\n    function abort(request) {\r\n        if (request.abortController) {\r\n            // For firefox and edge\r\n            request.abortController.abort();\r\n        } else if (request.reader) {\r\n            // For Chrome\r\n            try {\r\n                request.reader.cancel();\r\n                request.onabort();\r\n            } catch (e) {\r\n                // throw exceptions (TypeError) when reader was previously closed,\r\n                // for example, because a network issue\r\n            }\r\n        }\r\n    }\r\n\r\n    function calculateDownloadedTime(downloadedData, bytesReceived) {\r\n        try {\r\n            downloadedData = downloadedData.filter(data => data.bytes > ((bytesReceived / 4) / downloadedData.length));\r\n            if (downloadedData.length > 1) {\r\n                let time = 0;\r\n                const avgTimeDistance = (downloadedData[downloadedData.length - 1].ts - downloadedData[0].ts) / downloadedData.length;\r\n                downloadedData.forEach((data, index) => {\r\n                    // To be counted the data has to be over a threshold\r\n                    const next = downloadedData[index + 1];\r\n                    if (next) {\r\n                        const distance = next.ts - data.ts;\r\n                        time += distance < avgTimeDistance ? distance : 0;\r\n                    }\r\n                });\r\n                return time;\r\n            }\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function calculateThroughputByChunkData(startTimeData, endTimeData) {\r\n        try {\r\n            let datum, datumE;\r\n            // Filter the last chunks in a segment in both arrays [StartTimeData and EndTimeData]\r\n            datum = startTimeData.filter((data, i) => i < startTimeData.length - 1);\r\n            datumE = endTimeData.filter((dataE, i) => i < endTimeData.length - 1);\r\n            let chunkThroughputs = [];\r\n            // Compute the average throughput of the filtered chunk data\r\n            if (datum.length > 1) {\r\n                let shortDurationBytesReceived = 0;\r\n                let shortDurationStartTime = 0;\r\n                for (let i = 0; i < datum.length; i++) {\r\n                    if (datum[i] && datumE[i]) {\r\n                        let chunkDownloadTime = datumE[i].ts - datum[i].ts;\r\n                        if (chunkDownloadTime > 1) {\r\n                            chunkThroughputs.push((8 * datumE[i].bytes) / chunkDownloadTime);\r\n                            shortDurationStartTime = 0;\r\n                        } else {\r\n                            if (shortDurationStartTime === 0) {\r\n                                shortDurationStartTime = datum[i].ts;\r\n                                shortDurationBytesReceived = 0;\r\n                            }\r\n                            let cumulatedChunkDownloadTime = datumE[i].ts - shortDurationStartTime;\r\n                            if (cumulatedChunkDownloadTime > 1) {\r\n                                shortDurationBytesReceived += datumE[i].bytes;\r\n                                chunkThroughputs.push((8 * shortDurationBytesReceived) / cumulatedChunkDownloadTime);\r\n                                shortDurationStartTime = 0;\r\n                            } else {\r\n                                // continue cumulating short duration data\r\n                                shortDurationBytesReceived += datumE[i].bytes;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (chunkThroughputs.length > 0) {\r\n                    const sumOfChunkThroughputs = chunkThroughputs.reduce((a, b) => a + b, 0);\r\n                    return sumOfChunkThroughputs / chunkThroughputs.length;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        load: load,\r\n        abort: abort,\r\n        calculateDownloadedTime: calculateDownloadedTime,\r\n        setup\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nFetchLoader.__dashjs_factory_name = 'FetchLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(FetchLoader);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase';\r\n\r\n/**\r\n * @class\r\n * @implements EventsBase\r\n */\r\nclass MetricsReportingEvents extends EventsBase {\r\n    constructor () {\r\n        super();\r\n\r\n        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized';\r\n        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer';\r\n\r\n        /**\r\n         * Triggered when CMCD data was generated for a HTTP request\r\n         * @event MetricsReportingEvents#CMCD_DATA_GENERATED\r\n         */\r\n        this.CMCD_DATA_GENERATED = 'cmcdDataGenerated';\r\n    }\r\n}\r\n\r\nlet metricsReportingEvents = new MetricsReportingEvents();\r\nexport default metricsReportingEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nimport DashConstants from '../constants/DashConstants';\r\n\r\nclass Representation {\r\n    constructor() {\r\n        this.id = null;\r\n        this.index = -1;\r\n        this.adaptation = null;\r\n        this.segmentInfoType = null;\r\n        this.initialization = null;\r\n        this.codecs = null;\r\n        this.mimeType = null;\r\n        this.codecPrivateData = null;\r\n        this.segmentDuration = NaN;\r\n        this.timescale = 1;\r\n        this.startNumber = 1;\r\n        this.indexRange = null;\r\n        this.range = null;\r\n        this.presentationTimeOffset = 0;\r\n        // Set the source buffer timeOffset to this\r\n        this.MSETimeOffset = NaN;\r\n        // The information we need in the DashHandler to determine whether the last segment has been loaded\r\n        this.mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN };\r\n        this.bandwidth = NaN;\r\n        this.width = NaN;\r\n        this.height = NaN;\r\n        this.scanType = null;\r\n        this.maxPlayoutRate = NaN;\r\n        this.availabilityTimeOffset = 0;\r\n        this.availabilityTimeComplete = true;\r\n        this.frameRate = null;\r\n    }\r\n\r\n    hasInitialization() {\r\n        return (this.initialization !== null || this.range !== null);\r\n    }\r\n\r\n    hasSegments() {\r\n        return this.segmentInfoType !== DashConstants.BASE_URL &&\r\n            this.segmentInfoType !== DashConstants.SEGMENT_BASE &&\r\n            !this.indexRange;\r\n    }\r\n}\r\n\r\nexport default Representation;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass AdaptationSet {\r\n    constructor() {\r\n        this.period = null;\r\n        this.index = -1;\r\n        this.type = null;\r\n    }\r\n}\r\n\r\nexport default AdaptationSet;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Period {\r\n    constructor() {\r\n        this.id = null;\r\n        this.index = -1;\r\n        this.duration = NaN;\r\n        this.start = NaN;\r\n        this.mpd = null;\r\n        this.nextPeriodId = null;\r\n    }\r\n}\r\n\r\nPeriod.DEFAULT_ID = 'defaultId';\r\n\r\nexport default Period;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Mpd {\r\n    constructor() {\r\n        this.manifest = null;\r\n        this.suggestedPresentationDelay = 0;\r\n        this.availabilityStartTime = null;\r\n        this.availabilityEndTime = Number.POSITIVE_INFINITY;\r\n        this.timeShiftBufferDepth = Number.POSITIVE_INFINITY;\r\n        this.maxSegmentDuration = Number.POSITIVE_INFINITY;\r\n        this.publishTime = null;\r\n        this.minimumUpdatePeriod = NaN;\r\n        this.mediaPresentationDuration = NaN;\r\n    }\r\n}\r\n\r\nexport default Mpd;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass UTCTiming {\r\n    constructor() {\r\n        // UTCTiming is a DescriptorType and doesn't have any additional fields\r\n        this.schemeIdUri = '';\r\n        this.value = '';\r\n    }\r\n}\r\n\r\nexport default UTCTiming;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Event {\r\n    constructor() {\r\n        this.type = '';\r\n        this.duration = NaN;\r\n        this.presentationTime = NaN;\r\n        this.id = NaN;\r\n        this.messageData = '';\r\n        this.eventStream = null;\r\n        this.presentationTimeDelta = NaN; // Specific EMSG Box parameter\r\n    }\r\n}\r\n\r\nexport default Event;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nconst DEFAULT_DVB_PRIORITY = 1;\r\nconst DEFAULT_DVB_WEIGHT = 1;\r\n\r\nclass BaseURL {\r\n    constructor(url, serviceLocation, priority, weight) {\r\n        this.url = url || '';\r\n        this.serviceLocation = serviceLocation || url || '';\r\n\r\n        // DVB extensions\r\n        this.dvb_priority = priority || DEFAULT_DVB_PRIORITY;\r\n        this.dvb_weight = weight || DEFAULT_DVB_WEIGHT;\r\n\r\n        this.availabilityTimeOffset = 0;\r\n        this.availabilityTimeComplete = true;\r\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing BaseURLs with content steering\r\n\r\n        /* currently unused:\r\n         * byteRange,\r\n         */\r\n    }\r\n}\r\n\r\nBaseURL.DEFAULT_DVB_PRIORITY = DEFAULT_DVB_PRIORITY;\r\nBaseURL.DEFAULT_DVB_WEIGHT = DEFAULT_DVB_WEIGHT;\r\n\r\nexport default BaseURL;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventStream {\r\n    constructor() {\r\n        this.adaptionSet = null;\r\n        this.representation = null;\r\n        this.period = null;\r\n        this.timescale = 1;\r\n        this.value = '';\r\n        this.schemeIdUri = '';\r\n        this.presentationTimeOffset = 0;\r\n    }\r\n}\r\n\r\nexport default EventStream;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ProducerReferenceTime {\r\n    constructor() {\r\n        this.id = null;\r\n        this.inband = false;\r\n        this.type = 'encoder';\r\n        this.applicationScheme = null;\r\n        this.wallClockTime = null;\r\n        this.presentationTime = NaN;\r\n        this.UTCTiming = null;\r\n    }\r\n}\r\n\r\nexport default ProducerReferenceTime;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ContentSteering {\r\n    constructor() {\r\n        this.defaultServiceLocation = null;\r\n        this.defaultServiceLocationArray = [];\r\n        this.queryBeforeStart = false;\r\n        this.serverUrl = null;\r\n        this.clientRequirement = true;\r\n    }\r\n}\r\n\r\nexport default ContentSteering;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2023, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DescriptorType {\r\n    constructor() {\r\n        this.schemeIdUri = null;\r\n        this.value = null;\r\n        this.id = null;\r\n    }\r\n\r\n    init(data) {\r\n        if (data) {\r\n            this.schemeIdUri = data.schemeIdUri ? data.schemeIdUri : null;\r\n            this.value = data.value ? data.value : null;\r\n            this.id = data.id ? data.id : null;\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default DescriptorType;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport deepEqual from 'fast-deep-equal';\r\n\r\n/**\r\n * @module ObjectUtils\r\n * @ignore\r\n * @description Provides utility functions for objects\r\n */\r\nfunction ObjectUtils() {\r\n\r\n    let instance;\r\n\r\n    /**\r\n     * Returns true if objects are equal\r\n     * @return {boolean}\r\n     * @param {object} obj1\r\n     * @param {object} obj2\r\n     * @memberof module:ObjectUtils\r\n     * @instance\r\n     */\r\n    function areEqual(obj1, obj2) {\r\n        return deepEqual(obj1, obj2);\r\n    }\r\n\r\n    instance = {\r\n        areEqual: areEqual\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nObjectUtils.__dashjs_factory_name = 'ObjectUtils';\r\nexport default FactoryMaker.getSingletonFactory(ObjectUtils);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\n/**\r\n * @module DefaultURLUtils\r\n * @description Provides utility functions for operating on URLs.\r\n * Initially this is simply a method to determine the Base URL of a URL, but\r\n * should probably include other things provided all over the place such as\r\n * determining whether a URL is relative/absolute, resolving two paths etc.\r\n * @ignore\r\n */\r\nfunction DefaultURLUtils() {\r\n\r\n    let resolveFunction;\r\n\r\n    const schemeRegex = /^[a-z][a-z0-9+\\-_.]*:/i;\r\n    const httpUrlRegex = /^https?:\\/\\//i;\r\n    const httpsUrlRegex = /^https:\\/\\//i;\r\n    const originRegex = /^([a-z][a-z0-9+\\-_.]*:\\/\\/[^\\/]+)\\/?/i;\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * Uses window.URL to do the resolution.\r\n     *\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     * @private\r\n     */\r\n    const nativeURLResolver = (url, baseUrl) => {\r\n        try {\r\n            return new window.URL(url, baseUrl).toString();\r\n        } catch (e) {\r\n            return url;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * Does not resolve ./, ../ etc but will do enough to construct something\r\n     * which will satisfy XHR etc when window.URL is not available ie\r\n     * IE11/node etc.\r\n     *\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     * @private\r\n     */\r\n    const dumbURLResolver = (url, baseUrl) => {\r\n        let baseUrlParseFunc = parseBaseUrl;\r\n\r\n        if (!baseUrl) {\r\n            return url;\r\n        }\r\n\r\n        if (!isRelative(url)) {\r\n            return url;\r\n        }\r\n\r\n        if (isPathAbsolute(url)) {\r\n            baseUrlParseFunc = parseOrigin;\r\n        }\r\n\r\n        if (isSchemeRelative(url)) {\r\n            baseUrlParseFunc = parseScheme;\r\n        }\r\n\r\n        const base = baseUrlParseFunc(baseUrl);\r\n        const joinChar =\r\n            base.charAt(base.length - 1) !== '/' &&\r\n            url.charAt(0) !== '/' ?\r\n                '/' : '';\r\n\r\n        return [base, url].join(joinChar);\r\n    };\r\n\r\n    function setup() {\r\n        try {\r\n            const u = new window.URL('x', 'http://y'); // eslint-disable-line\r\n            resolveFunction = nativeURLResolver;\r\n        } catch (e) {\r\n            // must be IE11/Node etc\r\n        } finally {\r\n            resolveFunction = resolveFunction || dumbURLResolver;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the Base URL of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function parseBaseUrl(url) {\r\n        const slashIndex = url.indexOf('/');\r\n        const lastSlashIndex = url.lastIndexOf('/');\r\n\r\n        if (slashIndex !== -1) {\r\n            // if there is only '//'\r\n            if (lastSlashIndex === slashIndex + 1) {\r\n                return url;\r\n            }\r\n\r\n            if (url.indexOf('?') !== -1) {\r\n                url = url.substring(0, url.indexOf('?'));\r\n            }\r\n\r\n            return url.substring(0, lastSlashIndex + 1);\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme and origin of a URL,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function parseOrigin(url) {\r\n        const matches = url.match(originRegex);\r\n\r\n        if (matches) {\r\n            return matches[1];\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the fragment of a URL without scheme,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function removeHostname(url) {\r\n        let urlParts = /^(?:\\w+\\:\\/\\/)?([^\\/]+)(.*)$/.exec(url); //[1] = host / [2] = path\r\n        return urlParts[2].substring(1);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function parseScheme(url) {\r\n        const matches = url.match(schemeRegex);\r\n\r\n        if (matches) {\r\n            return matches[0];\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is relative.\r\n     * @return {boolean}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isRelative(url) {\r\n        return !schemeRegex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is path-absolute.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isPathAbsolute(url) {\r\n        return isRelative(url) && url.charAt(0) === '/';\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is scheme-relative.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isSchemeRelative(url) {\r\n        return url.indexOf('//') === 0;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\r\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPURL(url) {\r\n        return httpUrlRegex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the supplied url has https scheme\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPS(url) {\r\n        return httpsUrlRegex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * @return {string}\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @memberof module:DefaultURLUtils\r\n     * @instance\r\n     */\r\n    function resolve(url, baseUrl) {\r\n        return resolveFunction(url, baseUrl);\r\n    }\r\n\r\n    setup();\r\n\r\n    const instance = {\r\n        parseBaseUrl: parseBaseUrl,\r\n        parseOrigin: parseOrigin,\r\n        parseScheme: parseScheme,\r\n        isRelative: isRelative,\r\n        isPathAbsolute: isPathAbsolute,\r\n        isSchemeRelative: isSchemeRelative,\r\n        isHTTPURL: isHTTPURL,\r\n        isHTTPS: isHTTPS,\r\n        removeHostname: removeHostname,\r\n        resolve: resolve\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDefaultURLUtils.__dashjs_factory_name = 'DefaultURLUtils';\r\nexport default FactoryMaker.getSingletonFactory(DefaultURLUtils);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport DefaultURLUtils from './DefaultURLUtils';\r\n\r\n/**\r\n * @module URLUtils\r\n * @ignore\r\n * @description Provides utility functions for operating on URLs.\r\n * Initially this is simply a method to determine the Base URL of a URL, but\r\n * should probably include other things provided all over the place such as\r\n * determining whether a URL is relative/absolute, resolving two paths etc.\r\n */\r\nfunction URLUtils() {\r\n\r\n    let instance;\r\n    let defaultURLUtils;\r\n    let regexUtils = [];\r\n    const context = this.context;\r\n\r\n    function getUtils(url) {\r\n        let i;\r\n        for (i = 0; i < regexUtils.length; i++) {\r\n            let regex = regexUtils[i].regex;\r\n            if (regex.test(url)) {\r\n                return regexUtils[i].utils;\r\n            }\r\n        }\r\n        return defaultURLUtils;\r\n    }\r\n\r\n    function setup() {\r\n        defaultURLUtils = DefaultURLUtils(context).getInstance();\r\n    }\r\n\r\n    /**\r\n     * Register a module to handle specific url.\r\n     * @param {regex} regex - url regex\r\n     * @param {object} utils - object that handles the regex\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function registerUrlRegex(regex, utils) {\r\n        regexUtils.push({regex: regex, utils: utils});\r\n    }\r\n\r\n    function internalCall(functionName, url, baseUrl) {\r\n        let utils = getUtils(baseUrl || url);\r\n        return utils && typeof (utils[functionName]) === 'function' ? utils[functionName](url, baseUrl) : defaultURLUtils[functionName](url, baseUrl);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the Base URL of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function parseBaseUrl(url) {\r\n        return internalCall('parseBaseUrl', url);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme and origin of a URL,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function parseOrigin(url) {\r\n        return internalCall('parseOrigin', url);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the fragment of a URL without scheme,\r\n     * if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function removeHostname(url) {\r\n        return internalCall('removeHostname', url);\r\n    }\r\n\r\n    /**\r\n     * Returns a string that contains the scheme of a URL, if determinable.\r\n     * @param {string} url - full url\r\n     * @return {string}\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function parseScheme(url) {\r\n        return internalCall('parseScheme', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is relative.\r\n     * @return {boolean}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isRelative(url) {\r\n        return internalCall('isRelative', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is path-absolute.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isPathAbsolute(url) {\r\n        return internalCall('isPathAbsolute', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is scheme-relative.\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isSchemeRelative(url) {\r\n        return internalCall('isSchemeRelative', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\r\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPURL(url) {\r\n        return internalCall('isHTTPURL', url);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the supplied url has https scheme\r\n     * @return {bool}\r\n     * @param {string} url\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function isHTTPS(url) {\r\n        return internalCall('isHTTPS', url);\r\n    }\r\n\r\n    /**\r\n     * Resolves a url given an optional base url\r\n     * @return {string}\r\n     * @param {string} url\r\n     * @param {string} [baseUrl]\r\n     * @memberof module:URLUtils\r\n     * @instance\r\n     */\r\n    function resolve(url, baseUrl) {\r\n        return internalCall('resolve', url, baseUrl);\r\n    }\r\n\r\n    setup();\r\n    instance = {\r\n        registerUrlRegex:   registerUrlRegex,\r\n        parseBaseUrl:       parseBaseUrl,\r\n        parseOrigin:        parseOrigin,\r\n        parseScheme:        parseScheme,\r\n        isRelative:         isRelative,\r\n        isPathAbsolute:     isPathAbsolute,\r\n        isSchemeRelative:   isSchemeRelative,\r\n        isHTTPURL:          isHTTPURL,\r\n        isHTTPS:            isHTTPS,\r\n        removeHostname:     removeHostname,\r\n        resolve:            resolve\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nURLUtils.__dashjs_factory_name = 'URLUtils';\r\nconst factory = FactoryMaker.getSingletonFactory(URLUtils);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from './ErrorsBase';\r\n\r\n/**\r\n * Errors declaration\r\n * @class\r\n */\r\nclass Errors extends ErrorsBase {\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Error code returned when a manifest parsing error occurs\r\n         */\r\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE = 10;\r\n\r\n        /**\r\n         * Error code returned when a manifest loading error occurs\r\n         */\r\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE = 11;\r\n\r\n        /**\r\n         * Error code returned when a xlink loading error occurs\r\n         */\r\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE = 12;\r\n\r\n        /**\r\n         * Error code returned when no segment ranges could be determined from the sidx box\r\n         */\r\n        this.SEGMENT_BASE_LOADER_ERROR_CODE = 15;\r\n\r\n        /**\r\n         * Error code returned when the time synchronization failed\r\n         */\r\n        this.TIME_SYNC_FAILED_ERROR_CODE = 16;\r\n\r\n        /**\r\n         * Error code returned when loading a fragment failed\r\n         */\r\n        this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE = 17;\r\n\r\n        /**\r\n         * Error code returned when the FragmentLoader did not receive a request object\r\n         */\r\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE = 18;\r\n\r\n        /**\r\n         * Error code returned when the BaseUrl resolution failed\r\n         */\r\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 19;\r\n\r\n        /**\r\n         * Error code returned when the append operation in the SourceBuffer failed\r\n         */\r\n        this.APPEND_ERROR_CODE = 20;\r\n\r\n        /**\r\n         * Error code returned when the remove operation in the SourceBuffer failed\r\n         */\r\n        this.REMOVE_ERROR_CODE = 21;\r\n\r\n        /**\r\n         * Error code returned when updating the internal objects after loading an MPD failed\r\n         */\r\n        this.DATA_UPDATE_FAILED_ERROR_CODE = 22;\r\n\r\n        /**\r\n         * Error code returned when MediaSource is not supported by the browser\r\n         */\r\n        this.CAPABILITY_MEDIASOURCE_ERROR_CODE = 23;\r\n\r\n        /**\r\n         * Error code returned when Protected contents are not supported\r\n         */\r\n        this.CAPABILITY_MEDIAKEYS_ERROR_CODE = 24;\r\n\r\n        /**\r\n         * Error code returned when loading the manifest failed\r\n         */\r\n        this.DOWNLOAD_ERROR_ID_MANIFEST_CODE = 25;\r\n\r\n        /**\r\n         * Error code returned when loading the sidx failed\r\n         */\r\n        this.DOWNLOAD_ERROR_ID_SIDX_CODE = 26;\r\n\r\n        /**\r\n         * Error code returned when loading the media content failed\r\n         */\r\n        this.DOWNLOAD_ERROR_ID_CONTENT_CODE = 27;\r\n\r\n        /**\r\n         * Error code returned when loading the init segment failed\r\n         */\r\n        this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE = 28;\r\n\r\n        /**\r\n         * Error code returned when loading the XLink content failed\r\n         */\r\n        this.DOWNLOAD_ERROR_ID_XLINK_CODE = 29;\r\n\r\n        /**\r\n         * Error code returned when parsing the MPD resulted in a logical error\r\n         */\r\n        this.MANIFEST_ERROR_ID_PARSE_CODE = 31;\r\n\r\n        /**\r\n         * Error code returned when no stream (period) has been detected in the manifest\r\n         */\r\n        this.MANIFEST_ERROR_ID_NOSTREAMS_CODE = 32;\r\n\r\n        /**\r\n         * Error code returned when something wrong has happened during parsing and appending subtitles (TTML or VTT)\r\n         */\r\n        this.TIMED_TEXT_ERROR_ID_PARSE_CODE = 33;\r\n\r\n        /**\r\n         * Error code returned when a 'muxed' media type has been detected in the manifest. This type is not supported\r\n         */\r\n\r\n        this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE = 34;\r\n\r\n        /**\r\n         * Error code returned when a media source type is not supported\r\n         */\r\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE = 35;\r\n\r\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE = 'parsing failed for ';\r\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading manifest: ';\r\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading Xlink element: ';\r\n        this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE = 'Segments update failed';\r\n        this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE = 'no segments are available yet';\r\n        this.SEGMENT_BASE_LOADER_ERROR_MESSAGE = 'error loading segment ranges from sidx';\r\n        this.TIME_SYNC_FAILED_ERROR_MESSAGE = 'Failed to synchronize client and server time';\r\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE = 'request is null';\r\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\r\n        this.APPEND_ERROR_MESSAGE = 'chunk is not defined';\r\n        this.REMOVE_ERROR_MESSAGE = 'Removing data from the SourceBuffer';\r\n        this.DATA_UPDATE_FAILED_ERROR_MESSAGE = 'Data update failed';\r\n        this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE = 'mediasource is not supported';\r\n        this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE = 'mediakeys is not supported';\r\n        this.TIMED_TEXT_ERROR_MESSAGE_PARSE = 'parsing error :';\r\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE = 'Error creating source buffer of type : ';\r\n    }\r\n}\r\n\r\nlet errors = new Errors();\r\nexport default errors;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ThumbnailTrackInfo {\r\n    constructor() {\r\n        this.bitrate = 0;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.tilesHor = 0;\r\n        this.tilesVert = 0;\r\n        this.widthPerTile = 0;\r\n        this.heightPerTile = 0;\r\n        this.startNumber = 0;\r\n        this.segmentDuration = 0;\r\n        this.timescale = 0;\r\n        this.templateUrl = '';\r\n        this.id = '';\r\n    }\r\n}\r\n\r\nexport default ThumbnailTrackInfo;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass IsoBox {\r\n    constructor(boxData) {\r\n        this.offset = boxData._offset;\r\n        this.type = boxData.type;\r\n        this.size = boxData.size;\r\n        this.boxes = [];\r\n        if (boxData.boxes) {\r\n            for (let i = 0; i < boxData.boxes.length; i++) {\r\n                this.boxes.push(new IsoBox(boxData.boxes[i]));\r\n            }\r\n        }\r\n        this.isComplete = true;\r\n\r\n        switch (boxData.type) {\r\n            case 'sidx':\r\n                this.timescale = boxData.timescale;\r\n                this.earliest_presentation_time = boxData.earliest_presentation_time;\r\n                this.first_offset = boxData.first_offset;\r\n                this.references = boxData.references;\r\n                if (boxData.references) {\r\n                    this.references = [];\r\n                    for (let i = 0; i < boxData.references.length; i++) {\r\n                        let reference = {\r\n                            reference_type: boxData.references[i].reference_type,\r\n                            referenced_size: boxData.references[i].referenced_size,\r\n                            subsegment_duration: boxData.references[i].subsegment_duration\r\n                        };\r\n                        this.references.push(reference);\r\n                    }\r\n                }\r\n                break;\r\n            case 'emsg':\r\n                this.id = boxData.id;\r\n                this.version = boxData.version === 1 ? 1 : 0;\r\n                this.value = boxData.value;\r\n                this.timescale = boxData.timescale;\r\n                this.scheme_id_uri = boxData.scheme_id_uri;\r\n                this.presentation_time_delta = boxData.version === 1 ? boxData.presentation_time : boxData.presentation_time_delta;\r\n                this.event_duration = boxData.event_duration;\r\n                this.message_data = boxData.message_data;\r\n                break;\r\n            case 'mdhd':\r\n                this.timescale = boxData.timescale;\r\n                break;\r\n            case 'mfhd':\r\n                this.sequence_number = boxData.sequence_number;\r\n                break;\r\n            case 'subs':\r\n                this.entry_count = boxData.entry_count;\r\n                this.entries = boxData.entries;\r\n                break;\r\n            case 'tfhd':\r\n                this.base_data_offset = boxData.base_data_offset;\r\n                this.sample_description_index = boxData.sample_description_index;\r\n                this.default_sample_duration = boxData.default_sample_duration;\r\n                this.default_sample_size = boxData.default_sample_size;\r\n                this.default_sample_flags = boxData.default_sample_flags;\r\n                this.flags = boxData.flags;\r\n                break;\r\n            case 'tfdt':\r\n                this.version = boxData.version;\r\n                this.baseMediaDecodeTime = boxData.baseMediaDecodeTime;\r\n                this.flags = boxData.flags;\r\n                break;\r\n            case 'trun':\r\n                this.sample_count = boxData.sample_count;\r\n                this.first_sample_flags = boxData.first_sample_flags;\r\n                this.data_offset = boxData.data_offset;\r\n                this.flags = boxData.flags;\r\n                this.samples = boxData.samples;\r\n                if (boxData.samples) {\r\n                    this.samples = [];\r\n                    for (let i = 0, ln = boxData.samples.length; i < ln; i++) {\r\n                        let sample = {\r\n                            sample_size: boxData.samples[i].sample_size,\r\n                            sample_duration: boxData.samples[i].sample_duration,\r\n                            sample_composition_time_offset: boxData.samples[i].sample_composition_time_offset\r\n                        };\r\n                        this.samples.push(sample);\r\n                    }\r\n                }\r\n                break;\r\n            case 'prft':\r\n                this.version = boxData.version;\r\n                this.reference_track_ID = boxData.reference_track_ID;\r\n                this.ntp_timestamp_sec = boxData.ntp_timestamp_sec;\r\n                this.ntp_timestamp_frac = boxData.ntp_timestamp_frac;\r\n                this.media_time = boxData.media_time;\r\n                this.flags = boxData.flags;\r\n                break;\r\n        }\r\n    }\r\n\r\n    getChildBox(type) {\r\n        for (let i = 0; i < this.boxes.length; i++) {\r\n            if (this.boxes[i].type === type) {\r\n                return this.boxes[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    getChildBoxes(type) {\r\n        let boxes = [];\r\n        for (let i = 0; i < this.boxes.length; i++) {\r\n            if (this.boxes[i].type === type) {\r\n                boxes.push(this.boxes[i]);\r\n            }\r\n        }\r\n        return boxes;\r\n    }\r\n\r\n}\r\n\r\nexport default IsoBox;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport IsoBox from '../vo/IsoBox';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nfunction IsoFile() {\r\n\r\n    let instance,\r\n        parsedIsoFile;\r\n\r\n    /**\r\n    * @param {string} type\r\n    * @returns {IsoBox|null}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getBox(type) {\r\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0) || typeof parsedIsoFile.fetch !== 'function') return null;\r\n\r\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\r\n    }\r\n\r\n    /**\r\n    * @param {string} type\r\n    * @returns {Array|null} array of {@link IsoBox}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getBoxes(type) {\r\n        let boxes = [];\r\n\r\n        if (!type || !parsedIsoFile || typeof parsedIsoFile.fetchAll !== 'function') {\r\n            return boxes;\r\n        }\r\n\r\n        let boxData = parsedIsoFile.fetchAll(type);\r\n        let box;\r\n\r\n        for (let i = 0, ln = boxData.length; i < ln; i++) {\r\n            box = convertToDashIsoBox(boxData[i]);\r\n\r\n            if (box) {\r\n                boxes.push(box);\r\n            }\r\n        }\r\n\r\n        return boxes;\r\n    }\r\n\r\n    /**\r\n    * @param {string} value\r\n    * @memberof IsoFile#\r\n    */\r\n    function setData(value) {\r\n        parsedIsoFile = value;\r\n    }\r\n\r\n    /**\r\n    * @returns {IsoBox|null}\r\n    * @memberof IsoFile#\r\n    */\r\n    function getLastBox() {\r\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\r\n\r\n        let type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\r\n        let boxes = getBoxes(type);\r\n\r\n        return boxes.length > 0 ? boxes[boxes.length - 1] : null;\r\n    }\r\n\r\n    function convertToDashIsoBox(boxData) {\r\n        if (!boxData) return null;\r\n\r\n        let box = new IsoBox(boxData);\r\n\r\n        if (boxData.hasOwnProperty('_incomplete')) {\r\n            box.isComplete = !boxData._incomplete;\r\n        }\r\n\r\n        return box;\r\n    }\r\n\r\n    instance = {\r\n        getBox: getBox,\r\n        getBoxes: getBoxes,\r\n        setData: setData,\r\n        getLastBox: getLastBox\r\n    };\r\n\r\n    return instance;\r\n}\r\nIsoFile.__dashjs_factory_name = 'IsoFile';\r\nexport default FactoryMaker.getClassFactory(IsoFile);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass IsoBoxSearchInfo {\r\n    constructor(lastCompletedOffset, found, size) {\r\n        this.lastCompletedOffset = lastCompletedOffset;\r\n        this.found = found;\r\n        this.size = size;\r\n    }\r\n}\r\n\r\nexport default IsoBoxSearchInfo;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport Debug from '../../core/Debug';\r\nimport IsoFile from './IsoFile';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport ISOBoxer from 'codem-isoboxer';\r\n\r\nimport IsoBoxSearchInfo from '../vo/IsoBoxSearchInfo';\r\n\r\nfunction BoxParser(/*config*/) {\r\n\r\n    let logger,\r\n        instance;\r\n    let context = this.context;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n    }\r\n\r\n    /**\r\n     * @param {ArrayBuffer} data\r\n     * @returns {IsoFile|null}\r\n     * @memberof BoxParser#\r\n     */\r\n    function parse(data) {\r\n        if (!data) return null;\r\n\r\n        if (data.fileStart === undefined) {\r\n            data.fileStart = 0;\r\n        }\r\n\r\n        let parsedFile = ISOBoxer.parseBuffer(data);\r\n        let dashIsoFile = IsoFile(context).create();\r\n\r\n        dashIsoFile.setData(parsedFile);\r\n\r\n        return dashIsoFile;\r\n    }\r\n\r\n    /**\r\n     * From the list of type boxes to look for, returns the latest one that is fully completed (header + payload). This\r\n     * method only looks into the list of top boxes and doesn't analyze nested boxes.\r\n     * @param {string[]} types\r\n     * @param {ArrayBuffer|uint8Array} buffer\r\n     * @param {number} offset\r\n     * @returns {IsoBoxSearchInfo}\r\n     * @memberof BoxParser#\r\n     */\r\n    function findLastTopIsoBoxCompleted(types, buffer, offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        // 8 = size (uint32) + type (4 characters)\r\n        if (!buffer || offset + 8 >= buffer.byteLength) {\r\n            return new IsoBoxSearchInfo(0, false);\r\n        }\r\n\r\n        const data = (buffer instanceof ArrayBuffer) ? new Uint8Array(buffer) : buffer;\r\n        let boxInfo;\r\n        let lastCompletedOffset = 0;\r\n        while (offset < data.byteLength) {\r\n            const boxSize = parseUint32(data, offset);\r\n            const boxType = parseIsoBoxType(data, offset + 4);\r\n\r\n            if (boxSize === 0) {\r\n                break;\r\n            }\r\n\r\n            if (offset + boxSize <= data.byteLength) {\r\n                if (types.indexOf(boxType) >= 0) {\r\n                    boxInfo = new IsoBoxSearchInfo(offset, true, boxSize);\r\n                } else {\r\n                    lastCompletedOffset = offset + boxSize;\r\n                }\r\n            }\r\n\r\n            offset += boxSize;\r\n        }\r\n\r\n        if (!boxInfo) {\r\n            return new IsoBoxSearchInfo(lastCompletedOffset, false);\r\n        }\r\n\r\n        return boxInfo;\r\n    }\r\n\r\n    function getSamplesInfo(ab) {\r\n        if (!ab || ab.byteLength === 0) {\r\n            return {sampleList: [], lastSequenceNumber: NaN, totalDuration: NaN, numSequences: NaN};\r\n        }\r\n        let isoFile = parse(ab);\r\n        // zero or more moofs\r\n        let moofBoxes = isoFile.getBoxes('moof');\r\n        // exactly one mfhd per moof\r\n        let mfhdBoxes = isoFile.getBoxes('mfhd');\r\n\r\n        let sampleDuration,\r\n            sampleCompositionTimeOffset,\r\n            sampleCount,\r\n            sampleSize,\r\n            sampleDts,\r\n            sampleList,\r\n            sample,\r\n            i, j, k, l, m, n,\r\n            dataOffset,\r\n            lastSequenceNumber,\r\n            numSequences,\r\n            totalDuration;\r\n\r\n        numSequences = isoFile.getBoxes('moof').length;\r\n        lastSequenceNumber = mfhdBoxes[mfhdBoxes.length - 1].sequence_number;\r\n        sampleCount = 0;\r\n\r\n        sampleList = [];\r\n        let subsIndex = -1;\r\n        let nextSubsSample = -1;\r\n        for (l = 0; l < moofBoxes.length; l++) {\r\n            let moofBox = moofBoxes[l];\r\n            // zero or more trafs per moof\r\n            let trafBoxes = moofBox.getChildBoxes('traf');\r\n            for (j = 0; j < trafBoxes.length; j++) {\r\n                let trafBox = trafBoxes[j];\r\n                // exactly one tfhd per traf\r\n                let tfhdBox = trafBox.getChildBox('tfhd');\r\n                // zero or one tfdt per traf\r\n                let tfdtBox = trafBox.getChildBox('tfdt');\r\n                sampleDts = tfdtBox.baseMediaDecodeTime;\r\n                // zero or more truns per traf\r\n                let trunBoxes = trafBox.getChildBoxes('trun');\r\n                // zero or more subs per traf\r\n                let subsBoxes = trafBox.getChildBoxes('subs');\r\n                for (k = 0; k < trunBoxes.length; k++) {\r\n                    let trunBox = trunBoxes[k];\r\n                    sampleCount = trunBox.sample_count;\r\n                    dataOffset = (tfhdBox.base_data_offset || 0) + (trunBox.data_offset || 0);\r\n\r\n                    for (i = 0; i < sampleCount; i++) {\r\n                        sample = trunBox.samples[i];\r\n                        sampleDuration = (sample.sample_duration !== undefined) ? sample.sample_duration : tfhdBox.default_sample_duration;\r\n                        sampleSize = (sample.sample_size !== undefined) ? sample.sample_size : tfhdBox.default_sample_size;\r\n                        sampleCompositionTimeOffset = (sample.sample_composition_time_offset !== undefined) ? sample.sample_composition_time_offset : 0;\r\n                        let sampleData = {\r\n                            'dts': sampleDts,\r\n                            'cts': (sampleDts + sampleCompositionTimeOffset),\r\n                            'duration': sampleDuration,\r\n                            'offset': moofBox.offset + dataOffset,\r\n                            'size': sampleSize,\r\n                            'subSizes': [sampleSize]\r\n                        };\r\n                        if (subsBoxes) {\r\n                            for (m = 0; m < subsBoxes.length; m++) {\r\n                                let subsBox = subsBoxes[m];\r\n                                if (subsIndex < (subsBox.entry_count - 1) && i > nextSubsSample) {\r\n                                    subsIndex++;\r\n                                    nextSubsSample += subsBox.entries[subsIndex].sample_delta;\r\n                                }\r\n                                if (i == nextSubsSample) {\r\n                                    sampleData.subSizes = [];\r\n                                    let entry = subsBox.entries[subsIndex];\r\n                                    for (n = 0; n < entry.subsample_count; n++) {\r\n                                        sampleData.subSizes.push(entry.subsamples[n].subsample_size);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        sampleList.push(sampleData);\r\n                        dataOffset += sampleSize;\r\n                        sampleDts += sampleDuration;\r\n                    }\r\n                }\r\n                totalDuration = sampleDts - tfdtBox.baseMediaDecodeTime;\r\n            }\r\n        }\r\n        return {sampleList: sampleList, lastSequenceNumber: lastSequenceNumber, totalDuration: totalDuration, numSequences: numSequences};\r\n    }\r\n\r\n    function getMediaTimescaleFromMoov(ab) {\r\n        let isoFile = parse(ab);\r\n        let mdhdBox = isoFile ? isoFile.getBox('mdhd') : undefined;\r\n\r\n        return mdhdBox ? mdhdBox.timescale : NaN;\r\n    }\r\n\r\n    function parseUint32(data, offset) {\r\n        return data[offset + 3] >>> 0 |\r\n            (data[offset + 2] << 8) >>> 0 |\r\n            (data[offset + 1] << 16) >>> 0 |\r\n            (data[offset] << 24) >>> 0;\r\n    }\r\n\r\n    function parseIsoBoxType(data, offset) {\r\n        return String.fromCharCode(data[offset++]) +\r\n            String.fromCharCode(data[offset++]) +\r\n            String.fromCharCode(data[offset++]) +\r\n            String.fromCharCode(data[offset]);\r\n    }\r\n\r\n    function findInitRange(data) {\r\n        let initRange = null;\r\n        let start,\r\n            end;\r\n\r\n        const isoFile = parse(data);\r\n\r\n        if (!isoFile) {\r\n            return initRange;\r\n        }\r\n\r\n        const ftyp = isoFile.getBox('ftyp');\r\n        const moov = isoFile.getBox('moov');\r\n\r\n        logger.debug('Searching for initialization.');\r\n\r\n        if (moov && moov.isComplete) {\r\n            start = ftyp ? ftyp.offset : moov.offset;\r\n            end = moov.offset + moov.size - 1;\r\n            initRange = start + '-' + end;\r\n\r\n            logger.debug('Found the initialization.  Range: ' + initRange);\r\n        }\r\n\r\n        return initRange;\r\n    }\r\n\r\n    /**\r\n     * Real-time parsing (whenever data is loaded in the buffer payload) of the payload to capture the moof of a chunk\r\n     * @param {array} types\r\n     * @param {ArrayBuffer} buffer\r\n     * @param {number} offset\r\n     * @return {IsoBoxSearchInfo}\r\n     */\r\n    function parsePayload(types, buffer, offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        if (!buffer || offset + 8 >= buffer.byteLength) {\r\n            return new IsoBoxSearchInfo(0, false);\r\n        }\r\n\r\n        const data = (buffer instanceof ArrayBuffer) ? new Uint8Array(buffer) : buffer;\r\n        let boxInfo;\r\n        let lastCompletedOffset = 0;\r\n        while (offset < data.byteLength) {\r\n            const boxSize = parseUint32(data, offset);\r\n            const boxType = parseIsoBoxType(data, offset + 4);\r\n\r\n            if (boxSize === 0) {\r\n                break;\r\n            }\r\n\r\n            if (offset + boxSize <= data.byteLength) {\r\n                if (types.indexOf(boxType) >= 0) {\r\n                    boxInfo = new IsoBoxSearchInfo(offset, true, boxSize, boxType);\r\n                } else {\r\n                    lastCompletedOffset = offset + boxSize;\r\n                }\r\n            }\r\n\r\n            offset += boxSize;\r\n        }\r\n\r\n        if (!boxInfo) {\r\n            return new IsoBoxSearchInfo(lastCompletedOffset, false);\r\n        }\r\n\r\n        return boxInfo;\r\n    }\r\n\r\n    instance = {\r\n        parse,\r\n        findLastTopIsoBoxCompleted,\r\n        getMediaTimescaleFromMoov,\r\n        getSamplesInfo,\r\n        findInitRange,\r\n        parsePayload\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\nBoxParser.__dashjs_factory_name = 'BoxParser';\r\nexport default FactoryMaker.getSingletonFactory(BoxParser);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Constants from '../../streaming/constants/Constants';\r\n\r\nimport {getTimeBasedSegment} from './SegmentsUtils';\r\n\r\nfunction TimelineSegmentsGetter(config, isDynamic) {\r\n\r\n    config = config || {};\r\n    const timelineConverter = config.timelineConverter;\r\n    const dashMetrics = config.dashMetrics;\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!timelineConverter) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getMediaFinishedInformation(representation) {\r\n        if (!representation) {\r\n            return 0;\r\n        }\r\n\r\n        const base = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate ||\r\n            representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\r\n        const timeline = base.SegmentTimeline;\r\n\r\n        let time = 0;\r\n        let scaledTime = 0;\r\n        let availableSegments = 0;\r\n\r\n        let fragments,\r\n            frag,\r\n            i,\r\n            len,\r\n            j,\r\n            repeat,\r\n            fTimescale;\r\n\r\n        fTimescale = representation.timescale;\r\n        fragments = timeline.S_asArray;\r\n\r\n        len = fragments.length;\r\n\r\n        for (i = 0; i < len; i++) {\r\n            frag = fragments[i];\r\n            repeat = 0;\r\n            if (frag.hasOwnProperty('r')) {\r\n                repeat = frag.r;\r\n            }\r\n\r\n            // For a repeated S element, t belongs only to the first segment\r\n            if (frag.hasOwnProperty('t')) {\r\n                time = frag.t;\r\n                scaledTime = time / fTimescale;\r\n            }\r\n\r\n            // This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\r\n            // next MPD update.\"\r\n            if (repeat < 0) {\r\n                const nextFrag = fragments[i + 1];\r\n                repeat = _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, scaledTime);\r\n            }\r\n\r\n            for (j = 0; j <= repeat; j++) {\r\n                availableSegments++;\r\n\r\n                time += frag.d;\r\n                scaledTime = time / fTimescale;\r\n            }\r\n        }\r\n\r\n        // We need to account for the index of the segments starting at 0. We subtract 1\r\n        return { numberOfSegments: availableSegments, mediaTimeOfLastSignaledSegment: scaledTime };\r\n    }\r\n\r\n    function iterateSegments(representation, iterFunc) {\r\n        const base = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate ||\r\n            representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\r\n        const timeline = base.SegmentTimeline;\r\n        const list = base.SegmentURL_asArray;\r\n\r\n        let time = 0;\r\n        let relativeIdx = -1;\r\n\r\n        let fragments,\r\n            frag,\r\n            i,\r\n            len,\r\n            j,\r\n            repeat,\r\n            fTimescale;\r\n\r\n        fTimescale = representation.timescale;\r\n        fragments = timeline.S_asArray;\r\n\r\n        let breakIterator = false;\r\n\r\n        for (i = 0, len = fragments.length; i < len && !breakIterator; i++) {\r\n            frag = fragments[i];\r\n            repeat = 0;\r\n            if (frag.hasOwnProperty('r')) {\r\n                repeat = frag.r;\r\n            }\r\n\r\n            // For a repeated S element, t belongs only to the first segment\r\n            if (frag.hasOwnProperty('t')) {\r\n                time = frag.t;\r\n            }\r\n\r\n            // This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\r\n            // next MPD update.\"\r\n            if (repeat < 0) {\r\n                const nextFrag = fragments[i + 1];\r\n                repeat = _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, time / fTimescale);\r\n            }\r\n\r\n            for (j = 0; j <= repeat && !breakIterator; j++) {\r\n                relativeIdx++;\r\n\r\n                breakIterator = iterFunc(time, base, list, frag, fTimescale, relativeIdx, i);\r\n\r\n                if (breakIterator) {\r\n                    representation.segmentDuration = frag.d / fTimescale;\r\n                }\r\n\r\n                time += frag.d;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, scaledTime) {\r\n        let repeatEndTime;\r\n\r\n        if (nextFrag && nextFrag.hasOwnProperty('t')) {\r\n            repeatEndTime = nextFrag.t / fTimescale;\r\n        } else {\r\n            try {\r\n                let availabilityEnd = 0;\r\n                if (!isNaN(representation.adaptation.period.start) && !isNaN(representation.adaptation.period.duration) && isFinite(representation.adaptation.period.duration)) {\r\n                    // use end of the Period\r\n                    availabilityEnd = representation.adaptation.period.start + representation.adaptation.period.duration;\r\n                } else {\r\n                    // use DVR window\r\n                    const dvrWindow = dashMetrics.getCurrentDVRInfo();\r\n                    availabilityEnd = !isNaN(dvrWindow.end) ? dvrWindow.end : 0;\r\n                }\r\n                repeatEndTime = timelineConverter.calcMediaTimeFromPresentationTime(availabilityEnd, representation);\r\n                representation.segmentDuration = frag.d / fTimescale;\r\n            } catch (e) {\r\n                repeatEndTime = 0;\r\n            }\r\n        }\r\n\r\n        return Math.max(Math.ceil((repeatEndTime - scaledTime) / (frag.d / fTimescale)) - 1, 0);\r\n    }\r\n\r\n\r\n    function getSegmentByIndex(representation, index, lastSegmentTime) {\r\n        checkConfig();\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        let segment = null;\r\n        let found = false;\r\n\r\n        iterateSegments(representation, function (time, base, list, frag, fTimescale, relativeIdx, i) {\r\n            if (found || lastSegmentTime < 0) {\r\n                let media = base.media;\r\n                let mediaRange = frag.mediaRange;\r\n\r\n                if (list) {\r\n                    media = list[i].media || '';\r\n                    mediaRange = list[i].mediaRange;\r\n                }\r\n\r\n                segment = getTimeBasedSegment(\r\n                    timelineConverter,\r\n                    isDynamic,\r\n                    representation,\r\n                    time,\r\n                    frag.d,\r\n                    fTimescale,\r\n                    media,\r\n                    mediaRange,\r\n                    relativeIdx,\r\n                    frag.tManifest);\r\n\r\n                return true;\r\n            } else if (time >= (lastSegmentTime * fTimescale) - (frag.d * 0.5)) { // same logic, if deviation is\r\n                // 50% of segment duration, segment is found if time is greater than or equal to (startTime of previous segment - half of the previous segment duration)\r\n                found = true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return segment;\r\n    }\r\n\r\n    function getSegmentByTime(representation, requestedTime) {\r\n        checkConfig();\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        if (requestedTime === undefined) {\r\n            requestedTime = null;\r\n        }\r\n\r\n        let segment = null;\r\n        const requiredMediaTime = timelineConverter.calcMediaTimeFromPresentationTime(requestedTime, representation);\r\n\r\n        iterateSegments(representation, function (time, base, list, frag, fTimescale, relativeIdx, i) {\r\n            // In some cases when requiredMediaTime = actual end time of the last segment\r\n            // it is possible that this time a bit exceeds the declared end time of the last segment.\r\n            // in this case we still need to include the last segment in the segment list.\r\n            const scaledMediaTime = precisionRound(requiredMediaTime * fTimescale);\r\n            if (scaledMediaTime < (time + frag.d) && scaledMediaTime >= time) {\r\n                let media = base.media;\r\n                let mediaRange = frag.mediaRange;\r\n\r\n                if (list) {\r\n                    media = list[i].media || '';\r\n                    mediaRange = list[i].mediaRange;\r\n                }\r\n\r\n                segment = getTimeBasedSegment(\r\n                    timelineConverter,\r\n                    isDynamic,\r\n                    representation,\r\n                    time,\r\n                    frag.d,\r\n                    fTimescale,\r\n                    media,\r\n                    mediaRange,\r\n                    relativeIdx,\r\n                    frag.tManifest);\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return segment;\r\n    }\r\n\r\n    function precisionRound(number) {\r\n        return parseFloat(number.toPrecision(15));\r\n    }\r\n\r\n    instance = {\r\n        getSegmentByIndex,\r\n        getSegmentByTime,\r\n        getMediaFinishedInformation\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTimelineSegmentsGetter.__dashjs_factory_name = 'TimelineSegmentsGetter';\r\nconst factory = FactoryMaker.getClassFactory(TimelineSegmentsGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Constants from '../../streaming/constants/Constants';\r\n\r\nimport {replaceTokenForTemplate, getIndexBasedSegment} from './SegmentsUtils';\r\n\r\nfunction TemplateSegmentsGetter(config, isDynamic) {\r\n    config = config || {};\r\n    const timelineConverter = config.timelineConverter;\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getMediaFinishedInformation(representation) {\r\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\r\n        if (!representation) {\r\n            return mediaFinishedInformation\r\n        }\r\n\r\n        const duration = representation.segmentDuration;\r\n        if (isNaN(duration)) {\r\n            mediaFinishedInformation.numberOfSegments = 1;\r\n        } else {\r\n            mediaFinishedInformation.numberOfSegments = Math.ceil(representation.adaptation.period.duration / duration);\r\n        }\r\n\r\n        return mediaFinishedInformation;\r\n    }\r\n\r\n    function getSegmentByIndex(representation, index) {\r\n        checkConfig();\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        const template = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate;\r\n\r\n        // This is the index without @startNumber\r\n        index = Math.max(index, 0);\r\n\r\n        const seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, index);\r\n        if (seg) {\r\n            seg.replacementTime = Math.round((index - 1) * representation.segmentDuration * representation.timescale, 10);\r\n\r\n            let url = template.media;\r\n            url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\r\n            url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\r\n            seg.media = url;\r\n        }\r\n\r\n        return seg;\r\n    }\r\n\r\n    function getSegmentByTime(representation, requestedTime) {\r\n        checkConfig();\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        const duration = representation.segmentDuration;\r\n\r\n        if (isNaN(duration)) {\r\n            return null;\r\n        }\r\n\r\n        // Calculate the relative time for the requested time in this period\r\n        let periodTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\r\n        const index = Math.floor(periodTime / duration);\r\n\r\n        return getSegmentByIndex(representation, index);\r\n    }\r\n\r\n    instance = {\r\n        getSegmentByIndex,\r\n        getSegmentByTime,\r\n        getMediaFinishedInformation\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nTemplateSegmentsGetter.__dashjs_factory_name = 'TemplateSegmentsGetter';\r\nconst factory = FactoryMaker.getClassFactory(TemplateSegmentsGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Constants from '../../streaming/constants/Constants';\r\n\r\nimport {getIndexBasedSegment} from './SegmentsUtils';\r\n\r\nfunction ListSegmentsGetter(config, isDynamic) {\r\n\r\n    config = config || {};\r\n    const timelineConverter = config.timelineConverter;\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getMediaFinishedInformation(representation) {\r\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\r\n\r\n        if (!representation) {\r\n            return mediaFinishedInformation;\r\n        }\r\n\r\n        const list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\r\n        const startNumber = representation && !isNaN(representation.startNumber) ? representation.startNumber : 1;\r\n        const offset = Math.max(startNumber - 1, 0);\r\n\r\n        mediaFinishedInformation.numberOfSegments = offset + list.SegmentURL_asArray.length;\r\n\r\n        return mediaFinishedInformation\r\n    }\r\n\r\n    function getSegmentByIndex(representation, index) {\r\n        checkConfig();\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        const list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\r\n        const len = list.SegmentURL_asArray.length;\r\n\r\n        const startNumber = representation && !isNaN(representation.startNumber) ? representation.startNumber : 1;\r\n        const offsetToSubtract = Math.max(startNumber - 1, 0);\r\n\r\n        const relativeIndex = Math.max(index - offsetToSubtract, 0);\r\n\r\n        let segment = null;\r\n        if (relativeIndex < len) {\r\n            const s = list.SegmentURL_asArray[relativeIndex];\r\n\r\n            segment = getIndexBasedSegment(timelineConverter, isDynamic, representation, index);\r\n            if (segment) {\r\n                segment.replacementTime = (startNumber + index - 1) * representation.segmentDuration;\r\n                segment.media = s.media ? s.media : '';\r\n                segment.mediaRange = s.mediaRange;\r\n                segment.indexRange = s.indexRange;\r\n            }\r\n        }\r\n\r\n        return segment;\r\n    }\r\n\r\n    function getSegmentByTime(representation, requestedTime) {\r\n        checkConfig();\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        const duration = representation.segmentDuration;\r\n\r\n        if (isNaN(duration)) {\r\n            return null;\r\n        }\r\n\r\n        const periodTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\r\n        const index = Math.floor(periodTime / duration);\r\n\r\n        return getSegmentByIndex(representation, index);\r\n    }\r\n\r\n    instance = {\r\n        getSegmentByIndex,\r\n        getSegmentByTime,\r\n        getMediaFinishedInformation\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nListSegmentsGetter.__dashjs_factory_name = 'ListSegmentsGetter';\r\nconst factory = FactoryMaker.getClassFactory(ListSegmentsGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Constants from '../../streaming/constants/Constants';\r\n\r\n\r\nfunction SegmentBaseGetter(config) {\r\n\r\n    config = config || {};\r\n    const timelineConverter = config.timelineConverter;\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getMediaFinishedInformation(representation) {\r\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\r\n\r\n        if (!representation || !representation.segments) {\r\n            return mediaFinishedInformation\r\n        }\r\n\r\n        mediaFinishedInformation.numberOfSegments = representation.segments.length;\r\n\r\n        return mediaFinishedInformation;\r\n    }\r\n\r\n    function getSegmentByIndex(representation, index) {\r\n        checkConfig();\r\n\r\n        if (!representation) {\r\n            return null;\r\n        }\r\n\r\n        const len = representation.segments ? representation.segments.length : -1;\r\n        let seg;\r\n        if (index < len) {\r\n            seg = representation.segments[index];\r\n            if (seg && seg.index === index) {\r\n                return seg;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            seg = representation.segments[i];\r\n\r\n            if (seg && seg.index === index) {\r\n                return seg;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getSegmentByTime(representation, requestedTime) {\r\n        checkConfig();\r\n\r\n        const index = getIndexByTime(representation, requestedTime);\r\n\r\n        return getSegmentByIndex(representation, index);\r\n    }\r\n\r\n    function getIndexByTime(representation, time) {\r\n        if (!representation) {\r\n            return -1;\r\n        }\r\n\r\n        const segments = representation.segments;\r\n        const ln = segments ? segments.length : null;\r\n\r\n        let idx = -1;\r\n        let epsilon,\r\n            seg,\r\n            ft,\r\n            fd,\r\n            i;\r\n\r\n        if (segments && ln > 0) {\r\n            for (i = 0; i < ln; i++) {\r\n                seg = segments[i];\r\n                ft = seg.presentationStartTime;\r\n                fd = seg.duration;\r\n\r\n                epsilon = fd / 2;\r\n                if ((time + epsilon) >= ft &&\r\n                    (time - epsilon) < (ft + fd)) {\r\n                    idx = seg.index;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return idx;\r\n    }\r\n\r\n    instance = {\r\n        getSegmentByIndex,\r\n        getSegmentByTime,\r\n        getMediaFinishedInformation\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nSegmentBaseGetter.__dashjs_factory_name = 'SegmentBaseGetter';\r\nconst factory = FactoryMaker.getClassFactory(SegmentBaseGetter);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport TimelineSegmentsGetter from '../utils/TimelineSegmentsGetter';\r\nimport TemplateSegmentsGetter from '../utils/TemplateSegmentsGetter';\r\nimport ListSegmentsGetter from '../utils/ListSegmentsGetter';\r\nimport SegmentBaseGetter from '../utils/SegmentBaseGetter';\r\n\r\nfunction SegmentsController(config) {\r\n    config = config || {};\r\n\r\n    const context = this.context;\r\n    const dashConstants = config.dashConstants;\r\n    const type = config.type;\r\n    const segmentBaseController = config.segmentBaseController;\r\n\r\n    let instance,\r\n        getters;\r\n\r\n    function setup() {\r\n        getters = {};\r\n    }\r\n\r\n    function initialize(isDynamic) {\r\n        getters[dashConstants.SEGMENT_TIMELINE] = TimelineSegmentsGetter(context).create(config, isDynamic);\r\n        getters[dashConstants.SEGMENT_TEMPLATE] = TemplateSegmentsGetter(context).create(config, isDynamic);\r\n        getters[dashConstants.SEGMENT_LIST] = ListSegmentsGetter(context).create(config, isDynamic);\r\n        getters[dashConstants.SEGMENT_BASE] = SegmentBaseGetter(context).create(config, isDynamic);\r\n    }\r\n\r\n    function updateInitData(voRepresentation, hasInitialization) {\r\n        if (hasInitialization) {\r\n            return Promise.resolve();\r\n        }\r\n        return segmentBaseController.getSegmentBaseInitSegment({\r\n            representation: voRepresentation,\r\n            mediaType: type\r\n        });\r\n    }\r\n\r\n    function updateSegmentData(voRepresentation, hasSegments) {\r\n        if (hasSegments) {\r\n            return Promise.resolve();\r\n        }\r\n        return segmentBaseController.getSegmentList({\r\n            mimeType: voRepresentation.mimeType,\r\n            representation: voRepresentation,\r\n            mediaType: type\r\n        });\r\n    }\r\n\r\n    function getSegmentsGetter(representation) {\r\n        return representation ? representation.segments ? getters[dashConstants.SEGMENT_BASE] : getters[representation.segmentInfoType] : null;\r\n    }\r\n\r\n    function getSegmentByIndex(representation, index, lastSegmentTime) {\r\n        const getter = getSegmentsGetter(representation);\r\n        return getter ? getter.getSegmentByIndex(representation, index, lastSegmentTime) : null;\r\n    }\r\n\r\n    function getSegmentByTime(representation, time) {\r\n        const getter = getSegmentsGetter(representation);\r\n        return getter ? getter.getSegmentByTime(representation, time) : null;\r\n    }\r\n\r\n    function getMediaFinishedInformation(representation) {\r\n        const getter = getSegmentsGetter(representation);\r\n        return getter ? getter.getMediaFinishedInformation(representation) : {\r\n            numberOfSegments: 0,\r\n            mediaTimeOfLastSignaledSegment: NaN\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        initialize,\r\n        updateInitData,\r\n        updateSegmentData,\r\n        getSegmentByIndex,\r\n        getSegmentByTime,\r\n        getMediaFinishedInformation\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nSegmentsController.__dashjs_factory_name = 'SegmentsController';\r\nconst factory = FactoryMaker.getClassFactory(SegmentsController);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from '../constants/Constants';\r\nimport DashConstants from '../../dash/constants/DashConstants';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport ThumbnailTrackInfo from '../vo/ThumbnailTrackInfo';\r\nimport URLUtils from '../../streaming/utils/URLUtils';\r\nimport {replaceIDForTemplate, getTimeBasedSegment} from '../../dash/utils/SegmentsUtils';\r\nimport BoxParser from '../../streaming/utils/BoxParser';\r\nimport XHRLoader from '../../streaming/net/XHRLoader';\r\nimport DashHandler from '../../dash/DashHandler';\r\nimport SegmentsController from '../../dash/controllers/SegmentsController';\r\n\r\nexport const THUMBNAILS_SCHEME_ID_URIS = ['http://dashif.org/thumbnail_tile',\r\n    'http://dashif.org/guidelines/thumbnail_tile'];\r\n\r\nfunction ThumbnailTracks(config) {\r\n    const context = this.context;\r\n    const adapter = config.adapter;\r\n    const baseURLController = config.baseURLController;\r\n    const streamInfo = config.streamInfo;\r\n    const timelineConverter = config.timelineConverter;\r\n    const debug = config.debug;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const dashConstants = config.dashConstants;\r\n\r\n    const urlUtils = URLUtils(context).getInstance();\r\n\r\n    let instance,\r\n        tracks,\r\n        dashHandler,\r\n        currentTrackIndex,\r\n        mediaInfo,\r\n        segmentsController,\r\n        loader,\r\n        boxParser;\r\n\r\n    function setup() {\r\n        reset();\r\n        loader = XHRLoader(context).create({});\r\n        boxParser = BoxParser(context).getInstance();\r\n\r\n        segmentsController = SegmentsController(context).create({\r\n            events,\r\n            eventBus,\r\n            streamInfo,\r\n            timelineConverter,\r\n            dashConstants,\r\n            dashMetrics: config.dashMetrics,\r\n            segmentBaseController: config.segmentBaseController,\r\n            type: Constants.IMAGE\r\n        });\r\n\r\n        dashHandler = DashHandler(context).create({\r\n            streamInfo,\r\n            type: Constants.IMAGE,\r\n            timelineConverter,\r\n            segmentsController,\r\n            baseURLController,\r\n            debug,\r\n            eventBus,\r\n            events,\r\n            dashConstants,\r\n            urlUtils\r\n        });\r\n\r\n        // initialize controllers\r\n        dashHandler.initialize(adapter ? adapter.getIsDynamic() : false);\r\n    }\r\n\r\n    function addTracks() {\r\n        if (!streamInfo || !adapter) {\r\n            return;\r\n        }\r\n\r\n        // Extract thumbnail tracks\r\n        mediaInfo = adapter.getMediaInfoForType(streamInfo, Constants.IMAGE);\r\n        if (!mediaInfo) {\r\n            return;\r\n        }\r\n\r\n        const voReps = adapter.getVoRepresentations(mediaInfo);\r\n\r\n        if (voReps && voReps.length > 0) {\r\n            voReps.forEach((rep) => {\r\n                if ((rep.segmentInfoType === DashConstants.SEGMENT_TEMPLATE && rep.segmentDuration > 0 && rep.media) ||\r\n                    rep.segmentInfoType === DashConstants.SEGMENT_TIMELINE) {\r\n                    _createTrack(rep);\r\n                }\r\n                if (rep.segmentInfoType === DashConstants.SEGMENT_BASE) {\r\n                    _createTrack(rep, true);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (tracks.length > 0) {\r\n            // Sort bitrates and select the lowest bitrate rendition\r\n            tracks.sort((a, b) => a.bitrate - b.bitrate);\r\n        }\r\n    }\r\n\r\n    function _createTrack(representation, useSegmentBase) {\r\n        const track = new ThumbnailTrackInfo();\r\n        track.id = representation.id;\r\n        track.bitrate = representation.bandwidth;\r\n        track.width = representation.width;\r\n        track.height = representation.height;\r\n        track.tilesHor = 1;\r\n        track.tilesVert = 1;\r\n\r\n        if (representation.essentialProperties) {\r\n            representation.essentialProperties.forEach((p) => {\r\n                if (THUMBNAILS_SCHEME_ID_URIS.indexOf(p.schemeIdUri) >= 0 && p.value) {\r\n                    const vars = p.value.split('x');\r\n                    if (vars.length === 2 && !isNaN(vars[0]) && !isNaN(vars[1])) {\r\n                        track.tilesHor = parseInt(vars[0], 10);\r\n                        track.tilesVert = parseInt(vars[1], 10);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (useSegmentBase) {\r\n            segmentsController.updateSegmentData(representation)\r\n                .then((data) => {\r\n                    _handleUpdatedSegmentData(track, representation, data);\r\n                });\r\n\r\n        } else {\r\n            track.startNumber = representation.startNumber;\r\n            track.segmentDuration = representation.segmentDuration;\r\n            track.timescale = representation.timescale;\r\n            track.templateUrl = buildTemplateUrl(representation);\r\n        }\r\n\r\n        if (track.tilesHor > 0 && track.tilesVert > 0) {\r\n            // Precalculate width and heigth per tile for perf reasons\r\n            track.widthPerTile = track.width / track.tilesHor;\r\n            track.heightPerTile = track.height / track.tilesVert;\r\n            tracks.push(track);\r\n        }\r\n    }\r\n\r\n    function _handleUpdatedSegmentData(track, representation, data) {\r\n        let cache = [];\r\n        const segments = _normalizeSegments(data, representation);\r\n        representation.segments = segments;\r\n        track.segmentDuration = representation.segments[0].duration; //assume all segments have the same duration\r\n\r\n        track.readThumbnail = function (time, callback) {\r\n\r\n            let cached = null;\r\n            cache.some(el => {\r\n                if (el.start <= time && el.end > time) {\r\n                    cached = el.url;\r\n                    return true;\r\n                }\r\n            });\r\n            if (cached) {\r\n                callback(cached);\r\n            } else {\r\n                representation.segments.some((ss) => {\r\n                    if (ss.mediaStartTime <= time && ss.mediaStartTime + ss.duration > time) {\r\n                        const baseURL = baseURLController.resolve(representation.path);\r\n                        loader.load({\r\n                            method: 'get',\r\n                            url: baseURL.url,\r\n                            request: {\r\n                                range: ss.mediaRange,\r\n                                responseType: 'arraybuffer'\r\n                            },\r\n                            onload: function (e) {\r\n                                let info = boxParser.getSamplesInfo(e.target.response);\r\n                                let blob = new Blob([e.target.response.slice(info.sampleList[0].offset, info.sampleList[0].offset + info.sampleList[0].size)], { type: 'image/jpeg' });\r\n                                let imageUrl = window.URL.createObjectURL(blob);\r\n                                cache.push({\r\n                                    start: ss.mediaStartTime,\r\n                                    end: ss.mediaStartTime + ss.duration,\r\n                                    url: imageUrl\r\n                                });\r\n                                if (callback)\r\n                                    callback(imageUrl);\r\n                            }\r\n                        });\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function _normalizeSegments(data, representation) {\r\n        const segments = [];\r\n        let count = 0;\r\n\r\n        let i,\r\n            len,\r\n            s,\r\n            seg;\r\n\r\n        for (i = 0, len = data.segments.length; i < len; i++) {\r\n            s = data.segments[i];\r\n\r\n            seg = getTimeBasedSegment(\r\n                timelineConverter,\r\n                adapter.getIsDynamic(),\r\n                representation,\r\n                s.startTime,\r\n                s.duration,\r\n                s.timescale,\r\n                s.media,\r\n                s.mediaRange,\r\n                count);\r\n\r\n            if (seg) {\r\n                segments.push(seg);\r\n                seg = null;\r\n                count++;\r\n            }\r\n        }\r\n        return segments;\r\n    }\r\n\r\n    function buildTemplateUrl(representation) {\r\n        const templateUrl = urlUtils.isRelative(representation.media) ?\r\n            urlUtils.resolve(representation.media, baseURLController.resolve(representation.path).url) : representation.media;\r\n\r\n        if (!templateUrl) {\r\n            return '';\r\n        }\r\n\r\n        return replaceIDForTemplate(templateUrl, representation.id);\r\n    }\r\n\r\n    function getTracks() {\r\n        return tracks;\r\n    }\r\n\r\n    function getCurrentTrackIndex() {\r\n        return currentTrackIndex;\r\n    }\r\n\r\n    function getCurrentTrack() {\r\n        if (currentTrackIndex < 0) {\r\n            return null;\r\n        }\r\n        return tracks[currentTrackIndex];\r\n    }\r\n\r\n    function setTrackByIndex(index) {\r\n        if (!tracks || tracks.length === 0) {\r\n            return;\r\n        }\r\n        // select highest bitrate in case selected index is higher than bitrate list length\r\n        if (index >= tracks.length) {\r\n            index = tracks.length - 1;\r\n        }\r\n        currentTrackIndex = index;\r\n    }\r\n\r\n    function getThumbnailRequestForTime(time) {\r\n        let currentVoRep;\r\n        const voReps = adapter.getVoRepresentations(mediaInfo);\r\n        for (let i = 0; i < voReps.length; i++) {\r\n            if (tracks[currentTrackIndex].id === voReps[i].id) {\r\n                currentVoRep = voReps[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return dashHandler.getSegmentRequestForTime(mediaInfo, currentVoRep, time);\r\n    }\r\n\r\n    function reset() {\r\n        tracks = [];\r\n        currentTrackIndex = -1;\r\n        mediaInfo = null;\r\n    }\r\n\r\n    instance = {\r\n        getTracks,\r\n        addTracks,\r\n        reset,\r\n        setTrackByIndex,\r\n        getCurrentTrack,\r\n        getCurrentTrackIndex,\r\n        getThumbnailRequestForTime\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nThumbnailTracks.__dashjs_factory_name = 'ThumbnailTracks';\r\nexport default FactoryMaker.getClassFactory(ThumbnailTracks);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2023, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass MpdLocation {\r\n    constructor(url, serviceLocation) {\r\n        this.url = url || '';\r\n        this.serviceLocation = serviceLocation || null;\r\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing Locations with content steering\r\n    }\r\n}\r\n\r\nexport default MpdLocation;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2023, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass PatchLocation {\r\n    constructor(url, serviceLocation, ttl) {\r\n        this.url = url || '';\r\n        this.serviceLocation = serviceLocation || null;\r\n        this.ttl = ttl || NaN;\r\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing Locations with content steering\r\n    }\r\n}\r\n\r\nexport default PatchLocation;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2024, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ClientDataReporting {\r\n    constructor() {\r\n        this.CMCDParameters = null;\r\n        this.serviceLocations = null;\r\n        this.serviceLocationsArray = [];\r\n        this.adaptationSets = null;\r\n        this.adaptationSetsArray = [];\r\n    }\r\n}\r\n\r\nexport default ClientDataReporting;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from '../../streaming/constants/Constants';\r\nimport DashConstants from '../constants/DashConstants';\r\nimport Representation from '../vo/Representation';\r\nimport AdaptationSet from '../vo/AdaptationSet';\r\nimport Period from '../vo/Period';\r\nimport Mpd from '../vo/Mpd';\r\nimport UTCTiming from '../vo/UTCTiming';\r\nimport Event from '../vo/Event';\r\nimport BaseURL from '../vo/BaseURL';\r\nimport EventStream from '../vo/EventStream';\r\nimport ProducerReferenceTime from '../vo/ProducerReferenceTime';\r\nimport ContentSteering from '../vo/ContentSteering';\r\nimport DescriptorType from '../vo/DescriptorType';\r\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\r\nimport URLUtils from '../../streaming/utils/URLUtils';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Debug from '../../core/Debug';\r\nimport DashJSError from '../../streaming/vo/DashJSError';\r\nimport Errors from '../../core/errors/Errors';\r\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../../streaming/thumbnail/ThumbnailTracks';\r\nimport MpdLocation from '../vo/MpdLocation';\r\nimport PatchLocation from '../vo/PatchLocation';\r\nimport ClientDataReporting from '../vo/ClientDataReporting';\r\n\r\nfunction DashManifestModel() {\r\n    let instance,\r\n        logger,\r\n        errHandler,\r\n        BASE64;\r\n\r\n    const context = this.context;\r\n    const urlUtils = URLUtils(context).getInstance();\r\n\r\n    const isInteger = Number.isInteger || function (value) {\r\n        return typeof value === 'number' &&\r\n            isFinite(value) &&\r\n            Math.floor(value) === value;\r\n    };\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n    }\r\n\r\n    function getIsTypeOf(adaptation, type) {\r\n        if (!adaptation) {\r\n            throw new Error('adaptation is not defined');\r\n        }\r\n\r\n        if (!type) {\r\n            throw new Error('type is not defined');\r\n        }\r\n\r\n        // Check for thumbnail images\r\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length) {\r\n            const essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);\r\n            if (essentialProperties && essentialProperties.length > 0 && THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri) >= 0) {\r\n                return (type === Constants.IMAGE);\r\n            }\r\n        }\r\n\r\n        // Check ContentComponent.contentType\r\n        if (adaptation.ContentComponent_asArray && adaptation.ContentComponent_asArray.length > 0) {\r\n            if (adaptation.ContentComponent_asArray.length > 1) {\r\n                return (type === Constants.MUXED);\r\n            } else if (adaptation.ContentComponent_asArray[0].contentType === type) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const mimeTypeRegEx = (type === Constants.TEXT) ? new RegExp('(ttml|vtt|wvtt|stpp)') : new RegExp(type);\r\n\r\n        // Check codecs\r\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length) {\r\n            const codecs = adaptation.Representation_asArray[0].codecs;\r\n            if (mimeTypeRegEx.test(codecs)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Check Adaptation's mimeType\r\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\r\n            return mimeTypeRegEx.test(adaptation.mimeType);\r\n        }\r\n\r\n        // Check Representation's mimeType\r\n        if (adaptation.Representation_asArray) {\r\n            let representation;\r\n            for (let i = 0; i < adaptation.Representation_asArray.length; i++) {\r\n                representation = adaptation.Representation_asArray[i];\r\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\r\n                    return mimeTypeRegEx.test(representation.mimeType);\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function getIsFragmented(adaptation) {\r\n        if (!adaptation) {\r\n            throw new Error('adaptation is not defined');\r\n        }\r\n        if (adaptation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE) ||\r\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ||\r\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_LIST) ||\r\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\r\n            return true;\r\n        }\r\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\r\n            const representation = adaptation.Representation_asArray[0];\r\n            if (representation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE) ||\r\n                representation.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ||\r\n                representation.hasOwnProperty(DashConstants.SEGMENT_LIST) ||\r\n                representation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function getIsAudio(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.AUDIO);\r\n    }\r\n\r\n    function getIsVideo(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.VIDEO);\r\n    }\r\n\r\n    function getIsText(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.TEXT);\r\n    }\r\n\r\n    function getIsMuxed(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.MUXED);\r\n    }\r\n\r\n    function getIsImage(adaptation) {\r\n        return getIsTypeOf(adaptation, Constants.IMAGE);\r\n    }\r\n\r\n    function getProducerReferenceTimesForAdaptation(adaptation) {\r\n        const prtArray = adaptation && adaptation.hasOwnProperty(DashConstants.PRODUCERREFERENCETIME_ASARRAY) ? adaptation[DashConstants.PRODUCERREFERENCETIME_ASARRAY] : [];\r\n\r\n        // ProducerReferenceTime elements can also be contained in Representations\r\n        const representationsArray = adaptation && adaptation.hasOwnProperty(DashConstants.REPRESENTATION_ASARRAY) ? adaptation[DashConstants.REPRESENTATION_ASARRAY] : [];\r\n\r\n        representationsArray.forEach((rep) => {\r\n            if (rep.hasOwnProperty(DashConstants.PRODUCERREFERENCETIME_ASARRAY)) {\r\n                prtArray.push(...rep[DashConstants.PRODUCERREFERENCETIME_ASARRAY]);\r\n            }\r\n        });\r\n\r\n        const prtsForAdaptation = [];\r\n\r\n        // Unlikely to have multiple ProducerReferenceTimes.\r\n        prtArray.forEach((prt) => {\r\n            const entry = new ProducerReferenceTime();\r\n\r\n            if (prt.hasOwnProperty(DashConstants.ID)) {\r\n                entry[DashConstants.ID] = prt[DashConstants.ID];\r\n            } else {\r\n                // Ignore. Missing mandatory attribute\r\n                return;\r\n            }\r\n\r\n            if (prt.hasOwnProperty(DashConstants.WALL_CLOCK_TIME)) {\r\n                entry[DashConstants.WALL_CLOCK_TIME] = prt[DashConstants.WALL_CLOCK_TIME];\r\n            } else {\r\n                // Ignore. Missing mandatory attribute\r\n                return;\r\n            }\r\n\r\n            if (prt.hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\r\n                entry[DashConstants.PRESENTATION_TIME] = prt[DashConstants.PRESENTATION_TIME];\r\n            } else {\r\n                // Ignore. Missing mandatory attribute\r\n                return;\r\n            }\r\n\r\n            if (prt.hasOwnProperty(DashConstants.INBAND)) {\r\n                entry[DashConstants.INBAND] = prt[DashConstants.INBAND] !== 'false';\r\n            }\r\n\r\n            if (prt.hasOwnProperty(DashConstants.TYPE)) {\r\n                entry[DashConstants.TYPE] = prt[DashConstants.TYPE];\r\n            }\r\n\r\n            // Not interested in other attributes for now\r\n            // UTC element contained must be same as that in the MPD\r\n            prtsForAdaptation.push(entry);\r\n        })\r\n\r\n        return prtsForAdaptation;\r\n    }\r\n\r\n    function getLanguageForAdaptation(adaptation) {\r\n        let lang = '';\r\n\r\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\r\n            lang = adaptation.lang;\r\n        }\r\n\r\n        return lang;\r\n    }\r\n\r\n    function getViewpointForAdaptation(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.VIEWPOINT_ASARRAY) || !adaptation[DashConstants.VIEWPOINT_ASARRAY].length) return [];\r\n        return adaptation[DashConstants.VIEWPOINT_ASARRAY].map( viewpoint => {\r\n            const vp = new DescriptorType();\r\n            return vp.init(viewpoint);\r\n        });\r\n    }\r\n\r\n    function getRolesForAdaptation(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) || !adaptation[DashConstants.ROLE_ASARRAY].length) return [];\r\n        return adaptation[DashConstants.ROLE_ASARRAY].map( role => {\r\n            const r = new DescriptorType();\r\n            return r.init(role);\r\n        });\r\n    }\r\n\r\n    function getAccessibilityForAdaptation(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) || !adaptation[DashConstants.ACCESSIBILITY_ASARRAY].length) return [];\r\n        return adaptation[DashConstants.ACCESSIBILITY_ASARRAY].map( accessibility => {\r\n            const a = new DescriptorType();\r\n            return a.init(accessibility);\r\n        });\r\n    }\r\n\r\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) || !adaptation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].length) return [];\r\n        return adaptation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].map( audioChanCfg => {\r\n            const acc = new DescriptorType();\r\n            return acc.init(audioChanCfg);\r\n        });\r\n    }\r\n\r\n    function getAudioChannelConfigurationForRepresentation(representation) {\r\n        if (!representation || !representation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) || !representation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].length) return [];\r\n        return representation[DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY].map( audioChanCfg => {\r\n            const acc = new DescriptorType();\r\n            return acc.init(audioChanCfg);\r\n        });\r\n    }\r\n\r\n    function getRepresentationSortFunction() {\r\n        return (a, b) => a.bandwidth - b.bandwidth;\r\n    }\r\n\r\n    function processAdaptation(realAdaptation) {\r\n        if (realAdaptation && Array.isArray(realAdaptation.Representation_asArray)) {\r\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\r\n        }\r\n\r\n        return realAdaptation;\r\n    }\r\n\r\n    function getRealAdaptations(manifest, periodIndex) {\r\n        return manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\r\n    }\r\n\r\n    function getRealPeriods(manifest) {\r\n        return manifest && manifest.Period_asArray ? manifest.Period_asArray : [];\r\n    }\r\n\r\n    function getRealPeriodForIndex(index, manifest) {\r\n        const realPeriods = getRealPeriods(manifest);\r\n        if (realPeriods.length > 0 && isInteger(index)) {\r\n            return realPeriods[index];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getAdaptationForId(id, manifest, periodIndex) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        let i,\r\n            len;\r\n\r\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\r\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\r\n                return realAdaptations[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getAdaptationForIndex(index, manifest, periodIndex) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        if (realAdaptations.length > 0 && isInteger(index)) {\r\n            return realAdaptations[index];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\r\n        if (!realAdaptation) {\r\n            return -1;\r\n        }\r\n\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n\r\n        for (let i = 0; i < realAdaptations.length; i++) {\r\n            let objectUtils = ObjectUtils(context).getInstance();\r\n            if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function getAdaptationsForType(manifest, periodIndex, type) {\r\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\r\n        let i,\r\n            len;\r\n        const adaptations = [];\r\n\r\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\r\n            if (getIsTypeOf(realAdaptations[i], type)) {\r\n                adaptations.push(processAdaptation(realAdaptations[i]));\r\n            }\r\n        }\r\n\r\n        return adaptations;\r\n    }\r\n\r\n    function getCodec(adaptation, representationId, addResolutionInfo) {\r\n        let codec = null;\r\n\r\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\r\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\r\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\r\n            if (representation) {\r\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\r\n                if (addResolutionInfo && representation.width !== undefined) {\r\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\r\n                }\r\n            }\r\n        }\r\n\r\n        // If the codec contains a profiles parameter we remove it. Otherwise it will cause problems when checking for codec capabilities of the platform\r\n        if (codec) {\r\n            codec = codec.replace(/\\sprofiles=[^;]*/g, '');\r\n        }\r\n\r\n        return codec;\r\n    }\r\n\r\n    function getMimeType(adaptation) {\r\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\r\n    }\r\n\r\n    function getSegmentAlignment(adaptation) {\r\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SEGMENT_ALIGNMENT)) {\r\n            return adaptation[DashConstants.SEGMENT_ALIGNMENT] === 'true'\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    function getSubSegmentAlignment(adaptation) {\r\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SUB_SEGMENT_ALIGNMENT)) {\r\n            return adaptation[DashConstants.SUB_SEGMENT_ALIGNMENT] === 'true'\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    function getKID(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\r\n            return null;\r\n        }\r\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\r\n    }\r\n\r\n    function getLabelsForAdaptation(adaptation) {\r\n        if (!adaptation || !Array.isArray(adaptation.Label_asArray)) {\r\n            return [];\r\n        }\r\n\r\n        const labelArray = [];\r\n\r\n        for (let i = 0; i < adaptation.Label_asArray.length; i++) {\r\n            labelArray.push({\r\n                lang: adaptation.Label_asArray[i].lang,\r\n                text: adaptation.Label_asArray[i].__text || adaptation.Label_asArray[i]\r\n            });\r\n        }\r\n\r\n        return labelArray;\r\n    }\r\n\r\n    function getContentProtectionData(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\r\n            return null;\r\n        }\r\n        return adaptation.ContentProtection_asArray;\r\n    }\r\n\r\n    function getIsDynamic(manifest) {\r\n        let isDynamic = false;\r\n        if (manifest && manifest.hasOwnProperty('type')) {\r\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\r\n        }\r\n        return isDynamic;\r\n    }\r\n\r\n    function getId(manifest) {\r\n        return (manifest && manifest[DashConstants.ID]) || null;\r\n    }\r\n\r\n    function hasProfile(manifest, profile) {\r\n        let has = false;\r\n\r\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\r\n            has = (manifest.profiles.indexOf(profile) !== -1);\r\n        }\r\n\r\n        return has;\r\n    }\r\n\r\n    function getDuration(manifest) {\r\n        let mpdDuration;\r\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\r\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\r\n            mpdDuration = manifest.mediaPresentationDuration;\r\n        } else if (manifest && manifest.type == 'dynamic') {\r\n            mpdDuration = Number.POSITIVE_INFINITY;\r\n        } else {\r\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\r\n        }\r\n\r\n        return mpdDuration;\r\n    }\r\n\r\n    function getBandwidth(representation) {\r\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\r\n    }\r\n\r\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\r\n        let delay = NaN;\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\r\n            delay = manifest.minimumUpdatePeriod;\r\n        }\r\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\r\n    }\r\n\r\n    function getPublishTime(manifest) {\r\n        return manifest && manifest.hasOwnProperty(DashConstants.PUBLISH_TIME) ? new Date(manifest[DashConstants.PUBLISH_TIME]) : null;\r\n    }\r\n\r\n    function getRepresentationCount(adaptation) {\r\n        return adaptation && Array.isArray(adaptation.Representation_asArray) ? adaptation.Representation_asArray.length : 0;\r\n    }\r\n\r\n    function getBitrateListForAdaptation(realAdaptation) {\r\n        const processedRealAdaptation = processAdaptation(realAdaptation);\r\n        const realRepresentations = processedRealAdaptation && Array.isArray(processedRealAdaptation.Representation_asArray) ? processedRealAdaptation.Representation_asArray : [];\r\n\r\n        return realRepresentations.map((realRepresentation) => {\r\n            return {\r\n                bandwidth: realRepresentation.bandwidth,\r\n                width: realRepresentation.width || 0,\r\n                height: realRepresentation.height || 0,\r\n                scanType: realRepresentation.scanType || null,\r\n                id: realRepresentation.id || null\r\n            };\r\n        });\r\n    }\r\n\r\n    function getSelectionPriority(realAdaption) {\r\n        try {\r\n            const priority = realAdaption && typeof realAdaption.selectionPriority !== 'undefined' ? parseInt(realAdaption.selectionPriority) : 1;\r\n\r\n            return isNaN(priority) ? 1 : priority;\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\r\n        if (!realRepresentation || !realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\r\n\r\n        return realRepresentation.EssentialProperty_asArray.map((prop) => {\r\n            return {\r\n                schemeIdUri: prop.schemeIdUri,\r\n                value: prop.value\r\n            };\r\n        });\r\n    }\r\n\r\n    function getRepresentationFor(index, adaptation) {\r\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\r\n        isInteger(index) ? adaptation.Representation_asArray[index] : null;\r\n    }\r\n\r\n    function getRealAdaptationFor(voAdaptation) {\r\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\r\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\r\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getRepresentationsForAdaptation(voAdaptation) {\r\n        const voRepresentations = [];\r\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\r\n        let segmentInfo,\r\n            baseUrl;\r\n\r\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\r\n            // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\r\n            // that we are processing. Making it works properly will require much further changes and given\r\n            // parsing base Urls parameters is needed for our ultra low latency examples, we will\r\n            // keep this \"tricky\" code until the real (and good) solution comes\r\n            if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\r\n                const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\r\n                if (baseUrls) {\r\n                    baseUrl = baseUrls[0];\r\n                }\r\n            }\r\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\r\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\r\n                const voRepresentation = new Representation();\r\n                voRepresentation.index = i;\r\n                voRepresentation.adaptation = voAdaptation;\r\n\r\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\r\n                    voRepresentation.id = realRepresentation.id;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\r\n                    voRepresentation.codecs = realRepresentation.codecs;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE)) {\r\n                    voRepresentation.mimeType = realRepresentation[DashConstants.MIME_TYPE];\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\r\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\r\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\r\n                    voRepresentation.width = realRepresentation.width;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\r\n                    voRepresentation.height = realRepresentation.height;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\r\n                    voRepresentation.scanType = realRepresentation.scanType;\r\n                }\r\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\r\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\r\n                }\r\n\r\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\r\n                    segmentInfo = realRepresentation.SegmentBase;\r\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\r\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\r\n                    segmentInfo = realRepresentation.SegmentList;\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\r\n                    } else {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\r\n                    }\r\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\r\n                    segmentInfo = realRepresentation.SegmentTemplate;\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\r\n                    } else {\r\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\r\n                    }\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\r\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\r\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\r\n                    }\r\n                } else {\r\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\r\n                }\r\n\r\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\r\n\r\n                if (segmentInfo) {\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\r\n                        const initialization = segmentInfo.Initialization;\r\n\r\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\r\n                            voRepresentation.initialization = initialization.sourceURL;\r\n                        }\r\n\r\n                        if (initialization.hasOwnProperty(DashConstants.RANGE)) {\r\n                            voRepresentation.range = initialization.range;\r\n                            // initialization source url will be determined from\r\n                            // BaseURL when resolved at load time.\r\n                        }\r\n                    } else if (getIsText(processedRealAdaptation) &&\r\n                        getIsFragmented(processedRealAdaptation) &&\r\n                        processedRealAdaptation.mimeType &&\r\n                        processedRealAdaptation.mimeType.indexOf('application/mp4') === -1) {\r\n                        voRepresentation.range = 0;\r\n                    }\r\n\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                        voRepresentation.timescale = segmentInfo.timescale;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\r\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\r\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\r\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\r\n                        // exceeds @maxSegmentDuration\r\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\r\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\r\n                        segmentInfo = realRepresentation.SegmentTemplate;\r\n\r\n                        if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\r\n                            voRepresentation.segmentDuration = calcSegmentDuration(segmentInfo.SegmentTimeline) / voRepresentation.timescale;\r\n                        }\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\r\n                        voRepresentation.media = segmentInfo.media;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\r\n                        voRepresentation.startNumber = segmentInfo.startNumber;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\r\n                        voRepresentation.indexRange = segmentInfo.indexRange;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\r\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\r\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\r\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\r\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\r\n                    }\r\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\r\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\r\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\r\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\r\n                    }\r\n                }\r\n\r\n                voRepresentation.MSETimeOffset = calcMSETimeOffset(voRepresentation);\r\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\r\n                voRepresentations.push(voRepresentation);\r\n            }\r\n        }\r\n\r\n        return voRepresentations;\r\n    }\r\n\r\n    function calcSegmentDuration(segmentTimeline) {\r\n        if (!segmentTimeline || !segmentTimeline.S_asArray) {\r\n            return NaN;\r\n        }\r\n        let s0 = segmentTimeline.S_asArray[0];\r\n        let s1 = segmentTimeline.S_asArray[1];\r\n        return s0.hasOwnProperty('d') ? s0.d : (s1.t - s0.t);\r\n    }\r\n\r\n    function calcMSETimeOffset(representation) {\r\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\r\n        const presentationOffset = representation.presentationTimeOffset;\r\n        const periodStart = representation.adaptation.period.start;\r\n        return (periodStart - presentationOffset);\r\n    }\r\n\r\n    function getAdaptationsForPeriod(voPeriod) {\r\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\r\n        const voAdaptations = [];\r\n        let voAdaptationSet,\r\n            realAdaptationSet,\r\n            i;\r\n\r\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\r\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\r\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\r\n                voAdaptationSet = new AdaptationSet();\r\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\r\n                    voAdaptationSet.id = realAdaptationSet.id;\r\n                }\r\n                voAdaptationSet.index = i;\r\n                voAdaptationSet.period = voPeriod;\r\n\r\n                if (getIsMuxed(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.MUXED;\r\n                } else if (getIsAudio(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.AUDIO;\r\n                } else if (getIsVideo(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.VIDEO;\r\n                } else if (getIsText(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.TEXT;\r\n                } else if (getIsImage(realAdaptationSet)) {\r\n                    voAdaptationSet.type = Constants.IMAGE;\r\n                } else {\r\n                    logger.warn('Unknown Adaptation stream type');\r\n                }\r\n                voAdaptations.push(voAdaptationSet);\r\n            }\r\n        }\r\n\r\n        return voAdaptations;\r\n    }\r\n\r\n    function getRegularPeriods(mpd) {\r\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\r\n        const voPeriods = [];\r\n        let realPreviousPeriod = null;\r\n        let realPeriod = null;\r\n        let voPreviousPeriod = null;\r\n        let voPeriod = null;\r\n        let len,\r\n            i;\r\n\r\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\r\n            realPeriod = mpd.manifest.Period_asArray[i];\r\n\r\n            // If the attribute @start is present in the Period, then the\r\n            // Period is a regular Period and the PeriodStart is equal\r\n            // to the value of this attribute.\r\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = realPeriod.start;\r\n            }\r\n            // If the @start attribute is absent, but the previous Period element contains a @duration attribute then this new Period is also a regular Period. The start time of the new Period PeriodStart is the sum of the start time of the previous Period PeriodStart and the value of the attribute @duration of the previous Period.\r\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\r\n            }\r\n            // If (i) @start attribute is absent, and (ii) the Period element is the first in the MPD, and (iii) the MPD@type is 'static', then the PeriodStart time shall be set to zero.\r\n            else if (i === 0 && !isDynamic) {\r\n                voPeriod = new Period();\r\n                voPeriod.start = 0;\r\n            }\r\n\r\n            // The Period extends until the PeriodStart of the next Period.\r\n            // The difference between the PeriodStart time of a Period and\r\n            // the PeriodStart time of the following Period.\r\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\r\n                if (voPeriod !== null) {\r\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\r\n                } else {\r\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\r\n                }\r\n            }\r\n\r\n            if (voPeriod !== null) {\r\n                voPeriod.id = getPeriodId(realPeriod, i);\r\n                voPeriod.index = i;\r\n                voPeriod.mpd = mpd;\r\n\r\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\r\n                    voPeriod.duration = realPeriod.duration;\r\n                }\r\n\r\n                if (voPreviousPeriod) {\r\n                    voPreviousPeriod.nextPeriodId = voPeriod.id;\r\n                }\r\n\r\n                voPeriods.push(voPeriod);\r\n                realPreviousPeriod = realPeriod;\r\n                voPreviousPeriod = voPeriod;\r\n            }\r\n\r\n            realPeriod = null;\r\n            voPeriod = null;\r\n        }\r\n\r\n        if (voPeriods.length === 0) {\r\n            return voPeriods;\r\n        }\r\n\r\n        // The last Period extends until the end of the Media Presentation.\r\n        // The difference between the PeriodStart time of the last Period\r\n        // and the mpd duration\r\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\r\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\r\n        }\r\n\r\n        return voPeriods;\r\n    }\r\n\r\n    function getPeriodId(realPeriod, i) {\r\n        if (!realPeriod) {\r\n            throw new Error('Period cannot be null or undefined');\r\n        }\r\n\r\n        let id = Period.DEFAULT_ID + '_' + i;\r\n\r\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\r\n            id = realPeriod.id;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    function getMpd(manifest) {\r\n        const mpd = new Mpd();\r\n\r\n        if (manifest) {\r\n            mpd.manifest = manifest;\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\r\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\r\n            } else {\r\n                if (manifest.loadedTime) {\r\n                    mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\r\n                }\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\r\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\r\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\r\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY)) {\r\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\r\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\r\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\r\n            }\r\n\r\n            if (manifest.hasOwnProperty(DashConstants.PUBLISH_TIME)) {\r\n                mpd.publishTime = new Date(manifest.publishTime);\r\n            }\r\n        }\r\n\r\n        return mpd;\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!errHandler || !errHandler.hasOwnProperty('error')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getEndTimeForLastPeriod(voPeriod) {\r\n        checkConfig();\r\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\r\n\r\n        let periodEnd;\r\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\r\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\r\n        } else if (voPeriod.duration) {\r\n            periodEnd = voPeriod.duration;\r\n        } else if (isDynamic) {\r\n            periodEnd = Number.POSITIVE_INFINITY;\r\n        } else {\r\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\r\n        }\r\n\r\n        return periodEnd;\r\n    }\r\n\r\n    function getEventsForPeriod(period) {\r\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\r\n        const periodArray = manifest ? manifest.Period_asArray : null;\r\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\r\n        const events = [];\r\n        let i,\r\n            j;\r\n\r\n        if (eventStreams) {\r\n            for (i = 0; i < eventStreams.length; i++) {\r\n                const eventStream = new EventStream();\r\n                eventStream.period = period;\r\n                eventStream.timescale = 1;\r\n\r\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                    eventStream.schemeIdUri = eventStreams[i][Constants.SCHEME_ID_URI];\r\n                } else {\r\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                    eventStream.timescale = eventStreams[i][DashConstants.TIMESCALE];\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\r\n                    eventStream.value = eventStreams[i][DashConstants.VALUE];\r\n                }\r\n                if (eventStreams[i].hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\r\n                    eventStream.presentationTimeOffset = eventStreams[i][DashConstants.PRESENTATION_TIME_OFFSET];\r\n                }\r\n                for (j = 0; eventStreams[i].Event_asArray && j < eventStreams[i].Event_asArray.length; j++) {\r\n                    const currentMpdEvent = eventStreams[i].Event_asArray[j];\r\n                    const event = new Event();\r\n                    event.presentationTime = 0;\r\n                    event.eventStream = eventStream;\r\n\r\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\r\n                        event.presentationTime = currentMpdEvent.presentationTime;\r\n                    }\r\n                    const presentationTimeOffset = eventStream.presentationTimeOffset ? eventStream.presentationTimeOffset / eventStream.timescale : 0;\r\n                    event.calculatedPresentationTime = event.presentationTime / eventStream.timescale + period.start - presentationTimeOffset;\r\n\r\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.DURATION)) {\r\n                        event.duration = currentMpdEvent.duration / eventStream.timescale;\r\n                    }\r\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.ID)) {\r\n                        event.id = currentMpdEvent.id;\r\n                    } else {\r\n                        event.id = null;\r\n                    }\r\n\r\n                    if (currentMpdEvent.Signal && currentMpdEvent.Signal.Binary) {\r\n                        // toString is used to manage both regular and namespaced tags\r\n                        event.messageData = BASE64.decodeArray(currentMpdEvent.Signal.Binary.toString());\r\n                    } else {\r\n                        // From Cor.1: 'NOTE: this attribute is an alternative\r\n                        // to specifying a complete XML element(s) in the Event.\r\n                        // It is useful when an event leans itself to a compact\r\n                        // string representation'.\r\n                        event.messageData =\r\n                            currentMpdEvent.messageData ||\r\n                            currentMpdEvent.__cdata ||\r\n                            currentMpdEvent.__text;\r\n                    }\r\n\r\n                    events.push(event);\r\n                }\r\n            }\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    function getEventStreams(inbandStreams, representation, period) {\r\n        const eventStreams = [];\r\n        let i;\r\n\r\n        if (!inbandStreams) return eventStreams;\r\n\r\n        for (i = 0; i < inbandStreams.length; i++) {\r\n            const eventStream = new EventStream();\r\n            eventStream.timescale = 1;\r\n            eventStream.representation = representation;\r\n\r\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\r\n            } else {\r\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\r\n                eventStream.timescale = inbandStreams[i].timescale;\r\n            }\r\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\r\n                eventStream.value = inbandStreams[i].value;\r\n            }\r\n            eventStreams.push(eventStream);\r\n            eventStream.period = period;\r\n        }\r\n\r\n        return eventStreams;\r\n    }\r\n\r\n    function getEventStreamForAdaptationSet(manifest, adaptation, period) {\r\n        let inbandStreams,\r\n            periodArray,\r\n            adaptationArray;\r\n\r\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\r\n            periodArray = manifest.Period_asArray[adaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\r\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\r\n                if (adaptationArray) {\r\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        return getEventStreams(inbandStreams, null, period);\r\n    }\r\n\r\n    function getEventStreamForRepresentation(manifest, representation, period) {\r\n        let inbandStreams,\r\n            periodArray,\r\n            adaptationArray,\r\n            representationArray;\r\n\r\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\r\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\r\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\r\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\r\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\r\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\r\n                    if (representationArray) {\r\n                        inbandStreams = representationArray.InbandEventStream_asArray;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return getEventStreams(inbandStreams, representation, period);\r\n    }\r\n\r\n    function getUTCTimingSources(manifest) {\r\n        const isDynamic = getIsDynamic(manifest);\r\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\r\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\r\n        const utcTimingEntries = [];\r\n\r\n        // do not bother synchronizing the clock unless MPD is live,\r\n        // or it is static and has availabilityStartTime attribute\r\n        if ((isDynamic || hasAST)) {\r\n            if (utcTimingsArray) {\r\n                // the order is important here - 23009-1 states that the order\r\n                // in the manifest \"indicates relative preference, first having\r\n                // the highest, and the last the lowest priority\".\r\n                utcTimingsArray.forEach(function (utcTiming) {\r\n                    const entry = new UTCTiming();\r\n\r\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\r\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\r\n                    } else {\r\n                        // entries of type DescriptorType with no schemeIdUri\r\n                        // are meaningless. let's just ignore this entry and\r\n                        // move on.\r\n                        return;\r\n                    }\r\n\r\n                    // this is (incorrectly) interpreted as a number - schema\r\n                    // defines it as a string\r\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\r\n                        entry.value = utcTiming.value.toString();\r\n                    } else {\r\n                        // without a value, there's not a lot we can do with\r\n                        // this entry. let's just ignore this one and move on\r\n                        return;\r\n                    }\r\n\r\n                    // we're not interested in the optional id or any other\r\n                    // attributes which might be attached to the entry\r\n\r\n                    utcTimingEntries.push(entry);\r\n                });\r\n            }\r\n        }\r\n\r\n        return utcTimingEntries;\r\n    }\r\n\r\n    function getBaseURLsFromElement(node) {\r\n        const baseUrls = [];\r\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\r\n        // will be [undefined] which entries.some will just skip\r\n        const entries = node.BaseURL_asArray || [node.baseUri];\r\n        let earlyReturn = false;\r\n\r\n        entries.some(entry => {\r\n            if (entry) {\r\n                const baseUrl = new BaseURL();\r\n                let text = entry.__text || entry;\r\n\r\n                if (urlUtils.isRelative(text)) {\r\n                    // it doesn't really make sense to have relative and\r\n                    // absolute URLs at the same level, or multiple\r\n                    // relative URLs at the same level, so assume we are\r\n                    // done from this level of the MPD\r\n                    earlyReturn = true;\r\n\r\n                    // deal with the specific case where the MPD@BaseURL\r\n                    // is specified and is relative. when no MPD@BaseURL\r\n                    // entries exist, that case is handled by the\r\n                    // [node.baseUri] in the entries definition.\r\n                    if (node.baseUri) {\r\n                        text = urlUtils.resolve(text, node.baseUri);\r\n                    }\r\n                }\r\n\r\n                baseUrl.url = text;\r\n\r\n                // serviceLocation is optional, but we need it in order\r\n                // to blacklist correctly. if it's not available, use\r\n                // anything unique since there's no relationship to any\r\n                // other BaseURL and, in theory, the url should be\r\n                // unique so use this instead.\r\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\r\n                    entry.serviceLocation.length) {\r\n                    baseUrl.serviceLocation = entry.serviceLocation;\r\n                } else {\r\n                    baseUrl.serviceLocation = text;\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\r\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\r\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\r\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\r\n                }\r\n\r\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\r\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\r\n                }\r\n                /* NOTE: byteRange currently unused\r\n                 */\r\n\r\n                baseUrls.push(baseUrl);\r\n\r\n                return earlyReturn;\r\n            }\r\n        });\r\n\r\n        return baseUrls;\r\n    }\r\n\r\n    function getContentSteering(manifest) {\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.CONTENT_STEERING_AS_ARRAY)) {\r\n            // Only one ContentSteering element is supported on MPD level\r\n            const element = manifest[DashConstants.CONTENT_STEERING_AS_ARRAY][0];\r\n            return _createContentSteeringInstance(element);\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    function _createContentSteeringInstance(element) {\r\n        const entry = new ContentSteering();\r\n\r\n        entry.serverUrl = element.__text;\r\n\r\n        if (element.hasOwnProperty(DashConstants.DEFAULT_SERVICE_LOCATION)) {\r\n            entry.defaultServiceLocation = element[DashConstants.DEFAULT_SERVICE_LOCATION];\r\n            entry.defaultServiceLocationArray = entry.defaultServiceLocation.split(' ');\r\n        }\r\n\r\n        if (element.hasOwnProperty(DashConstants.QUERY_BEFORE_START)) {\r\n            entry.queryBeforeStart = element[DashConstants.QUERY_BEFORE_START].toLowerCase() === 'true';\r\n        }\r\n\r\n        if (element.hasOwnProperty(DashConstants.CLIENT_REQUIREMENT)) {\r\n            entry.clientRequirement = element[DashConstants.CLIENT_REQUIREMENT].toLowerCase() !== 'false';\r\n        }\r\n\r\n        return entry;\r\n    }\r\n\r\n    function _createClientDataResportingInstance(element){\r\n        const entry = new ClientDataReporting();\r\n\r\n        if (element.hasOwnProperty(DashConstants.CMCD_PARAMETERS)) {\r\n            entry.CMCDParameters = element[DashConstants.CMCD_PARAMETERS];\r\n        }\r\n\r\n        if(element.hasOwnProperty(DashConstants.SERVICE_LOCATIONS) && element[DashConstants.SERVICE_LOCATIONS] !== ''){\r\n            entry.serviceLocations = element[DashConstants.SERVICE_LOCATIONS];\r\n            entry.serviceLocationsArray = entry.serviceLocations.toString().split(' ');\r\n        }\r\n\r\n        if(element.hasOwnProperty(DashConstants.ADAPTATION_SETS) && element[DashConstants.ADAPTATION_SETS] !== ''){\r\n            entry.adaptationSets = element[DashConstants.ADAPTATION_SETS];\r\n            entry.adaptationSetsArray = entry.adaptationSets.toString().split(' ');\r\n        }\r\n\r\n        return entry;\r\n    }\r\n\r\n    function getLocation(manifest) {\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.LOCATION_AS_ARRAY)) {\r\n            return manifest[DashConstants.LOCATION_AS_ARRAY].map((entry) => {\r\n                const text = entry.__text || entry;\r\n                const serviceLocation = entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) ? entry[DashConstants.SERVICE_LOCATION] : null;\r\n\r\n                return new MpdLocation(text, serviceLocation)\r\n            })\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    function getPatchLocation(manifest) {\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.PATCH_LOCATION_AS_ARRAY)) {\r\n            return manifest[DashConstants.PATCH_LOCATION_AS_ARRAY].map((entry) => {\r\n                const text = entry.__text || entry;\r\n                const serviceLocation = entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) ? entry[DashConstants.SERVICE_LOCATION] : null;\r\n                let ttl = entry.hasOwnProperty(DashConstants.TTL) ? parseFloat(entry[DashConstants.TTL]) * 1000 : NaN;\r\n\r\n                return new PatchLocation(text, serviceLocation, ttl)\r\n            })\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    function getSuggestedPresentationDelay(mpd) {\r\n        return mpd && mpd.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY) ? mpd.suggestedPresentationDelay : null;\r\n    }\r\n\r\n    function getAvailabilityStartTime(mpd) {\r\n        return mpd && mpd.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) && mpd.availabilityStartTime !== null ? mpd.availabilityStartTime.getTime() : null;\r\n    }\r\n\r\n    function getServiceDescriptions(manifest) {\r\n        const serviceDescriptions = [];\r\n        if (manifest && manifest.hasOwnProperty(DashConstants.SERVICE_DESCRIPTION)) {\r\n            for (const sd of manifest.ServiceDescription_asArray) {\r\n                // Convert each of the properties defined in\r\n                let id = null,\r\n                    schemeIdUri = null,\r\n                    latency = null,\r\n                    playbackRate = null,\r\n                    operatingQuality = null,\r\n                    operatingBandwidth = null,\r\n                    contentSteering = null,\r\n                    clientDataReporting = null;\r\n\r\n                for (const prop in sd) {\r\n                    if (sd.hasOwnProperty(prop)) {\r\n                        if (prop === DashConstants.ID) {\r\n                            id = sd[prop];\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_SCOPE) {\r\n                            schemeIdUri = sd[prop].schemeIdUri;\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_LATENCY) {\r\n                            latency = {\r\n                                target: parseInt(sd[prop].target),\r\n                                max: parseInt(sd[prop].max),\r\n                                min: parseInt(sd[prop].min),\r\n                                referenceId: parseInt(sd[prop].referenceId)\r\n                            };\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_PLAYBACK_RATE) {\r\n                            playbackRate = {\r\n                                max: parseFloat(sd[prop].max),\r\n                                min: parseFloat(sd[prop].min)\r\n                            };\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_OPERATING_QUALITY) {\r\n                            operatingQuality = {\r\n                                mediaType: sd[prop].mediaType,\r\n                                max: parseInt(sd[prop].max),\r\n                                min: parseInt(sd[prop].min),\r\n                                target: parseInt(sd[prop].target),\r\n                                type: sd[prop].type,\r\n                                maxQualityDifference: parseInt(sd[prop].maxQualityDifference)\r\n                            }\r\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_OPERATING_BANDWIDTH) {\r\n                            operatingBandwidth = {\r\n                                mediaType: sd[prop].mediaType,\r\n                                max: parseInt(sd[prop].max),\r\n                                min: parseInt(sd[prop].min),\r\n                                target: parseInt(sd[prop].target)\r\n                            }\r\n                        } else if (prop === DashConstants.CONTENT_STEERING) {\r\n                            contentSteering = _createContentSteeringInstance(sd[prop])\r\n                        } else if (prop === DashConstants.CLIENT_DATA_REPORTING) {\r\n                            clientDataReporting = _createClientDataResportingInstance(sd[prop]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                serviceDescriptions.push({\r\n                    id,\r\n                    schemeIdUri,\r\n                    latency,\r\n                    playbackRate,\r\n                    operatingQuality,\r\n                    operatingBandwidth,\r\n                    contentSteering,\r\n                    clientDataReporting\r\n                });\r\n            }\r\n        }\r\n\r\n        return serviceDescriptions;\r\n    }\r\n\r\n    function getSupplementalPropertiesForAdaptation(adaptation) {\r\n        const supplementalProperties = {};\r\n\r\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY)) {\r\n            for (const sp of adaptation.SupplementalProperty_asArray) {\r\n                if (sp.hasOwnProperty(Constants.SCHEME_ID_URI) && sp.hasOwnProperty(DashConstants.VALUE)) {\r\n                    supplementalProperties[sp[Constants.SCHEME_ID_URI]] = sp[DashConstants.VALUE];\r\n                }\r\n            }\r\n        }\r\n        return supplementalProperties;\r\n    }\r\n\r\n    function getSupplementalPropertiesAsArrayForAdaptation(adaptation) {\r\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY) || !adaptation.SupplementalProperty_asArray.length) return [];\r\n        return adaptation.SupplementalProperty_asArray.map( supp => {\r\n            const s = new DescriptorType();\r\n            return s.init(supp);\r\n        });\r\n    }\r\n\r\n    function getSupplementalPropertiesForRepresentation(representation) {\r\n        const supplementalProperties = {};\r\n\r\n        if (representation && representation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY)) {\r\n            for (const sp of representation.SupplementalProperty_asArray) {\r\n                if (sp.hasOwnProperty(Constants.SCHEME_ID_URI) && sp.hasOwnProperty(DashConstants.VALUE)) {\r\n                    supplementalProperties[sp[Constants.SCHEME_ID_URI]] = sp[DashConstants.VALUE];\r\n                }\r\n            }\r\n        }\r\n        return supplementalProperties;\r\n    }\r\n\r\n    function getSupplementalPropertiesAsArrayForRepresentation(representation) {\r\n        if (!representation || !representation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY_ASARRAY) || !representation.SupplementalProperty_asArray.length) return [];\r\n        return representation.SupplementalProperty_asArray.map( supp => {\r\n            const s = new DescriptorType();\r\n            return s.init(supp);\r\n        });\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.errHandler) {\r\n            errHandler = config.errHandler;\r\n        }\r\n\r\n        if (config.BASE64) {\r\n            BASE64 = config.BASE64;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        getIsTypeOf,\r\n        getIsText,\r\n        getIsFragmented,\r\n        getProducerReferenceTimesForAdaptation,\r\n        getLanguageForAdaptation,\r\n        getViewpointForAdaptation,\r\n        getRolesForAdaptation,\r\n        getAccessibilityForAdaptation,\r\n        getAudioChannelConfigurationForAdaptation,\r\n        getAudioChannelConfigurationForRepresentation,\r\n        getAdaptationForIndex,\r\n        getIndexForAdaptation,\r\n        getAdaptationForId,\r\n        getAdaptationsForType,\r\n        getRealPeriods,\r\n        getRealPeriodForIndex,\r\n        getCodec,\r\n        getSelectionPriority,\r\n        getMimeType,\r\n        getKID,\r\n        getLabelsForAdaptation,\r\n        getContentProtectionData,\r\n        getIsDynamic,\r\n        getId,\r\n        hasProfile,\r\n        getDuration,\r\n        getBandwidth,\r\n        getManifestUpdatePeriod,\r\n        getPublishTime,\r\n        getRepresentationCount,\r\n        getBitrateListForAdaptation,\r\n        getRepresentationFor,\r\n        getRepresentationsForAdaptation,\r\n        getAdaptationsForPeriod,\r\n        getRegularPeriods,\r\n        getMpd,\r\n        getEventsForPeriod,\r\n        getEssentialPropertiesForRepresentation,\r\n        getEventStreamForAdaptationSet,\r\n        getEventStreamForRepresentation,\r\n        getUTCTimingSources,\r\n        getBaseURLsFromElement,\r\n        getRepresentationSortFunction,\r\n        getContentSteering,\r\n        getLocation,\r\n        getPatchLocation,\r\n        getSuggestedPresentationDelay,\r\n        getAvailabilityStartTime,\r\n        getServiceDescriptions,\r\n        getSegmentAlignment,\r\n        getSubSegmentAlignment,\r\n        getSupplementalPropertiesForAdaptation,\r\n        getSupplementalPropertiesAsArrayForAdaptation,\r\n        getSupplementalPropertiesForRepresentation,\r\n        getSupplementalPropertiesAsArrayForRepresentation,\r\n        setConfig\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\r\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../core/EventBus';\r\nimport MediaPlayerEvents from '../MediaPlayerEvents';\r\nimport MetricsReportingEvents from '../metrics/MetricsReportingEvents';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Settings from '../../core/Settings';\r\nimport Debug from '../../core/Debug';\r\nimport Constants from '../../streaming/constants/Constants';\r\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\r\nimport DashManifestModel from '../../dash/models/DashManifestModel';\r\nimport Utils from '../../core/Utils';\r\n\r\nconst CMCD_REQUEST_FIELD_NAME = 'CMCD';\r\nconst CMCD_VERSION = 1;\r\nconst CMCD_ALL_REQUESTS = '*';\r\nconst OBJECT_TYPES = {\r\n    MANIFEST: 'm',\r\n    AUDIO: 'a',\r\n    VIDEO: 'v',\r\n    INIT: 'i',\r\n    CAPTION: 'c',\r\n    ISOBMFF_TEXT_TRACK: 'tt',\r\n    ENCRYPTION_KEY: 'k',\r\n    OTHER: 'o'\r\n};\r\nconst STREAMING_FORMATS = {\r\n    DASH: 'd',\r\n    MSS: 's'\r\n};\r\nconst STREAM_TYPES = {\r\n    VOD: 'v',\r\n    LIVE: 'l'\r\n};\r\nconst RTP_SAFETY_FACTOR = 5;\r\n\r\nfunction CmcdModel() {\r\n\r\n    let dashManifestModel,\r\n        instance,\r\n        logger,\r\n        internalData,\r\n        abrController,\r\n        dashMetrics,\r\n        playbackController,\r\n        serviceDescriptionController,\r\n        streamProcessors,\r\n        _lastMediaTypeRequest,\r\n        _isStartup,\r\n        _bufferLevelStarved,\r\n        _initialMediaRequestsDone;\r\n\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n    let settings = Settings(context).getInstance();\r\n    let debug = Debug(context).getInstance();\r\n\r\n    function setup() {\r\n        dashManifestModel = DashManifestModel(context).getInstance();\r\n        logger = debug.getLogger(instance);\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    function initialize() {\r\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\r\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, instance);\r\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\r\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\r\n        eventBus.on(MediaPlayerEvents.PERIOD_SWITCH_COMPLETED, _onPeriodSwitchComplete, instance);\r\n    }\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.abrController) {\r\n            abrController = config.abrController;\r\n        }\r\n\r\n        if (config.dashMetrics) {\r\n            dashMetrics = config.dashMetrics;\r\n        }\r\n\r\n        if (config.playbackController) {\r\n            playbackController = config.playbackController;\r\n        }\r\n\r\n        if (config.serviceDescriptionController) {\r\n            serviceDescriptionController = config.serviceDescriptionController;\r\n        }\r\n    }\r\n\r\n    function _resetInitialSettings() {\r\n        internalData = {\r\n            pr: 1,\r\n            nor: null,\r\n            st: null,\r\n            sf: null,\r\n            sid: `${Utils.generateUuid()}`,\r\n            cid: null\r\n        };\r\n        _bufferLevelStarved = {};\r\n        _isStartup = {};\r\n        _initialMediaRequestsDone = {};\r\n        _lastMediaTypeRequest = undefined;\r\n        _updateStreamProcessors();\r\n    }\r\n\r\n    function _onPeriodSwitchComplete() {\r\n        _updateStreamProcessors();\r\n    }\r\n\r\n    function _updateStreamProcessors() {\r\n        if (!playbackController) return;\r\n        const streamController = playbackController.getStreamController();\r\n        if (!streamController) return;\r\n        if (typeof streamController.getActiveStream !== 'function') return;\r\n        const activeStream = streamController.getActiveStream();\r\n        if (!activeStream) return;\r\n        streamProcessors = activeStream.getProcessors();\r\n    }\r\n\r\n    function getQueryParameter(request) {\r\n        try {\r\n            if (isCmcdEnabled()) {\r\n                const cmcdData = _getCmcdData(request);\r\n                const filteredCmcdData = _applyWhitelist(cmcdData);\r\n                const finalPayloadString = _buildFinalString(filteredCmcdData);\r\n\r\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\r\n                    url: request.url,\r\n                    mediaType: request.mediaType,\r\n                    cmcdData,\r\n                    cmcdString: finalPayloadString\r\n                });\r\n                return {\r\n                    key: CMCD_REQUEST_FIELD_NAME,\r\n                    value: finalPayloadString\r\n                };\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _applyWhitelist(cmcdData) {\r\n        try {\r\n            const cmcdParameters = getCmcdParametersFromManifest();\r\n            const enabledCMCDKeys = cmcdParameters.version ? cmcdParameters.keys.split(' ') : settings.get().streaming.cmcd.enabledKeys;\r\n\r\n            return Object.keys(cmcdData)\r\n                .filter(key => enabledCMCDKeys.includes(key))\r\n                .reduce((obj, key) => {\r\n                    obj[key] = cmcdData[key];\r\n                    return obj;\r\n                }, {});\r\n        } catch (e) {\r\n            return cmcdData;\r\n        }\r\n    }\r\n\r\n    function _copyParameters(data, parameterNames) {\r\n        const copiedData = {};\r\n        for (let name of parameterNames) {\r\n            if (data[name]) {\r\n                copiedData[name] = data[name];\r\n            }\r\n        }\r\n        return copiedData;\r\n    }\r\n\r\n    function getHeaderParameters(request) {\r\n        try {\r\n            if (isCmcdEnabled()) {\r\n                const cmcdData = _getCmcdData(request);\r\n                const cmcdObjectHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['br', 'd', 'ot', 'tb']));\r\n                const cmcdRequestHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['bl', 'dl', 'mtp', 'nor', 'nrr', 'su']));\r\n                const cmcdStatusHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['bs', 'rtp']));\r\n                const cmcdSessionHeader = _copyParameters(cmcdData, _applyWhitelistByKeys(['cid', 'pr', 'sf', 'sid', 'st', 'v']));\r\n                const headers = {\r\n                    'CMCD-Object': _buildFinalString(cmcdObjectHeader),\r\n                    'CMCD-Request': _buildFinalString(cmcdRequestHeader),\r\n                    'CMCD-Status': _buildFinalString(cmcdStatusHeader),\r\n                    'CMCD-Session': _buildFinalString(cmcdSessionHeader)\r\n                };\r\n\r\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\r\n                    url: request.url,\r\n                    mediaType: request.mediaType,\r\n                    cmcdData,\r\n                    headers\r\n                });\r\n                return headers;\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function isCmcdEnabled() {\r\n        const cmcdParameters = getCmcdParametersFromManifest();\r\n        return _canBeEnabled(cmcdParameters) && _checkIncludeInRequests(cmcdParameters) && _checkAvailableKeys(cmcdParameters);\r\n    }\r\n\r\n    function _canBeEnabled(cmcdParameters) {\r\n        if (Object.keys(cmcdParameters).length) {\r\n            if(!cmcdParameters.version) {\r\n                logger.error(`version parameter must be defined.`);\r\n                return false;\r\n            }\r\n            if(!cmcdParameters.keys) {\r\n                logger.error(`keys parameter must be defined.`);\r\n                return false;\r\n            }\r\n        }\r\n        return cmcdParameters.version ? true : settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled;\r\n    }\r\n\r\n    function _checkIncludeInRequests(cmcdParameters) {\r\n        let enabledRequests = settings.get().streaming.cmcd.includeInRequests;\r\n\r\n        if(cmcdParameters.version) {\r\n            if(!cmcdParameters.includeInRequests)\r\n                return true\r\n            enabledRequests = cmcdParameters.includeInRequests.split(' ');\r\n        }\r\n\r\n        const defaultAvailableRequests = Constants.CMCD_AVAILABLE_REQUESTS;\r\n        const invalidRequests = enabledRequests.filter(k => !defaultAvailableRequests.includes(k));\r\n\r\n        if(invalidRequests.length == enabledRequests.length) {\r\n            logger.error(`None of the request types are supported.`);\r\n            return false;\r\n        }\r\n\r\n        invalidRequests.map((k) => {\r\n            logger.warn(`request type ${k} is not supported.`);\r\n        });\r\n        \r\n        return true;\r\n    }\r\n\r\n    function _checkAvailableKeys(cmcdParameters) {\r\n        const defaultAvailableKeys = Constants.CMCD_AVAILABLE_KEYS; \r\n        const enabledCMCDKeys = cmcdParameters.version ? cmcdParameters.keys.split(' ') : settings.get().streaming.cmcd.enabledKeys;\r\n        const invalidKeys = enabledCMCDKeys.filter(k => !defaultAvailableKeys.includes(k));\r\n\r\n        if(invalidKeys.length == enabledCMCDKeys.length) {\r\n            logger.error(`None of the keys are implemented.`);\r\n            return false;\r\n        }\r\n        invalidKeys.map((k) => {\r\n            logger.warn(`key parameter ${k} is not implemented.`);\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    function getCmcdParametersFromManifest() {\r\n        let cmcdParameters = {};\r\n        if (serviceDescriptionController) {\r\n            const serviceDescription = serviceDescriptionController.getServiceDescriptionSettings();\r\n            if (\r\n                settings.get().streaming.applyCMCDParameters &&\r\n                serviceDescription.clientDataReporting && \r\n                serviceDescription.clientDataReporting.CMCDParameters\r\n            ) {\r\n                cmcdParameters = serviceDescription.clientDataReporting.CMCDParameters;\r\n            }\r\n        }\r\n        return cmcdParameters;\r\n    }\r\n\r\n    function _applyWhitelistByKeys(keys) {\r\n        const cmcdParameters = getCmcdParametersFromManifest();\r\n        const enabledCMCDKeys = cmcdParameters.version ? cmcdParameters.keys.split(' ') : settings.get().streaming.cmcd.enabledKeys;\r\n        return keys.filter(key => enabledCMCDKeys.includes(key));\r\n    }\r\n\r\n    function _isIncludedInRequestFilter(type) {\r\n        const cmcdParameters = getCmcdParametersFromManifest();\r\n        let includeInRequestsArray = settings.get().streaming.cmcd.includeInRequests;\r\n\r\n        if (cmcdParameters.version) {\r\n            const includeInRequests = cmcdParameters.includeInRequests;\r\n            includeInRequestsArray = includeInRequests ? includeInRequests.split(' ') : [CMCD_ALL_REQUESTS];\r\n        }\r\n\r\n        if(includeInRequestsArray.find(t => t === CMCD_ALL_REQUESTS)) {\r\n            return true;\r\n        }\r\n\r\n        const filtersTypes = {\r\n            [HTTPRequest.INIT_SEGMENT_TYPE]: 'segment',\r\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]: 'segment',\r\n            [HTTPRequest.XLINK_EXPANSION_TYPE]: 'xlink',\r\n            [HTTPRequest.MPD_TYPE]: 'mpd',\r\n            [HTTPRequest.CONTENT_STEERING_TYPE]: 'steering',\r\n        };\r\n\r\n        return includeInRequestsArray.some(t => filtersTypes[type] === t);\r\n    }\r\n\r\n    function _getCmcdData(request) {\r\n        try {\r\n            let cmcdData = null;\r\n            \r\n            _updateLastMediaTypeRequest(request.type, request.mediaType);\r\n\r\n            if(_isIncludedInRequestFilter(request.type)) {\r\n                if (request.type === HTTPRequest.MPD_TYPE) {\r\n                    return _getCmcdDataForMpd(request);\r\n                } else if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\r\n                    return _getCmcdDataForMediaSegment(request, request.mediaType);\r\n                } else if (request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\r\n                    return _getCmcdDataForInitSegment(request);\r\n                } else if (request.type === HTTPRequest.OTHER_TYPE || request.type === HTTPRequest.XLINK_EXPANSION_TYPE) {\r\n                    return _getCmcdDataForOther(request);\r\n                } else if (request.type === HTTPRequest.LICENSE) {\r\n                    return _getCmcdDataForLicense(request);\r\n                } else if (request.type === HTTPRequest.CONTENT_STEERING_TYPE) {\r\n                    return _getCmcdDataForSteering(request);\r\n                }\r\n            }\r\n            return cmcdData;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _updateLastMediaTypeRequest(type, mediatype) {\r\n        // Video > Audio > None\r\n        if(mediatype == Constants.VIDEO || mediatype == Constants.AUDIO) {\r\n            if(!_lastMediaTypeRequest || _lastMediaTypeRequest == Constants.AUDIO)\r\n                _lastMediaTypeRequest = mediatype;\r\n        }\r\n    }\r\n\r\n    function _getCmcdDataForSteering(request) {\r\n        const data = !_lastMediaTypeRequest ? _getGenericCmcdData(request) : _getCmcdDataForMediaSegment(request, _lastMediaTypeRequest);\r\n        \r\n        data.ot = OBJECT_TYPES.OTHER;\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getCmcdDataForLicense(request) {\r\n        const data = _getGenericCmcdData(request);\r\n\r\n        data.ot = OBJECT_TYPES.ENCRYPTION_KEY;\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getCmcdDataForMpd() {\r\n        const data = _getGenericCmcdData();\r\n\r\n        data.ot = OBJECT_TYPES.MANIFEST;\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getCmcdDataForMediaSegment(request, mediaType) {\r\n        _initForMediaType(mediaType);\r\n        const data = _getGenericCmcdData();\r\n        const encodedBitrate = _getBitrateByRequest(request);\r\n        const d = _getObjectDurationByRequest(request);\r\n        const mtp = _getMeasuredThroughputByType(mediaType);\r\n        const dl = _getDeadlineByType(mediaType);\r\n        const bl = _getBufferLevelByType(mediaType);\r\n        const tb = _getTopBitrateByType(mediaType);\r\n        const pr = internalData.pr;\r\n\r\n        const nextRequest = _probeNextRequest(mediaType);\r\n\r\n        let ot;\r\n        if (mediaType === Constants.VIDEO) ot = OBJECT_TYPES.VIDEO;\r\n        if (mediaType === Constants.AUDIO) ot = OBJECT_TYPES.AUDIO;\r\n        if (mediaType === Constants.TEXT) {\r\n            if (request.mediaInfo.mimeType === 'application/mp4') {\r\n                ot = OBJECT_TYPES.ISOBMFF_TEXT_TRACK;\r\n            } else {\r\n                ot = OBJECT_TYPES.CAPTION;\r\n            }\r\n        }\r\n\r\n        let rtp = settings.get().streaming.cmcd.rtp;\r\n        if (!rtp) {\r\n            rtp = _calculateRtp(request);\r\n        }\r\n        if (!isNaN(rtp)) {\r\n            data.rtp = rtp;\r\n        }\r\n\r\n        if (nextRequest) {\r\n            if (request.url !== nextRequest.url) {\r\n                data.nor = encodeURIComponent(Utils.getRelativeUrl(request.url, nextRequest.url));\r\n            } else if (nextRequest.range) {\r\n                data.nrr = nextRequest.range;\r\n            }\r\n        }\r\n\r\n        if (encodedBitrate) {\r\n            data.br = encodedBitrate;\r\n        }\r\n\r\n        if (ot) {\r\n            data.ot = ot;\r\n        }\r\n\r\n        if (!isNaN(d)) {\r\n            data.d = d;\r\n        }\r\n\r\n        if (!isNaN(mtp)) {\r\n            data.mtp = mtp;\r\n        }\r\n\r\n        if (!isNaN(dl)) {\r\n            data.dl = dl;\r\n        }\r\n\r\n        if (!isNaN(bl)) {\r\n            data.bl = bl;\r\n        }\r\n\r\n        if (!isNaN(tb)) {\r\n            data.tb = tb;\r\n        }\r\n\r\n        if (!isNaN(pr) && pr !== 1) {\r\n            data.pr = pr;\r\n        }\r\n\r\n        if (_bufferLevelStarved[mediaType]) {\r\n            data.bs = true;\r\n            _bufferLevelStarved[mediaType] = false;\r\n        }\r\n\r\n        if (_isStartup[mediaType] || !_initialMediaRequestsDone[mediaType]) {\r\n            data.su = true;\r\n            _isStartup[mediaType] = false;\r\n            _initialMediaRequestsDone[mediaType] = true;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    function _initForMediaType(mediaType) {\r\n\r\n        if (!_initialMediaRequestsDone.hasOwnProperty(mediaType)) {\r\n            _initialMediaRequestsDone[mediaType] = false;\r\n        }\r\n\r\n        if (!_isStartup.hasOwnProperty(mediaType)) {\r\n            _isStartup[mediaType] = false;\r\n        }\r\n\r\n        if (!_bufferLevelStarved.hasOwnProperty(mediaType)) {\r\n            _bufferLevelStarved[mediaType] = false;\r\n        }\r\n    }\r\n\r\n    function _getCmcdDataForInitSegment() {\r\n        const data = _getGenericCmcdData();\r\n\r\n        data.ot = OBJECT_TYPES.INIT;\r\n        data.su = true;\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getCmcdDataForOther() {\r\n        const data = _getGenericCmcdData();\r\n\r\n        data.ot = OBJECT_TYPES.OTHER;\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    function _getGenericCmcdData() {\r\n        const cmcdParameters = getCmcdParametersFromManifest();\r\n        const data = {};\r\n\r\n        let cid = settings.get().streaming.cmcd.cid ? settings.get().streaming.cmcd.cid : internalData.cid;\r\n\r\n        data.v = cmcdParameters.version ? cmcdParameters.version : CMCD_VERSION;\r\n        data.sid = settings.get().streaming.cmcd.sid ? settings.get().streaming.cmcd.sid : internalData.sid;\r\n\r\n        cid = cmcdParameters.contentID ? cmcdParameters.contentID : cid;\r\n        data.sid = cmcdParameters.sessionID ? cmcdParameters.sessionID : data.sid;\r\n\r\n        data.sid = `${data.sid}`;\r\n\r\n        if (cid) {\r\n            data.cid = `${cid}`;\r\n        }\r\n\r\n        if (!isNaN(internalData.pr) && internalData.pr !== 1 && internalData.pr !== null) {\r\n            data.pr = internalData.pr;\r\n        }\r\n\r\n        if (internalData.st) {\r\n            data.st = internalData.st;\r\n        }\r\n\r\n        if (internalData.sf) {\r\n            data.sf = internalData.sf;\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    function _getBitrateByRequest(request) {\r\n        try {\r\n            const quality = request.quality;\r\n            const bitrateList = request.mediaInfo.bitrateList;\r\n\r\n            return parseInt(bitrateList[quality].bandwidth / 1000);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getTopBitrateByType(mediaType) {\r\n        try {\r\n            const info = abrController.getTopBitrateInfoFor(mediaType);\r\n            return Math.round(info.bitrate / 1000);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getObjectDurationByRequest(request) {\r\n        try {\r\n            return !isNaN(request.duration) ? Math.round(request.duration * 1000) : NaN;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getMeasuredThroughputByType(mediaType) {\r\n        try {\r\n            return parseInt(abrController.getThroughputHistory().getSafeAverageThroughput(mediaType) / 100) * 100;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getDeadlineByType(mediaType) {\r\n        try {\r\n            const playbackRate = internalData.pr;\r\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n\r\n            if (!isNaN(playbackRate) && !isNaN(bufferLevel)) {\r\n                return parseInt((bufferLevel / playbackRate) * 10) * 100;\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getBufferLevelByType(mediaType) {\r\n        try {\r\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n\r\n            if (!isNaN(bufferLevel)) {\r\n                return parseInt(bufferLevel * 10) * 100;\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _onPlaybackRateChanged(data) {\r\n        try {\r\n            internalData.pr = data.playbackRate;\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    function _onManifestLoaded(data) {\r\n        try {\r\n            const isDynamic = dashManifestModel.getIsDynamic(data.data);\r\n            const st = isDynamic ? STREAM_TYPES.LIVE : STREAM_TYPES.VOD;\r\n            const sf = data.protocol && data.protocol === 'MSS' ? STREAMING_FORMATS.MSS : STREAMING_FORMATS.DASH;\r\n\r\n            internalData.st = `${st}`;\r\n            internalData.sf = `${sf}`;\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    function _onBufferLevelStateChanged(data) {\r\n        try {\r\n            if (data.state && data.mediaType) {\r\n                if (data.state === MediaPlayerEvents.BUFFER_EMPTY) {\r\n\r\n                    if (!_bufferLevelStarved[data.mediaType]) {\r\n                        _bufferLevelStarved[data.mediaType] = true;\r\n                    }\r\n                    if (!_isStartup[data.mediaType]) {\r\n                        _isStartup[data.mediaType] = true;\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    function _onPlaybackSeeked() {\r\n        for (let key in _bufferLevelStarved) {\r\n            if (_bufferLevelStarved.hasOwnProperty(key)) {\r\n                _bufferLevelStarved[key] = true;\r\n            }\r\n        }\r\n\r\n        for (let key in _isStartup) {\r\n            if (_isStartup.hasOwnProperty(key)) {\r\n                _isStartup[key] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function _buildFinalString(cmcdData) {\r\n        try {\r\n            if (!cmcdData) {\r\n                return null;\r\n            }\r\n            const keys = Object.keys(cmcdData).sort((a, b) => a.localeCompare(b));\r\n            const length = keys.length;\r\n\r\n            let cmcdString = keys.reduce((acc, key, index) => {\r\n                if (key === 'v' && cmcdData[key] === 1) return acc; // Version key should only be reported if it is != 1\r\n                if (typeof cmcdData[key] === 'string' && key !== 'ot' && key !== 'sf' && key !== 'st') {\r\n                    acc += `${key}=${JSON.stringify(cmcdData[key])}`;\r\n                } else {\r\n                    acc += `${key}=${cmcdData[key]}`;\r\n                }\r\n                if (index < length - 1) {\r\n                    acc += ',';\r\n                }\r\n\r\n                return acc;\r\n            }, '');\r\n\r\n            cmcdString = cmcdString.replace(/=true/g, '');\r\n\r\n            // Remove last comma at the end\r\n            cmcdString = cmcdString.replace(/,\\s*$/, '');\r\n\r\n            return cmcdString;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _probeNextRequest(mediaType) {\r\n        if (!streamProcessors || streamProcessors.length === 0) return;\r\n        for (let streamProcessor of streamProcessors) {\r\n            if (streamProcessor.getType() === mediaType) {\r\n                return streamProcessor.probeNextRequest();\r\n            }\r\n        }\r\n    }\r\n\r\n    function _calculateRtp(request) {\r\n        try {\r\n            // Get the values we need\r\n            let playbackRate = playbackController.getPlaybackRate();\r\n            if (!playbackRate) playbackRate = 1;\r\n            let { quality, mediaType, mediaInfo, duration } = request;\r\n\r\n            if (!mediaInfo) {\r\n                return NaN;\r\n            }\r\n            let currentBufferLevel = _getBufferLevelByType(mediaType);\r\n            if (currentBufferLevel === 0) currentBufferLevel = 500;\r\n            let bitrate = mediaInfo.bitrateList[quality].bandwidth;\r\n\r\n            // Calculate RTP\r\n            let segmentSize = (bitrate * duration) / 1000; // Calculate file size in kilobits\r\n            let timeToLoad = (currentBufferLevel / playbackRate) / 1000; // Calculate time available to load file in seconds\r\n            let minBandwidth = segmentSize / timeToLoad; // Calculate the exact bandwidth required\r\n            let rtpSafetyFactor = settings.get().streaming.cmcd.rtpSafetyFactor && !isNaN(settings.get().streaming.cmcd.rtpSafetyFactor) ? settings.get().streaming.cmcd.rtpSafetyFactor : RTP_SAFETY_FACTOR;\r\n            let maxBandwidth = minBandwidth * rtpSafetyFactor; // Include a safety buffer\r\n\r\n\r\n            // Round to the next multiple of 100\r\n            return (parseInt(maxBandwidth / 100) + 1) * 100;\r\n        } catch (e) {\r\n            return NaN;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\r\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, this);\r\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\r\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\r\n\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    instance = {\r\n        getQueryParameter,\r\n        getHeaderParameters,\r\n        getCmcdParametersFromManifest,\r\n        setConfig,\r\n        reset,\r\n        initialize,\r\n        isCmcdEnabled,\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nCmcdModel.__dashjs_factory_name = 'CmcdModel';\r\nexport default FactoryMaker.getSingletonFactory(CmcdModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2022, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport EventBus from '../../core/EventBus';\r\nimport Events from '../../core/events/Events';\r\nimport Debug from '../../core/Debug';\r\n\r\n// Note: in modern browsers, the header names are returned in all lower case\r\nconst CMSD_STATIC = 'static';\r\nconst CMSD_DYNAMIC = 'dynamic';\r\nconst CMSD_RESPONSE_FIELD_BASENAME = 'cmsd-';\r\nconst CMSD_STATIC_RESPONSE_FIELD_NAME = CMSD_RESPONSE_FIELD_BASENAME + CMSD_STATIC;\r\nconst CMSD_DYNAMIC_RESPONSE_FIELD_NAME = CMSD_RESPONSE_FIELD_BASENAME + CMSD_DYNAMIC;\r\nconst CMSD_KEYS = {\r\n    AVAILABILITY_TIME: 'at',\r\n    DURESS: 'du',\r\n    ENCODED_BITRATE: 'br',\r\n    ESTIMATED_THROUGHPUT: 'etp',\r\n    HELD_TIME: 'ht',\r\n    INTERMEDIARY_IDENTIFIER: 'n',\r\n    MAX_SUGGESTED_BITRATE: 'mb',\r\n    NEXT_OBJECT_RESPONSE: 'nor',\r\n    NEXT_RANGE_RESPONSE: 'nrr',\r\n    OBJECT_DURATION: 'd',\r\n    OBJECT_TYPE: 'ot',\r\n    RESPONSE_DELAY: 'rd',\r\n    ROUND_TRIP_TIME: 'rtt',\r\n    STARTUP: 'su',\r\n    STREAM_TYPE: 'st',\r\n    STREAMING_FORMAT: 'sf',\r\n    VERSION: 'v'\r\n}\r\nconst OBJECT_TYPES = {\r\n    MANIFEST: 'm',\r\n    AUDIO: 'a',\r\n    VIDEO: 'v',\r\n    INIT: 'i',\r\n    CAPTION: 'c',\r\n    ISOBMFF_TEXT_TRACK: 'tt',\r\n    ENCRYPTION_KEY: 'k',\r\n    OTHER: 'o',\r\n    STREAM: 'stream' // Specific value for parameters without object type, which apply for all media/objects\r\n};\r\n\r\nconst PERSISTENT_PARAMS = [\r\n    CMSD_KEYS.MAX_SUGGESTED_BITRATE,\r\n    CMSD_KEYS.STREAM_TYPE,\r\n    CMSD_KEYS.STREAMING_FORMAT,\r\n    CMSD_KEYS.VERSION\r\n];\r\n\r\nconst MEDIATYPE_TO_OBJECTTYPE = {\r\n    'video': OBJECT_TYPES.VIDEO,\r\n    'audio': OBJECT_TYPES.AUDIO,\r\n    'text': OBJECT_TYPES.ISOBMFF_TEXT_TRACK,\r\n    'stream': OBJECT_TYPES.STREAM\r\n}\r\n\r\nconst integerRegex = /^[-0-9]/\r\n\r\nfunction CmsdModel() {\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        logger,\r\n        _staticParamsDict,\r\n        _dynamicParamsDict;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    function initialize() {}\r\n\r\n    function setConfig(/*config*/) {}\r\n\r\n    function _resetInitialSettings() {\r\n        _staticParamsDict = {};\r\n        _dynamicParamsDict = {};\r\n    }\r\n\r\n    function _clearParams(params) {\r\n        if (!params) {\r\n            return;\r\n        }\r\n        Object.keys(params).forEach(key => {\r\n            if (!PERSISTENT_PARAMS.includes(key)) {\r\n                delete params[key];\r\n            }\r\n        })\r\n    }\r\n\r\n    function _parseParameterValue(value) {\r\n        // If the value type is BOOLEAN and the value is TRUE, then the equals sign and the value are omitted\r\n        if (!value) {\r\n            return true;\r\n        }\r\n        // Check if boolean 'false'\r\n        if (value.toLowerCase() === 'false') {\r\n            return false;\r\n        }\r\n        // Check if a number\r\n        if (integerRegex.test(value)) {\r\n            return parseInt(value, 10);\r\n        }\r\n        // Value is a string, remove double quotes from string value\r\n        return value.replace(/[\"]+/g, '');   \r\n    }\r\n\r\n    function _parseCMSDStatic(value) {\r\n        try {\r\n            const params = {};\r\n            const items = value.split(',');\r\n            for (let i = 0; i < items.length; i++) {\r\n                // <key>=<value>\r\n                const substrs = items[i].split('=');\r\n                const key = substrs[0];\r\n                const v = _parseParameterValue(substrs[1]);\r\n                params[key] = v;\r\n            }\r\n            return params;\r\n        } catch (e) {\r\n            logger.error('Failed to parse CMSD-Static response header value:', e);\r\n        }\r\n    }\r\n\r\n    function _parseCMSDDynamic(value) {\r\n        try {\r\n            const params = {};\r\n            const entries = value.split(',');\r\n            // Consider only last CMSD-Dynamic entry\r\n            const entry = entries[entries.length - 1];\r\n            const items = entry.split(';');\r\n            // Server identifier as 1st item\r\n            for (let i = 1; i < items.length; i++) {\r\n                // <key>=<value>\r\n                const substrs = items[i].split('=');\r\n                const key = substrs[0];\r\n                const v = _parseParameterValue(substrs[1]);\r\n                params[key] = v;\r\n            }\r\n            return params;\r\n        } catch (e) {\r\n            logger.error('Failed to parse CMSD-Dynamic response header value:', e);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    function _mediaTypetoObjectType(mediaType) {\r\n        return MEDIATYPE_TO_OBJECTTYPE[mediaType] || OBJECT_TYPES.OTHER;\r\n    }\r\n\r\n    function _getParamValueForObjectType(paramsType, ot, key) {\r\n        const params = paramsType === CMSD_STATIC ? _staticParamsDict : _dynamicParamsDict;\r\n        const otParams = params[ot] || {};\r\n        const streamParams = params[OBJECT_TYPES.STREAM] || {};\r\n        const value = otParams[key] || streamParams[key];\r\n        return value;\r\n    }\r\n\r\n    function parseResponseHeaders(responseHeaders, mediaType) {\r\n        let staticParams = null;\r\n        let dynamicParams = null;\r\n        const headers = responseHeaders.split('\\r\\n');\r\n        // Ge in reverse order in order to consider only last CMSD-Dynamic header\r\n        for (let i = headers.length - 1; i >= 0; i--) {\r\n            const header = headers[i];\r\n            let m = header.match(/^(?<key>[^:]*):\\s*(?<value>.*)$/);\r\n            if (m && m.groups) {\r\n                // Note: in modern browsers, the header names are returned in all lower case\r\n                let key = m.groups.key.toLowerCase(),\r\n                    value = m.groups.value;\r\n                switch (key) {\r\n                    case CMSD_STATIC_RESPONSE_FIELD_NAME:\r\n                        staticParams = _parseCMSDStatic(value);\r\n                        eventBus.trigger(Events.CMSD_STATIC_HEADER, staticParams);\r\n                        break;\r\n                    case CMSD_DYNAMIC_RESPONSE_FIELD_NAME:\r\n                        if (!dynamicParams) {\r\n                            dynamicParams = _parseCMSDDynamic(value);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Get object type\r\n        let ot = OBJECT_TYPES.STREAM;\r\n        if (staticParams && staticParams[CMSD_KEYS.OBJECT_TYPE]) {\r\n            ot = staticParams[CMSD_KEYS.OBJECT_TYPE];\r\n        } else if (mediaType) {\r\n            ot = _mediaTypetoObjectType(mediaType)\r\n        }\r\n\r\n        // Clear previously received params except persistent ones \r\n        _clearParams(_staticParamsDict[ot]);\r\n        _clearParams(_dynamicParamsDict[ot]);\r\n\r\n        // Merge params with previously received params \r\n        if (staticParams) {\r\n            _staticParamsDict[ot] = Object.assign(_staticParamsDict[ot] || {}, staticParams);\r\n        }\r\n        if (dynamicParams) {\r\n            _dynamicParamsDict[ot] = Object.assign(_dynamicParamsDict[ot] || {}, dynamicParams);\r\n        }\r\n\r\n        return {\r\n            static: staticParams,\r\n            dynamic: dynamicParams\r\n        }\r\n    }\r\n\r\n    function getMaxBitrate(type) {\r\n        let ot = _mediaTypetoObjectType(type);\r\n        let mb = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.MAX_SUGGESTED_BITRATE);\r\n        return mb ? mb : -1\r\n    }\r\n\r\n    function getEstimatedThroughput(type) {\r\n        let ot = _mediaTypetoObjectType(type);\r\n        let etp = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.ESTIMATED_THROUGHPUT);\r\n        return etp ? etp : null\r\n    }\r\n\r\n    function getResponseDelay(type) {\r\n        let ot = _mediaTypetoObjectType(type);\r\n        let rd = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.RESPONSE_DELAY);\r\n        return rd ? rd : null\r\n    }\r\n\r\n    function getRoundTripTime(type) {\r\n        let ot = _mediaTypetoObjectType(type);\r\n        let rd = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.ROUND_TRIP_TIME);\r\n        return rd ? rd : null\r\n    }\r\n\r\n    function reset() {\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    instance = {\r\n        setConfig,\r\n        initialize,\r\n        reset,\r\n        parseResponseHeaders,\r\n        getMaxBitrate,\r\n        getEstimatedThroughput,\r\n        getResponseDelay,\r\n        getRoundTripTime,\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nCmsdModel.__dashjs_factory_name = 'CmsdModel';\r\nexport default FactoryMaker.getSingletonFactory(CmsdModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2024, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\r\n\r\nfunction ClientDataReportingModel() {\r\n\r\n    let instance,\r\n        serviceDescriptionController;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n    \r\n        if (config.serviceDescriptionController) {\r\n            serviceDescriptionController = config.serviceDescriptionController;\r\n        }\r\n    }\r\n\r\n    function serviceLocationIncluded(requestType, serviceLocation){\r\n\r\n        if(requestType == HTTPRequest.CONTENT_STEERING_TYPE)\r\n            return true;\r\n\r\n        const { serviceLocationsArray } = serviceDescriptionController?.getServiceDescriptionSettings()?.clientDataReporting ?? {};\r\n        const isServiceLocationIncluded = serviceLocationsArray ? (serviceLocationsArray?.length === 0 || serviceLocationsArray.includes(serviceLocation)) : true;\r\n        return isServiceLocationIncluded;\r\n    }\r\n\r\n    function adaptationSetIncluded(adaptationSet){\r\n        const { adaptationSetsArray } = serviceDescriptionController?.getServiceDescriptionSettings()?.clientDataReporting ?? {};\r\n        const isAdaptationsIncluded = adaptationSetsArray ? (adaptationSetsArray?.length === 0 || adaptationSetsArray.includes(adaptationSet)) : true;\r\n        return isAdaptationsIncluded;\r\n    }\r\n\r\n    instance = {\r\n        setConfig:setConfig,\r\n        adaptationSetIncluded: adaptationSetIncluded,\r\n        serviceLocationIncluded: serviceLocationIncluded,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nClientDataReportingModel.__dashjs_factory_name = 'ClientDataReportingModel';\r\nexport default FactoryMaker.getSingletonFactory(ClientDataReportingModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Debug from '../../core/Debug';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nfunction LowLatencyThroughputModel() {\r\n\r\n    const LLTM_MAX_MEASUREMENTS = 10;\r\n    // factor (<1) is used to reduce the real needed download time when at very bleeding live edge\r\n    const LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR = 0.8;\r\n    const LLTM_OPTIMISTIC_ESTIMATE_FACTOR = 0.6;\r\n\r\n    const LLTM_SLOW_SEGMENT_DOWNLOAD_TOLERANCE = 1.05;\r\n    const LLTM_MAX_DELAY_MS = 250;\r\n\r\n    const context = this.context;\r\n    let instance;\r\n    let logger;\r\n    let measurements = {};\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n    }\r\n\r\n    /**\r\n     * Linear regression with least squares method to get a trend function for buffer lavel at chunk receive timestamps\r\n     * @param {*} chunkMeasurements\r\n     * @returns linear trend function\r\n     */\r\n    function createBufferLevelTrendFunction(chunkMeasurements) {\r\n        const result = {};\r\n\r\n        let sumX = 0\r\n        let sumY = 0\r\n        let sumXY = 0\r\n        let sumXSq = 0\r\n        const N = chunkMeasurements.length\r\n\r\n\r\n        for (var i = 0; i < N; ++i) {\r\n            sumX += chunkMeasurements[i].chunkDownloadTimeRelativeMS;\r\n            sumY += chunkMeasurements[i].bufferLevel;\r\n            sumXY += chunkMeasurements[i].chunkDownloadTimeRelativeMS * chunkMeasurements[i].bufferLevel;\r\n            sumXSq += chunkMeasurements[i].chunkDownloadTimeRelativeMS * chunkMeasurements[i].chunkDownloadTimeRelativeMS\r\n        }\r\n\r\n        result.m = ((sumXY - sumX * sumY / N)) / (sumXSq - sumX * sumX / N)\r\n        result.b = sumY / N - result.m * sumX / N\r\n\r\n        return function (x) {\r\n            return result.m * x + result.b\r\n        }\r\n    }\r\n\r\n    function isBufferSafeAndStable(lastMeasurements) {\r\n        let isBufferSafeAndStable = true;\r\n        let lastBitrate;\r\n        const aveBufferLevelLastSegements = lastMeasurements.reduce((prev, curr) => prev + curr.bufferLevelAtSegmentEnd, 0) / lastMeasurements.length;\r\n        lastMeasurements.forEach(m => {\r\n            // inner segment buffer stability\r\n            if (Math.abs(m.bufferLevelAtSegmentEnd / m.bufferLevelAtSegmentStart) < 0.95) {\r\n                isBufferSafeAndStable = false;\r\n            }\r\n\r\n            // inter segment buffer stability\r\n            if (m.bufferLevelAtSegmentEnd / aveBufferLevelLastSegements < 0.8) {\r\n                isBufferSafeAndStable = false;\r\n            }\r\n\r\n            // representation bitrate remained at least constant\r\n            if (!lastBitrate) {\r\n                lastBitrate = m.bitrate;\r\n            } else if (lastBitrate > m.bitrate) {\r\n                isBufferSafeAndStable = false;\r\n            }\r\n        });\r\n        return isBufferSafeAndStable;\r\n    }\r\n\r\n    /**\r\n     * Based on the MPD, timing and buffer information of the last recent segments and their chunks\r\n     * the most stable download time (in milliseconds) is calculated.\r\n     * @param {*} request HTTPLoader request object\r\n     * @returns download time in milliseconds of last fetched segment\r\n     */\r\n    function getEstimatedDownloadDurationMS(request) {\r\n        const lastMeasurement = measurements[request.mediaType].slice(-1).pop();\r\n        const lastThreeMeasurements = measurements[request.mediaType].slice(-3)\r\n\r\n        // calculate and remember the buffer level trend during the last fetched segment\r\n        const lastChunkRelativeTimeMS = lastMeasurement.chunkMeasurements.slice(-1).pop().chunkDownloadTimeRelativeMS;\r\n        lastMeasurement.bufferLevelAtSegmentStart = lastMeasurement.getEstimatedBufferLevel(lastChunkRelativeTimeMS / 2);\r\n        lastMeasurement.bufferLevelAtSegmentEnd = lastMeasurement.getEstimatedBufferLevel(lastChunkRelativeTimeMS);\r\n\r\n        const isBufferStable = isBufferSafeAndStable(lastThreeMeasurements);\r\n\r\n        const selectedOptimisticFactor = isBufferStable ? LLTM_OPTIMISTIC_ESTIMATE_FACTOR : LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR;\r\n\r\n        // fetch duration was longer than segment duration, but buffer was stable\r\n        if (lastMeasurement.isBufferStable && lastMeasurement.segDurationMS * LLTM_SLOW_SEGMENT_DOWNLOAD_TOLERANCE < lastMeasurement.fetchDownloadDurationMS) {\r\n            return lastMeasurement.fetchDownloadDurationMS;\r\n        }\r\n        // buffer is drying or fetch took too long\r\n        if (!isBufferStable || lastMeasurement.segDurationMS < lastMeasurement.fetchDownloadDurationMS) {\r\n            return lastMeasurement.fetchDownloadDurationMS * LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR;\r\n        }\r\n\r\n        // did we requested a fully available segment? -> most accurate throughput calculation\r\n        // we use adjusted availability start time to decide\r\n        // Note: this \"download mode\" usually happens at startup and if requests are delayed artificially\r\n        if (lastMeasurement.adjustedAvailabilityStartTimeMS <= (lastMeasurement.requestTimeMS + lastMeasurement.throughputCapacityDelayMS) - lastMeasurement.segDurationMS) {\r\n            return lastMeasurement.fetchDownloadDurationMS * LLTM_SEMI_OPTIMISTIC_ESTIMATE_FACTOR;\r\n        }\r\n\r\n        // get all chunks that have been downloaded before fetch reached bleeding live edge\r\n        // the remaining chunks loaded at production rate we will approximated\r\n        const chunkAvailablePeriod = (lastMeasurement.requestTimeMS + lastMeasurement.throughputCapacityDelayMS) - lastMeasurement.adjustedAvailabilityStartTimeMS;\r\n        let chunkBytesBBLE = 0; // BBLE -> Before bleeding live edge\r\n        let chunkDownloadtimeMSBBLE = 0;\r\n        let chunkCount = 0;\r\n        for (let index = 0; index < lastMeasurement.chunkMeasurements.length; index++) {\r\n            const chunk = lastMeasurement.chunkMeasurements[index];\r\n            if (chunkAvailablePeriod < chunkDownloadtimeMSBBLE + chunk.chunkDownloadDurationMS) {\r\n                break;\r\n            }\r\n            chunkDownloadtimeMSBBLE += chunk.chunkDownloadDurationMS;\r\n            chunkBytesBBLE += chunk.chunkBytes;\r\n            chunkCount++;\r\n        }\r\n\r\n        if (chunkAvailablePeriod < 0) {\r\n            logger.warn('request time was before adjusted availibitly start time');\r\n        }\r\n\r\n        // there have to be some chunks available (20% of max count)\r\n        // otherwise we are at bleeding live edge and the few chunks are insufficient to estimate correctly\r\n        if (chunkBytesBBLE && chunkDownloadtimeMSBBLE && chunkCount > lastMeasurement.chunkMeasurements.length * 0.2) {\r\n            const downloadThroughput = chunkBytesBBLE / chunkDownloadtimeMSBBLE; // bytes per millesecond\r\n            const estimatedDownloadtimeMS = lastMeasurement.segmentBytes / downloadThroughput;\r\n            // if real download was shorter then report this incl. semi optimistical estimate factor\r\n            if (lastMeasurement.fetchDownloadDurationMS < estimatedDownloadtimeMS) {\r\n                return lastMeasurement.fetchDownloadDurationMS * selectedOptimisticFactor;\r\n            }\r\n            return estimatedDownloadtimeMS * selectedOptimisticFactor;\r\n        }\r\n\r\n        // when we are to tight at live edge and it's stable then\r\n        // we start to optimistically estimate download time\r\n        // in such a way that a switch to next rep will be possible\r\n        // optimistical estimate: assume download was fast enough for next higher rendition\r\n        let nextHigherBitrate = lastMeasurement.bitrate;\r\n        lastMeasurement.bitrateList.some(b => {\r\n            if (b.bandwidth > lastMeasurement.bitrate) {\r\n                nextHigherBitrate = b.bandwidth;\r\n                return true;\r\n            }\r\n        });\r\n        // already highest bitrate?\r\n\r\n        if (nextHigherBitrate === lastMeasurement.bitrate) {\r\n            return lastMeasurement.fetchDownloadDurationMS * selectedOptimisticFactor;\r\n        }\r\n        return selectedOptimisticFactor * lastMeasurement.segmentBytes * 8 * 1000 / nextHigherBitrate;\r\n    }\r\n\r\n    /**\r\n     * Get calculated value for a safe artificial delay of the next request to allow to accumulate some chunks.\r\n     * This allows better line throughput measurement.\r\n     * @param {*} request\r\n     * @param {*} currentBufferLevel current buffer level in milliseconds\r\n     * @returns delay in milliseconds\r\n     */\r\n    function getThroughputCapacityDelayMS(request, currentBufferLevelMS) {\r\n        const lastThreeMeasurements = measurements[request.mediaType] && measurements[request.mediaType].slice(-3);\r\n\r\n        if (!lastThreeMeasurements || lastThreeMeasurements.length < 3) {\r\n            return 0;\r\n        }\r\n\r\n\r\n\r\n        // in case not stable buffer, no artificially delay for the next request\r\n        if (!isBufferSafeAndStable(lastThreeMeasurements)) {\r\n            return 0;\r\n        }\r\n\r\n        // allowed artificial delay is the min of quater of buffer level in milliseconds and LLTM_MAX_DELAY_MS\r\n        return currentBufferLevelMS / 4 > LLTM_MAX_DELAY_MS ? LLTM_MAX_DELAY_MS : currentBufferLevelMS / 4;\r\n    }\r\n\r\n    /**\r\n     * Add some measurement data for bookkeeping and being able to derive decisions on estimated throughput.\r\n     * @param {*} request HTTPLoader object to get MPD and media info from\r\n     * @param {*} fetchDownloadDurationMS Duration how long the fetch actually took\r\n     * @param {*} chunkMeasurements Array containing chunk timings and buffer levels\r\n     * @param {*} requestTimeMS Timestamp at which the fetch was initiated\r\n     * @param {*} throughputCapacityDelayMS An artificial delay that was used for this request\r\n     */\r\n    function addMeasurement(request, fetchDownloadDurationMS, chunkMeasurements, requestTimeMS, throughputCapacityDelayMS) {\r\n        if (request && request.mediaType && !measurements[request.mediaType]) {\r\n            measurements[request.mediaType] = [];\r\n        }\r\n        const bitrateEntry = request.mediaInfo.bitrateList.find(item => item.id === request.representationId);\r\n        measurements[request.mediaType].push({\r\n            index: request.index,\r\n            repId: request.representationId,\r\n            mediaType: request.mediaType,\r\n            requestTimeMS,\r\n            adjustedAvailabilityStartTimeMS: request.availabilityStartTime.getTime(),\r\n            segDurationMS: request.duration * 1000,\r\n            chunksDurationMS: chunkMeasurements.reduce((prev, curr) => prev + curr.chunkDownloadDurationMS, 0),\r\n            segmentBytes: chunkMeasurements.reduce((prev, curr) => prev + curr.chunkBytes, 0),\r\n            bitrate: bitrateEntry && bitrateEntry.bandwidth,\r\n            bitrateList: request.mediaInfo.bitrateList,\r\n            chunkMeasurements,\r\n            fetchDownloadDurationMS,\r\n            throughputCapacityDelayMS,\r\n            getEstimatedBufferLevel: createBufferLevelTrendFunction(chunkMeasurements.slice(1)) // don't use first chunk's buffer level\r\n        });\r\n        // maintain only a maximum amount of most recent measurements\r\n        if (measurements[request.mediaType].length > LLTM_MAX_MEASUREMENTS) {\r\n            measurements[request.mediaType].shift();\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        setup,\r\n        addMeasurement,\r\n        getThroughputCapacityDelayMS,\r\n        getEstimatedDownloadDurationMS\r\n    };\r\n\r\n    setup()\r\n\r\n    return instance;\r\n}\r\n\r\nLowLatencyThroughputModel.__dashjs_factory_name = 'LowLatencyThroughputModel';\r\nexport default FactoryMaker.getSingletonFactory(LowLatencyThroughputModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from '../constants/Constants';\r\n\r\nexport function checkParameterType(parameter, type) {\r\n    if (typeof parameter !== type) {\r\n        throw Constants.BAD_ARGUMENT_ERROR;\r\n    }\r\n}\r\n\r\nexport function checkInteger(parameter) {\r\n    const isInt = parameter !== null && !isNaN(parameter) && (parameter % 1 === 0);\r\n\r\n    if (!isInt) {\r\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument is not an integer';\r\n    }\r\n}\r\n\r\nexport function checkRange(parameter, min, max) {\r\n    if (parameter < min || parameter > max) {\r\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument out of range';\r\n    }\r\n}\r\n\r\nexport function checkIsVideoOrAudioType(type) {\r\n    if (typeof type !== 'string' || (type !== Constants.AUDIO && type !== Constants.VIDEO)) {\r\n        throw Constants.BAD_ARGUMENT_ERROR;\r\n    }\r\n}","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nconst NO_CHANGE = -1;\r\nconst PRIORITY = {\r\n    DEFAULT: 0.5,\r\n    STRONG: 1,\r\n    WEAK: 0\r\n};\r\n\r\nfunction SwitchRequest(q, r, p) {\r\n    //TODO refactor all the calls to this to use config to be like everything else.\r\n    let instance,\r\n        quality,\r\n        priority,\r\n        reason;\r\n\r\n    // check priority value\r\n    function getPriority(p) {\r\n        let ret = PRIORITY.DEFAULT;\r\n\r\n        // check that p is one of declared priority value\r\n        if (p === PRIORITY.DEFAULT || p === PRIORITY.STRONG || p === PRIORITY.WEAK) {\r\n            ret = p;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    // init attributes\r\n    quality = (q === undefined) ? NO_CHANGE : q;\r\n    priority = getPriority(p);\r\n    reason = (r === undefined) ? null : r;\r\n\r\n    instance = {\r\n        quality: quality,\r\n        reason: reason,\r\n        priority: priority\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\r\nconst factory = FactoryMaker.getClassFactory(SwitchRequest);\r\nfactory.NO_CHANGE = NO_CHANGE;\r\nfactory.PRIORITY = PRIORITY;\r\nFactoryMaker.updateClassFactory(SwitchRequest.__dashjs_factory_name, factory);\r\n\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Metrics Constants declaration\r\n * @class\r\n * @ignore\r\n */\r\nclass MetricsConstants {\r\n\r\n    init () {\r\n        this.TCP_CONNECTION = 'TcpList';\r\n        this.HTTP_REQUEST = 'HttpList';\r\n        this.TRACK_SWITCH = 'RepSwitchList';\r\n        this.BUFFER_LEVEL = 'BufferLevel';\r\n        this.BUFFER_LOADED = 'bufferLoaded';\r\n        this.ABANDON_LOAD = 'abandonload';\r\n        this.ALLOW_LOAD = 'allowload';\r\n        this.BUFFER_EMPTY = 'bufferStalled';\r\n        this.BUFFER_STATE = 'BufferState';\r\n        this.DVR_INFO = 'DVRInfo';\r\n        this.DROPPED_FRAMES = 'DroppedFrames';\r\n        this.SCHEDULING_INFO = 'SchedulingInfo';\r\n        this.REQUESTS_QUEUE = 'RequestsQueue';\r\n        this.MANIFEST_UPDATE = 'ManifestUpdate';\r\n        this.MANIFEST_UPDATE_STREAM_INFO = 'ManifestUpdatePeriodInfo';\r\n        this.MANIFEST_UPDATE_TRACK_INFO = 'ManifestUpdateRepresentationInfo';\r\n        this.PLAY_LIST = 'PlayList';\r\n        this.DVB_ERRORS = 'DVBErrors';\r\n        this.HTTP_REQUEST_DVB_REPORTING_TYPE = 'DVBReporting';\r\n    }\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nlet constants = new MetricsConstants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport SwitchRequest from '../SwitchRequest';\r\nimport Constants from '../../constants/Constants';\r\nimport MetricsConstants from '../../constants/MetricsConstants';\r\n\r\nfunction ThroughputRule(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const dashMetrics = config.dashMetrics;\r\n\r\n    let instance;\r\n\r\n    function setup() {\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!dashMetrics || !dashMetrics.hasOwnProperty('getCurrentBufferState')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n    function getMaxIndex(rulesContext) {\r\n        const switchRequest = SwitchRequest(context).create();\r\n\r\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') || !rulesContext.hasOwnProperty('useBufferOccupancyABR') ||\r\n            !rulesContext.hasOwnProperty('getAbrController') || !rulesContext.hasOwnProperty('getScheduleController')) {\r\n            return switchRequest;\r\n        }\r\n\r\n        checkConfig();\r\n\r\n        const mediaInfo = rulesContext.getMediaInfo();\r\n        const mediaType = rulesContext.getMediaType();\r\n        const currentBufferState = dashMetrics.getCurrentBufferState(mediaType);\r\n        const scheduleController = rulesContext.getScheduleController();\r\n        const abrController = rulesContext.getAbrController();\r\n        const streamInfo = rulesContext.getStreamInfo();\r\n        const streamId = streamInfo ? streamInfo.id : null;\r\n        const isDynamic = streamInfo && streamInfo.manifestInfo ? streamInfo.manifestInfo.isDynamic : null;\r\n        const throughputHistory = abrController.getThroughputHistory();\r\n        const throughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\r\n        const latency = throughputHistory.getAverageLatency(mediaType);\r\n        const useBufferOccupancyABR = rulesContext.useBufferOccupancyABR();\r\n\r\n        if (isNaN(throughput) || !currentBufferState || useBufferOccupancyABR) {\r\n            return switchRequest;\r\n        }\r\n\r\n        if (abrController.getAbandonmentStateFor(streamId, mediaType) !== MetricsConstants.ABANDON_LOAD) {\r\n            if (currentBufferState.state === MetricsConstants.BUFFER_LOADED || isDynamic) {\r\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, throughput, streamId, latency);\r\n                scheduleController.setTimeToLoadDelay(0);\r\n                switchRequest.reason = {throughput: throughput, latency: latency};\r\n            }\r\n        }\r\n\r\n        return switchRequest;\r\n    }\r\n\r\n    function reset() {\r\n        // no persistent information to reset\r\n    }\r\n\r\n    instance = {\r\n        getMaxIndex,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nThroughputRule.__dashjs_factory_name = 'ThroughputRule';\r\nexport default FactoryMaker.getClassFactory(ThroughputRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../../core/EventBus';\r\nimport Events from '../../../core/events/Events';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport Debug from '../../../core/Debug';\r\nimport SwitchRequest from '../SwitchRequest';\r\nimport Constants from '../../constants/Constants';\r\nimport MetricsConstants from '../../constants/MetricsConstants';\r\nimport MediaPlayerEvents from '../../MediaPlayerEvents';\r\n\r\nfunction InsufficientBufferRule(config) {\r\n\r\n    config = config || {};\r\n    const INSUFFICIENT_BUFFER_SAFETY_FACTOR = 0.5;\r\n    const SEGMENT_IGNORE_COUNT = 2;\r\n\r\n    const context = this.context;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const dashMetrics = config.dashMetrics;\r\n\r\n    let instance,\r\n        logger,\r\n        bufferStateDict;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        resetInitialSettings();\r\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\r\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!dashMetrics || !dashMetrics.hasOwnProperty('getCurrentBufferLevel') || !dashMetrics.hasOwnProperty('getCurrentBufferState')) {\r\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * If a BUFFER_EMPTY event happens, then InsufficientBufferRule returns switchRequest.quality=0 until BUFFER_LOADED happens.\r\n     * Otherwise InsufficientBufferRule gives a maximum bitrate depending on throughput and bufferLevel such that\r\n     * a whole fragment can be downloaded before the buffer runs out, subject to a conservative safety factor of 0.5.\r\n     * If the bufferLevel is low, then InsufficientBufferRule avoids rebuffering risk.\r\n     * If the bufferLevel is high, then InsufficientBufferRule give a high MaxIndex allowing other rules to take over.\r\n     * @param rulesContext\r\n     * @return {object}\r\n     */\r\n    function getMaxIndex(rulesContext) {\r\n        const switchRequest = SwitchRequest(context).create();\r\n\r\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaType')) {\r\n            return switchRequest;\r\n        }\r\n\r\n        checkConfig();\r\n\r\n        const mediaType = rulesContext.getMediaType();\r\n        const currentBufferState = dashMetrics.getCurrentBufferState(mediaType);\r\n        const representationInfo = rulesContext.getRepresentationInfo();\r\n        const fragmentDuration = representationInfo.fragmentDuration;\r\n        const streamInfo = rulesContext.getStreamInfo();\r\n        const streamId = streamInfo ? streamInfo.id : null;\r\n        const scheduleController = rulesContext.getScheduleController();\r\n        const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\r\n        const playbackController = scheduleController.getPlaybackController();\r\n\r\n\r\n        // Don't ask for a bitrate change if there is not info about buffer state or if fragmentDuration is not defined\r\n        const lowLatencyEnabled = playbackController.getLowLatencyModeEnabled();\r\n        if (shouldIgnore(lowLatencyEnabled, mediaType) || !fragmentDuration) {\r\n            return switchRequest;\r\n        }\r\n\r\n        if (currentBufferState && currentBufferState.state === MetricsConstants.BUFFER_EMPTY) {\r\n            logger.debug('[' + mediaType + '] Switch to index 0; buffer is empty.');\r\n            switchRequest.quality = 0;\r\n            switchRequest.reason = 'InsufficientBufferRule: Buffer is empty';\r\n        } else {\r\n            const mediaInfo = rulesContext.getMediaInfo();\r\n            const abrController = rulesContext.getAbrController();\r\n            const throughputHistory = abrController.getThroughputHistory();\r\n\r\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n            const throughput = throughputHistory.getAverageThroughput(mediaType, isDynamic);\r\n            const latency = throughputHistory.getAverageLatency(mediaType);\r\n            const bitrate = throughput * (bufferLevel / fragmentDuration) * INSUFFICIENT_BUFFER_SAFETY_FACTOR;\r\n\r\n            switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, bitrate, streamId, latency);\r\n            switchRequest.reason = 'InsufficientBufferRule: being conservative to avoid immediate rebuffering';\r\n        }\r\n\r\n        return switchRequest;\r\n\r\n    }\r\n\r\n    function shouldIgnore(lowLatencyEnabled, mediaType) {\r\n        return !lowLatencyEnabled && bufferStateDict[mediaType].ignoreCount > 0;\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        bufferStateDict = {};\r\n        bufferStateDict[Constants.VIDEO] = { ignoreCount: SEGMENT_IGNORE_COUNT };\r\n        bufferStateDict[Constants.AUDIO] = { ignoreCount: SEGMENT_IGNORE_COUNT };\r\n    }\r\n\r\n    function _onPlaybackSeeking() {\r\n        resetInitialSettings();\r\n    }\r\n\r\n    function _onBytesAppended(e) {\r\n        if (!isNaN(e.startTime) && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\r\n            if (bufferStateDict[e.mediaType].ignoreCount > 0) {\r\n                bufferStateDict[e.mediaType].ignoreCount--;\r\n            }\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        resetInitialSettings();\r\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\r\n        eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\r\n    }\r\n\r\n    instance = {\r\n        getMaxIndex,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nInsufficientBufferRule.__dashjs_factory_name = 'InsufficientBufferRule';\r\nexport default FactoryMaker.getClassFactory(InsufficientBufferRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport SwitchRequest from '../SwitchRequest';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport Debug from '../../../core/Debug';\r\n\r\nfunction AbandonRequestsRule(config) {\r\n\r\n    config = config || {};\r\n\r\n    const context = this.context;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const dashMetrics = config.dashMetrics;\r\n    const settings = config.settings;\r\n\r\n    let instance,\r\n        logger,\r\n        fragmentDict,\r\n        abandonDict,\r\n        throughputArray;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        reset();\r\n    }\r\n\r\n    function setFragmentRequestDict(type, id) {\r\n        fragmentDict[type] = fragmentDict[type] || {};\r\n        fragmentDict[type][id] = fragmentDict[type][id] || {};\r\n    }\r\n\r\n    function storeLastRequestThroughputByType(type, throughput) {\r\n        throughputArray[type] = throughputArray[type] || [];\r\n        throughputArray[type].push(throughput);\r\n    }\r\n\r\n    function shouldAbandon(rulesContext) {\r\n        const switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, {name: AbandonRequestsRule.__dashjs_factory_name});\r\n\r\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') || !rulesContext.hasOwnProperty('getCurrentRequest') ||\r\n            !rulesContext.hasOwnProperty('getRepresentationInfo') || !rulesContext.hasOwnProperty('getAbrController')) {\r\n            return switchRequest;\r\n        }\r\n\r\n        const mediaInfo = rulesContext.getMediaInfo();\r\n        const mediaType = rulesContext.getMediaType();\r\n        const streamInfo = rulesContext.getStreamInfo();\r\n        const streamId = streamInfo ? streamInfo.id : null;\r\n        const req = rulesContext.getCurrentRequest();\r\n\r\n        if (!isNaN(req.index)) {\r\n            setFragmentRequestDict(mediaType, req.index);\r\n\r\n            const stableBufferTime = mediaPlayerModel.getStableBufferTime();\r\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n            if ( bufferLevel > stableBufferTime ) {\r\n                return switchRequest;\r\n            }\r\n\r\n            const fragmentInfo = fragmentDict[mediaType][req.index];\r\n            if (fragmentInfo === null || req.firstByteDate === null || abandonDict.hasOwnProperty(fragmentInfo.id)) {\r\n                return switchRequest;\r\n            }\r\n\r\n            //setup some init info based on first progress event\r\n            if (fragmentInfo.firstByteTime === undefined) {\r\n                throughputArray[mediaType] = [];\r\n                fragmentInfo.firstByteTime = req.firstByteDate.getTime();\r\n                fragmentInfo.segmentDuration = req.duration;\r\n                fragmentInfo.bytesTotal = req.bytesTotal;\r\n                fragmentInfo.id = req.index;\r\n            }\r\n            fragmentInfo.bytesLoaded = req.bytesLoaded;\r\n            fragmentInfo.elapsedTime = new Date().getTime() - fragmentInfo.firstByteTime;\r\n\r\n            if (fragmentInfo.bytesLoaded > 0 && fragmentInfo.elapsedTime > 0) {\r\n                storeLastRequestThroughputByType(mediaType, Math.round(fragmentInfo.bytesLoaded * 8 / fragmentInfo.elapsedTime));\r\n            }\r\n\r\n            if (throughputArray[mediaType].length >= settings.get().streaming.abr.abrRulesParameters.abandonRequestsRule.minLengthToAverage &&\r\n                fragmentInfo.elapsedTime > settings.get().streaming.abr.abrRulesParameters.abandonRequestsRule.graceTimeThreshold &&\r\n                fragmentInfo.bytesLoaded < fragmentInfo.bytesTotal) {\r\n\r\n                const totalSampledValue = throughputArray[mediaType].reduce((a, b) => a + b, 0);\r\n                fragmentInfo.measuredBandwidthInKbps = Math.round(totalSampledValue / throughputArray[mediaType].length);\r\n                fragmentInfo.estimatedTimeOfDownload = +((fragmentInfo.bytesTotal * 8 / fragmentInfo.measuredBandwidthInKbps) / 1000).toFixed(2);\r\n\r\n                if (fragmentInfo.estimatedTimeOfDownload < fragmentInfo.segmentDuration * settings.get().streaming.abr.abrRulesParameters.abandonRequestsRule.abandonMultiplier || rulesContext.getRepresentationInfo().quality === 0 ) {\r\n                    return switchRequest;\r\n                } else if (!abandonDict.hasOwnProperty(fragmentInfo.id)) {\r\n\r\n                    const abrController = rulesContext.getAbrController();\r\n                    const bytesRemaining = fragmentInfo.bytesTotal - fragmentInfo.bytesLoaded;\r\n                    const bitrateList = abrController.getBitrateList(mediaInfo);\r\n                    const quality = abrController.getQualityForBitrate(mediaInfo, fragmentInfo.measuredBandwidthInKbps * settings.get().streaming.abr.bandwidthSafetyFactor, streamId);\r\n                    const minQuality = abrController.getMinAllowedIndexFor(mediaType, streamId);\r\n                    const newQuality = (minQuality !== undefined) ? Math.max(minQuality, quality) : quality;\r\n                    const estimateOtherBytesTotal = fragmentInfo.bytesTotal * bitrateList[newQuality].bitrate / bitrateList[abrController.getQualityFor(mediaType, streamId)].bitrate;\r\n\r\n                    if (bytesRemaining > estimateOtherBytesTotal) {\r\n                        switchRequest.quality = newQuality;\r\n                        switchRequest.reason.throughput = fragmentInfo.measuredBandwidthInKbps;\r\n                        switchRequest.reason.fragmentID = fragmentInfo.id;\r\n                        switchRequest.reason.rule = this.getClassName();\r\n                        abandonDict[fragmentInfo.id] = fragmentInfo;\r\n                        logger.debug('[' + mediaType + '] frag id',fragmentInfo.id,' is asking to abandon and switch to quality to ', newQuality, ' measured bandwidth was', fragmentInfo.measuredBandwidthInKbps);\r\n                        delete fragmentDict[mediaType][fragmentInfo.id];\r\n                    }\r\n                }\r\n            } else if (fragmentInfo.bytesLoaded === fragmentInfo.bytesTotal) {\r\n                delete fragmentDict[mediaType][fragmentInfo.id];\r\n            }\r\n        }\r\n\r\n        return switchRequest;\r\n    }\r\n\r\n    function reset() {\r\n        fragmentDict = {};\r\n        abandonDict = {};\r\n        throughputArray = [];\r\n    }\r\n\r\n    instance = {\r\n        shouldAbandon: shouldAbandon,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nAbandonRequestsRule.__dashjs_factory_name = 'AbandonRequestsRule';\r\nexport default FactoryMaker.getClassFactory(AbandonRequestsRule);\r\n","import FactoryMaker from '../../../core/FactoryMaker';\r\nimport SwitchRequest from '../SwitchRequest';\r\nimport Debug from '../../../core/Debug';\r\n\r\nfunction DroppedFramesRule() {\r\n\r\n    const context = this.context;\r\n    let instance,\r\n        logger;\r\n\r\n    const DROPPED_PERCENTAGE_FORBID = 0.15;\r\n    const GOOD_SAMPLE_SIZE = 375; //Don't apply the rule until this many frames have been rendered(and counted under those indices).\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n    }\r\n\r\n    function getMaxIndex(rulesContext) {\r\n        const switchRequest = SwitchRequest(context).create();\r\n\r\n        if (!rulesContext || !rulesContext.hasOwnProperty('getDroppedFramesHistory')) {\r\n            return switchRequest;\r\n        }\r\n\r\n        const droppedFramesHistory = rulesContext.getDroppedFramesHistory();\r\n        const streamId = rulesContext.getStreamInfo().id;\r\n\r\n        if (droppedFramesHistory) {\r\n            const dfh = droppedFramesHistory.getFrameHistory(streamId);\r\n\r\n            if (!dfh || dfh.length === 0) {\r\n                return switchRequest;\r\n            }\r\n\r\n            let droppedFrames = 0;\r\n            let totalFrames = 0;\r\n            let maxIndex = SwitchRequest.NO_CHANGE;\r\n\r\n            //No point in measuring dropped frames for the zeroeth index.\r\n            for (let i = 1; i < dfh.length; i++) {\r\n                if (dfh[i]) {\r\n                    droppedFrames = dfh[i].droppedVideoFrames;\r\n                    totalFrames = dfh[i].totalVideoFrames;\r\n\r\n                    if (totalFrames > GOOD_SAMPLE_SIZE && droppedFrames / totalFrames > DROPPED_PERCENTAGE_FORBID) {\r\n                        maxIndex = i - 1;\r\n                        logger.debug('index: ' + maxIndex + ' Dropped Frames: ' + droppedFrames + ' Total Frames: ' + totalFrames);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return SwitchRequest(context).create(maxIndex, { droppedFrames: droppedFrames });\r\n        }\r\n\r\n        return switchRequest;\r\n    }\r\n\r\n    instance = {\r\n        getMaxIndex\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\r\nexport default FactoryMaker.getClassFactory(DroppedFramesRule);\r\n","\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport Debug from '../../../core/Debug';\r\nimport SwitchRequest from '../SwitchRequest';\r\n\r\nfunction SwitchHistoryRule() {\r\n\r\n    const context = this.context;\r\n\r\n    let instance,\r\n        logger;\r\n\r\n    //MAX_SWITCH is the number of drops made. It doesn't consider the size of the drop.\r\n    const MAX_SWITCH = 0.075;\r\n\r\n    //Before this number of switch requests(no switch or actual), don't apply the rule.\r\n    //must be < SwitchRequestHistory SWITCH_REQUEST_HISTORY_DEPTH to enable rule\r\n    const SAMPLE_SIZE = 6;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n    }\r\n\r\n    function getMaxIndex(rulesContext) {\r\n        const switchRequestHistory = rulesContext ? rulesContext.getSwitchHistory() : null;\r\n        const switchRequests = switchRequestHistory ? switchRequestHistory.getSwitchRequests() : [];\r\n        let drops = 0;\r\n        let noDrops = 0;\r\n        let dropSize = 0;\r\n        const switchRequest = SwitchRequest(context).create();\r\n\r\n        for (let i = 0; i < switchRequests.length; i++) {\r\n            if (switchRequests[i] !== undefined) {\r\n                drops += switchRequests[i].drops;\r\n                noDrops += switchRequests[i].noDrops;\r\n                dropSize += switchRequests[i].dropSize;\r\n\r\n                if (drops + noDrops >= SAMPLE_SIZE && (drops / noDrops > MAX_SWITCH)) {\r\n                    switchRequest.quality = (i > 0 && switchRequests[i].drops > 0) ? i - 1 : i;\r\n                    switchRequest.reason = {index: switchRequest.quality, drops: drops, noDrops: noDrops, dropSize: dropSize};\r\n                    logger.debug('Switch history rule index: ' + switchRequest.quality + ' samples: ' + (drops + noDrops) + ' drops: ' + drops);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return switchRequest;\r\n    }\r\n\r\n    instance = {\r\n        getMaxIndex: getMaxIndex\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\n\r\nSwitchHistoryRule.__dashjs_factory_name = 'SwitchHistoryRule';\r\nexport default FactoryMaker.getClassFactory(SwitchHistoryRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2016, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n// For a description of the BOLA adaptive bitrate (ABR) algorithm, see http://arxiv.org/abs/1601.06748\r\n\r\nimport MetricsConstants from '../../constants/MetricsConstants';\r\nimport SwitchRequest from '../SwitchRequest';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\r\nimport EventBus from '../../../core/EventBus';\r\nimport Events from '../../../core/events/Events';\r\nimport Debug from '../../../core/Debug';\r\nimport MediaPlayerEvents from '../../MediaPlayerEvents';\r\nimport Constants from '../../constants/Constants';\r\n\r\n// BOLA_STATE_ONE_BITRATE   : If there is only one bitrate (or initialization failed), always return NO_CHANGE.\r\n// BOLA_STATE_STARTUP       : Set placeholder buffer such that we download fragments at most recently measured throughput.\r\n// BOLA_STATE_STEADY        : Buffer primed, we switch to steady operation.\r\n// TODO: add BOLA_STATE_SEEK and tune BOLA behavior on seeking\r\nconst BOLA_STATE_ONE_BITRATE = 0;\r\nconst BOLA_STATE_STARTUP = 1;\r\nconst BOLA_STATE_STEADY = 2;\r\n\r\nconst MINIMUM_BUFFER_S = 10; // BOLA should never add artificial delays if buffer is less than MINIMUM_BUFFER_S.\r\nconst MINIMUM_BUFFER_PER_BITRATE_LEVEL_S = 2;\r\n// E.g. if there are 5 bitrates, BOLA switches to top bitrate at buffer = 10 + 5 * 2 = 20s.\r\n// If Schedule Controller does not allow buffer to reach that level, it can be achieved through the placeholder buffer level.\r\n\r\nconst PLACEHOLDER_BUFFER_DECAY = 0.99; // Make sure placeholder buffer does not stick around too long.\r\n\r\nfunction BolaRule(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n\r\n    const dashMetrics = config.dashMetrics;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        logger,\r\n        bolaStateDict;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        resetInitialSettings();\r\n\r\n        eventBus.on(MediaPlayerEvents.BUFFER_EMPTY, onBufferEmpty, instance);\r\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\r\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, onMetricAdded, instance);\r\n        eventBus.on(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, onQualityChangeRequested, instance);\r\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, instance);\r\n\r\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\r\n    }\r\n\r\n    function utilitiesFromBitrates(bitrates) {\r\n        return bitrates.map(b => Math.log(b));\r\n        // no need to worry about offset, utilities will be offset (uniformly) anyway later\r\n    }\r\n\r\n    // NOTE: in live streaming, the real buffer level can drop below minimumBufferS, but bola should not stick to lowest bitrate by using a placeholder buffer level\r\n    function calculateBolaParameters(stableBufferTime, bitrates, utilities) {\r\n        const highestUtilityIndex = utilities.reduce((highestIndex, u, uIndex) => (u > utilities[highestIndex] ? uIndex : highestIndex), 0);\r\n\r\n        if (highestUtilityIndex === 0) {\r\n            // if highestUtilityIndex === 0, then always use lowest bitrate\r\n            return null;\r\n        }\r\n\r\n        const bufferTime = Math.max(stableBufferTime, MINIMUM_BUFFER_S + MINIMUM_BUFFER_PER_BITRATE_LEVEL_S * bitrates.length);\r\n\r\n        // TODO: Investigate if following can be better if utilities are not the default Math.log utilities.\r\n        // If using Math.log utilities, we can choose Vp and gp to always prefer bitrates[0] at minimumBufferS and bitrates[max] at bufferTarget.\r\n        // (Vp * (utility + gp) - bufferLevel) / bitrate has the maxima described when:\r\n        // Vp * (utilities[0] + gp - 1) === minimumBufferS and Vp * (utilities[max] + gp - 1) === bufferTarget\r\n        // giving:\r\n        const gp = (utilities[highestUtilityIndex] - 1) / (bufferTime / MINIMUM_BUFFER_S - 1);\r\n        const Vp = MINIMUM_BUFFER_S / gp;\r\n        // note that expressions for gp and Vp assume utilities[0] === 1, which is true because of normalization\r\n\r\n        return { gp: gp, Vp: Vp };\r\n    }\r\n\r\n    function getInitialBolaState(rulesContext) {\r\n        const initialState = {};\r\n        const mediaInfo = rulesContext.getMediaInfo();\r\n        const bitrates = mediaInfo.bitrateList.map(b => b.bandwidth);\r\n        let utilities = utilitiesFromBitrates(bitrates);\r\n        utilities = utilities.map(u => u - utilities[0] + 1); // normalize\r\n        const stableBufferTime = mediaPlayerModel.getStableBufferTime();\r\n        const params = calculateBolaParameters(stableBufferTime, bitrates, utilities);\r\n\r\n        if (!params) {\r\n            // only happens when there is only one bitrate level\r\n            initialState.state = BOLA_STATE_ONE_BITRATE;\r\n        } else {\r\n            initialState.state = BOLA_STATE_STARTUP;\r\n\r\n            initialState.bitrates = bitrates;\r\n            initialState.utilities = utilities;\r\n            initialState.stableBufferTime = stableBufferTime;\r\n            initialState.Vp = params.Vp;\r\n            initialState.gp = params.gp;\r\n\r\n            initialState.lastQuality = 0;\r\n            clearBolaStateOnSeek(initialState);\r\n        }\r\n\r\n        return initialState;\r\n    }\r\n\r\n    function clearBolaStateOnSeek(bolaState) {\r\n        bolaState.placeholderBuffer = 0;\r\n        bolaState.mostAdvancedSegmentStart = NaN;\r\n        bolaState.lastSegmentWasReplacement = false;\r\n        bolaState.lastSegmentStart = NaN;\r\n        bolaState.lastSegmentDurationS = NaN;\r\n        bolaState.lastSegmentRequestTimeMs = NaN;\r\n        bolaState.lastSegmentFinishTimeMs = NaN;\r\n    }\r\n\r\n    // If the buffer target is changed (can this happen mid-stream?), then adjust BOLA parameters accordingly.\r\n    function checkBolaStateStableBufferTime(bolaState, mediaType) {\r\n        const stableBufferTime = mediaPlayerModel.getStableBufferTime();\r\n        if (bolaState.stableBufferTime !== stableBufferTime) {\r\n            const params = calculateBolaParameters(stableBufferTime, bolaState.bitrates, bolaState.utilities);\r\n            if (params.Vp !== bolaState.Vp || params.gp !== bolaState.gp) {\r\n                // correct placeholder buffer using two criteria:\r\n                // 1. do not change effective buffer level at effectiveBufferLevel === MINIMUM_BUFFER_S ( === Vp * gp )\r\n                // 2. scale placeholder buffer by Vp subject to offset indicated in 1.\r\n\r\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n                let effectiveBufferLevel = bufferLevel + bolaState.placeholderBuffer;\r\n\r\n                effectiveBufferLevel -= MINIMUM_BUFFER_S;\r\n                effectiveBufferLevel *= params.Vp / bolaState.Vp;\r\n                effectiveBufferLevel += MINIMUM_BUFFER_S;\r\n\r\n                bolaState.stableBufferTime = stableBufferTime;\r\n                bolaState.Vp = params.Vp;\r\n                bolaState.gp = params.gp;\r\n                bolaState.placeholderBuffer = Math.max(0, effectiveBufferLevel - bufferLevel);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getBolaState(rulesContext) {\r\n        const mediaType = rulesContext.getMediaType();\r\n        let bolaState = bolaStateDict[mediaType];\r\n        if (!bolaState) {\r\n            bolaState = getInitialBolaState(rulesContext);\r\n            bolaStateDict[mediaType] = bolaState;\r\n        } else if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\r\n            checkBolaStateStableBufferTime(bolaState, mediaType);\r\n        }\r\n        return bolaState;\r\n    }\r\n\r\n    // The core idea of BOLA.\r\n    function getQualityFromBufferLevel(bolaState, bufferLevel) {\r\n        const bitrateCount = bolaState.bitrates.length;\r\n        let quality = NaN;\r\n        let score = NaN;\r\n        for (let i = 0; i < bitrateCount; ++i) {\r\n            let s = (bolaState.Vp * (bolaState.utilities[i] + bolaState.gp) - bufferLevel) / bolaState.bitrates[i];\r\n            if (isNaN(score) || s >= score) {\r\n                score = s;\r\n                quality = i;\r\n            }\r\n        }\r\n        return quality;\r\n    }\r\n\r\n    // maximum buffer level which prefers to download at quality rather than wait\r\n    function maxBufferLevelForQuality(bolaState, quality) {\r\n        return bolaState.Vp * (bolaState.utilities[quality] + bolaState.gp);\r\n    }\r\n\r\n    // the minimum buffer level that would cause BOLA to choose quality rather than a lower bitrate\r\n    function minBufferLevelForQuality(bolaState, quality) {\r\n        const qBitrate = bolaState.bitrates[quality];\r\n        const qUtility = bolaState.utilities[quality];\r\n\r\n        let min = 0;\r\n        for (let i = quality - 1; i >= 0; --i) {\r\n            // for each bitrate less than bitrates[quality], BOLA should prefer quality (unless other bitrate has higher utility)\r\n            if (bolaState.utilities[i] < bolaState.utilities[quality]) {\r\n                const iBitrate = bolaState.bitrates[i];\r\n                const iUtility = bolaState.utilities[i];\r\n\r\n                const level = bolaState.Vp * (bolaState.gp + (qBitrate * iUtility - iBitrate * qUtility) / (qBitrate - iBitrate));\r\n                min = Math.max(min, level); // we want min to be small but at least level(i) for all i\r\n            }\r\n        }\r\n        return min;\r\n    }\r\n\r\n    /*\r\n     * The placeholder buffer increases the effective buffer that is used to calculate the bitrate.\r\n     * There are two main reasons we might want to increase the placeholder buffer:\r\n     *\r\n     * 1. When a segment finishes downloading, we would expect to get a call on getMaxIndex() regarding the quality for\r\n     *    the next segment. However, there might be a delay before the next call. E.g. when streaming live content, the\r\n     *    next segment might not be available yet. If the call to getMaxIndex() does happens after a delay, we don't\r\n     *    want the delay to change the BOLA decision - we only want to factor download time to decide on bitrate level.\r\n     *\r\n     * 2. It is possible to get a call to getMaxIndex() without having a segment download. The buffer target in dash.js\r\n     *    is different for top-quality segments and lower-quality segments. If getMaxIndex() returns a lower-than-top\r\n     *    quality, then the buffer controller might decide not to download a segment. When dash.js is ready for the next\r\n     *    segment, getMaxIndex() will be called again. We don't want this extra delay to factor in the bitrate decision.\r\n     */\r\n    function updatePlaceholderBuffer(bolaState, mediaType) {\r\n        const nowMs = Date.now();\r\n\r\n        if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\r\n            // compensate for non-bandwidth-derived delays, e.g., live streaming availability, buffer controller\r\n            const delay = 0.001 * (nowMs - bolaState.lastSegmentFinishTimeMs);\r\n            bolaState.placeholderBuffer += Math.max(0, delay);\r\n        } else if (!isNaN(bolaState.lastCallTimeMs)) {\r\n            // no download after last call, compensate for delay between calls\r\n            const delay = 0.001 * (nowMs - bolaState.lastCallTimeMs);\r\n            bolaState.placeholderBuffer += Math.max(0, delay);\r\n        }\r\n\r\n        bolaState.lastCallTimeMs = nowMs;\r\n        bolaState.lastSegmentStart = NaN;\r\n        bolaState.lastSegmentRequestTimeMs = NaN;\r\n        bolaState.lastSegmentFinishTimeMs = NaN;\r\n\r\n        checkBolaStateStableBufferTime(bolaState, mediaType);\r\n    }\r\n\r\n    function onBufferEmpty(e) {\r\n        // if we rebuffer, we don't want the placeholder buffer to artificially raise BOLA quality\r\n        const mediaType = e.mediaType;\r\n        // if audio buffer runs empty (due to track switch for example) then reset placeholder buffer only for audio (to avoid decrease video BOLA quality)\r\n        const stateDict = mediaType === Constants.AUDIO ? [Constants.AUDIO] : bolaStateDict;\r\n        for (const mediaType in stateDict) {\r\n            if (bolaStateDict.hasOwnProperty(mediaType) && bolaStateDict[mediaType].state === BOLA_STATE_STEADY) {\r\n                bolaStateDict[mediaType].placeholderBuffer = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function onPlaybackSeeking() {\r\n        // TODO: 1. Verify what happens if we seek mid-fragment.\r\n        // TODO: 2. If e.g. we have 10s fragments and seek, we might want to download the first fragment at a lower quality to restart playback quickly.\r\n        for (const mediaType in bolaStateDict) {\r\n            if (bolaStateDict.hasOwnProperty(mediaType)) {\r\n                const bolaState = bolaStateDict[mediaType];\r\n                if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\r\n                    bolaState.state = BOLA_STATE_STARTUP; // TODO: BOLA_STATE_SEEK?\r\n                    clearBolaStateOnSeek(bolaState);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function onMediaFragmentLoaded(e) {\r\n        if (e && e.chunk && e.chunk.mediaInfo) {\r\n            const bolaState = bolaStateDict[e.chunk.mediaInfo.type];\r\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\r\n                const start = e.chunk.start;\r\n                if (isNaN(bolaState.mostAdvancedSegmentStart) || start > bolaState.mostAdvancedSegmentStart) {\r\n                    bolaState.mostAdvancedSegmentStart = start;\r\n                    bolaState.lastSegmentWasReplacement = false;\r\n                } else {\r\n                    bolaState.lastSegmentWasReplacement = true;\r\n                }\r\n\r\n                bolaState.lastSegmentStart = start;\r\n                bolaState.lastSegmentDurationS = e.chunk.duration;\r\n                bolaState.lastQuality = e.chunk.quality;\r\n\r\n                checkNewSegment(bolaState, e.chunk.mediaInfo.type);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onMetricAdded(e) {\r\n        if (e && e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && e.value.trace && e.value.trace.length) {\r\n            const bolaState = bolaStateDict[e.mediaType];\r\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\r\n                bolaState.lastSegmentRequestTimeMs = e.value.trequest.getTime();\r\n                bolaState.lastSegmentFinishTimeMs = e.value._tfinish.getTime();\r\n\r\n                checkNewSegment(bolaState, e.mediaType);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * When a new segment is downloaded, we get two notifications: onMediaFragmentLoaded() and onMetricAdded(). It is\r\n     * possible that the quality for the downloaded segment was lower (not higher) than the quality indicated by BOLA.\r\n     * This might happen because of other rules such as the DroppedFramesRule. When this happens, we trim the\r\n     * placeholder buffer to make BOLA more stable. This mechanism also avoids inflating the buffer when BOLA itself\r\n     * decides not to increase the quality to avoid oscillations.\r\n     *\r\n     * We should also check for replacement segments (fast switching). In this case, a segment is downloaded but does\r\n     * not grow the actual buffer. Fast switching might cause the buffer to deplete, causing BOLA to drop the bitrate.\r\n     * We avoid this by growing the placeholder buffer.\r\n     */\r\n    function checkNewSegment(bolaState, mediaType) {\r\n        if (!isNaN(bolaState.lastSegmentStart) && !isNaN(bolaState.lastSegmentRequestTimeMs) && !isNaN(bolaState.placeholderBuffer)) {\r\n            bolaState.placeholderBuffer *= PLACEHOLDER_BUFFER_DECAY;\r\n\r\n            // Find what maximum buffer corresponding to last segment was, and ensure placeholder is not relatively larger.\r\n            if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\r\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n                const bufferAtLastSegmentRequest = bufferLevel + 0.001 * (bolaState.lastSegmentFinishTimeMs - bolaState.lastSegmentRequestTimeMs); // estimate\r\n                const maxEffectiveBufferForLastSegment = maxBufferLevelForQuality(bolaState, bolaState.lastQuality);\r\n                const maxPlaceholderBuffer = Math.max(0, maxEffectiveBufferForLastSegment - bufferAtLastSegmentRequest);\r\n                bolaState.placeholderBuffer = Math.min(maxPlaceholderBuffer, bolaState.placeholderBuffer);\r\n            }\r\n\r\n            // then see if we should grow placeholder buffer\r\n\r\n            if (bolaState.lastSegmentWasReplacement && !isNaN(bolaState.lastSegmentDurationS)) {\r\n                // compensate for segments that were downloaded but did not grow the buffer\r\n                bolaState.placeholderBuffer += bolaState.lastSegmentDurationS;\r\n            }\r\n\r\n            bolaState.lastSegmentStart = NaN;\r\n            bolaState.lastSegmentRequestTimeMs = NaN;\r\n        }\r\n    }\r\n\r\n    function onQualityChangeRequested(e) {\r\n        // Useful to store change requests when abandoning a download.\r\n        if (e) {\r\n            const bolaState = bolaStateDict[e.mediaType];\r\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\r\n                bolaState.abrQuality = e.newQuality;\r\n            }\r\n        }\r\n    }\r\n\r\n    function onFragmentLoadingAbandoned(e) {\r\n        if (e) {\r\n            const bolaState = bolaStateDict[e.mediaType];\r\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\r\n                // deflate placeholderBuffer - note that we want to be conservative when abandoning\r\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(e.mediaType);\r\n                let wantEffectiveBufferLevel;\r\n                if (bolaState.abrQuality > 0) {\r\n                    // deflate to point where BOLA just chooses newQuality over newQuality-1\r\n                    wantEffectiveBufferLevel = minBufferLevelForQuality(bolaState, bolaState.abrQuality);\r\n                } else {\r\n                    wantEffectiveBufferLevel = MINIMUM_BUFFER_S;\r\n                }\r\n                const maxPlaceholderBuffer = Math.max(0, wantEffectiveBufferLevel - bufferLevel);\r\n                bolaState.placeholderBuffer = Math.min(bolaState.placeholderBuffer, maxPlaceholderBuffer);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getMaxIndex(rulesContext) {\r\n        const switchRequest = SwitchRequest(context).create();\r\n\r\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') ||\r\n            !rulesContext.hasOwnProperty('getScheduleController') || !rulesContext.hasOwnProperty('getStreamInfo') ||\r\n            !rulesContext.hasOwnProperty('getAbrController') || !rulesContext.hasOwnProperty('useBufferOccupancyABR')) {\r\n            return switchRequest;\r\n        }\r\n        const mediaInfo = rulesContext.getMediaInfo();\r\n        const mediaType = rulesContext.getMediaType();\r\n        const scheduleController = rulesContext.getScheduleController();\r\n        const streamInfo = rulesContext.getStreamInfo();\r\n        const abrController = rulesContext.getAbrController();\r\n        const throughputHistory = abrController.getThroughputHistory();\r\n        const streamId = streamInfo ? streamInfo.id : null;\r\n        const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\r\n        const useBufferOccupancyABR = rulesContext.useBufferOccupancyABR();\r\n        switchRequest.reason = switchRequest.reason || {};\r\n\r\n        if (!useBufferOccupancyABR) {\r\n            return switchRequest;\r\n        }\r\n\r\n        scheduleController.setTimeToLoadDelay(0);\r\n\r\n        const bolaState = getBolaState(rulesContext);\r\n\r\n        if (bolaState.state === BOLA_STATE_ONE_BITRATE) {\r\n            // shouldn't even have been called\r\n            return switchRequest;\r\n        }\r\n\r\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\r\n        const throughput = throughputHistory.getAverageThroughput(mediaType, isDynamic);\r\n        const safeThroughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\r\n        const latency = throughputHistory.getAverageLatency(mediaType);\r\n        let quality;\r\n\r\n        switchRequest.reason.state = bolaState.state;\r\n        switchRequest.reason.throughput = throughput;\r\n        switchRequest.reason.latency = latency;\r\n\r\n        if (isNaN(throughput)) { // isNaN(throughput) === isNaN(safeThroughput) === isNaN(latency)\r\n            // still starting up - not enough information\r\n            return switchRequest;\r\n        }\r\n\r\n        switch (bolaState.state) {\r\n            case BOLA_STATE_STARTUP:\r\n                quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamId, latency);\r\n\r\n                switchRequest.quality = quality;\r\n                switchRequest.reason.throughput = safeThroughput;\r\n\r\n                bolaState.placeholderBuffer = Math.max(0, minBufferLevelForQuality(bolaState, quality) - bufferLevel);\r\n                bolaState.lastQuality = quality;\r\n\r\n                if (!isNaN(bolaState.lastSegmentDurationS) && bufferLevel >= bolaState.lastSegmentDurationS) {\r\n                    bolaState.state = BOLA_STATE_STEADY;\r\n                }\r\n\r\n                break; // BOLA_STATE_STARTUP\r\n\r\n            case BOLA_STATE_STEADY:\r\n\r\n                // NB: The placeholder buffer is added to bufferLevel to come up with a bitrate.\r\n                //     This might lead BOLA to be too optimistic and to choose a bitrate that would lead to rebuffering -\r\n                //     if the real buffer bufferLevel runs out, the placeholder buffer cannot prevent rebuffering.\r\n                //     However, the InsufficientBufferRule takes care of this scenario.\r\n\r\n                updatePlaceholderBuffer(bolaState, mediaType);\r\n\r\n                quality = getQualityFromBufferLevel(bolaState, bufferLevel + bolaState.placeholderBuffer);\r\n\r\n                // we want to avoid oscillations\r\n                // We implement the \"BOLA-O\" variant: when network bandwidth lies between two encoded bitrate levels, stick to the lowest level.\r\n                const qualityForThroughput = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamId, latency);\r\n                if (quality > bolaState.lastQuality && quality > qualityForThroughput) {\r\n                    // only intervene if we are trying to *increase* quality to an *unsustainable* level\r\n                    // we are only avoid oscillations - do not drop below last quality\r\n\r\n                    quality = Math.max(qualityForThroughput, bolaState.lastQuality);\r\n                }\r\n\r\n                // We do not want to overfill buffer with low quality chunks.\r\n                // Note that there will be no delay if buffer level is below MINIMUM_BUFFER_S, probably even with some margin higher than MINIMUM_BUFFER_S.\r\n                let delayS = Math.max(0, bufferLevel + bolaState.placeholderBuffer - maxBufferLevelForQuality(bolaState, quality));\r\n\r\n                // First reduce placeholder buffer, then tell schedule controller to pause.\r\n                if (delayS <= bolaState.placeholderBuffer) {\r\n                    bolaState.placeholderBuffer -= delayS;\r\n                    delayS = 0;\r\n                } else {\r\n                    delayS -= bolaState.placeholderBuffer;\r\n                    bolaState.placeholderBuffer = 0;\r\n\r\n                    if (quality < abrController.getMaxAllowedIndexFor(mediaType, streamId)) {\r\n                        // At top quality, allow schedule controller to decide how far to fill buffer.\r\n                        scheduleController.setTimeToLoadDelay(1000 * delayS);\r\n                    } else {\r\n                        delayS = 0;\r\n                    }\r\n                }\r\n\r\n                switchRequest.quality = quality;\r\n                switchRequest.reason.throughput = throughput;\r\n                switchRequest.reason.latency = latency;\r\n                switchRequest.reason.bufferLevel = bufferLevel;\r\n                switchRequest.reason.placeholderBuffer = bolaState.placeholderBuffer;\r\n                switchRequest.reason.delay = delayS;\r\n\r\n                bolaState.lastQuality = quality;\r\n                // keep bolaState.state === BOLA_STATE_STEADY\r\n\r\n                break; // BOLA_STATE_STEADY\r\n\r\n            default:\r\n                logger.debug('BOLA ABR rule invoked in bad state.');\r\n                // should not arrive here, try to recover\r\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamId, latency);\r\n                switchRequest.reason.state = bolaState.state;\r\n                switchRequest.reason.throughput = safeThroughput;\r\n                switchRequest.reason.latency = latency;\r\n                bolaState.state = BOLA_STATE_STARTUP;\r\n                clearBolaStateOnSeek(bolaState);\r\n        }\r\n\r\n        return switchRequest;\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        bolaStateDict = {};\r\n    }\r\n\r\n    function reset() {\r\n        resetInitialSettings();\r\n\r\n        eventBus.off(MediaPlayerEvents.BUFFER_EMPTY, onBufferEmpty, instance);\r\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\r\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, onMetricAdded, instance);\r\n        eventBus.off(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, onQualityChangeRequested, instance);\r\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, instance);\r\n\r\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\r\n    }\r\n\r\n    instance = {\r\n        getMaxIndex: getMaxIndex,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nBolaRule.__dashjs_factory_name = 'BolaRule';\r\nexport default FactoryMaker.getClassFactory(BolaRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2020, Unified Streaming.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n// For a description of the Learn2Adapt-LowLatency (L2A-LL) bitrate adaptation algorithm, see https://github.com/unifiedstreaming/Learn2Adapt-LowLatency/blob/master/Online_learning_for_bitrate_adaptation_in_low_latency_live_streaming_CR.pdf\r\n\r\nimport MetricsConstants from '../../constants/MetricsConstants';\r\nimport SwitchRequest from '../SwitchRequest';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\r\nimport EventBus from '../../../core/EventBus';\r\nimport Events from '../../../core/events/Events';\r\nimport Debug from '../../../core/Debug';\r\nimport Constants from '../../constants/Constants';\r\n\r\nconst L2A_STATE_ONE_BITRATE = 0; // If there is only one bitrate (or initialization failed), always return NO_CHANGE.\r\nconst L2A_STATE_STARTUP = 1; // Set placeholder buffer such that we download fragments at most recently measured throughput.\r\nconst L2A_STATE_STEADY = 2; // Buffer primed, we switch to steady operation.\r\n\r\n\r\nfunction L2ARule(config) {\r\n    config = config || {};\r\n    const context = this.context;\r\n\r\n    const dashMetrics = config.dashMetrics;\r\n    const eventBus = EventBus(context).getInstance();\r\n\r\n    let instance,\r\n        l2AStateDict,\r\n        l2AParameterDict,\r\n        logger;\r\n\r\n    /**\r\n     * Setup function to initialize L2ARule\r\n     */\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        _resetInitialSettings();\r\n\r\n        eventBus.on(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\r\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\r\n        eventBus.on(Events.METRIC_ADDED, _onMetricAdded, instance);\r\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, _onQualityChangeRequested, instance);\r\n    }\r\n\r\n    /**\r\n     * Sets the initial state of the algorithm. Calls the initialize function for the paramteters.\r\n     * @param {object} rulesContext\r\n     * @return {object} initialState\r\n     * @private\r\n     */\r\n    function _getInitialL2AState(rulesContext) {\r\n        const initialState = {};\r\n        const mediaInfo = rulesContext.getMediaInfo();\r\n        const bitrates = mediaInfo.bitrateList.map((b) => {\r\n            return b.bandwidth / 1000;\r\n        });\r\n\r\n        initialState.state = L2A_STATE_STARTUP;\r\n        initialState.bitrates = bitrates;\r\n        initialState.lastQuality = 0;\r\n\r\n        _initializeL2AParameters(mediaInfo);\r\n        _clearL2AStateOnSeek(initialState);\r\n\r\n        return initialState;\r\n    }\r\n\r\n    /**\r\n     * Initializes the parameters of the algorithm. This will be done once for each media type.\r\n     * @param {object} mediaInfo\r\n     * @private\r\n     */\r\n    function _initializeL2AParameters(mediaInfo) {\r\n\r\n        if (!mediaInfo || !mediaInfo.type) {\r\n            return;\r\n        }\r\n        l2AParameterDict[mediaInfo.type] = {};\r\n        l2AParameterDict[mediaInfo.type].w = []; //Vector of probabilities associated with bitrate decisions\r\n        l2AParameterDict[mediaInfo.type].prev_w = []; //Vector of probabilities associated with bitrate decisions calculated in the previous step\r\n        l2AParameterDict[mediaInfo.type].Q = 0; //Initialization of Lagrangian multiplier (This keeps track of the buffer displacement)\r\n        l2AParameterDict[mediaInfo.type].segment_request_start_s = 0;\r\n        l2AParameterDict[mediaInfo.type].segment_download_finish_s = 0;\r\n        l2AParameterDict[mediaInfo.type].B_target = 1.5; //Target buffer level\r\n    }\r\n\r\n\r\n    /**\r\n     * Clears the state object\r\n     * @param {object} l2AState\r\n     * @private\r\n     */\r\n    function _clearL2AStateOnSeek(l2AState) {\r\n        l2AState.placeholderBuffer = 0;\r\n        l2AState.mostAdvancedSegmentStart = NaN;\r\n        l2AState.lastSegmentWasReplacement = false;\r\n        l2AState.lastSegmentStart = NaN;\r\n        l2AState.lastSegmentDurationS = NaN;\r\n        l2AState.lastSegmentRequestTimeMs = NaN;\r\n        l2AState.lastSegmentFinishTimeMs = NaN;\r\n        l2AState.lastSegmentUrl = '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns the state object for a fiven media type. If the state object is not yet defined _getInitialL2AState is called\r\n     * @param {object} rulesContext\r\n     * @return {object} l2AState\r\n     * @private\r\n     */\r\n    function _getL2AState(rulesContext) {\r\n        const mediaType = rulesContext.getMediaType();\r\n        let l2AState = l2AStateDict[mediaType];\r\n\r\n        if (!l2AState) {\r\n            l2AState = _getInitialL2AState(rulesContext);\r\n            l2AStateDict[mediaType] = l2AState;\r\n        }\r\n\r\n        return l2AState;\r\n    }\r\n\r\n    /**\r\n     * Event handler for the seeking event.\r\n     * @private\r\n     */\r\n    function _onPlaybackSeeking() {\r\n        for (const mediaType in l2AStateDict) {\r\n            if (l2AStateDict.hasOwnProperty(mediaType)) {\r\n                const l2aState = l2AStateDict[mediaType];\r\n                if (l2aState.state !== L2A_STATE_ONE_BITRATE) {\r\n                    l2aState.state = L2A_STATE_STARTUP;\r\n                    _clearL2AStateOnSeek(l2aState);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the mediaFragmentLoaded event\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onMediaFragmentLoaded(e) {\r\n        if (e && e.chunk && e.chunk.mediaInfo) {\r\n            const l2AState = l2AStateDict[e.chunk.mediaInfo.type];\r\n            const l2AParameters = l2AParameterDict[e.chunk.mediaInfo.type];\r\n\r\n            if (l2AState && l2AState.state !== L2A_STATE_ONE_BITRATE) {\r\n                const start = e.chunk.start;\r\n                if (isNaN(l2AState.mostAdvancedSegmentStart) || start > l2AState.mostAdvancedSegmentStart) {\r\n                    l2AState.mostAdvancedSegmentStart = start;\r\n                    l2AState.lastSegmentWasReplacement = false;\r\n                } else {\r\n                    l2AState.lastSegmentWasReplacement = true;\r\n                }\r\n\r\n                l2AState.lastSegmentStart = start;\r\n                l2AState.lastSegmentDurationS = e.chunk.duration;\r\n                l2AState.lastQuality = e.chunk.quality;\r\n\r\n                _checkNewSegment(l2AState, l2AParameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the metricAdded event\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onMetricAdded(e) {\r\n        if (e && e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && e.value.trace && e.value.trace.length) {\r\n            const l2AState = l2AStateDict[e.mediaType];\r\n            const l2AParameters = l2AParameterDict[e.mediaType];\r\n\r\n            if (l2AState && l2AState.state !== L2A_STATE_ONE_BITRATE) {\r\n                l2AState.lastSegmentRequestTimeMs = e.value.trequest.getTime();\r\n                l2AState.lastSegmentFinishTimeMs = e.value._tfinish.getTime();\r\n                _checkNewSegment(l2AState, l2AParameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When a new metric has been added or a media fragment has been loaded the state is adjusted accordingly\r\n     * @param {object} L2AState\r\n     * @param {object} l2AParameters\r\n     * @private\r\n     */\r\n    function _checkNewSegment(L2AState, l2AParameters) {\r\n        if (!isNaN(L2AState.lastSegmentStart) && !isNaN(L2AState.lastSegmentRequestTimeMs)) {\r\n            l2AParameters.segment_request_start_s = 0.001 * L2AState.lastSegmentRequestTimeMs;\r\n            l2AParameters.segment_download_finish_s = 0.001 * L2AState.lastSegmentFinishTimeMs;\r\n            L2AState.lastSegmentStart = NaN;\r\n            L2AState.lastSegmentRequestTimeMs = NaN;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the qualityChangeRequested event\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onQualityChangeRequested(e) {\r\n        // Useful to store change requests when abandoning a download.\r\n        if (e && e.mediaType) {\r\n            const L2AState = l2AStateDict[e.mediaType];\r\n            if (L2AState && L2AState.state !== L2A_STATE_ONE_BITRATE) {\r\n                L2AState.abrQuality = e.newQuality;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dot multiplication of two arrays\r\n     * @param {array} arr1\r\n     * @param {array} arr2\r\n     * @return {number} sumdot\r\n     * @private\r\n     */\r\n\r\n    function _dotmultiplication(arr1, arr2) {\r\n        if (arr1.length !== arr2.length) {\r\n            return -1;\r\n        }\r\n        let sumdot = 0;\r\n        for (let i = 0; i < arr1.length; i++) {\r\n            sumdot = sumdot + arr1[i] * arr2[i];\r\n        }\r\n        return sumdot;\r\n    }\r\n\r\n    /**\r\n     * Project an n-dim vector y to the simplex Dn\r\n     * Dn = { x : x n-dim, 1 >= x >= 0, sum(x) = 1}\r\n     * Algorithm is explained at http://arxiv.org/abs/1101.6081\r\n     * @param {array} arr\r\n     * @return {array}\r\n     */\r\n    function euclideanProjection(arr) {\r\n        const m = arr.length;\r\n        let bget = false;\r\n        let arr2 = [];\r\n        for (let ii = 0; ii < m; ++ii) {\r\n            arr2[ii] = arr[ii];\r\n        }\r\n        let s = arr.sort(function (a, b) {\r\n            return b - a;\r\n        });\r\n        let tmpsum = 0;\r\n        let tmax = 0;\r\n        let x = [];\r\n        for (let ii = 0; ii < m - 1; ++ii) {\r\n            tmpsum = tmpsum + s[ii];\r\n            tmax = (tmpsum - 1) / (ii + 1);\r\n            if (tmax >= s[ii + 1]) {\r\n                bget = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!bget) {\r\n            tmax = (tmpsum + s[m - 1] - 1) / m;\r\n        }\r\n        for (let ii = 0; ii < m; ++ii) {\r\n            x[ii] = Math.max(arr2[ii] - tmax, 0);\r\n        }\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Returns a switch request object indicating which quality is to be played\r\n     * @param {object} rulesContext\r\n     * @return {object}\r\n     */\r\n    function getMaxIndex(rulesContext) {\r\n        const switchRequest = SwitchRequest(context).create();\r\n        const horizon = 4; // Optimization horizon (The amount of steps required to achieve convergence)\r\n        const vl = Math.pow(horizon, 0.99);// Cautiousness parameter, used to control aggressiveness of the bitrate decision process.\r\n        const alpha = Math.max(Math.pow(horizon, 1), vl * Math.sqrt(horizon));// Step size, used for gradient descent exploration granularity\r\n        const mediaInfo = rulesContext.getMediaInfo();\r\n        const mediaType = rulesContext.getMediaType();\r\n        const bitrates = mediaInfo.bitrateList.map(b => b.bandwidth);\r\n        const bitrateCount = bitrates.length;\r\n        const scheduleController = rulesContext.getScheduleController();\r\n        const streamInfo = rulesContext.getStreamInfo();\r\n        const abrController = rulesContext.getAbrController();\r\n        const throughputHistory = abrController.getThroughputHistory();\r\n        const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\r\n        const useL2AABR = rulesContext.useL2AABR();\r\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\r\n        const safeThroughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\r\n        const throughput = throughputHistory.getAverageThroughput(mediaType, isDynamic); // In kbits/s\r\n        const react = 2; // Reactiveness to volatility (abrupt throughput drops), used to re-calibrate Lagrangian multiplier Q\r\n        const latency = throughputHistory.getAverageLatency(mediaType);\r\n        const videoModel = rulesContext.getVideoModel();\r\n        let quality;\r\n        let currentPlaybackRate = videoModel.getPlaybackRate();\r\n\r\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') ||\r\n            !rulesContext.hasOwnProperty('getScheduleController') || !rulesContext.hasOwnProperty('getStreamInfo') ||\r\n            !rulesContext.hasOwnProperty('getAbrController') || !rulesContext.hasOwnProperty('useL2AABR')) {\r\n            return switchRequest;\r\n        }\r\n\r\n        switchRequest.reason = switchRequest.reason || {};\r\n\r\n        if ((!useL2AABR) || (mediaType === Constants.AUDIO)) {// L2A decides bitrate only for video. Audio to be included in decision process in a later stage\r\n            return switchRequest;\r\n        }\r\n\r\n        scheduleController.setTimeToLoadDelay(0);\r\n\r\n        const l2AState = _getL2AState(rulesContext);\r\n\r\n        if (l2AState.state === L2A_STATE_ONE_BITRATE) {\r\n            // shouldn't even have been called\r\n            return switchRequest;\r\n        }\r\n\r\n        const l2AParameter = l2AParameterDict[mediaType];\r\n\r\n        if (!l2AParameter) {\r\n            return switchRequest;\r\n        }\r\n\r\n        switchRequest.reason.state = l2AState.state;\r\n        switchRequest.reason.throughput = throughput;\r\n        switchRequest.reason.latency = latency;\r\n\r\n        if (isNaN(throughput)) {\r\n            // still starting up - not enough information\r\n            return switchRequest;\r\n        }\r\n\r\n        switch (l2AState.state) {\r\n            case L2A_STATE_STARTUP:\r\n                quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamInfo.id, latency);//During strat-up phase abr.controller is responsible for bitrate decisions.\r\n                switchRequest.quality = quality;\r\n                switchRequest.reason.throughput = safeThroughput;\r\n                l2AState.lastQuality = quality;\r\n\r\n                if (!isNaN(l2AState.lastSegmentDurationS) && bufferLevel >= l2AParameter.B_target) {\r\n                    l2AState.state = L2A_STATE_STEADY;\r\n                    l2AParameter.Q = vl;// Initialization of Q langrangian multiplier\r\n                    // Update of probability vector w, to be used in main adaptation logic of L2A below (steady state)\r\n                    for (let i = 0; i < bitrateCount; ++i) {\r\n                        if (i === l2AState.lastQuality) {\r\n                            l2AParameter.prev_w[i] = 1;\r\n                        } else {\r\n                            l2AParameter.prev_w[i] = 0;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break; // L2A_STATE_STARTUP\r\n            case L2A_STATE_STEADY:\r\n                let diff1 = [];//Used to calculate the difference between consecutive decisions (w-w_prev)\r\n\r\n                // Manual calculation of latency and throughput during previous request\r\n                let throughputMeasureTime = dashMetrics.getCurrentHttpRequest(mediaType).trace.reduce((a, b) => a + b.d, 0);\r\n                const downloadBytes = dashMetrics.getCurrentHttpRequest(mediaType).trace.reduce((a, b) => a + b.b[0], 0);\r\n                let lastthroughput = Math.round((8 * downloadBytes) / throughputMeasureTime); // bits/ms = kbits/s\r\n                let currentHttpRequest = dashMetrics.getCurrentHttpRequest(mediaType);\r\n\r\n                if (lastthroughput < 1) {\r\n                    lastthroughput = 1;\r\n                }//To avoid division with 0 (avoid infinity) in case of an absolute network outage\r\n\r\n                // Note that for SegmentBase addressing the request url does not change.\r\n                // As this is not relevant for low latency streaming at this point the check below is sufficient\r\n                if (currentHttpRequest.url === l2AState.lastSegmentUrl ||\r\n                    currentHttpRequest.type === HTTPRequest.INIT_SEGMENT_TYPE) {\r\n                    // No change to inputs or init segment so use previously calculated quality\r\n                    quality = l2AState.lastQuality;\r\n\r\n                } else { // Recalculate Q\r\n\r\n                    let V = l2AState.lastSegmentDurationS;\r\n                    let sign = 1;\r\n\r\n                    //Main adaptation logic of L2A-LL\r\n                    for (let i = 0; i < bitrateCount; ++i) {\r\n                        bitrates[i] = bitrates[i] / 1000; // Originally in bps, now in Kbps\r\n                        if (currentPlaybackRate * bitrates[i] > lastthroughput) {// In this case buffer would deplete, leading to a stall, which increases latency and thus the particular probability of selsection of bitrate[i] should be decreased.\r\n                            sign = -1;\r\n                        }\r\n                        // The objective of L2A is to minimize the overall latency=request-response time + buffer length after download+ potential stalling (if buffer less than chunk downlad time)\r\n                        l2AParameter.w[i] = l2AParameter.prev_w[i] + sign * (V / (2 * alpha)) * ((l2AParameter.Q + vl) * (currentPlaybackRate * bitrates[i] / lastthroughput));//Lagrangian descent\r\n                    }\r\n\r\n                    // Apply euclidean projection on w to ensure w expresses a probability distribution\r\n                    l2AParameter.w = euclideanProjection(l2AParameter.w);\r\n\r\n                    for (let i = 0; i < bitrateCount; ++i) {\r\n                        diff1[i] = l2AParameter.w[i] - l2AParameter.prev_w[i];\r\n                        l2AParameter.prev_w[i] = l2AParameter.w[i];\r\n                    }\r\n\r\n                    // Lagrangian multiplier Q calculation:\r\n                    l2AParameter.Q = Math.max(0, l2AParameter.Q - V + V * currentPlaybackRate * ((_dotmultiplication(bitrates, l2AParameter.prev_w) + _dotmultiplication(bitrates, diff1)) / lastthroughput));\r\n\r\n                    // Quality is calculated as argmin of the absolute difference between available bitrates (bitrates[i]) and bitrate estimation (dotmultiplication(w,bitrates)).\r\n                    let temp = [];\r\n                    for (let i = 0; i < bitrateCount; ++i) {\r\n                        temp[i] = Math.abs(bitrates[i] - _dotmultiplication(l2AParameter.w, bitrates));\r\n                    }\r\n\r\n                    // Quality is calculated based on the probability distribution w (the output of L2A)\r\n                    quality = temp.indexOf(Math.min(...temp));\r\n\r\n                    // We employ a cautious -stepwise- ascent\r\n                    if (quality > l2AState.lastQuality) {\r\n                        if (bitrates[l2AState.lastQuality + 1] <= lastthroughput) {\r\n                            quality = l2AState.lastQuality + 1;\r\n                        }\r\n                    }\r\n\r\n                    // Provision against bitrate over-estimation, by re-calibrating the Lagrangian multiplier Q, to be taken into account for the next chunk\r\n                    if (bitrates[quality] >= lastthroughput) {\r\n                        l2AParameter.Q = react * Math.max(vl, l2AParameter.Q);\r\n                    }\r\n                    l2AState.lastSegmentUrl = currentHttpRequest.url;\r\n                }\r\n                switchRequest.quality = quality;\r\n                switchRequest.reason.throughput = throughput;\r\n                switchRequest.reason.latency = latency;\r\n                switchRequest.reason.bufferLevel = bufferLevel;\r\n                l2AState.lastQuality = switchRequest.quality;\r\n                break;\r\n            default:\r\n                // should not arrive here, try to recover\r\n                logger.debug('L2A ABR rule invoked in bad state.');\r\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, streamInfo.id, latency);\r\n                switchRequest.reason.state = l2AState.state;\r\n                switchRequest.reason.throughput = safeThroughput;\r\n                switchRequest.reason.latency = latency;\r\n                l2AState.state = L2A_STATE_STARTUP;\r\n                _clearL2AStateOnSeek(l2AState);\r\n        }\r\n        return switchRequest;\r\n    }\r\n\r\n    /**\r\n     * Reset objects to their initial state\r\n     * @private\r\n     */\r\n    function _resetInitialSettings() {\r\n        l2AStateDict = {};\r\n        l2AParameterDict = {};\r\n    }\r\n\r\n    /**\r\n     * Reset the rule\r\n     */\r\n    function reset() {\r\n        _resetInitialSettings();\r\n        eventBus.off(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\r\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\r\n        eventBus.off(Events.METRIC_ADDED, _onMetricAdded, instance);\r\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, _onQualityChangeRequested, instance);\r\n    }\r\n\r\n    instance = {\r\n        getMaxIndex: getMaxIndex,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nL2ARule.__dashjs_factory_name = 'L2ARule';\r\nexport default FactoryMaker.getClassFactory(L2ARule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Authors:\r\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\r\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\r\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\r\n */\r\n\r\nimport FactoryMaker from '../../../../core/FactoryMaker';\r\nimport Debug from '../../../../core/Debug';\r\n\r\nconst WEIGHT_SELECTION_MODES = {\r\n    MANUAL: 'manual_weight_selection',\r\n    RANDOM: 'random_weight_selection',\r\n    DYNAMIC: 'dynamic_weight_selection'\r\n};\r\n\r\nfunction LearningAbrController() {\r\n    const context = this.context;\r\n\r\n    let instance,\r\n        logger,\r\n        somBitrateNeurons,\r\n        bitrateNormalizationFactor,\r\n        latencyNormalizationFactor,\r\n        minBitrate,\r\n        weights,\r\n        sortedCenters,\r\n        weightSelectionMode;\r\n\r\n    /**\r\n     * Setup the class\r\n     */\r\n    function _setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    /**\r\n     * Reset all values\r\n     */\r\n    function reset() {\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    /**\r\n     * Reset to initial settings\r\n     * @private\r\n     */\r\n    function _resetInitialSettings() {\r\n        somBitrateNeurons = null;\r\n        bitrateNormalizationFactor = 1;\r\n        latencyNormalizationFactor = 100;\r\n        minBitrate = 0;\r\n        weights = null;\r\n        sortedCenters = null;\r\n        weightSelectionMode = WEIGHT_SELECTION_MODES.DYNAMIC;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum throughput\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    function _getMaxThroughput() {\r\n        let maxThroughput = 0;\r\n\r\n        if (somBitrateNeurons) {\r\n            for (let i = 0; i < somBitrateNeurons.length; i++) {\r\n                let neuron = somBitrateNeurons[i];\r\n                if (neuron.state.throughput > maxThroughput) {\r\n                    maxThroughput = neuron.state.throughput;\r\n                }\r\n            }\r\n        }\r\n\r\n        return maxThroughput;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {array} w\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    function _getMagnitude(w) {\r\n        const magnitude = w.map((x) => (Math.pow(x, 2))).reduce((sum, now) => sum + now);\r\n\r\n        return Math.sqrt(magnitude);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {array} a\r\n     * @param {array} b\r\n     * @param {array} w\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    function _getDistance(a, b, w) {\r\n        let sum = a\r\n            .map((x, i) => (w[i] * (Math.pow(x - b[i], 2)))) // square the difference*w\r\n            .reduce((sum, now) => sum + now); // sum\r\n        let sign = (sum < 0) ? -1 : 1;\r\n\r\n        return sign * Math.sqrt(Math.abs(sum));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} a\r\n     * @param {object} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    function _getNeuronDistance(a, b) {\r\n        let aState = [a.state.throughput, a.state.latency, a.state.rebuffer, a.state.switch];\r\n        let bState = [b.state.throughput, b.state.latency, b.state.rebuffer, b.state.switch];\r\n\r\n        return _getDistance(aState, bState, [1, 1, 1, 1]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} winnerNeuron\r\n     * @param {array} somElements\r\n     * @param {array} x\r\n     * @private\r\n     */\r\n    function _updateNeurons(winnerNeuron, somElements, x) {\r\n        for (let i = 0; i < somElements.length; i++) {\r\n            let somNeuron = somElements[i];\r\n            let sigma = 0.1;\r\n            const neuronDistance = _getNeuronDistance(somNeuron, winnerNeuron);\r\n            let neighbourHood = Math.exp(-1 * Math.pow(neuronDistance, 2) / (2 * Math.pow(sigma, 2)));\r\n            _updateNeuronState(somNeuron, x, neighbourHood);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} neuron\r\n     * @param {array} x\r\n     * @param {object} neighbourHood\r\n     * @private\r\n     */\r\n    function _updateNeuronState(neuron, x, neighbourHood) {\r\n        let state = neuron.state;\r\n        let w = [0.01, 0.01, 0.01, 0.01]; // learning rate\r\n\r\n        state.throughput = state.throughput + (x[0] - state.throughput) * w[0] * neighbourHood;\r\n        state.latency = state.latency + (x[1] - state.latency) * w[1] * neighbourHood;\r\n        state.rebuffer = state.rebuffer + (x[2] - state.rebuffer) * w[2] * neighbourHood;\r\n        state.switch = state.switch + (x[3] - state.switch) * w[3] * neighbourHood;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} currentNeuron\r\n     * @param {number} currentThroughput\r\n     * @return {object}\r\n     * @private\r\n     */\r\n    function _getDownShiftNeuron(currentNeuron, currentThroughput) {\r\n        let maxSuitableBitrate = 0;\r\n        let result = currentNeuron;\r\n\r\n        if (somBitrateNeurons) {\r\n            for (let i = 0; i < somBitrateNeurons.length; i++) {\r\n                let n = somBitrateNeurons[i];\r\n                if (n.bitrate < currentNeuron.bitrate && n.bitrate > maxSuitableBitrate && currentThroughput > n.bitrate) {\r\n                    // possible downshiftable neuron\r\n                    maxSuitableBitrate = n.bitrate;\r\n                    result = n;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} mediaInfo\r\n     * @param {number} throughput\r\n     * @param {number} latency\r\n     * @param {number} bufferSize\r\n     * @param {number} playbackRate\r\n     * @param {number} currentQualityIndex\r\n     * @param {object} dynamicWeightsSelector\r\n     * @return {null|*}\r\n     */\r\n    function getNextQuality(mediaInfo, throughput, latency, bufferSize, playbackRate, currentQualityIndex, dynamicWeightsSelector) {\r\n        // For Dynamic Weights Selector\r\n        let currentLatency = latency;\r\n        let currentBuffer = bufferSize;\r\n        let currentThroughput = throughput;\r\n\r\n        let somElements = _getSomBitrateNeurons(mediaInfo);\r\n        // normalize throughput\r\n        let throughputNormalized = throughput / bitrateNormalizationFactor;\r\n        // saturate values higher than 1\r\n        if (throughputNormalized > 1) {\r\n            throughputNormalized = _getMaxThroughput();\r\n        }\r\n        // normalize latency\r\n        latency = latency / latencyNormalizationFactor;\r\n\r\n        const targetLatency = 0;\r\n        const targetRebufferLevel = 0;\r\n        const targetSwitch = 0;\r\n        // 10K + video encoding is the recommended throughput\r\n        const throughputDelta = 10000;\r\n\r\n        logger.debug(`getNextQuality called throughput:${throughputNormalized} latency:${latency} bufferSize:${bufferSize} currentQualityIndex:${currentQualityIndex} playbackRate:${playbackRate}`);\r\n\r\n        let currentNeuron = somElements[currentQualityIndex];\r\n        let downloadTime = (currentNeuron.bitrate * dynamicWeightsSelector.getSegmentDuration()) / currentThroughput;\r\n        let rebuffer = Math.max(0, (downloadTime - currentBuffer));\r\n\r\n        // check buffer for possible stall\r\n        if (currentBuffer - downloadTime < dynamicWeightsSelector.getMinBuffer()) {\r\n            logger.debug(`Buffer is low for bitrate= ${currentNeuron.bitrate} downloadTime=${downloadTime} currentBuffer=${currentBuffer} rebuffer=${rebuffer}`);\r\n            return _getDownShiftNeuron(currentNeuron, currentThroughput).qualityIndex;\r\n        }\r\n\r\n        switch (weightSelectionMode) {\r\n            case WEIGHT_SELECTION_MODES.MANUAL:\r\n                _manualWeightSelection();\r\n                break;\r\n            case WEIGHT_SELECTION_MODES.RANDOM:\r\n                _randomWeightSelection(somElements);\r\n                break;\r\n            case WEIGHT_SELECTION_MODES.DYNAMIC:\r\n                _dynamicWeightSelection(dynamicWeightsSelector, somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate);\r\n                break;\r\n            default:\r\n                _dynamicWeightSelection(dynamicWeightsSelector, somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate);\r\n\r\n        }\r\n\r\n        let minDistance = null;\r\n        let minIndex = null;\r\n        let winnerNeuron = null;\r\n\r\n        for (let i = 0; i < somElements.length; i++) {\r\n            let somNeuron = somElements[i];\r\n            let somNeuronState = somNeuron.state;\r\n            let somData = [somNeuronState.throughput,\r\n                somNeuronState.latency,\r\n                somNeuronState.rebuffer,\r\n                somNeuronState.switch];\r\n\r\n            let distanceWeights = weights.slice();\r\n            let nextBuffer = dynamicWeightsSelector.getNextBufferWithBitrate(somNeuron.bitrate, currentBuffer, currentThroughput);\r\n            let isBufferLow = nextBuffer < dynamicWeightsSelector.getMinBuffer();\r\n            if (isBufferLow) {\r\n                logger.debug(`Buffer is low for bitrate=${somNeuron.bitrate} downloadTime=${downloadTime} currentBuffer=${currentBuffer} nextBuffer=${nextBuffer}`);\r\n            }\r\n            // special condition downshift immediately\r\n            if (somNeuron.bitrate > throughput - throughputDelta || isBufferLow) {\r\n                if (somNeuron.bitrate !== minBitrate) {\r\n                    // encourage to pick smaller bitrates throughputWeight=100\r\n                    distanceWeights[0] = 100;\r\n                }\r\n            }\r\n\r\n            // calculate the distance with the target\r\n            let distance = _getDistance(somData, [throughputNormalized, targetLatency, targetRebufferLevel, targetSwitch], distanceWeights);\r\n            if (minDistance === null || distance < minDistance) {\r\n                minDistance = distance;\r\n                minIndex = somNeuron.qualityIndex;\r\n                winnerNeuron = somNeuron;\r\n            }\r\n        }\r\n\r\n        // update current neuron and the neighbourhood with the calculated QoE\r\n        // will punish current if it is not picked\r\n        let bitrateSwitch = Math.abs(currentNeuron.bitrate - winnerNeuron.bitrate) / bitrateNormalizationFactor;\r\n        _updateNeurons(currentNeuron, somElements, [throughputNormalized, latency, rebuffer, bitrateSwitch]);\r\n\r\n        // update bmu and  neighbours with targetQoE=1, targetLatency=0\r\n        _updateNeurons(winnerNeuron, somElements, [throughputNormalized, targetLatency, targetRebufferLevel, bitrateSwitch]);\r\n\r\n        return minIndex;\r\n    }\r\n\r\n    /**\r\n     * Option 1: Manual weights\r\n     * @private\r\n     */\r\n    function _manualWeightSelection() {\r\n        let throughputWeight = 0.4;\r\n        let latencyWeight = 0.4;\r\n        let bufferWeight = 0.4;\r\n        let switchWeight = 0.4;\r\n\r\n        weights = [throughputWeight, latencyWeight, bufferWeight, switchWeight]; // throughput, latency, buffer, switch\r\n    }\r\n\r\n    /**\r\n     * Option 2: Random (Xavier) weights\r\n     * @param {array} somElements\r\n     * @private\r\n     */\r\n    function _randomWeightSelection(somElements) {\r\n        weights = _getXavierWeights(somElements.length, 4);\r\n    }\r\n\r\n    /**\r\n     * Dynamic Weight Selector weights\r\n     * @param {object} dynamicWeightsSelector\r\n     * @param {array} somElements\r\n     * @param {number} currentLatency\r\n     * @param {number} currentBuffer\r\n     * @param {number} rebuffer\r\n     * @param {number} currentThroughput\r\n     * @param {number} playbackRate\r\n     * @private\r\n     */\r\n    function _dynamicWeightSelection(dynamicWeightsSelector, somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate) {\r\n        if (!weights) {\r\n            weights = sortedCenters[sortedCenters.length - 1];\r\n        }\r\n        // Dynamic Weights Selector (step 2/2: find weights)\r\n        let weightVector = dynamicWeightsSelector.findWeightVector(somElements, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate);\r\n        if (weightVector !== null && weightVector !== -1) { // null: something went wrong, -1: constraints not met\r\n            weights = weightVector;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number }neuronCount\r\n     * @param {number }weightCount\r\n     * @return {array}\r\n     * @private\r\n     */\r\n    function _getXavierWeights(neuronCount, weightCount) {\r\n        let W = [];\r\n        let upperBound = Math.sqrt((2 / neuronCount));\r\n\r\n        for (let i = 0; i < weightCount; i++) {\r\n            W.push(Math.random() * upperBound);\r\n        }\r\n\r\n        weights = W;\r\n\r\n        return weights;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} mediaInfo\r\n     * @return {array}\r\n     * @private\r\n     */\r\n    function _getSomBitrateNeurons(mediaInfo) {\r\n        if (!somBitrateNeurons) {\r\n            somBitrateNeurons = [];\r\n            const bitrateList = mediaInfo.bitrateList;\r\n            let bitrateVector = [];\r\n            minBitrate = bitrateList[0].bandwidth;\r\n\r\n            bitrateList.forEach(element => {\r\n                bitrateVector.push(element.bandwidth);\r\n                if (element.bandwidth < minBitrate) {\r\n                    minBitrate = element.bandwidth;\r\n                }\r\n            });\r\n            bitrateNormalizationFactor = _getMagnitude(bitrateVector);\r\n\r\n            for (let i = 0; i < bitrateList.length; i++) {\r\n                let neuron = {\r\n                    qualityIndex: i,\r\n                    bitrate: bitrateList[i].bandwidth,\r\n                    state: {\r\n                        // normalize throughputs\r\n                        throughput: bitrateList[i].bandwidth / bitrateNormalizationFactor,\r\n                        latency: 0,\r\n                        rebuffer: 0,\r\n                        switch: 0\r\n                    }\r\n                };\r\n                somBitrateNeurons.push(neuron);\r\n            }\r\n\r\n            sortedCenters = _getInitialKmeansPlusPlusCenters(somBitrateNeurons);\r\n        }\r\n\r\n        return somBitrateNeurons;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} size\r\n     * @return {array}\r\n     * @private\r\n     */\r\n    function _getRandomData(size) {\r\n        let dataArray = [];\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            let data = [\r\n                Math.random() * _getMaxThroughput(), //throughput\r\n                Math.random(), //latency\r\n                Math.random(), //buffersize\r\n                Math.random() //switch\r\n            ];\r\n            dataArray.push(data);\r\n        }\r\n\r\n        return dataArray;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {array} somElements\r\n     * @return {array}\r\n     * @private\r\n     */\r\n    function _getInitialKmeansPlusPlusCenters(somElements) {\r\n        let centers = [];\r\n        let randomDataSet = _getRandomData(Math.pow(somElements.length, 2));\r\n        centers.push(randomDataSet[0]);\r\n        let distanceWeights = [1, 1, 1, 1];\r\n\r\n        for (let k = 1; k < somElements.length; k++) {\r\n            let nextPoint = null;\r\n            let maxDistance = null;\r\n            for (let i = 0; i < randomDataSet.length; i++) {\r\n                let currentPoint = randomDataSet[i];\r\n                let minDistance = null;\r\n                for (let j = 0; j < centers.length; j++) {\r\n                    let distance = _getDistance(currentPoint, centers[j], distanceWeights);\r\n                    if (minDistance === null || distance < minDistance) {\r\n                        minDistance = distance;\r\n                    }\r\n                }\r\n                if (maxDistance === null || minDistance > maxDistance) {\r\n                    nextPoint = currentPoint;\r\n                    maxDistance = minDistance;\r\n                }\r\n            }\r\n            centers.push(nextPoint);\r\n        }\r\n\r\n        // find the least similar center\r\n        let maxDistance = null;\r\n        let leastSimilarIndex = null;\r\n        for (let i = 0; i < centers.length; i++) {\r\n            let distance = 0;\r\n            for (let j = 0; j < centers.length; j++) {\r\n                if (i === j) continue;\r\n                distance += _getDistance(centers[i], centers[j], distanceWeights);\r\n            }\r\n            if (maxDistance === null || distance > maxDistance) {\r\n                maxDistance = distance;\r\n                leastSimilarIndex = i;\r\n            }\r\n        }\r\n\r\n        // move centers to sortedCenters\r\n        let sortedCenters = [];\r\n        sortedCenters.push(centers[leastSimilarIndex]);\r\n        centers.splice(leastSimilarIndex, 1);\r\n        while (centers.length > 0) {\r\n            let minDistance = null;\r\n            let minIndex = null;\r\n            for (let i = 0; i < centers.length; i++) {\r\n                let distance = _getDistance(sortedCenters[0], centers[i], distanceWeights);\r\n                if (minDistance === null || distance < minDistance) {\r\n                    minDistance = distance;\r\n                    minIndex = i;\r\n                }\r\n            }\r\n            sortedCenters.push(centers[minIndex]);\r\n            centers.splice(minIndex, 1);\r\n        }\r\n\r\n        return sortedCenters;\r\n    }\r\n\r\n    instance = {\r\n        getNextQuality,\r\n        reset\r\n    };\r\n\r\n    _setup();\r\n    return instance;\r\n}\r\n\r\nLearningAbrController.__dashjs_factory_name = 'LearningAbrController';\r\nexport default FactoryMaker.getClassFactory(LearningAbrController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass QoeInfo {\r\n\r\n    constructor() {\r\n        // Type e.g. 'segment'\r\n        this.type = null;\r\n\r\n        // Store lastBitrate for calculation of bitrateSwitchWSum\r\n        this.lastBitrate = null;\r\n\r\n        // Weights for each Qoe factor\r\n        this.weights = {};\r\n        this.weights.bitrateReward = null;\r\n        this.weights.bitrateSwitchPenalty = null;\r\n        this.weights.rebufferPenalty = null;\r\n        this.weights.latencyPenalty = null;\r\n        this.weights.playbackSpeedPenalty = null;\r\n\r\n        // Weighted Sum for each Qoe factor\r\n        this.bitrateWSum = 0;// kbps\r\n        this.bitrateSwitchWSum = 0;// kbps\r\n        this.rebufferWSum = 0;// seconds\r\n        this.latencyWSum = 0;// seconds\r\n        this.playbackSpeedWSum = 0;// e.g. 0.95, 1.0, 1.05\r\n\r\n        // Store total Qoe value based on current Weighted Sum values\r\n        this.totalQoe = 0;\r\n    }\r\n}\r\n\r\nexport default QoeInfo;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Authors:\r\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\r\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\r\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\r\n */\r\nimport FactoryMaker from '../../../../core/FactoryMaker';\r\nimport QoeInfo from './QoeInfo';\r\n\r\nfunction LoLpQoeEvaluator() {\r\n\r\n    let instance,\r\n        voPerSegmentQoeInfo,\r\n        segmentDuration,\r\n        maxBitrateKbps,\r\n        minBitrateKbps;\r\n\r\n    function _setup() {\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    function _resetInitialSettings() {\r\n        voPerSegmentQoeInfo = null;\r\n        segmentDuration = null;\r\n        maxBitrateKbps = null;\r\n        minBitrateKbps = null;\r\n    }\r\n\r\n    function setupPerSegmentQoe(sDuration, maxBrKbps, minBrKbps) {\r\n        // Set up Per Segment QoeInfo\r\n        voPerSegmentQoeInfo = _createQoeInfo('segment', sDuration, maxBrKbps, minBrKbps);\r\n        segmentDuration = sDuration;\r\n        maxBitrateKbps = maxBrKbps;\r\n        minBitrateKbps = minBrKbps;\r\n    }\r\n\r\n    function _createQoeInfo(fragmentType, fragmentDuration, maxBitrateKbps, minBitrateKbps) {\r\n        /*\r\n         * [Weights][Source: Abdelhak Bentaleb, 2020 (last updated: 30 Mar 2020)]\r\n         * bitrateReward:           segment duration, e.g. 0.5s\r\n         * bitrateSwitchPenalty:    0.02s or 1s if the bitrate switch is too important\r\n         * rebufferPenalty:         max encoding bitrate, e.g. 1000kbps\r\n         * latencyPenalty:          if L ≤ 1.1 seconds then = min encoding bitrate * 0.05, otherwise = max encoding bitrate * 0.1\r\n         * playbackSpeedPenalty:    min encoding bitrate, e.g. 200kbps\r\n         */\r\n\r\n        // Create new QoeInfo object\r\n        let qoeInfo = new QoeInfo();\r\n        qoeInfo.type = fragmentType;\r\n\r\n        // Set weight: bitrateReward\r\n        // set some safe value, else consider throwing error\r\n        if (!fragmentDuration) {\r\n            qoeInfo.weights.bitrateReward = 1;\r\n        } else {\r\n            qoeInfo.weights.bitrateReward = fragmentDuration;\r\n        }\r\n\r\n        // Set weight: bitrateSwitchPenalty\r\n        // qoeInfo.weights.bitrateSwitchPenalty = 0.02;\r\n        qoeInfo.weights.bitrateSwitchPenalty = 1;\r\n\r\n        // Set weight: rebufferPenalty\r\n        // set some safe value, else consider throwing error\r\n        if (!maxBitrateKbps) {\r\n            qoeInfo.weights.rebufferPenalty = 1000;\r\n        } else {\r\n            qoeInfo.weights.rebufferPenalty = maxBitrateKbps;\r\n        }\r\n\r\n        // Set weight: latencyPenalty\r\n        qoeInfo.weights.latencyPenalty = [];\r\n        qoeInfo.weights.latencyPenalty.push({ threshold: 1.1, penalty: (minBitrateKbps * 0.05) });\r\n        qoeInfo.weights.latencyPenalty.push({ threshold: 100000000, penalty: (maxBitrateKbps * 0.1) });\r\n\r\n        // Set weight: playbackSpeedPenalty\r\n        if (!minBitrateKbps) qoeInfo.weights.playbackSpeedPenalty = 200; // set some safe value, else consider throwing error\r\n        else qoeInfo.weights.playbackSpeedPenalty = minBitrateKbps;\r\n\r\n        return qoeInfo;\r\n    }\r\n\r\n    function logSegmentMetrics(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed) {\r\n        if (voPerSegmentQoeInfo) {\r\n            _logMetricsInQoeInfo(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed, voPerSegmentQoeInfo);\r\n        }\r\n    }\r\n\r\n    function _logMetricsInQoeInfo(bitrate, rebufferTime, latency, playbackSpeed, qoeInfo) {\r\n        // Update: bitrate Weighted Sum value\r\n        qoeInfo.bitrateWSum += (qoeInfo.weights.bitrateReward * bitrate);\r\n\r\n        // Update: bitrateSwitch Weighted Sum value\r\n        if (qoeInfo.lastBitrate) {\r\n            qoeInfo.bitrateSwitchWSum += (qoeInfo.weights.bitrateSwitchPenalty * Math.abs(bitrate - qoeInfo.lastBitrate));\r\n        }\r\n        qoeInfo.lastBitrate = bitrate;\r\n\r\n        // Update: rebuffer Weighted Sum value\r\n        qoeInfo.rebufferWSum += (qoeInfo.weights.rebufferPenalty * rebufferTime);\r\n\r\n        // Update: latency Weighted Sum value\r\n        for (let i = 0; i < qoeInfo.weights.latencyPenalty.length; i++) {\r\n            let latencyRange = qoeInfo.weights.latencyPenalty[i];\r\n            if (latency <= latencyRange.threshold) {\r\n                qoeInfo.latencyWSum += (latencyRange.penalty * latency);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Update: playbackSpeed Weighted Sum value\r\n        qoeInfo.playbackSpeedWSum += (qoeInfo.weights.playbackSpeedPenalty * Math.abs(1 - playbackSpeed));\r\n\r\n        // Update: Total Qoe value\r\n        qoeInfo.totalQoe = qoeInfo.bitrateWSum - qoeInfo.bitrateSwitchWSum - qoeInfo.rebufferWSum - qoeInfo.latencyWSum - qoeInfo.playbackSpeedWSum;\r\n    }\r\n\r\n    // Returns current Per Segment QoeInfo\r\n    function getPerSegmentQoe() {\r\n        return voPerSegmentQoeInfo;\r\n    }\r\n\r\n    // For one-time use only\r\n    // Returns totalQoe based on a single set of metrics.\r\n    function calculateSingleUseQoe(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed) {\r\n        let singleUseQoeInfo = null;\r\n\r\n        if (segmentDuration && maxBitrateKbps && minBitrateKbps) {\r\n            singleUseQoeInfo = _createQoeInfo('segment', segmentDuration, maxBitrateKbps, minBitrateKbps);\r\n        }\r\n\r\n        if (singleUseQoeInfo) {\r\n            _logMetricsInQoeInfo(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed, singleUseQoeInfo);\r\n            return singleUseQoeInfo.totalQoe;\r\n        } else {\r\n            // Something went wrong..\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    instance = {\r\n        setupPerSegmentQoe,\r\n        logSegmentMetrics,\r\n        getPerSegmentQoe,\r\n        calculateSingleUseQoe,\r\n        reset\r\n    };\r\n\r\n    _setup();\r\n\r\n    return instance;\r\n}\r\n\r\nLoLpQoeEvaluator.__dashjs_factory_name = 'LoLpQoeEvaluator';\r\nexport default FactoryMaker.getClassFactory(LoLpQoeEvaluator);\r\n\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Authors:\r\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\r\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\r\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\r\n */\r\n\r\nimport FactoryMaker from '../../../../core/FactoryMaker';\r\n\r\nfunction LoLpWeightSelector(config) {\r\n    let targetLatency = config.targetLatency;\r\n    let bufferMin = config.bufferMin;\r\n    let segmentDuration = config.segmentDuration;\r\n    let qoeEvaluator = config.qoeEvaluator;\r\n    let instance,\r\n        valueList,\r\n        weightTypeCount,\r\n        weightOptions,\r\n        previousLatency;\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    function _setup() {\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    function _resetInitialSettings() {\r\n        valueList = [0.2, 0.4, 0.6, 0.8, 1];\r\n        weightTypeCount = 4;\r\n        weightOptions = _getPermutations(valueList, weightTypeCount);\r\n        previousLatency = 0;\r\n    }\r\n\r\n    /**\r\n     * Next, at each segment boundary, ABR to input current neurons and target state (only used in Method II) to find the desired weight vector\r\n     * @param {array} neurons\r\n     * @param {number} currentLatency\r\n     * @param {number} currentBuffer\r\n     * @param {number} currentRebuffer\r\n     * @param {number} currentThroughput\r\n     * @param {number} playbackRate\r\n     * @return {number|null}\r\n     * @private\r\n     */\r\n    function findWeightVector(neurons, currentLatency, currentBuffer, currentRebuffer, currentThroughput, playbackRate) {\r\n        let maxQoE = null;\r\n        let winnerWeights = null;\r\n        let winnerBitrate = null;\r\n        let deltaLatency = Math.abs(currentLatency - previousLatency);\r\n\r\n        // For each neuron, m\r\n        neurons.forEach((neuron) => {\r\n\r\n            // For each possible weight vector, z\r\n            // E.g. For [ throughput, latency, buffer, playbackRate, QoE ]\r\n            //      Possible weightVector = [ 0.2, 0.4, 0.2, 0, 0.2 ]\r\n            weightOptions.forEach((weightVector) => {\r\n\r\n                // Apply weightVector to neuron, compute utility and determine winnerWeights\r\n                // Method I: Utility based on QoE given current state\r\n\r\n                let weightsObj = {\r\n                    throughput: weightVector[0],\r\n                    latency: weightVector[1],\r\n                    buffer: weightVector[2],\r\n                    switch: weightVector[3]\r\n                };\r\n\r\n                let downloadTime = (neuron.bitrate * segmentDuration) / currentThroughput;\r\n                let nextBuffer = getNextBuffer(currentBuffer, downloadTime);\r\n                let rebuffer = Math.max(0.00001, (downloadTime - nextBuffer));\r\n                let wt;\r\n                if (weightsObj.buffer === 0) {\r\n                    wt = 10;\r\n                } else {\r\n                    wt = (1 / weightsObj.buffer);\r\n                }\r\n                let weightedRebuffer = wt * rebuffer;\r\n\r\n                if (weightsObj.latency === 0) {\r\n                    wt = 10;\r\n                } else {\r\n                    wt = (1 / weightsObj.latency); // inverse the weight because wt and latency should have positive relationship, i.e., higher latency = higher wt\r\n                }\r\n                let weightedLatency = wt * neuron.state.latency;\r\n\r\n                let totalQoE = qoeEvaluator.calculateSingleUseQoe(neuron.bitrate, weightedRebuffer, weightedLatency, playbackRate);\r\n                if ((maxQoE === null || totalQoE > maxQoE) && _checkConstraints(currentLatency, nextBuffer, deltaLatency)) {\r\n                    maxQoE = totalQoE;\r\n                    winnerWeights = weightVector;\r\n                    winnerBitrate = neuron.bitrate;\r\n                }\r\n            });\r\n        });\r\n\r\n        // winnerWeights was found, check if constraints are satisfied\r\n        if (winnerWeights === null && winnerBitrate === null) {\r\n            winnerWeights = -1;\r\n        }\r\n\r\n        previousLatency = currentLatency;\r\n        return winnerWeights;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} nextLatency\r\n     * @param {number} nextBuffer\r\n     * @param {number} deltaLatency\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    function _checkConstraints(nextLatency, nextBuffer, deltaLatency) {\r\n        // A1\r\n        // disabled till we find a better way of estimating latency\r\n        // fails for all with current value\r\n        if (nextLatency > targetLatency + deltaLatency) {\r\n            return false;\r\n        }\r\n\r\n        return nextBuffer >= bufferMin;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {array} list\r\n     * @param {number} length\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    function _getPermutations(list, length) {\r\n        // Copy initial values as arrays\r\n        let perm = list.map(function (val) {\r\n            return [val];\r\n        });\r\n        // Our permutation generator\r\n        let generate = function (perm, length, currLen) {\r\n            // Reached desired length\r\n            if (currLen === length) {\r\n                return perm;\r\n            }\r\n            // For each existing permutation\r\n            let len = perm.length;\r\n            for (let i = 0; i < len; i++) {\r\n                let currPerm = perm.shift();\r\n                // Create new permutation\r\n                for (let k = 0; k < list.length; k++) {\r\n                    perm.push(currPerm.concat(list[k]));\r\n                }\r\n            }\r\n            // Recurse\r\n            return generate(perm, length, currLen + 1);\r\n        };\r\n        // Start with size 1 because of initial values\r\n        return generate(perm, length, 1);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    function getMinBuffer() {\r\n        return bufferMin;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    function getSegmentDuration() {\r\n        return segmentDuration;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} bitrateToDownload\r\n     * @param {number} currentBuffer\r\n     * @param {number} currentThroughput\r\n     * @return {number}\r\n     */\r\n    function getNextBufferWithBitrate(bitrateToDownload, currentBuffer, currentThroughput) {\r\n        let downloadTime = (bitrateToDownload * segmentDuration) / currentThroughput;\r\n        return getNextBuffer(currentBuffer, downloadTime);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} currentBuffer\r\n     * @param {number} downloadTime\r\n     * @return {number}\r\n     */\r\n    function getNextBuffer(currentBuffer, downloadTime) {\r\n        const segmentDuration = getSegmentDuration();\r\n        let nextBuffer;\r\n        if (downloadTime > segmentDuration) {\r\n            nextBuffer = currentBuffer - segmentDuration;\r\n        } else {\r\n            nextBuffer = currentBuffer + segmentDuration - downloadTime;\r\n        }\r\n        return nextBuffer;\r\n    }\r\n\r\n    instance = {\r\n        getMinBuffer,\r\n        getSegmentDuration,\r\n        getNextBufferWithBitrate,\r\n        getNextBuffer,\r\n        findWeightVector\r\n    };\r\n\r\n    _setup();\r\n\r\n    return instance;\r\n}\r\n\r\nLoLpWeightSelector.__dashjs_factory_name = 'LoLpWeightSelector';\r\nexport default FactoryMaker.getClassFactory(LoLpWeightSelector);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Authors:\r\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\r\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\r\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\r\n */\r\n\r\nimport Debug from '../../../../core/Debug';\r\nimport FactoryMaker from '../../../../core/FactoryMaker';\r\nimport LearningAbrController from './LearningAbrController';\r\nimport LoLpQoeEvaluator from './LoLpQoEEvaluator';\r\nimport SwitchRequest from '../../SwitchRequest';\r\nimport MetricsConstants from '../../../constants/MetricsConstants';\r\nimport LoLpWeightSelector from './LoLpWeightSelector';\r\nimport Constants from '../../../constants/Constants';\r\n\r\nconst DWS_TARGET_LATENCY = 1.5;\r\nconst DWS_BUFFER_MIN = 0.3;\r\n\r\nfunction LoLPRule(config) {\r\n\r\n    config = config || {};\r\n\r\n    let dashMetrics = config.dashMetrics;\r\n    let context = this.context;\r\n\r\n    let logger,\r\n        instance,\r\n        learningController,\r\n        qoeEvaluator;\r\n\r\n    function _setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        learningController = LearningAbrController(context).create();\r\n        qoeEvaluator = LoLpQoeEvaluator(context).create();\r\n    }\r\n\r\n    function getMaxIndex(rulesContext) {\r\n        try {\r\n            let switchRequest = SwitchRequest(context).create();\r\n            let mediaType = rulesContext.getMediaInfo().type;\r\n            let abrController = rulesContext.getAbrController();\r\n            const streamInfo = rulesContext.getStreamInfo();\r\n            let currentQuality = abrController.getQualityFor(mediaType, streamInfo.id);\r\n            const mediaInfo = rulesContext.getMediaInfo();\r\n            const bufferStateVO = dashMetrics.getCurrentBufferState(mediaType);\r\n            const scheduleController = rulesContext.getScheduleController();\r\n            const currentBufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\r\n            const isDynamic = streamInfo && streamInfo.manifestInfo ? streamInfo.manifestInfo.isDynamic : null;\r\n            const playbackController = scheduleController.getPlaybackController();\r\n            let latency = playbackController.getCurrentLiveLatency();\r\n\r\n            if (!rulesContext.useLoLPABR() || (mediaType === Constants.AUDIO)) {\r\n                return switchRequest;\r\n            }\r\n\r\n            if (!latency) {\r\n                latency = 0;\r\n            }\r\n\r\n            const playbackRate = playbackController.getPlaybackRate();\r\n            const throughputHistory = abrController.getThroughputHistory();\r\n            const throughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\r\n            logger.debug(`Throughput ${Math.round(throughput)} kbps`);\r\n\r\n            if (isNaN(throughput) || !bufferStateVO) {\r\n                return switchRequest;\r\n            }\r\n\r\n            if (abrController.getAbandonmentStateFor(streamInfo.id, mediaType) === MetricsConstants.ABANDON_LOAD) {\r\n                return switchRequest;\r\n            }\r\n\r\n            // QoE parameters\r\n            let bitrateList = mediaInfo.bitrateList; // [{bandwidth: 200000, width: 640, height: 360}, ...]\r\n            let segmentDuration = rulesContext.getRepresentationInfo().fragmentDuration;\r\n            let minBitrateKbps = bitrateList[0].bandwidth / 1000.0; // min bitrate level\r\n            let maxBitrateKbps = bitrateList[bitrateList.length - 1].bandwidth / 1000.0; // max bitrate level\r\n            for (let i = 0; i < bitrateList.length; i++) { // in case bitrateList is not sorted as expected\r\n                let b = bitrateList[i].bandwidth / 1000.0;\r\n                if (b > maxBitrateKbps)\r\n                    maxBitrateKbps = b;\r\n                else if (b < minBitrateKbps) {\r\n                    minBitrateKbps = b;\r\n                }\r\n            }\r\n\r\n            // Learning rule pre-calculations\r\n            let currentBitrate = bitrateList[currentQuality].bandwidth;\r\n            let currentBitrateKbps = currentBitrate / 1000.0;\r\n            let httpRequest = dashMetrics.getCurrentHttpRequest(mediaType, true);\r\n            let lastFragmentDownloadTime = (httpRequest.tresponse.getTime() - httpRequest.trequest.getTime()) / 1000;\r\n            let segmentRebufferTime = lastFragmentDownloadTime > segmentDuration ? lastFragmentDownloadTime - segmentDuration : 0;\r\n            qoeEvaluator.setupPerSegmentQoe(segmentDuration, maxBitrateKbps, minBitrateKbps);\r\n            qoeEvaluator.logSegmentMetrics(currentBitrateKbps, segmentRebufferTime, latency, playbackRate);\r\n\r\n            /*\r\n            * Dynamic Weights Selector (step 1/2: initialization)\r\n            */\r\n            let dynamicWeightsSelector = LoLpWeightSelector(context).create({\r\n                targetLatency: DWS_TARGET_LATENCY,\r\n                bufferMin: DWS_BUFFER_MIN,\r\n                segmentDuration,\r\n                qoeEvaluator\r\n            });\r\n\r\n            /*\r\n             * Select next quality\r\n             */\r\n            switchRequest.quality = learningController.getNextQuality(mediaInfo, throughput * 1000, latency, currentBufferLevel, playbackRate, currentQuality, dynamicWeightsSelector);\r\n            switchRequest.reason = { throughput: throughput, latency: latency };\r\n            switchRequest.priority = SwitchRequest.PRIORITY.STRONG;\r\n\r\n            scheduleController.setTimeToLoadDelay(0);\r\n\r\n            if (switchRequest.quality !== currentQuality) {\r\n                logger.debug('[TgcLearningRule][' + mediaType + '] requesting switch to index: ', switchRequest.quality, 'Average throughput', Math.round(throughput), 'kbps');\r\n            }\r\n\r\n            return switchRequest;\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset objects to their initial state\r\n     * @private\r\n     */\r\n    function _resetInitialSettings() {\r\n        learningController.reset();\r\n        qoeEvaluator.reset();\r\n    }\r\n\r\n    /**\r\n     * Reset the rule\r\n     */\r\n    function reset() {\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    instance = {\r\n        getMaxIndex,\r\n        reset\r\n    };\r\n\r\n    _setup();\r\n\r\n    return instance;\r\n}\r\n\r\nLoLPRule.__dashjs_factory_name = 'LoLPRule';\r\nexport default FactoryMaker.getClassFactory(LoLPRule);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ThroughputRule from './ThroughputRule';\r\nimport InsufficientBufferRule from './InsufficientBufferRule';\r\nimport AbandonRequestsRule from './AbandonRequestsRule';\r\nimport DroppedFramesRule from './DroppedFramesRule';\r\nimport SwitchHistoryRule from './SwitchHistoryRule';\r\nimport BolaRule from './BolaRule';\r\nimport L2ARule from './L2ARule.js';\r\nimport LoLPRule from './lolp/LoLpRule.js';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport SwitchRequest from '../SwitchRequest';\r\nimport Constants from '../../constants/Constants';\r\n\r\nconst QUALITY_SWITCH_RULES = 'qualitySwitchRules';\r\nconst ABANDON_FRAGMENT_RULES = 'abandonFragmentRules';\r\n\r\n\r\nfunction ABRRulesCollection(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const customParametersModel = config.customParametersModel;\r\n    const dashMetrics = config.dashMetrics;\r\n    const settings = config.settings;\r\n\r\n    let instance,\r\n        qualitySwitchRules,\r\n        abandonFragmentRules;\r\n\r\n    function initialize() {\r\n        qualitySwitchRules = [];\r\n        abandonFragmentRules = [];\r\n\r\n        if (settings.get().streaming.abr.useDefaultABRRules) {\r\n\r\n            // If L2A is used we only need this one rule\r\n            if (settings.get().streaming.abr.ABRStrategy === Constants.ABR_STRATEGY_L2A) {\r\n                qualitySwitchRules.push(\r\n                    L2ARule(context).create({\r\n                        dashMetrics: dashMetrics,\r\n                        settings: settings\r\n                    })\r\n                );\r\n            }\r\n            // If LoLP is used we only need this one rule\r\n            else if (settings.get().streaming.abr.ABRStrategy === Constants.ABR_STRATEGY_LoLP) {\r\n                qualitySwitchRules.push(\r\n                    LoLPRule(context).create({\r\n                        dashMetrics: dashMetrics\r\n                    })\r\n                );\r\n            } else {\r\n                // Only one of BolaRule and ThroughputRule will give a switchRequest.quality !== SwitchRequest.NO_CHANGE.\r\n                // This is controlled by useBufferOccupancyABR mechanism in AbrController.\r\n                qualitySwitchRules.push(\r\n                    BolaRule(context).create({\r\n                        dashMetrics: dashMetrics,\r\n                        mediaPlayerModel: mediaPlayerModel,\r\n                        settings: settings\r\n                    })\r\n                );\r\n\r\n                qualitySwitchRules.push(\r\n                    ThroughputRule(context).create({\r\n                        dashMetrics: dashMetrics\r\n                    })\r\n                );\r\n\r\n                if (settings.get().streaming.abr.additionalAbrRules.insufficientBufferRule) {\r\n                    qualitySwitchRules.push(\r\n                        InsufficientBufferRule(context).create({\r\n                            dashMetrics: dashMetrics,\r\n                            settings\r\n                        })\r\n                    );\r\n                }\r\n\r\n                if (settings.get().streaming.abr.additionalAbrRules.switchHistoryRule) {\r\n                    qualitySwitchRules.push(\r\n                        SwitchHistoryRule(context).create()\r\n                    );\r\n                }\r\n\r\n                if (settings.get().streaming.abr.additionalAbrRules.droppedFramesRule) {\r\n                    qualitySwitchRules.push(\r\n                        DroppedFramesRule(context).create()\r\n                    );\r\n                }\r\n\r\n                if (settings.get().streaming.abr.additionalAbrRules.abandonRequestsRule) {\r\n                    abandonFragmentRules.push(\r\n                        AbandonRequestsRule(context).create({\r\n                            dashMetrics: dashMetrics,\r\n                            mediaPlayerModel: mediaPlayerModel,\r\n                            settings: settings\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        // add custom ABR rules if any\r\n        const customRules = customParametersModel.getAbrCustomRules();\r\n        customRules.forEach(function (rule) {\r\n            if (rule.type === QUALITY_SWITCH_RULES) {\r\n                qualitySwitchRules.push(rule.rule(context).create());\r\n            }\r\n\r\n            if (rule.type === ABANDON_FRAGMENT_RULES) {\r\n                abandonFragmentRules.push(rule.rule(context).create());\r\n            }\r\n        });\r\n    }\r\n\r\n    function _getRulesWithChange(srArray) {\r\n        return srArray.filter(sr => sr.quality > SwitchRequest.NO_CHANGE);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {array} srArray\r\n     * @return {object} SwitchRequest\r\n     */\r\n    function getMinSwitchRequest(srArray) {\r\n        const values = {};\r\n        let newSwitchReq = null;\r\n        let i,\r\n            len,\r\n            req,\r\n            quality,\r\n            reason;\r\n\r\n        if (srArray.length === 0) {\r\n            return;\r\n        }\r\n\r\n        values[SwitchRequest.PRIORITY.STRONG] = { quality: SwitchRequest.NO_CHANGE, reason: null };\r\n        values[SwitchRequest.PRIORITY.WEAK] = { quality: SwitchRequest.NO_CHANGE, reason: null };\r\n        values[SwitchRequest.PRIORITY.DEFAULT] = { quality: SwitchRequest.NO_CHANGE, reason: null };\r\n\r\n        for (i = 0, len = srArray.length; i < len; i += 1) {\r\n            req = srArray[i];\r\n            if (req.quality !== SwitchRequest.NO_CHANGE) {\r\n                // We only use the new quality in case it is lower than the already saved one or if no new quality has been selected for the respective priority\r\n                if (values[req.priority].quality === SwitchRequest.NO_CHANGE || values[req.priority].quality > req.quality) {\r\n                    values[req.priority].quality = req.quality;\r\n                    values[req.priority].reason = req.reason || null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (values[SwitchRequest.PRIORITY.WEAK].quality !== SwitchRequest.NO_CHANGE) {\r\n            newSwitchReq = values[SwitchRequest.PRIORITY.WEAK];\r\n        }\r\n\r\n        if (values[SwitchRequest.PRIORITY.DEFAULT].quality !== SwitchRequest.NO_CHANGE) {\r\n            newSwitchReq = values[SwitchRequest.PRIORITY.DEFAULT];\r\n        }\r\n\r\n        if (values[SwitchRequest.PRIORITY.STRONG].quality !== SwitchRequest.NO_CHANGE) {\r\n            newSwitchReq = values[SwitchRequest.PRIORITY.STRONG];\r\n        }\r\n\r\n        if (newSwitchReq) {\r\n            quality = newSwitchReq.quality;\r\n            reason = newSwitchReq.reason;\r\n        }\r\n\r\n        return SwitchRequest(context).create(quality, reason);\r\n    }\r\n\r\n    function getMaxQuality(rulesContext) {\r\n        const switchRequestArray = qualitySwitchRules.map(rule => rule.getMaxIndex(rulesContext));\r\n        const activeRules = _getRulesWithChange(switchRequestArray);\r\n        const maxQuality = getMinSwitchRequest(activeRules);\r\n\r\n        return maxQuality || SwitchRequest(context).create();\r\n    }\r\n\r\n    function shouldAbandonFragment(rulesContext, streamId) {\r\n        const abandonRequestArray = abandonFragmentRules.map(rule => rule.shouldAbandon(rulesContext, streamId));\r\n        const activeRules = _getRulesWithChange(abandonRequestArray);\r\n        const shouldAbandon = getMinSwitchRequest(activeRules);\r\n\r\n        if (shouldAbandon) {\r\n            shouldAbandon.reason.forceAbandon = true\r\n        }\r\n\r\n        return shouldAbandon || SwitchRequest(context).create();\r\n    }\r\n\r\n    function reset() {\r\n        [qualitySwitchRules, abandonFragmentRules].forEach(rules => {\r\n            if (rules && rules.length) {\r\n                rules.forEach(rule => rule.reset && rule.reset());\r\n            }\r\n        });\r\n        qualitySwitchRules = [];\r\n        abandonFragmentRules = [];\r\n    }\r\n\r\n    function getQualitySwitchRules() {\r\n        return qualitySwitchRules;\r\n    }\r\n\r\n    instance = {\r\n        initialize,\r\n        reset,\r\n        getMaxQuality,\r\n        getMinSwitchRequest,\r\n        shouldAbandonFragment,\r\n        getQualitySwitchRules\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nABRRulesCollection.__dashjs_factory_name = 'ABRRulesCollection';\r\nconst factory = FactoryMaker.getClassFactory(ABRRulesCollection);\r\nfactory.QUALITY_SWITCH_RULES = QUALITY_SWITCH_RULES;\r\nfactory.ABANDON_FRAGMENT_RULES = ABANDON_FRAGMENT_RULES;\r\nFactoryMaker.updateSingletonFactory(ABRRulesCollection.__dashjs_factory_name, factory);\r\n\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport UTCTiming from '../../dash/vo/UTCTiming';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport Settings from '../../core/Settings';\r\nimport {checkParameterType} from '../utils/SupervisorTools';\r\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\r\nimport Constants from '../constants/Constants';\r\n\r\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\r\n\r\nfunction CustomParametersModel() {\r\n\r\n    let instance,\r\n        utcTimingSources,\r\n        xhrWithCredentials,\r\n        licenseRequestFilters,\r\n        licenseResponseFilters,\r\n        customCapabilitiesFilters,\r\n        customInitialTrackSelectionFunction,\r\n        customAbrRules;\r\n\r\n    const context = this.context;\r\n    const settings = Settings(context).getInstance();\r\n\r\n    function setup() {\r\n        xhrWithCredentials = {\r\n            default: DEFAULT_XHR_WITH_CREDENTIALS\r\n        };\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    function _resetInitialSettings() {\r\n        licenseRequestFilters = [];\r\n        licenseResponseFilters = [];\r\n        customCapabilitiesFilters = [];\r\n        customAbrRules = [];\r\n        customInitialTrackSelectionFunction = null;\r\n        utcTimingSources = [];\r\n    }\r\n\r\n\r\n    function reset() {\r\n        _resetInitialSettings();\r\n    }\r\n\r\n    function setConfig() {\r\n\r\n    }\r\n\r\n    /**\r\n     * Registers a custom initial track selection function. Only one function is allowed. Calling this method will overwrite a potentially existing function.\r\n     * @param {function} customFunc - the custom function that returns the initial track\r\n     */\r\n    function setCustomInitialTrackSelectionFunction(customFunc) {\r\n        customInitialTrackSelectionFunction = customFunc;\r\n    }\r\n\r\n    /**\r\n     * Resets the custom initial track selection\r\n     */\r\n    function resetCustomInitialTrackSelectionFunction() {\r\n        customInitialTrackSelectionFunction = null;\r\n    }\r\n\r\n    /**\r\n     * Returns the initial track selection function\r\n     * @return {function}\r\n     */\r\n    function getCustomInitialTrackSelectionFunction() {\r\n        return customInitialTrackSelectionFunction;\r\n    }\r\n\r\n    /**\r\n     * Returns all license request filters\r\n     * @return {array}\r\n     */\r\n    function getLicenseRequestFilters() {\r\n        return licenseRequestFilters;\r\n    }\r\n\r\n    /**\r\n     * Returns all license response filters\r\n     * @return {array}\r\n     */\r\n    function getLicenseResponseFilters() {\r\n        return licenseResponseFilters;\r\n    }\r\n\r\n    /**\r\n     * Registers a license request filter. This enables application to manipulate/overwrite any request parameter and/or request data.\r\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\r\n     * The filters are applied in the order they are registered.\r\n     * @param {function} filter - the license request filter callback\r\n     */\r\n    function registerLicenseRequestFilter(filter) {\r\n        licenseRequestFilters.push(filter);\r\n    }\r\n\r\n    /**\r\n     * Registers a license response filter. This enables application to manipulate/overwrite the response data\r\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\r\n     * The filters are applied in the order they are registered.\r\n     * @param {function} filter - the license response filter callback\r\n     */\r\n    function registerLicenseResponseFilter(filter) {\r\n        licenseResponseFilters.push(filter);\r\n    }\r\n\r\n    /**\r\n     * Unregisters a license request filter.\r\n     * @param {function} filter - the license request filter callback\r\n     */\r\n    function unregisterLicenseRequestFilter(filter) {\r\n        _unregisterFilter(licenseRequestFilters, filter);\r\n    }\r\n\r\n    /**\r\n     * Unregisters a license response filter.\r\n     * @param {function} filter - the license response filter callback\r\n     */\r\n    function unregisterLicenseResponseFilter(filter) {\r\n        _unregisterFilter(licenseResponseFilters, filter);\r\n    }\r\n\r\n    /**\r\n     * Returns all custom capabilities filter\r\n     * @return {array}\r\n     */\r\n    function getCustomCapabilitiesFilters() {\r\n        return customCapabilitiesFilters;\r\n    }\r\n\r\n    /**\r\n     * Registers a custom capabilities filter. This enables application to filter representations to use.\r\n     * The provided callback function shall return a boolean based on whether or not to use the representation.\r\n     * The filters are applied in the order they are registered.\r\n     * @param {function} filter - the custom capabilities filter callback\r\n     */\r\n    function registerCustomCapabilitiesFilter(filter) {\r\n        customCapabilitiesFilters.push(filter);\r\n    }\r\n\r\n    /**\r\n     * Unregisters a custom capabilities filter.\r\n     * @param {function} filter - the custom capabilities filter callback\r\n     */\r\n    function unregisterCustomCapabilitiesFilter(filter) {\r\n        _unregisterFilter(customCapabilitiesFilters, filter);\r\n    }\r\n\r\n    /**\r\n     * Unregister a filter from the list of existing filers.\r\n     * @param {array} filters\r\n     * @param {function} filter\r\n     * @private\r\n     */\r\n    function _unregisterFilter(filters, filter) {\r\n        let index = -1;\r\n        filters.some((item, i) => {\r\n            if (item === filter) {\r\n                index = i;\r\n                return true;\r\n            }\r\n        });\r\n        if (index < 0) return;\r\n        filters.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Iterate through the list of custom ABR rules and find the right rule by name\r\n     * @param {string} rulename\r\n     * @return {number} rule number\r\n     */\r\n    function _findAbrCustomRuleIndex(rulename) {\r\n        let i;\r\n        for (i = 0; i < customAbrRules.length; i++) {\r\n            if (customAbrRules[i].rulename === rulename) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Add a custom ABR Rule\r\n     * Rule will be apply on next stream if a stream is being played\r\n     *\r\n     * @param {string} type - rule type (one of ['qualitySwitchRules','abandonFragmentRules'])\r\n     * @param {string} rulename - name of rule (used to identify custom rule). If one rule of same name has been added, then existing rule will be updated\r\n     * @param {object} rule - the rule object instance\r\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments.\r\n     */\r\n    function addAbrCustomRule(type, rulename, rule) {\r\n        if (typeof type !== 'string' || (type !== ABRRulesCollection.ABANDON_FRAGMENT_RULES && type !== ABRRulesCollection.QUALITY_SWITCH_RULES) ||\r\n            typeof rulename !== 'string') {\r\n            throw Constants.BAD_ARGUMENT_ERROR;\r\n        }\r\n        let index = _findAbrCustomRuleIndex(rulename);\r\n        if (index === -1) {\r\n            // add rule\r\n            customAbrRules.push({\r\n                type: type,\r\n                rulename: rulename,\r\n                rule: rule\r\n            });\r\n        } else {\r\n            // update rule\r\n            customAbrRules[index].type = type;\r\n            customAbrRules[index].rule = rule;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove a custom ABR Rule\r\n     *\r\n     * @param {string} rulename - name of the rule to be removed\r\n     */\r\n    function removeAbrCustomRule(rulename) {\r\n        if (rulename) {\r\n            let index = _findAbrCustomRuleIndex(rulename);\r\n            //if no rulename custom rule has been found, do nothing\r\n            if (index !== -1) {\r\n                // remove rule\r\n                customAbrRules.splice(index, 1);\r\n            }\r\n        } else {\r\n            //if no rulename is defined, remove all ABR custome rules\r\n            customAbrRules = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all custom rules\r\n     */\r\n    function removeAllAbrCustomRule() {\r\n        customAbrRules = [];\r\n    }\r\n\r\n    /**\r\n     * Return all ABR custom rules\r\n     * @return {array}\r\n     */\r\n    function getAbrCustomRules() {\r\n        return customAbrRules;\r\n    }\r\n\r\n\r\n    /**\r\n     * Add a UTC timing source at the top of the list\r\n     * @param {string} schemeIdUri\r\n     * @param {string} value\r\n     */\r\n    function addUTCTimingSource(schemeIdUri, value) {\r\n        removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\r\n        let vo = new UTCTiming();\r\n        vo.schemeIdUri = schemeIdUri;\r\n        vo.value = value;\r\n        utcTimingSources.push(vo);\r\n    }\r\n\r\n    /**\r\n     * Return all UTC timing sources\r\n     * @return {array}\r\n     */\r\n    function getUTCTimingSources() {\r\n        return utcTimingSources;\r\n    }\r\n\r\n    /**\r\n     * Remove a specific timing source from the array\r\n     * @param {string} schemeIdUri\r\n     * @param {string} value\r\n     */\r\n    function removeUTCTimingSource(schemeIdUri, value) {\r\n        checkParameterType(schemeIdUri, 'string');\r\n        checkParameterType(value, 'string');\r\n        utcTimingSources.forEach(function (obj, idx) {\r\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\r\n                utcTimingSources.splice(idx, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove all timing sources\r\n     */\r\n    function clearDefaultUTCTimingSources() {\r\n        utcTimingSources = [];\r\n    }\r\n\r\n    /**\r\n     * Add the default timing source to the list\r\n     */\r\n    function restoreDefaultUTCTimingSources() {\r\n        let defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\r\n        addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\r\n    }\r\n\r\n    function setXHRWithCredentialsForType(type, value) {\r\n        if (!type) {\r\n            Object.keys(xhrWithCredentials).forEach(key => {\r\n                setXHRWithCredentialsForType(key, value);\r\n            });\r\n        } else {\r\n            xhrWithCredentials[type] = !!value;\r\n        }\r\n    }\r\n\r\n    function getXHRWithCredentialsForType(type) {\r\n        const useCreds = xhrWithCredentials[type];\r\n\r\n        return useCreds === undefined ? xhrWithCredentials.default : useCreds;\r\n    }\r\n\r\n    instance = {\r\n        getCustomInitialTrackSelectionFunction,\r\n        setCustomInitialTrackSelectionFunction,\r\n        resetCustomInitialTrackSelectionFunction,\r\n        getLicenseResponseFilters,\r\n        getLicenseRequestFilters,\r\n        getCustomCapabilitiesFilters,\r\n        registerCustomCapabilitiesFilter,\r\n        registerLicenseResponseFilter,\r\n        registerLicenseRequestFilter,\r\n        unregisterCustomCapabilitiesFilter,\r\n        unregisterLicenseResponseFilter,\r\n        unregisterLicenseRequestFilter,\r\n        addAbrCustomRule,\r\n        removeAllAbrCustomRule,\r\n        removeAbrCustomRule,\r\n        getAbrCustomRules,\r\n        addUTCTimingSource,\r\n        removeUTCTimingSource,\r\n        getUTCTimingSources,\r\n        clearDefaultUTCTimingSources,\r\n        restoreDefaultUTCTimingSources,\r\n        setXHRWithCredentialsForType,\r\n        getXHRWithCredentialsForType,\r\n        setConfig,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nCustomParametersModel.__dashjs_factory_name = 'CustomParametersModel';\r\nexport default FactoryMaker.getSingletonFactory(CustomParametersModel);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport XHRLoader from './XHRLoader';\r\nimport FetchLoader from './FetchLoader';\r\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport DashJSError from '../vo/DashJSError';\r\nimport CmcdModel from '../models/CmcdModel';\r\nimport CmsdModel from '../models/CmsdModel';\r\nimport ClientDataReportingModel from '../models/ClientDataReportingModel';\r\nimport Utils from '../../core/Utils';\r\nimport Debug from '../../core/Debug';\r\nimport EventBus from '../../core/EventBus';\r\nimport Events from '../../core/events/Events';\r\nimport Settings from '../../core/Settings';\r\nimport Constants from '../constants/Constants';\r\nimport LowLatencyThroughputModel from '../models/LowLatencyThroughputModel';\r\nimport CustomParametersModel from '../models/CustomParametersModel';\r\n\r\n/**\r\n * @module HTTPLoader\r\n * @ignore\r\n * @description Manages download of resources via HTTP.\r\n * @param {Object} cfg - dependencies from parent\r\n */\r\nfunction HTTPLoader(cfg) {\r\n\r\n    cfg = cfg || {};\r\n\r\n    const context = this.context;\r\n    const errHandler = cfg.errHandler;\r\n    const dashMetrics = cfg.dashMetrics;\r\n    const mediaPlayerModel = cfg.mediaPlayerModel;\r\n    const requestModifier = cfg.requestModifier;\r\n    const boxParser = cfg.boxParser;\r\n    const errors = cfg.errors;\r\n    const requestTimeout = cfg.requestTimeout || 0;\r\n    const eventBus = EventBus(context).getInstance();\r\n    const settings = Settings(context).getInstance();\r\n\r\n    let instance,\r\n        requests,\r\n        delayedRequests,\r\n        retryRequests,\r\n        downloadErrorToRequestTypeMap,\r\n        cmcdModel,\r\n        cmsdModel,\r\n        clientDataReportingModel,\r\n        customParametersModel,\r\n        lowLatencyThroughputModel,\r\n        logger;\r\n\r\n    function setup() {\r\n        logger = Debug(context).getInstance().getLogger(instance);\r\n        requests = [];\r\n        delayedRequests = [];\r\n        retryRequests = [];\r\n        cmcdModel = CmcdModel(context).getInstance();\r\n        clientDataReportingModel = ClientDataReportingModel(context).getInstance();\r\n        cmsdModel = CmsdModel(context).getInstance();\r\n        lowLatencyThroughputModel = LowLatencyThroughputModel(context).getInstance();\r\n        customParametersModel = CustomParametersModel(context).getInstance();\r\n\r\n        downloadErrorToRequestTypeMap = {\r\n            [HTTPRequest.MPD_TYPE]: errors.DOWNLOAD_ERROR_ID_MANIFEST_CODE,\r\n            [HTTPRequest.XLINK_EXPANSION_TYPE]: errors.DOWNLOAD_ERROR_ID_XLINK_CODE,\r\n            [HTTPRequest.INIT_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE,\r\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\r\n            [HTTPRequest.INDEX_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\r\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\r\n            [HTTPRequest.OTHER_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE\r\n        };\r\n    }\r\n\r\n    function internalLoad(config, remainingAttempts) {\r\n        const request = config.request;\r\n        const traces = [];\r\n        let firstProgress = true;\r\n        let needFailureReport = true;\r\n        let requestStartTime = new Date();\r\n        let lastTraceTime = requestStartTime;\r\n        let lastTraceReceivedCount = 0;\r\n        let progressTimeout = null;\r\n        let fileLoaderType = null;\r\n        let httpRequest;\r\n\r\n        if (!requestModifier || !dashMetrics || !errHandler) {\r\n            throw new Error('config object is not correct or missing');\r\n        }\r\n\r\n        const addHttpRequestMetric = function(success) {\r\n            request.requestStartDate = requestStartTime;\r\n            request.requestEndDate = new Date();\r\n            request.firstByteDate = request.firstByteDate || requestStartTime;\r\n            request.fileLoaderType = fileLoaderType;\r\n\r\n            const responseUrl = httpRequest.response ? httpRequest.response.responseURL : null;\r\n            const responseStatus = httpRequest.response ? httpRequest.response.status : null;\r\n            const responseHeaders = httpRequest.response && httpRequest.response.getAllResponseHeaders ? httpRequest.response.getAllResponseHeaders() :\r\n                httpRequest.response ? httpRequest.response.responseHeaders : null;\r\n    \r\n            const cmsd = responseHeaders && settings.get().streaming.cmsd && settings.get().streaming.cmsd.enabled ? cmsdModel.parseResponseHeaders(responseHeaders, request.mediaType) : null;\r\n    \r\n            dashMetrics.addHttpRequest(request, responseUrl, responseStatus, responseHeaders, success ? traces : null, cmsd);\r\n        }\r\n    \r\n        const handleLoaded = function (success) {\r\n            needFailureReport = false;\r\n\r\n            addHttpRequestMetric(success);\r\n\r\n            if (request.type === HTTPRequest.MPD_TYPE) {\r\n                dashMetrics.addManifestUpdate(request);\r\n                eventBus.trigger(Events.MANIFEST_LOADING_FINISHED, { request });\r\n            }\r\n        };\r\n\r\n        const onloadend = function () {\r\n            if (progressTimeout) {\r\n                clearTimeout(progressTimeout);\r\n                progressTimeout = null;\r\n            }\r\n            if (requests.indexOf(httpRequest) === -1) {\r\n                return;\r\n            } else {\r\n                requests.splice(requests.indexOf(httpRequest), 1);\r\n            }\r\n\r\n            if (needFailureReport) {\r\n                handleLoaded(false);\r\n\r\n                if (remainingAttempts > 0) {\r\n\r\n                    // If we get a 404 to a media segment we should check the client clock again and perform a UTC sync in the background.\r\n                    try {\r\n                        if (settings.get().streaming.utcSynchronization.enableBackgroundSyncAfterSegmentDownloadError && request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\r\n                            // Only trigger a sync if the loading failed for the first time\r\n                            const initialNumberOfAttempts = mediaPlayerModel.getRetryAttemptsForType(HTTPRequest.MEDIA_SEGMENT_TYPE);\r\n                            if (initialNumberOfAttempts === remainingAttempts) {\r\n                                eventBus.trigger(Events.ATTEMPT_BACKGROUND_SYNC);\r\n                            }\r\n                        }\r\n                    } catch (e) {\r\n\r\n                    }\r\n\r\n                    remainingAttempts--;\r\n                    let retryRequest = { config: config };\r\n                    retryRequests.push(retryRequest);\r\n                    retryRequest.timeout = setTimeout(function () {\r\n                        if (retryRequests.indexOf(retryRequest) === -1) {\r\n                            return;\r\n                        } else {\r\n                            retryRequests.splice(retryRequests.indexOf(retryRequest), 1);\r\n                        }\r\n                        internalLoad(config, remainingAttempts);\r\n                    }, mediaPlayerModel.getRetryIntervalsForType(request.type));\r\n                } else {\r\n                    if (request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\r\n                        return;\r\n                    }\r\n\r\n                    errHandler.error(new DashJSError(downloadErrorToRequestTypeMap[request.type], request.url + ' is not available', {\r\n                        request: request,\r\n                        response: httpRequest.response\r\n                    }));\r\n\r\n                    if (config.error) {\r\n                        config.error(request, 'error', httpRequest.response.statusText, httpRequest.response);\r\n                    }\r\n\r\n                    if (config.complete) {\r\n                        config.complete(request, httpRequest.response.statusText);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const progress = function (event) {\r\n            const currentTime = new Date();\r\n\r\n            if (firstProgress) {\r\n                firstProgress = false;\r\n                if (!event.lengthComputable ||\r\n                    (event.lengthComputable && event.total !== event.loaded)) {\r\n                    request.firstByteDate = currentTime;\r\n                }\r\n            }\r\n\r\n            if (event.lengthComputable) {\r\n                request.bytesLoaded = event.loaded;\r\n                request.bytesTotal = event.total;\r\n            }\r\n\r\n            if (!event.noTrace) {\r\n                traces.push({\r\n                    s: lastTraceTime,\r\n                    d: event.time ? event.time : currentTime.getTime() - lastTraceTime.getTime(),\r\n                    b: [event.loaded ? event.loaded - lastTraceReceivedCount : 0]\r\n                });\r\n\r\n                lastTraceTime = currentTime;\r\n                lastTraceReceivedCount = event.loaded;\r\n            }\r\n\r\n            if (progressTimeout) {\r\n                clearTimeout(progressTimeout);\r\n                progressTimeout = null;\r\n            }\r\n\r\n            if (settings.get().streaming.fragmentRequestProgressTimeout > 0) {\r\n                progressTimeout = setTimeout(function () {\r\n                    // No more progress => abort request and treat as an error\r\n                    logger.warn('Abort request ' + httpRequest.url + ' due to progress timeout');\r\n                    httpRequest.response.onabort = null;\r\n                    httpRequest.loader.abort(httpRequest);\r\n                    onloadend();\r\n                }, settings.get().streaming.fragmentRequestProgressTimeout);\r\n            }\r\n\r\n            if (config.progress && event) {\r\n                config.progress(event);\r\n            }\r\n        };\r\n\r\n        const onload = function () {\r\n            if (httpRequest.response.status >= 200 && httpRequest.response.status <= 299) {\r\n                handleLoaded(true);\r\n\r\n                if (config.success) {\r\n                    config.success(httpRequest.response.response, httpRequest.response.statusText, httpRequest.response.responseURL);\r\n                }\r\n\r\n                if (config.complete) {\r\n                    config.complete(request, httpRequest.response.statusText);\r\n                }\r\n            }\r\n        };\r\n\r\n        const onabort = function () {\r\n            addHttpRequestMetric(true);\r\n\r\n            if (progressTimeout) {\r\n                clearTimeout(progressTimeout);\r\n                progressTimeout = null;\r\n            }\r\n            if (config.abort) {\r\n                config.abort(request);\r\n            }\r\n        };\r\n\r\n        const ontimeout = function (event) {\r\n            let timeoutMessage;\r\n            if (event.lengthComputable) {\r\n                let percentageComplete = (event.loaded / event.total) * 100;\r\n                timeoutMessage = 'Request timeout: loaded: ' + event.loaded + ', out of: ' + event.total + ' : ' + percentageComplete.toFixed(3) + '% Completed';\r\n            } else {\r\n                timeoutMessage = 'Request timeout: non-computable download size';\r\n            }\r\n            logger.warn(timeoutMessage);\r\n        };\r\n\r\n\r\n        let loader;\r\n        if (request.hasOwnProperty('availabilityTimeComplete') && request.availabilityTimeComplete === false && window.fetch && request.responseType === 'arraybuffer' && request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\r\n            loader = FetchLoader(context).create({\r\n                requestModifier: requestModifier,\r\n                lowLatencyThroughputModel,\r\n                boxParser: boxParser\r\n            });\r\n            loader.setup({\r\n                dashMetrics\r\n            });\r\n            fileLoaderType = Constants.FILE_LOADER_TYPES.FETCH;\r\n        } else {\r\n            loader = XHRLoader(context).create({\r\n                requestModifier: requestModifier\r\n            });\r\n            fileLoaderType = Constants.FILE_LOADER_TYPES.XHR;\r\n        }\r\n\r\n        let headers = null;\r\n        let modifiedUrl = requestModifier.modifyRequestURL ? requestModifier.modifyRequestURL(request.url) : request.url;\r\n        \r\n        const currentServiceLocation = request?.serviceLocation; \r\n        const currentAdaptationSetId = request?.mediaInfo?.id?.toString();\r\n        const isIncludedFilters = clientDataReportingModel.serviceLocationIncluded(request.type, currentServiceLocation) && clientDataReportingModel.adaptationSetIncluded(currentAdaptationSetId);\r\n        if (isIncludedFilters && cmcdModel.isCmcdEnabled()) {\r\n            const cmcdParameters = cmcdModel.getCmcdParametersFromManifest();\r\n            const cmcdMode = cmcdParameters.mode ? cmcdParameters.mode : settings.get().streaming.cmcd.mode;\r\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\r\n                const additionalQueryParameter = _getAdditionalQueryParameter(request);\r\n                modifiedUrl = Utils.addAditionalQueryParameterToUrl(modifiedUrl, additionalQueryParameter);\r\n            } else if (cmcdMode === Constants.CMCD_MODE_HEADER) {\r\n                headers = cmcdModel.getHeaderParameters(request);\r\n            }\r\n        }\r\n\r\n        const withCredentials = customParametersModel.getXHRWithCredentialsForType(request.type);\r\n\r\n        // Add queryParams that came from pathway cloning\r\n        if (request.queryParams) {\r\n            const queryParams = Object.keys(request.queryParams).map((key) => {\r\n                return {\r\n                    key,\r\n                    value: request.queryParams[key]\r\n                }\r\n            })\r\n            modifiedUrl = Utils.addAditionalQueryParameterToUrl(modifiedUrl, queryParams);\r\n        }\r\n\r\n        request.url = modifiedUrl;\r\n\r\n        httpRequest = {\r\n            url: modifiedUrl,\r\n            method: HTTPRequest.GET,\r\n            withCredentials: withCredentials,\r\n            request: request,\r\n            onload: onload,\r\n            onend: onloadend,\r\n            onerror: onloadend,\r\n            progress: progress,\r\n            onabort: onabort,\r\n            ontimeout: ontimeout,\r\n            loader: loader,\r\n            timeout: requestTimeout,\r\n            headers: headers\r\n        };\r\n\r\n        // Adds the ability to delay single fragment loading time to control buffer.\r\n        let now = new Date().getTime();\r\n        if (isNaN(request.delayLoadingTime) || now >= request.delayLoadingTime) {\r\n            // no delay - just send\r\n            requests.push(httpRequest);\r\n            loader.load(httpRequest);\r\n        } else {\r\n            // delay\r\n            let delayedRequest = { httpRequest: httpRequest };\r\n            delayedRequests.push(delayedRequest);\r\n            delayedRequest.delayTimeout = setTimeout(function () {\r\n                if (delayedRequests.indexOf(delayedRequest) === -1) {\r\n                    return;\r\n                } else {\r\n                    delayedRequests.splice(delayedRequests.indexOf(delayedRequest), 1);\r\n                }\r\n                try {\r\n                    requestStartTime = new Date();\r\n                    lastTraceTime = requestStartTime;\r\n                    requests.push(delayedRequest.httpRequest);\r\n                    loader.load(delayedRequest.httpRequest);\r\n                } catch (e) {\r\n                    delayedRequest.httpRequest.onerror();\r\n                }\r\n            }, (request.delayLoadingTime - now));\r\n        }\r\n    }\r\n\r\n    function _getAdditionalQueryParameter(request) {\r\n        try {\r\n            const additionalQueryParameter = [];\r\n            const cmcdQueryParameter = cmcdModel.getQueryParameter(request);\r\n\r\n            if (cmcdQueryParameter) {\r\n                additionalQueryParameter.push(cmcdQueryParameter);\r\n            }\r\n\r\n            return additionalQueryParameter;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initiates a download of the resource described by config.request\r\n     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks\r\n     * @memberof module:HTTPLoader\r\n     * @instance\r\n     */\r\n    function load(config) {\r\n        if (config.request) {\r\n            internalLoad(\r\n                config,\r\n                mediaPlayerModel.getRetryAttemptsForType(\r\n                    config.request.type\r\n                )\r\n            );\r\n        } else {\r\n            if (config.error) {\r\n                config.error(config.request, 'error');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Aborts any inflight downloads\r\n     * @memberof module:HTTPLoader\r\n     * @instance\r\n     */\r\n    function abort() {\r\n        retryRequests.forEach(t => {\r\n            clearTimeout(t.timeout);\r\n            // abort request in order to trigger LOADING_ABANDONED event\r\n            if (t.config.request && t.config.abort) {\r\n                t.config.abort(t.config.request);\r\n            }\r\n        });\r\n        retryRequests = [];\r\n\r\n        delayedRequests.forEach(x => clearTimeout(x.delayTimeout));\r\n        delayedRequests = [];\r\n\r\n        requests.forEach(x => {\r\n            // MSS patch: ignore FragmentInfo requests\r\n            if (x.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\r\n                return;\r\n            }\r\n\r\n            // abort will trigger onloadend which we don't want\r\n            // when deliberately aborting inflight requests -\r\n            // set them to undefined so they are not called\r\n            x.onloadend = x.onerror = x.onprogress = undefined;\r\n            x.loader.abort(x);\r\n        });\r\n        requests = [];\r\n    }\r\n\r\n    instance = {\r\n        load: load,\r\n        abort: abort\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nHTTPLoader.__dashjs_factory_name = 'HTTPLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(HTTPLoader);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport HTTPLoader from '../../streaming/net/HTTPLoader';\r\n\r\n/**\r\n * @module\r\n * @description Choose right url loader for scheme\r\n * @ignore\r\n */\r\nfunction SchemeLoaderFactory() {\r\n\r\n    let instance;\r\n\r\n    let schemeLoaderMap;\r\n\r\n    function registerLoader(scheme, loader) {\r\n        schemeLoaderMap[scheme] = loader;\r\n    }\r\n\r\n    function unregisterLoader(scheme) {\r\n        if (schemeLoaderMap[scheme]) {\r\n            delete schemeLoaderMap[scheme];\r\n        }\r\n    }\r\n\r\n    function unregisterAllLoader() {\r\n        schemeLoaderMap = {};\r\n    }\r\n\r\n    function getLoader(url) {\r\n\r\n        // iterates through schemeLoaderMap to find a loader for the scheme\r\n        for (var scheme in schemeLoaderMap) {\r\n            if (schemeLoaderMap.hasOwnProperty(scheme) && url.startsWith(scheme)) {\r\n                return schemeLoaderMap[scheme];\r\n            }\r\n        }\r\n\r\n        return HTTPLoader;\r\n    }\r\n\r\n    function reset() {\r\n        unregisterAllLoader();\r\n    }\r\n\r\n    function setup() {\r\n        reset();\r\n    }\r\n\r\n    setup();\r\n\r\n    instance = {\r\n        getLoader: getLoader,\r\n        registerLoader: registerLoader,\r\n        unregisterLoader: unregisterLoader,\r\n        unregisterAllLoader: unregisterAllLoader,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nSchemeLoaderFactory.__dashjs_factory_name = 'SchemeLoaderFactory';\r\nconst factory = FactoryMaker.getSingletonFactory(SchemeLoaderFactory);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport SchemeLoaderFactory from '../../streaming/net/SchemeLoaderFactory';\r\n\r\n/**\r\n * @class URLLoader\r\n * @description  Call Offline Loader or Online Loader depending on URL\r\n * @param {Object} cfg - dependencies\r\n * @ignore\r\n*/\r\nfunction URLLoader(cfg) {\r\n\r\n    cfg = cfg || {};\r\n    const context = this.context;\r\n\r\n    let instance,\r\n        schemeLoaderFactory,\r\n        loader;\r\n\r\n    schemeLoaderFactory = SchemeLoaderFactory(context).getInstance();\r\n\r\n    function load(config) {\r\n        if (!loader) {\r\n            let loaderFactory = schemeLoaderFactory.getLoader(config && config.request ? config.request.url : null);\r\n            loader = loaderFactory(context).create({\r\n                errHandler: cfg.errHandler,\r\n                mediaPlayerModel: cfg.mediaPlayerModel,\r\n                requestModifier: cfg.requestModifier,\r\n                dashMetrics: cfg.dashMetrics,\r\n                boxParser: cfg.boxParser ? cfg.boxParser : null,\r\n                constants: cfg.constants ? cfg.constants : null,\r\n                dashConstants: cfg.dashConstants ? cfg.dashConstants : null,\r\n                urlUtils: cfg.urlUtils ? cfg.urlUtils : null,\r\n                requestTimeout: !isNaN(cfg.requestTimeout) ? cfg.requestTimeout : 0,\r\n                errors: cfg.errors\r\n            });\r\n        }\r\n        loader.load(config);\r\n    }\r\n\r\n    function abort() {\r\n        if (loader) {\r\n            loader.abort();\r\n        }\r\n    }\r\n    instance = {\r\n        load: load,\r\n        abort: abort\r\n    };\r\n\r\n    return instance;\r\n\r\n}\r\nURLLoader.__dashjs_factory_name = 'URLLoader';\r\n\r\nconst factory = FactoryMaker.getClassFactory(URLLoader);\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nimport FragmentRequest from './FragmentRequest';\r\n\r\nclass HeadRequest extends FragmentRequest {\r\n    constructor(url) {\r\n        super(url);\r\n        this.checkForExistenceOnly = true;\r\n    }\r\n}\r\n\r\nexport default HeadRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport Constants from './constants/Constants';\r\nimport URLLoader from './net/URLLoader';\r\nimport HeadRequest from './vo/HeadRequest';\r\nimport DashJSError from './vo/DashJSError';\r\nimport FactoryMaker from '../core/FactoryMaker';\r\n\r\nfunction FragmentLoader(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const urlUtils = config.urlUtils;\r\n    const errors = config.errors;\r\n    const streamId = config.streamId;\r\n\r\n    let instance,\r\n        urlLoader;\r\n\r\n    function setup() {\r\n        urlLoader = URLLoader(context).create({\r\n            errHandler: config.errHandler,\r\n            errors: errors,\r\n            dashMetrics: config.dashMetrics,\r\n            mediaPlayerModel: config.mediaPlayerModel,\r\n            requestModifier: config.requestModifier,\r\n            urlUtils: urlUtils,\r\n            constants: Constants,\r\n            boxParser: config.boxParser,\r\n            dashConstants: config.dashConstants,\r\n            requestTimeout: config.settings.get().streaming.fragmentRequestTimeout\r\n        });\r\n    }\r\n\r\n    function checkForExistence(request) {\r\n        const report = function (success) {\r\n            eventBus.trigger(events.CHECK_FOR_EXISTENCE_COMPLETED, { request: request, exists: success }\r\n            );\r\n        };\r\n\r\n        if (request) {\r\n            let headRequest = new HeadRequest(request.url);\r\n            urlLoader.load({\r\n                request: headRequest,\r\n                success: function () {\r\n                    report(true);\r\n                },\r\n                error: function () {\r\n                    report(false);\r\n                }\r\n            });\r\n        } else {\r\n            report(false);\r\n        }\r\n    }\r\n\r\n    function load(request) {\r\n        const report = function (data, error) {\r\n            eventBus.trigger(events.LOADING_COMPLETED, {\r\n                request: request,\r\n                response: data || null,\r\n                error: error || null,\r\n                sender: instance\r\n            });\r\n        };\r\n\r\n        if (request) {\r\n            urlLoader.load({\r\n                request: request,\r\n                progress: function (event) {\r\n                    eventBus.trigger(events.LOADING_PROGRESS, {\r\n                        request: request,\r\n                        stream: event.stream,\r\n                        streamId\r\n                    });\r\n                    if (event.data) {\r\n                        eventBus.trigger(events.LOADING_DATA_PROGRESS, {\r\n                            request: request,\r\n                            response: event.data || null,\r\n                            error: null,\r\n                            sender: instance\r\n                        });\r\n                    }\r\n                },\r\n                success: function (data) {\r\n                    report(data);\r\n                },\r\n                error: function (request, statusText, errorText) {\r\n                    report(\r\n                        undefined,\r\n                        new DashJSError(\r\n                            errors.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE,\r\n                            errorText,\r\n                            statusText\r\n                        )\r\n                    );\r\n                },\r\n                abort: function (request) {\r\n                    if (request) {\r\n                        eventBus.trigger(events.LOADING_ABANDONED, {\r\n                            mediaType: request.mediaType,\r\n                            request: request,\r\n                            sender: instance\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            report(\r\n                undefined,\r\n                new DashJSError(\r\n                    errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE,\r\n                    errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function abort() {\r\n        if (urlLoader) {\r\n            urlLoader.abort();\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        if (urlLoader) {\r\n            urlLoader.abort();\r\n            urlLoader = null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        checkForExistence: checkForExistence,\r\n        load: load,\r\n        abort: abort,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nFragmentLoader.__dashjs_factory_name = 'FragmentLoader';\r\nexport default FactoryMaker.getClassFactory(FragmentLoader);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport DashHandler from '../dash/DashHandler';\r\nimport RepresentationController from '../dash/controllers/RepresentationController';\r\nimport FragmentModel from '../streaming/models/FragmentModel';\r\nimport FragmentLoader from '../streaming/FragmentLoader';\r\nimport URLUtils from '../streaming/utils/URLUtils';\r\nimport RequestModifier from '../streaming/utils/RequestModifier';\r\nimport SegmentsController from '../dash/controllers/SegmentsController';\r\n\r\nfunction OfflineStreamProcessor(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const errors = config.errors;\r\n    const debug = config.debug;\r\n    const constants = config.constants;\r\n    const settings = config.settings;\r\n    const dashConstants = config.dashConstants;\r\n    const manifestId = config.id;\r\n    const type = config.type;\r\n    const streamInfo = config.streamInfo;\r\n    const errHandler = config.errHandler;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const abrController = config.abrController;\r\n    const playbackController = config.playbackController;\r\n    const adapter = config.adapter;\r\n    const dashMetrics = config.dashMetrics;\r\n    const baseURLController = config.baseURLController;\r\n    const timelineConverter = config.timelineConverter;\r\n    const bitrate = config.bitrate;\r\n    const offlineStoreController = config.offlineStoreController;\r\n    const completedCb = config.callbacks && config.callbacks.completed;\r\n    const progressCb = config.callbacks && config.callbacks.progression;\r\n\r\n    let instance,\r\n        logger,\r\n        mediaInfo,\r\n        indexHandler,\r\n        representationController,\r\n        fragmentModel,\r\n        updating,\r\n        downloadedSegments,\r\n        isInitialized,\r\n        segmentsController,\r\n        isStopped;\r\n\r\n    function setup() {\r\n        resetInitialSettings();\r\n        logger = debug.getLogger(instance);\r\n\r\n        segmentsController = SegmentsController(context).create({\r\n            events,\r\n            eventBus,\r\n            streamInfo,\r\n            timelineConverter,\r\n            dashConstants,\r\n            segmentBaseController: config.segmentBaseController,\r\n            type\r\n        });\r\n\r\n        indexHandler = DashHandler(context).create({\r\n            streamInfo: streamInfo,\r\n            type: type,\r\n            timelineConverter: timelineConverter,\r\n            dashMetrics: dashMetrics,\r\n            mediaPlayerModel: mediaPlayerModel,\r\n            baseURLController: baseURLController,\r\n            errHandler: errHandler,\r\n            settings: settings,\r\n            // boxParser: boxParser,\r\n            eventBus: eventBus,\r\n            events: events,\r\n            debug: debug,\r\n            requestModifier: RequestModifier(context).getInstance(),\r\n            dashConstants: dashConstants,\r\n            constants: constants,\r\n            segmentsController: segmentsController,\r\n            urlUtils: URLUtils(context).getInstance()\r\n        });\r\n\r\n        representationController = RepresentationController(context).create({\r\n            streamInfo: streamInfo,\r\n            type: type,\r\n            abrController: abrController,\r\n            dashMetrics: dashMetrics,\r\n            playbackController: playbackController,\r\n            timelineConverter: timelineConverter,\r\n            dashConstants: dashConstants,\r\n            events: events,\r\n            eventBus: eventBus,\r\n            errors: errors,\r\n            adapter,\r\n            segmentsController: segmentsController\r\n        });\r\n\r\n        fragmentModel = FragmentModel(context).create({\r\n            streamInfo: streamInfo,\r\n            dashMetrics: dashMetrics,\r\n            fragmentLoader: FragmentLoader(context).create({\r\n                dashMetrics: dashMetrics,\r\n                mediaPlayerModel: mediaPlayerModel,\r\n                errHandler: errHandler,\r\n                requestModifier: RequestModifier(context).getInstance(),\r\n                settings: settings,\r\n                eventBus: eventBus,\r\n                events: events,\r\n                errors: errors,\r\n                constants: constants,\r\n                dashConstants: dashConstants,\r\n                urlUtils: URLUtils(context).getInstance()\r\n            }),\r\n            debug: debug,\r\n            eventBus: eventBus,\r\n            events: events\r\n        });\r\n\r\n        eventBus.on(events.STREAM_REQUESTING_COMPLETED, onStreamRequestingCompleted, instance);\r\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\r\n    }\r\n\r\n    function initialize(_mediaInfo) {\r\n        mediaInfo = _mediaInfo;\r\n        indexHandler.initialize(false);\r\n        updateRepresentation(mediaInfo);\r\n    }\r\n\r\n    function isInitRequest(request) {\r\n        return request.type === 'InitializationSegment';\r\n    }\r\n\r\n    function onFragmentLoadingCompleted(e) {\r\n        if (e.sender !== fragmentModel) {\r\n            return;\r\n        }\r\n\r\n        if (e.request !== null) {\r\n            let isInit = isInitRequest(e.request);\r\n            let suffix = isInit ? 'init' : e.request.index;\r\n            let fragmentName = e.request.representationId + '_' + suffix;\r\n            offlineStoreController.storeFragment(manifestId, fragmentName, e.response)\r\n                .then(() => {\r\n                    if (!isInit) {\r\n                        // store current index and downloadedSegments number\r\n                        offlineStoreController.setRepresentationCurrentState(manifestId, e.request.representationId, {\r\n                            index: e.request.index,\r\n                            downloaded: downloadedSegments\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n\r\n        if (e.error && e.request.serviceLocation && !isStopped) {\r\n            fragmentModel.executeRequest(e.request);\r\n        } else {\r\n            downloadedSegments++;\r\n            download();\r\n        }\r\n    }\r\n\r\n    function onStreamRequestingCompleted(e) {\r\n        if (e.fragmentModel !== fragmentModel) {\r\n            return;\r\n        }\r\n        logger.info(`[${manifestId}] Stream is complete`);\r\n        stop();\r\n        completedCb();\r\n    }\r\n\r\n    function getRepresentationController() {\r\n        return representationController;\r\n    }\r\n\r\n    function getRepresentationId() {\r\n        return representationController.getCurrentRepresentation().id;\r\n    }\r\n\r\n    /**\r\n     * Stops download of fragments\r\n     * @memberof OfflineStreamProcessor#\r\n     */\r\n    function stop() {\r\n        if (isStopped) {\r\n            return;\r\n        }\r\n        isStopped = true;\r\n    }\r\n\r\n\r\n    function removeExecutedRequestsBeforeTime(time) {\r\n        if (fragmentModel) {\r\n            fragmentModel.removeExecutedRequestsBeforeTime(time);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Execute init request for the represenation\r\n     * @memberof OfflineStreamProcessor#\r\n     */\r\n    function getInitRequest() {\r\n        if (!representationController.getCurrentRepresentation()) {\r\n            return null;\r\n        }\r\n\r\n        return indexHandler.getInitRequest(getMediaInfo(), representationController.getCurrentRepresentation());\r\n    }\r\n\r\n    /**\r\n     * Get next request\r\n     * @memberof OfflineStreamProcessor#\r\n     */\r\n    function getNextRequest() {\r\n        return indexHandler.getNextSegmentRequest(getMediaInfo(), representationController.getCurrentRepresentation());\r\n    }\r\n\r\n    /**\r\n     * Start download\r\n     * @memberof OfflineStreamProcessor#\r\n     */\r\n    function start() {\r\n        if (representationController) {\r\n            if (!representationController.getCurrentRepresentation()) {\r\n                throw new Error('Start denied to OfflineStreamProcessor');\r\n            }\r\n            isStopped = false;\r\n\r\n            offlineStoreController.getRepresentationCurrentState(manifestId, representationController.getCurrentRepresentation().id)\r\n                .then((state) => {\r\n                    if (state) {\r\n                        indexHandler.setCurrentIndex(state.index);\r\n                        downloadedSegments = state.downloaded;\r\n                    }\r\n                    download();\r\n                })\r\n                .catch(() => {\r\n                    // start from beginining\r\n                    download();\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs download of fragment according to type\r\n     * @memberof OfflineStreamProcessor#\r\n     */\r\n    function download() {\r\n        if (isStopped) {\r\n            return;\r\n        }\r\n\r\n        if (isNaN(representationController.getCurrentRepresentation())) {\r\n            let request = null;\r\n            if (!isInitialized) {\r\n                request = getInitRequest();\r\n                isInitialized = true;\r\n            } else {\r\n                request = getNextRequest();\r\n\r\n                // update progression : done here because availableSegmentsNumber is done in getNextRequest from dash handler\r\n                updateProgression();\r\n            }\r\n\r\n            if (request) {\r\n                logger.info(`[${manifestId}] download request : ${request.url}`);\r\n                fragmentModel.executeRequest(request);\r\n            } else {\r\n                logger.info(`[${manifestId}] no request to be downloaded`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update representation\r\n     * @param {Object} mediaInfo - mediaInfo\r\n     * @memberof OfflineStreamProcessor#\r\n     */\r\n    function updateRepresentation(mediaInfo) {\r\n        updating = true;\r\n\r\n        let voRepresentations = adapter.getVoRepresentations(mediaInfo);\r\n\r\n        // get representation VO according to id.\r\n        let quality = voRepresentations.findIndex((representation) => {\r\n            return representation.id === bitrate.id;\r\n        });\r\n\r\n        if (type !== constants.VIDEO && type !== constants.AUDIO && type !== constants.TEXT) {\r\n            updating = false;\r\n            return;\r\n        }\r\n\r\n        representationController.updateData(null, voRepresentations, type, mediaInfo.isFragmented, quality);\r\n    }\r\n\r\n    function isUpdating() {\r\n        return updating;\r\n    }\r\n\r\n    function getType() {\r\n        return type;\r\n    }\r\n\r\n    function getMediaInfo() {\r\n        return mediaInfo;\r\n    }\r\n\r\n    function getAvailableSegmentsNumber() {\r\n        return representationController.getCurrentRepresentation().numberOfSegments + 1; // do not forget init segment\r\n    }\r\n\r\n    function updateProgression() {\r\n        if (progressCb) {\r\n            progressCb(instance, downloadedSegments, getAvailableSegmentsNumber());\r\n        }\r\n    }\r\n\r\n    function resetInitialSettings() {\r\n        isInitialized = false;\r\n        downloadedSegments = 0;\r\n        updating = false;\r\n    }\r\n\r\n    /**\r\n     * Reset\r\n     * @memberof OfflineStreamProcessor#\r\n     */\r\n    function reset() {\r\n        resetInitialSettings();\r\n        indexHandler.reset();\r\n\r\n        eventBus.off(events.STREAM_REQUESTING_COMPLETED, onStreamRequestingCompleted, instance);\r\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getMediaInfo: getMediaInfo,\r\n        getRepresentationController: getRepresentationController,\r\n        removeExecutedRequestsBeforeTime: removeExecutedRequestsBeforeTime,\r\n        getType: getType,\r\n        getRepresentationId: getRepresentationId,\r\n        isUpdating: isUpdating,\r\n        start: start,\r\n        stop: stop,\r\n        getAvailableSegmentsNumber: getAvailableSegmentsNumber,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nOfflineStreamProcessor.__dashjs_factory_name = 'OfflineStreamProcessor';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(OfflineStreamProcessor); /* jshint ignore:line */\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport OfflineStreamProcessor from './OfflineStreamProcessor';\r\n\r\n/**\r\n * Initialize and Manage Offline Stream for each type\r\n */\r\n/**\r\n * @class OfflineStream\r\n * @description Initialize and Manage Offline Stream for each type\r\n * @param {Object} config - dependences\r\n * @ignore\r\n */\r\nfunction OfflineStream(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const errors = config.errors;\r\n    const constants = config.constants;\r\n    const dashConstants = config.dashConstants;\r\n    const settings = config.settings;\r\n    const debug = config.debug;\r\n    const errHandler = config.errHandler;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const abrController = config.abrController;\r\n    const playbackController = config.playbackController;\r\n    const adapter = config.adapter;\r\n    const dashMetrics = config.dashMetrics;\r\n    const baseURLController = config.baseURLController;\r\n    const timelineConverter = config.timelineConverter;\r\n    const segmentBaseController = config.segmentBaseController;\r\n    const offlineStoreController = config.offlineStoreController;\r\n    const manifestId = config.id;\r\n    const startedCb = config.callbacks && config.callbacks.started;\r\n    const progressionCb = config.callbacks && config.callbacks.progression;\r\n    const finishedCb = config.callbacks && config.callbacks.finished;\r\n    const updateManifest = config.callbacks && config.callbacks.updateManifestNeeded;\r\n\r\n    let instance,\r\n        offlineStreamProcessors,\r\n        startedOfflineStreamProcessors,\r\n        finishedOfflineStreamProcessors,\r\n        streamInfo,\r\n        representationsToUpdate,\r\n        allMediasInfosList,\r\n        progressionById;\r\n\r\n    function setup() {\r\n        resetInitialSettings();\r\n    }\r\n\r\n    /**\r\n     * Reset\r\n     */\r\n    function resetInitialSettings() {\r\n        streamInfo = null;\r\n        offlineStreamProcessors = [];\r\n        startedOfflineStreamProcessors = 0;\r\n        finishedOfflineStreamProcessors = 0;\r\n        allMediasInfosList = [];\r\n        representationsToUpdate = [];\r\n        progressionById = {};\r\n    }\r\n\r\n    /**\r\n     * Initialize offlinestream\r\n     * @param {Object} initStreamInfo\r\n     */\r\n    function initialize(initStreamInfo) {\r\n        streamInfo = initStreamInfo;\r\n        eventBus.on(events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\r\n    }\r\n\r\n    function getStreamId() {\r\n        return streamInfo.id;\r\n    }\r\n\r\n    /**\r\n     * Creates media infos list, so that user will be able to choose the representation he wants to download\r\n     */\r\n    function getMediaInfos() {\r\n        let mediaInfos = adapter.getAllMediaInfoForType(streamInfo, constants.VIDEO);\r\n        mediaInfos = mediaInfos.concat(adapter.getAllMediaInfoForType(streamInfo, constants.AUDIO));\r\n        mediaInfos = mediaInfos.concat(adapter.getAllMediaInfoForType(streamInfo, constants.TEXT));\r\n\r\n        // mediaInfos = mediaInfos.concat(adapter.getAllMediaInfoForType(streamInfo, constants.MUXED));\r\n        // mediaInfos = mediaInfos.concat(adapter.getAllMediaInfoForType(streamInfo, constants.IMAGE));\r\n\r\n        eventBus.trigger(events.OFFLINE_RECORD_LOADEDMETADATA, {\r\n            id: manifestId,\r\n            mediaInfos: mediaInfos\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize with choosen representations by user\r\n     * @param {Object} mediasInfoList\r\n     */\r\n    function initializeAllMediasInfoList(mediasInfoList) {\r\n        allMediasInfosList = mediasInfoList;\r\n        initializeMedia(streamInfo);\r\n    }\r\n\r\n    /**\r\n     * Initialize media for each type\r\n     * @param {Object} streamInfo\r\n     */\r\n    function initializeMedia(streamInfo) {\r\n        createOfflineStreamProcessorFor(constants.VIDEO,streamInfo);\r\n        createOfflineStreamProcessorFor(constants.AUDIO,streamInfo);\r\n        createOfflineStreamProcessorFor(constants.TEXT,streamInfo);\r\n        createOfflineStreamProcessorFor(constants.MUXED,streamInfo);\r\n        createOfflineStreamProcessorFor(constants.IMAGE,streamInfo);\r\n    }\r\n\r\n    function createOfflineStreamProcessorFor(type, streamInfo) {\r\n        // filter mediaInfo according to choosen representation id\r\n        let allMediaInfoForType = adapter.getAllMediaInfoForType(streamInfo, type);\r\n        allMediaInfoForType.forEach((media) => {\r\n            media.bitrateList = media.bitrateList.filter((bitrate) => {\r\n                if (allMediasInfosList[type] && allMediasInfosList[type].indexOf(bitrate.id) !== -1) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        });\r\n\r\n        allMediaInfoForType = allMediaInfoForType.filter((media) => {\r\n            return (media.bitrateList && media.bitrateList.length > 0);\r\n        });\r\n\r\n        // cration of an offline stream processor for each choosen representation\r\n        allMediaInfoForType.forEach((mediaInfo) => {\r\n            if (mediaInfo.bitrateList) {\r\n                mediaInfo.bitrateList.forEach((bitrate) => {\r\n                    createStreamProcessor(mediaInfo, bitrate);\r\n                });\r\n            }\r\n        });\r\n        return allMediaInfoForType;\r\n    }\r\n\r\n    function createStreamProcessor (mediaInfo, bitrate) {\r\n\r\n        let streamProcessor = OfflineStreamProcessor(context).create({\r\n            id: manifestId,\r\n            streamInfo: streamInfo,\r\n            debug: debug,\r\n            events: events,\r\n            errors: errors,\r\n            eventBus: eventBus,\r\n            constants: constants,\r\n            dashConstants: dashConstants,\r\n            settings: settings,\r\n            type: mediaInfo.type,\r\n            mimeType: mediaInfo.mimeType,\r\n            bitrate: bitrate,\r\n            errHandler: errHandler,\r\n            mediaPlayerModel: mediaPlayerModel,\r\n            abrController: abrController,\r\n            playbackController: playbackController,\r\n            adapter: adapter,\r\n            dashMetrics: dashMetrics,\r\n            baseURLController: baseURLController,\r\n            timelineConverter: timelineConverter,\r\n            offlineStoreController: offlineStoreController,\r\n            segmentBaseController: segmentBaseController,\r\n            callbacks: {\r\n                completed: onStreamCompleted,\r\n                progression: onStreamProgression\r\n            }\r\n        });\r\n        offlineStreamProcessors.push(streamProcessor);\r\n        streamProcessor.initialize(mediaInfo);\r\n\r\n        progressionById[bitrate.id] = null;\r\n    }\r\n\r\n    function onStreamCompleted() {\r\n        finishedOfflineStreamProcessors++;\r\n        if (finishedOfflineStreamProcessors === offlineStreamProcessors.length) {\r\n            finishedCb({sender: this, id: manifestId, message: 'Downloading has been successfully completed for this stream !'});\r\n        }\r\n    }\r\n\r\n    function onStreamProgression(streamProcessor, downloadedSegments, availableSegments ) {\r\n        progressionById[streamProcessor.getRepresentationId()] = {\r\n            downloadedSegments,\r\n            availableSegments\r\n        };\r\n\r\n        let segments = 0;\r\n        let allSegments = 0;\r\n        let waitForAllProgress;\r\n        for (var property in progressionById) {\r\n            if (progressionById.hasOwnProperty(property)) {\r\n                if (progressionById[property] === null) {\r\n                    waitForAllProgress = true;\r\n                } else {\r\n                    segments += progressionById[property].downloadedSegments;\r\n                    allSegments += progressionById[property].availableSegments;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!waitForAllProgress && progressionCb) {\r\n            // all progression have been started, we can compute global progression\r\n            if (allSegments > 0) {\r\n                progressionCb(instance, segments, allSegments);\r\n            }\r\n        }\r\n    }\r\n\r\n    function onDataUpdateCompleted(e) {\r\n        if (e.currentRepresentation.segments && e.currentRepresentation.segments.length > 0) {\r\n            representationsToUpdate.push(e.currentRepresentation);\r\n        }\r\n\r\n        let sp;\r\n        // data are ready fr stream processor, let's start download\r\n        for (let i = 0; i < offlineStreamProcessors.length; i++ ) {\r\n            if (offlineStreamProcessors[i].getRepresentationController().getType() === e.mediaType) {\r\n                sp = offlineStreamProcessors[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (sp) {\r\n            checkIfAllOfflineStreamProcessorsStarted();\r\n        }\r\n    }\r\n\r\n    function checkIfAllOfflineStreamProcessorsStarted() {\r\n        startedOfflineStreamProcessors++;\r\n        if (startedOfflineStreamProcessors === offlineStreamProcessors.length) {\r\n            startedCb({sender: this, id: manifestId, message: 'Downloading started for this stream !'});\r\n\r\n            if (representationsToUpdate.length > 0) {\r\n                updateManifest({sender: this, id: manifestId, representations: representationsToUpdate });\r\n            } else {\r\n                startOfflineStreamProcessors();\r\n            }\r\n        }\r\n    }\r\n\r\n    function getStreamInfo() {\r\n        return streamInfo;\r\n    }\r\n\r\n    function getStartTime() {\r\n        return streamInfo ? streamInfo.start : NaN;\r\n    }\r\n\r\n    function getDuration() {\r\n        return streamInfo ? streamInfo.duration : NaN;\r\n    }\r\n\r\n    /**\r\n     * Stop offline stream processors\r\n     */\r\n    function stopOfflineStreamProcessors() {\r\n        for (let i = 0; i < offlineStreamProcessors.length; i++) {\r\n            offlineStreamProcessors[i].stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start offline stream processors\r\n     */\r\n    function startOfflineStreamProcessors() {\r\n        for (let i = 0; i < offlineStreamProcessors.length; i++) {\r\n            offlineStreamProcessors[i].start();\r\n        }\r\n    }\r\n\r\n    function deactivate() {\r\n        let ln = offlineStreamProcessors ? offlineStreamProcessors.length : 0;\r\n        for (let i = 0; i < ln; i++) {\r\n            offlineStreamProcessors[i].removeExecutedRequestsBeforeTime(getStartTime() + getDuration());\r\n            offlineStreamProcessors[i].reset();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset\r\n     */\r\n    function reset() {\r\n        stopOfflineStreamProcessors();\r\n        deactivate();\r\n        resetInitialSettings();\r\n\r\n        eventBus.off(events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        getStreamId: getStreamId,\r\n        getMediaInfos: getMediaInfos,\r\n        initializeAllMediasInfoList: initializeAllMediasInfoList,\r\n        getStreamInfo: getStreamInfo,\r\n        stopOfflineStreamProcessors: stopOfflineStreamProcessors,\r\n        startOfflineStreamProcessors: startOfflineStreamProcessors,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nOfflineStream.__dashjs_factory_name = 'OfflineStream';\r\nexport default dashjs.FactoryMaker.getClassFactory(OfflineStream); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nconst Entities = require('html-entities').XmlEntities;\r\nconst OFFLINE_BASE_URL = 'offline_indexeddb://';\r\n\r\nfunction OfflineIndexDBManifestParser(config) {\r\n\r\n    const manifestId = config.manifestId;\r\n    const allMediaInfos = config.allMediaInfos;\r\n    const urlUtils = config.urlUtils;\r\n    const debug = config.debug;\r\n    const dashConstants = config.dashConstants;\r\n    const constants = config.constants;\r\n\r\n    let instance,\r\n        DOM,\r\n        logger;\r\n\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n    }\r\n\r\n    /**\r\n     * Parse XML manifest\r\n     * @param {string} XMLDoc - xml manifest\r\n     * @param {object} representation\r\n     * @returns {Promise} a promise that will be resolved or rejected at the end of encoding process\r\n     * @instance\r\n    */\r\n    function parse(XMLDoc, representation) {\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            DOM = new DOMParser().parseFromString(XMLDoc, 'application/xml');\r\n            let mpd = DOM.getElementsByTagName(dashConstants.MPD) ? DOM.getElementsByTagName(dashConstants.MPD) : null;\r\n\r\n            for (let i = 0; i < mpd.length; i++) {\r\n                if (mpd[i] !== null) {\r\n                    editBaseURLAttribute(mpd[i]);\r\n                    browsePeriods(mpd[i], representation);\r\n                }\r\n            }\r\n\r\n            let manifestEncoded = encodeManifest(DOM);\r\n            if (manifestEncoded !== '') {\r\n                resolve(manifestEncoded);\r\n            } else {\r\n                reject('Encoded error');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * URL encode parsed manifest\r\n     * @param {string} DOM\r\n     * @returns {string} Url encoded XML\r\n     * @instance\r\n    */\r\n    function encodeManifest(DOM) {\r\n        logger.info('encodedManifest ' + new XMLSerializer().serializeToString(DOM));\r\n        return new Entities().encode(new XMLSerializer().serializeToString(DOM));\r\n    }\r\n\r\n    /**\r\n     * Update baseURL to point to local stored data P\r\n     * @param {XML} currentMPD\r\n     * @instance\r\n    */\r\n    function editBaseURLAttribute(currentMPD) {\r\n        let basesURL,\r\n            fragmentId,\r\n            representationId;\r\n\r\n        let url = `${OFFLINE_BASE_URL}${manifestId}/`;\r\n\r\n        basesURL = currentMPD.getElementsByTagName(dashConstants.BASE_URL);\r\n\r\n        if (basesURL.length === 0) {\r\n            // add baseURL\r\n            let element = DOM.createElement(dashConstants.BASE_URL);\r\n            element.innerHTML = url;\r\n            currentMPD.appendChild(element);\r\n        }\r\n        basesURL = currentMPD.getElementsByTagName(dashConstants.BASE_URL);\r\n        for (let i = 0; i < basesURL.length; i++) {\r\n            let parent = basesURL[i].parentNode;\r\n\r\n            if (parent.nodeName === dashConstants.MPD) {\r\n                basesURL[i].innerHTML = url;\r\n            } else if (parent.nodeName === dashConstants.REPRESENTATION) {\r\n                let adaptationsSet = parent.parentNode;\r\n                if (adaptationsSet.nodeName == dashConstants.ADAPTATION_SET) {\r\n\r\n                    if (urlUtils.isHTTPS(basesURL[i].innerHTML) || urlUtils.isHTTPURL(basesURL[i].innerHTML)) {\r\n                        fragmentId = getFragmentId(basesURL[i].innerHTML);\r\n                        representationId = getBestRepresentationId(adaptationsSet);\r\n                        basesURL[i].innerHTML = url + representationId + '_' + fragmentId;\r\n                    } else if (basesURL[i].innerHTML === './') {\r\n                        basesURL[i].innerHTML = url;\r\n                    } else {\r\n                        fragmentId = getFragmentId(basesURL[i].innerHTML);\r\n                        representationId = getBestRepresentationId(adaptationsSet);\r\n                        basesURL[i].innerHTML = representationId + '_' + fragmentId;\r\n                    }\r\n                }\r\n            } else {\r\n                basesURL[i].innerHTML = url;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Browse periods\r\n     * @param {XML} currentMPD\r\n     * @param {Object} representation\r\n     * @instance\r\n    */\r\n    function browsePeriods(currentMPD, representation) {\r\n        let periods = currentMPD.getElementsByTagName(dashConstants.PERIOD);\r\n        for (let j = 0; j < periods.length; j++) {\r\n            browseAdaptationsSet(periods[j], representation);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Browse adapatation set to update data (delete those taht are not choosen by user ...)\r\n     * @param {XML} currentPeriod\r\n     * @param {Array} representationsToUpdate\r\n     * @instance\r\n    */\r\n    function browseAdaptationsSet(currentPeriod, representationsToUpdate) {\r\n        let adaptationsSet,\r\n            currentAdaptationSet,\r\n            currentAdaptationType,\r\n            representations;\r\n\r\n        adaptationsSet = currentPeriod.getElementsByTagName(dashConstants.ADAPTATION_SET);\r\n\r\n        for (let i = adaptationsSet.length - 1; i >= 0; i--) {\r\n            currentAdaptationSet = adaptationsSet[i];\r\n            if (currentAdaptationSet) {\r\n                currentAdaptationType = findAdaptationType(currentAdaptationSet);\r\n                representations = findRepresentations(currentAdaptationSet);\r\n\r\n                findAndKeepOnlySelectedRepresentations(currentAdaptationSet, representations, currentAdaptationType);\r\n\r\n                representations = findRepresentations(currentAdaptationSet);\r\n\r\n                deleteSegmentBase(currentAdaptationSet);\r\n\r\n                if (representations.length === 0) {\r\n                    currentPeriod.removeChild(currentAdaptationSet);\r\n                } else {\r\n                    //detect Segment list use case\r\n                    for (let i = 0; i < representations.length; i++) {\r\n                        let rep = representations[i];\r\n                        let segmentList = getSegmentList(rep);\r\n                        if (segmentList.length >= 1) {\r\n                            editSegmentListAttributes(segmentList, rep);\r\n                        }\r\n                    }\r\n\r\n                    let segmentTemplate = getSegmentTemplate(currentAdaptationSet);\r\n                    // segmentTemplate is defined, update attributes in order to be correctly played offline\r\n                    if (segmentTemplate.length >= 1) {\r\n                        editSegmentTemplateAttributes(segmentTemplate);\r\n                    }\r\n\r\n                    // detect SegmentBase use case => transfrom manifest to SegmentList in SegmentTemplate\r\n                    if (representationsToUpdate && representationsToUpdate.length > 0 ) {\r\n                        let selectedRep;\r\n                        for (let i = 0; i < representations.length; i++) {\r\n                            let rep = representations[i];\r\n                            for (let j = 0; representationsToUpdate && j < representationsToUpdate.length; j++) {\r\n                                if (representationsToUpdate[j].id === rep.id) {\r\n                                    selectedRep = representationsToUpdate[j];\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        addSegmentTemplateAttributes(currentAdaptationSet, selectedRep);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns type of adapation set\r\n     * @param {XML} currentAdaptationSet\r\n     * @returns {string|null} type\r\n     * @instance\r\n    */\r\n    function findAdaptationType(currentAdaptationSet) {\r\n        if (getIsMuxed(currentAdaptationSet)) {\r\n            return constants.MUXED;\r\n        } else if (getIsAudio(currentAdaptationSet)) {\r\n            return constants.AUDIO;\r\n        } else if (getIsVideo(currentAdaptationSet)) {\r\n            return constants.VIDEO;\r\n        } else if (getIsText(currentAdaptationSet)) {\r\n            return constants.TEXT;\r\n        } else if (getIsImage(currentAdaptationSet)) {\r\n            return constants.IMAGE;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getIsAudio(adaptation) {\r\n        return getIsTypeOf(adaptation, constants.AUDIO);\r\n    }\r\n\r\n    function getIsVideo(adaptation) {\r\n        return getIsTypeOf(adaptation, constants.VIDEO);\r\n    }\r\n\r\n    function getIsText(adaptation) {\r\n        return getIsTypeOf(adaptation, constants.TEXT);\r\n    }\r\n\r\n    function getIsMuxed(adaptation) {\r\n        return getIsTypeOf(adaptation, constants.MUXED);\r\n    }\r\n\r\n    function getIsImage(adaptation) {\r\n        return getIsTypeOf(adaptation, constants.IMAGE);\r\n    }\r\n\r\n    // based upon DashManifestModel, but using DomParser\r\n    function getIsTypeOf(adaptation, type) {\r\n\r\n        if (!adaptation) {\r\n            throw new Error('adaptation is not defined');\r\n        }\r\n\r\n        if (!type) {\r\n            throw new Error('type is not defined');\r\n        }\r\n\r\n        return testMimeType(adaptation, type);\r\n    }\r\n\r\n    function testMimeType(adaptation, type) {\r\n        let mimeTypeRegEx = (type !== constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\r\n\r\n        let mimeType = findMimeType(adaptation);\r\n        if (mimeType) {\r\n            return mimeTypeRegEx.test(mimeType);\r\n        }\r\n\r\n        // no mime type in adaptation, search in representation\r\n        let representations = findRepresentations(adaptation);\r\n        if (representations) {\r\n            for (let i = 0; i < representations.length; i++) {\r\n                let representation = representations[i];\r\n                mimeType = findMimeType(representation);\r\n                if (mimeType) {\r\n                    return mimeTypeRegEx.test(mimeType);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns mime-type of xml tag\r\n     * @param {Object} tag\r\n     * @returns {string|null} mimeType\r\n     * @instance\r\n    */\r\n    function findMimeType(tag) {\r\n        return tag.getAttribute(dashConstants.MIME_TYPE);\r\n    }\r\n\r\n    /**\r\n     * Returns representations of adaptation set\r\n     * @param {XML} adaptation\r\n     * @returns {XML} representations\r\n     * @instance\r\n    */\r\n    function findRepresentations(adaptation) {\r\n        return adaptation.getElementsByTagName(dashConstants.REPRESENTATION);\r\n    }\r\n\r\n    /**\r\n     * Return segment template list of adaptations set\r\n     * @param {XML} currentAdaptationSet\r\n     * @returns {XML} representations\r\n     * @instance\r\n    */\r\n    function getSegmentTemplate(currentAdaptationSet) {\r\n        return currentAdaptationSet.getElementsByTagName(dashConstants.SEGMENT_TEMPLATE);\r\n    }\r\n\r\n    /**\r\n     * Return segment list tags of adaptations set\r\n     * @param {XML} tag\r\n     * @returns {XML} representations\r\n     * @instance\r\n    */\r\n    function getSegmentList(tag) {\r\n        return tag.getElementsByTagName(dashConstants.SEGMENT_LIST);\r\n    }\r\n\r\n    function deleteSegmentBase(tag) {\r\n        let elements = tag.getElementsByTagName(dashConstants.SEGMENT_BASE);\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let segmentBase = elements[i];\r\n            segmentBase.parentNode.removeChild(segmentBase);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {XML} segmentTemplate\r\n     * @param {object} rep\r\n     * @instance\r\n    */\r\n    function addSegmentTimelineElements(segmentTemplate, rep) {\r\n        let S = DOM.createElement('S');\r\n        if (rep && rep.segments) {\r\n            let segmentTimelineElement = DOM.createElement(dashConstants.SEGMENT_TIMELINE);\r\n            let changedDuration = getDurationChangeArray(rep);\r\n            for (let i = 0; i < changedDuration.length; i++) {\r\n                let repeatValue = i + 1 < changedDuration.length ? (changedDuration[i + 1] - changedDuration[i]) - 1 : 0;\r\n                if (repeatValue > 1) {\r\n                    S.setAttribute('r', repeatValue);\r\n                }\r\n                S.setAttribute('d', rep.segments[changedDuration[i]].duration);\r\n                segmentTimelineElement.appendChild(S);\r\n                S = DOM.createElement('S');\r\n            }\r\n            segmentTemplate.appendChild(segmentTimelineElement);\r\n        }\r\n    }\r\n\r\n    function getDurationChangeArray(rep) {\r\n        let array = [];\r\n        array.push(0);\r\n        for (let i = 1; i < rep.segments.length; i++) {\r\n            if (rep.segments[i - 1].duration !== rep.segments[i].duration) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Update attributes of segment templates to match offline urls\r\n     * @param {Array} segmentsTemplates\r\n     * @instance\r\n    */\r\n    function editSegmentTemplateAttributes(segmentsTemplates) {\r\n        for (let i = 0; i < segmentsTemplates.length; i++) {\r\n            let media = segmentsTemplates[i].getAttribute(dashConstants.MEDIA);\r\n            media = '$RepresentationID$_$Number$' + media.substring(media.indexOf('.'), media.length); //id + extension\r\n            segmentsTemplates[i].setAttribute(dashConstants.START_NUMBER, '0');\r\n            segmentsTemplates[i].setAttribute(dashConstants.MEDIA, media);\r\n            segmentsTemplates[i].setAttribute(dashConstants.INITIALIZATION_MINUS,'$RepresentationID$_init');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update attributes of segment list to match offline urls\r\n     * @param {Array} segmentLists\r\n     * @param {Object} representation\r\n     * @instance\r\n    */\r\n    function editSegmentListAttributes(segmentLists, representation) {\r\n        let repId = representation.getAttribute(dashConstants.ID);\r\n        for (let i = 0; i < segmentLists.length; i++) {\r\n\r\n            let segmentList = segmentLists[i];\r\n            let initialisation = segmentList.getElementsByTagName(dashConstants.INITIALIZATION);\r\n            if (initialisation) {\r\n                let sourceURL = initialisation[0].getAttribute(dashConstants.SOURCE_URL);\r\n                sourceURL = `${repId}_init`;\r\n                initialisation[0].setAttribute(dashConstants.SOURCE_URL, sourceURL);\r\n            }\r\n            let segmentURLs = segmentList.getElementsByTagName(dashConstants.SEGMENT_URL);\r\n\r\n            if (segmentURLs) {\r\n                for (let j = 0; j < segmentURLs.length; j++) {\r\n                    let segmentUrl = segmentURLs[j];\r\n                    let media = segmentUrl.getAttribute(dashConstants.MEDIA);\r\n                    media = `${repId}_${j}`;\r\n                    segmentUrl.setAttribute(dashConstants.MEDIA, media);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {XML} adaptationSet\r\n     * @param {object} rep\r\n     * @instance\r\n    */\r\n    function addSegmentTemplateAttributes(adaptationSet, rep) {\r\n        let segmentTemplateElement = DOM.createElement(dashConstants.SEGMENT_TEMPLATE);\r\n        segmentTemplateElement.setAttribute(dashConstants.START_NUMBER, '0');\r\n        segmentTemplateElement.setAttribute(dashConstants.MEDIA, '$RepresentationID$-$Time$');\r\n        segmentTemplateElement.setAttribute(dashConstants.INITIALIZATION_MINUS,'$RepresentationID$_init');\r\n        addSegmentTimelineElements(segmentTemplateElement, rep);\r\n        adaptationSet.appendChild(segmentTemplateElement);\r\n    }\r\n\r\n    /**\r\n     * Delete all representations except the one choosed by user\r\n     * @param {XML} currentAdaptationSet\r\n     * @param {XML} representations\r\n     * @param {string} adaptationType\r\n     * @instance\r\n    */\r\n    function findAndKeepOnlySelectedRepresentations(currentAdaptationSet, representations, adaptationType) {\r\n        for ( var i = representations.length - 1; i >= 0; i--) {\r\n            let representation = representations[i];\r\n            let repId = representation.getAttribute(dashConstants.ID);\r\n            if (allMediaInfos[adaptationType] && allMediaInfos[adaptationType].indexOf(repId) === -1) {\r\n                // representation is not selected, remove it\r\n                currentAdaptationSet.removeChild(representation);\r\n            }\r\n        }\r\n    }\r\n\r\n    //  UTILS\r\n    /**\r\n     * Get id of first representation of adaptation set\r\n     * @param {XMl} currentAdaptationSet\r\n     * @returns {string} id\r\n     * @instance\r\n    */\r\n    function getBestRepresentationId(currentAdaptationSet) {\r\n        let bestRepresentation = currentAdaptationSet.getElementsByTagName(dashConstants.REPRESENTATION)[0];\r\n        console.log(bestRepresentation.getAttribute(dashConstants.ID));\r\n        return bestRepresentation.getAttribute(dashConstants.ID);\r\n    }\r\n\r\n    /**\r\n     * Parse and returns fragments of offline url => xxxx://xxxx/fragmentId/\r\n     * @param {string} url\r\n     * @returns {string} fragmentId\r\n     * @instance\r\n    */\r\n    function getFragmentId(url) {\r\n        let idxFragId = url.lastIndexOf('/');\r\n        //logger.warn('fragId : ' + url.substring(idxFragId + 1, url.length));\r\n        return url.substring(idxFragId,url.length);\r\n    }\r\n\r\n    setup();\r\n\r\n    instance = {\r\n        parse: parse\r\n    };\r\n\r\n    return instance;\r\n}\r\nOfflineIndexDBManifestParser.__dashjs_factory_name = 'OfflineIndexDBManifestParser';\r\nexport default dashjs.FactoryMaker.getClassFactory(OfflineIndexDBManifestParser); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nfunction ObjectIron(mappers) {\r\n\r\n    function mergeValues(parentItem, childItem) {\r\n        for (let name in parentItem) {\r\n            if (!childItem.hasOwnProperty(name)) {\r\n                childItem[name] = parentItem[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    function mapProperties(properties, parent, child) {\r\n        for (let i = 0, len = properties.length; i < len; ++i) {\r\n            const property = properties[i];\r\n\r\n            if (parent[property.name]) {\r\n                if (child[property.name]) {\r\n                    // check to see if we should merge\r\n                    if (property.merge) {\r\n                        const parentValue = parent[property.name];\r\n                        const childValue = child[property.name];\r\n\r\n                        // complex objects; merge properties\r\n                        if (typeof parentValue === 'object' && typeof childValue === 'object') {\r\n                            mergeValues(parentValue, childValue);\r\n                        }\r\n                        // simple objects; merge them together\r\n                        else {\r\n                            child[property.name] = parentValue + childValue;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // just add the property\r\n                    child[property.name] = parent[property.name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function mapItem(item, node) {\r\n        for (let i = 0, len = item.children.length; i < len; ++i) {\r\n            const childItem = item.children[i];\r\n\r\n            const array = node[childItem.name + '_asArray'];\r\n            if (array) {\r\n                for (let v = 0, len2 = array.length; v < len2; ++v) {\r\n                    const childNode = array[v];\r\n                    mapProperties(item.properties, node, childNode);\r\n                    mapItem(childItem, childNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function run(source) {\r\n\r\n        if (source === null || typeof source !== 'object') {\r\n            return source;\r\n        }\r\n\r\n        if (source.Period_asArray && 'period' in mappers) {\r\n            const periodMapper = mappers.period;\r\n            const periods = source.Period_asArray;\r\n            for (let i = 0, len = periods.length; i < len; ++i) {\r\n                const period = periods[i];\r\n                mapItem(periodMapper, period);\r\n\r\n                if ('adaptationset' in mappers) {\r\n                    const adaptationSets = period.AdaptationSet_asArray;\r\n                    if (adaptationSets) {\r\n                        const adaptationSetMapper = mappers.adaptationset;\r\n                        for (let i = 0, len = adaptationSets.length; i < len; ++i) {\r\n                            mapItem(adaptationSetMapper, adaptationSets[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    return {\r\n        run: run\r\n    };\r\n}\r\n\r\n\r\nObjectIron.__dashjs_factory_name = 'ObjectIron';\r\nconst factory = FactoryMaker.getClassFactory(ObjectIron);\r\nexport default factory;\r\n","/*\r\n Copyright 2011-2013 Abdulla Abdurakhmanov\r\n Original sources are available at https://code.google.com/p/x2js/\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/*\r\n  Further modified for dashjs to:\r\n  - keep track of children nodes in order in attribute __children.\r\n  - add type conversion matchers\r\n  - re-add ignoreRoot\r\n  - allow zero-length attributePrefix\r\n  - don't add white-space text nodes\r\n  - remove explicit RequireJS support\r\n*/\r\n\r\nfunction X2JS(config) {\r\n    'use strict';\r\n\r\n    var VERSION = \"1.2.0\";\r\n\r\n    config = config || {};\r\n    initConfigDefaults();\r\n    initRequiredPolyfills();\r\n\r\n    function initConfigDefaults() {\r\n        if(config.escapeMode === undefined) {\r\n            config.escapeMode = true;\r\n        }\r\n\r\n        if (config.attributePrefix === undefined) {\r\n            config.attributePrefix = \"_\";\r\n        }\r\n\r\n        config.arrayAccessForm = config.arrayAccessForm || \"none\";\r\n        config.emptyNodeForm = config.emptyNodeForm || \"text\";\r\n\r\n        if(config.enableToStringFunc === undefined) {\r\n            config.enableToStringFunc = true;\r\n        }\r\n        config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\r\n        if(config.skipEmptyTextNodesForObj === undefined) {\r\n            config.skipEmptyTextNodesForObj = true;\r\n        }\r\n        if(config.stripWhitespaces === undefined) {\r\n            config.stripWhitespaces = true;\r\n        }\r\n        config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\r\n\r\n        if(config.useDoubleQuotes === undefined) {\r\n            config.useDoubleQuotes = false;\r\n        }\r\n\r\n        config.xmlElementsFilter = config.xmlElementsFilter || [];\r\n        config.jsonPropertiesFilter = config.jsonPropertiesFilter || [];\r\n\r\n        if(config.keepCData === undefined) {\r\n            config.keepCData = false;\r\n        }\r\n\r\n        if (config.ignoreRoot === undefined) {\r\n            config.ignoreRoot = false;\r\n        }\r\n    }\r\n\r\n    var DOMNodeTypes = {\r\n        ELEMENT_NODE \t   : 1,\r\n        TEXT_NODE    \t   : 3,\r\n        CDATA_SECTION_NODE : 4,\r\n        COMMENT_NODE\t   : 8,\r\n        DOCUMENT_NODE \t   : 9\r\n    };\r\n\r\n    function initRequiredPolyfills() {\r\n    }\r\n\r\n    function getNodeLocalName( node ) {\r\n        var nodeLocalName = node.localName;\r\n        if(nodeLocalName == null) // Yeah, this is IE!!\r\n            nodeLocalName = node.baseName;\r\n        if(nodeLocalName == null || nodeLocalName==\"\") // ==\"\" is IE too\r\n            nodeLocalName = node.nodeName;\r\n        return nodeLocalName;\r\n    }\r\n\r\n    function getNodePrefix(node) {\r\n        return node.prefix;\r\n    }\r\n\r\n    function escapeXmlChars(str) {\r\n        if(typeof(str) == \"string\")\r\n            return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\r\n        else\r\n            return str;\r\n    }\r\n\r\n    function unescapeXmlChars(str) {\r\n        return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, '&');\r\n    }\r\n\r\n    function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {\r\n        var idx = 0;\r\n        for(; idx < stdFiltersArrayForm.length; idx++) {\r\n            var filterPath = stdFiltersArrayForm[idx];\r\n            if( typeof filterPath === \"string\" ) {\r\n                if(filterPath == path)\r\n                    break;\r\n            }\r\n            else\r\n            if( filterPath instanceof RegExp) {\r\n                if(filterPath.test(path))\r\n                    break;\r\n            }\r\n            else\r\n            if( typeof filterPath === \"function\") {\r\n                if(filterPath(obj, name, path))\r\n                    break;\r\n            }\r\n        }\r\n        return idx!=stdFiltersArrayForm.length;\r\n    }\r\n\r\n    function toArrayAccessForm(obj, childName, path) {\r\n        switch(config.arrayAccessForm) {\r\n            case \"property\":\r\n                if(!(obj[childName] instanceof Array))\r\n                    obj[childName+\"_asArray\"] = [obj[childName]];\r\n                else\r\n                    obj[childName+\"_asArray\"] = obj[childName];\r\n                break;\r\n            /*case \"none\":\r\n                break;*/\r\n        }\r\n\r\n        if(!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\r\n            if(checkInStdFiltersArrayForm(config.arrayAccessFormPaths, obj, childName, path)) {\r\n                obj[childName] = [obj[childName]];\r\n            }\r\n        }\r\n    }\r\n\r\n    function fromXmlDateTime(prop) {\r\n        // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\r\n        // Improved to support full spec and optional parts\r\n        var bits = prop.split(/[-T:+Z]/g);\r\n\r\n        var d = new Date(bits[0], bits[1]-1, bits[2]);\r\n        var secondBits = bits[5].split(\"\\.\");\r\n        d.setHours(bits[3], bits[4], secondBits[0]);\r\n        if(secondBits.length>1)\r\n            d.setMilliseconds(secondBits[1]);\r\n\r\n        // Get supplied time zone offset in minutes\r\n        if(bits[6] && bits[7]) {\r\n            var offsetMinutes = bits[6] * 60 + Number(bits[7]);\r\n            var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop)? '-' : '+';\r\n\r\n            // Apply the sign\r\n            offsetMinutes = 0 + (sign == '-'? -1 * offsetMinutes : offsetMinutes);\r\n\r\n            // Apply offset and local timezone\r\n            d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset())\r\n        }\r\n        else\r\n            if(prop.indexOf(\"Z\", prop.length - 1) !== -1) {\r\n                d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\r\n            }\r\n\r\n        // d is now a local time equivalent to the supplied time\r\n        return d;\r\n    }\r\n\r\n    function checkFromXmlDateTimePaths(value, childName, fullPath) {\r\n        if(config.datetimeAccessFormPaths.length > 0) {\r\n            var path = fullPath.split(\"\\.#\")[0];\r\n            if(checkInStdFiltersArrayForm(config.datetimeAccessFormPaths, value, childName, path)) {\r\n                return fromXmlDateTime(value);\r\n            }\r\n            else\r\n                return value;\r\n        }\r\n        else\r\n            return value;\r\n    }\r\n\r\n    function checkXmlElementsFilter(obj, childType, childName, childPath) {\r\n        if( childType == DOMNodeTypes.ELEMENT_NODE && config.xmlElementsFilter.length > 0) {\r\n            return checkInStdFiltersArrayForm(config.xmlElementsFilter, obj, childName, childPath);\r\n        }\r\n        else\r\n            return true;\r\n    }\r\n\r\n    function parseDOMChildren( node, path ) {\r\n        if(node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\r\n            var result = new Object;\r\n            var nodeChildren = node.childNodes;\r\n            // Alternative for firstElementChild which is not supported in some environments\r\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\r\n                var child = nodeChildren[cidx];\r\n                if(child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\r\n                    if (config.ignoreRoot) {\r\n                        result = parseDOMChildren(child);\r\n                    } else {\r\n                        result = {};\r\n                        var childName = getNodeLocalName(child);\r\n                        result[childName] = parseDOMChildren(child);\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        else\r\n        if(node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\r\n            var result = new Object;\r\n            result.__cnt=0;\r\n\r\n            var children = [];\r\n            var nodeChildren = node.childNodes;\r\n\r\n            // Children nodes\r\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\r\n                var child = nodeChildren[cidx];\r\n                var childName = getNodeLocalName(child);\r\n\r\n                if(child.nodeType!= DOMNodeTypes.COMMENT_NODE) {\r\n                    var childPath = path+\".\"+childName;\r\n                    if (checkXmlElementsFilter(result,child.nodeType,childName,childPath)) {\r\n                        result.__cnt++;\r\n                        if(result[childName] == null) {\r\n                            var c = parseDOMChildren(child, childPath);\r\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) {\r\n                                var o = {};\r\n                                o[childName] = c;\r\n                                children.push(o);\r\n                            }\r\n                            result[childName] = c;\r\n                            toArrayAccessForm(result, childName, childPath);\r\n                        }\r\n                        else {\r\n                            if(result[childName] != null) {\r\n                                if( !(result[childName] instanceof Array)) {\r\n                                    result[childName] = [result[childName]];\r\n                                    toArrayAccessForm(result, childName, childPath);\r\n                                }\r\n                            }\r\n\r\n                            var c = parseDOMChildren(child, childPath);\r\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) { // Don't add white-space text nodes\r\n                                var o = {};\r\n                                o[childName] = c;\r\n                                children.push( o );\r\n                            }\r\n                            (result[childName])[result[childName].length] = c;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            result.__children = children;\r\n\r\n            // Attributes\r\n            var nodeLocalName = getNodeLocalName(node)\r\n            for(var aidx=0; aidx <node.attributes.length; aidx++) {\r\n                var attr = node.attributes[aidx];\r\n                result.__cnt++;\r\n\r\n                var value2 = attr.value;\r\n                for(var m=0, ml=config.matchers.length; m < ml; m++) {\r\n                    var matchobj = config.matchers[m];\r\n                    if (matchobj.test(attr, nodeLocalName))\r\n                        value2 = matchobj.converter(attr.value);\r\n                }\r\n\r\n                result[config.attributePrefix+attr.name]=value2;\r\n            }\r\n\r\n            // Node namespace prefix\r\n            var nodePrefix = getNodePrefix(node);\r\n            if(nodePrefix!=null && nodePrefix!=\"\") {\r\n                result.__cnt++;\r\n                result.__prefix=nodePrefix;\r\n            }\r\n\r\n            if(result[\"#text\"]!=null) {\r\n                result.__text = result[\"#text\"];\r\n                if(result.__text instanceof Array) {\r\n                    result.__text = result.__text.join(\"\\n\");\r\n                }\r\n                //if(config.escapeMode)\r\n                //\tresult.__text = unescapeXmlChars(result.__text);\r\n                if(config.stripWhitespaces)\r\n                    result.__text = result.__text.trim();\r\n                delete result[\"#text\"];\r\n                if(config.arrayAccessForm==\"property\")\r\n                    delete result[\"#text_asArray\"];\r\n                result.__text = checkFromXmlDateTimePaths(result.__text, childName, path+\".\"+childName);\r\n            }\r\n            if(result[\"#cdata-section\"]!=null) {\r\n                result.__cdata = result[\"#cdata-section\"];\r\n                delete result[\"#cdata-section\"];\r\n                if(config.arrayAccessForm==\"property\")\r\n                    delete result[\"#cdata-section_asArray\"];\r\n            }\r\n\r\n            if( result.__cnt == 0 && config.emptyNodeForm==\"text\" ) {\r\n                result = '';\r\n            }\r\n            else\r\n            if( result.__cnt == 1 && result.__text!=null  ) {\r\n                result = result.__text;\r\n            }\r\n            else\r\n            if( result.__cnt == 1 && result.__cdata!=null && !config.keepCData  ) {\r\n                result = result.__cdata;\r\n            }\r\n            else\r\n            if ( result.__cnt > 1 && result.__text!=null && config.skipEmptyTextNodesForObj) {\r\n                if( (config.stripWhitespaces && result.__text==\"\") || (result.__text.trim()==\"\")) {\r\n                    delete result.__text;\r\n                }\r\n            }\r\n            delete result.__cnt;\r\n\r\n            if( config.enableToStringFunc && (result.__text!=null || result.__cdata!=null )) {\r\n                result.toString = function() {\r\n                    return (this.__text!=null? this.__text:'')+( this.__cdata!=null ? this.__cdata:'');\r\n                };\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else\r\n        if(node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\r\n            return node.nodeValue;\r\n        }\r\n    }\r\n\r\n    function startTag(jsonObj, element, attrList, closed) {\r\n        var resultStr = \"<\"+ ( (jsonObj!=null && jsonObj.__prefix!=null)? (jsonObj.__prefix+\":\"):\"\") + element;\r\n        if(attrList!=null) {\r\n            for(var aidx = 0; aidx < attrList.length; aidx++) {\r\n                var attrName = attrList[aidx];\r\n                var attrVal = jsonObj[attrName];\r\n                if(config.escapeMode)\r\n                    attrVal=escapeXmlChars(attrVal);\r\n                resultStr+=\" \"+attrName.substr(config.attributePrefix.length)+\"=\";\r\n                if(config.useDoubleQuotes)\r\n                    resultStr+='\"'+attrVal+'\"';\r\n                else\r\n                    resultStr+=\"'\"+attrVal+\"'\";\r\n            }\r\n        }\r\n        if(!closed)\r\n            resultStr+=\">\";\r\n        else\r\n            resultStr+=\"/>\";\r\n        return resultStr;\r\n    }\r\n\r\n    function endTag(jsonObj,elementName) {\r\n        return \"</\"+ (jsonObj.__prefix!=null? (jsonObj.__prefix+\":\"):\"\")+elementName+\">\";\r\n    }\r\n\r\n    function endsWith(str, suffix) {\r\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n    }\r\n\r\n    function jsonXmlSpecialElem ( jsonObj, jsonObjField ) {\r\n        if((config.arrayAccessForm==\"property\" && endsWith(jsonObjField.toString(),(\"_asArray\")))\r\n                || jsonObjField.toString().indexOf(config.attributePrefix)==0\r\n                || jsonObjField.toString().indexOf(\"__\")==0\r\n                || (jsonObj[jsonObjField] instanceof Function) )\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    function jsonXmlElemCount ( jsonObj ) {\r\n        var elementsCnt = 0;\r\n        if(jsonObj instanceof Object ) {\r\n            for( var it in jsonObj  ) {\r\n                if(jsonXmlSpecialElem ( jsonObj, it) )\r\n                    continue;\r\n                elementsCnt++;\r\n            }\r\n        }\r\n        return elementsCnt;\r\n    }\r\n\r\n    function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {\r\n        return config.jsonPropertiesFilter.length == 0\r\n            || jsonObjPath==\"\"\r\n            || checkInStdFiltersArrayForm(config.jsonPropertiesFilter, jsonObj, propertyName, jsonObjPath);\r\n    }\r\n\r\n    function parseJSONAttributes ( jsonObj ) {\r\n        var attrList = [];\r\n        if(jsonObj instanceof Object ) {\r\n            for( var ait in jsonObj  ) {\r\n                if(ait.toString().indexOf(\"__\")== -1 && ait.toString().indexOf(config.attributePrefix)==0) {\r\n                    attrList.push(ait);\r\n                }\r\n            }\r\n        }\r\n        return attrList;\r\n    }\r\n\r\n    function parseJSONTextAttrs ( jsonTxtObj ) {\r\n        var result =\"\";\r\n\r\n        if(jsonTxtObj.__cdata!=null) {\r\n            result+=\"<![CDATA[\"+jsonTxtObj.__cdata+\"]]>\";\r\n        }\r\n\r\n        if(jsonTxtObj.__text!=null) {\r\n            if(config.escapeMode)\r\n                result+=escapeXmlChars(jsonTxtObj.__text);\r\n            else\r\n                result+=jsonTxtObj.__text;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function parseJSONTextObject ( jsonTxtObj ) {\r\n        var result =\"\";\r\n\r\n        if( jsonTxtObj instanceof Object ) {\r\n            result+=parseJSONTextAttrs ( jsonTxtObj );\r\n        }\r\n        else\r\n            if(jsonTxtObj!=null) {\r\n                if(config.escapeMode)\r\n                    result+=escapeXmlChars(jsonTxtObj);\r\n                else\r\n                    result+=jsonTxtObj;\r\n            }\r\n\r\n        return result;\r\n    }\r\n\r\n    function getJsonPropertyPath(jsonObjPath, jsonPropName) {\r\n        if (jsonObjPath===\"\") {\r\n            return jsonPropName;\r\n        }\r\n        else\r\n            return jsonObjPath+\".\"+jsonPropName;\r\n    }\r\n\r\n    function parseJSONArray ( jsonArrRoot, jsonArrObj, attrList, jsonObjPath ) {\r\n        var result = \"\";\r\n        if(jsonArrRoot.length == 0) {\r\n            result+=startTag(jsonArrRoot, jsonArrObj, attrList, true);\r\n        }\r\n        else {\r\n            for(var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\r\n                result+=startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\r\n                result+=parseJSONObject(jsonArrRoot[arIdx], getJsonPropertyPath(jsonObjPath,jsonArrObj));\r\n                result+=endTag(jsonArrRoot[arIdx],jsonArrObj);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function parseJSONObject ( jsonObj, jsonObjPath ) {\r\n        var result = \"\";\r\n\r\n        var elementsCnt = jsonXmlElemCount ( jsonObj );\r\n\r\n        if(elementsCnt > 0) {\r\n            for( var it in jsonObj ) {\r\n\r\n                if(jsonXmlSpecialElem ( jsonObj, it) || (jsonObjPath!=\"\" && !checkJsonObjPropertiesFilter(jsonObj, it, getJsonPropertyPath(jsonObjPath,it))) )\r\n                    continue;\r\n\r\n                var subObj = jsonObj[it];\r\n\r\n                var attrList = parseJSONAttributes( subObj )\r\n\r\n                if(subObj == null || subObj == undefined) {\r\n                    result+=startTag(subObj, it, attrList, true);\r\n                }\r\n                else\r\n                if(subObj instanceof Object) {\r\n\r\n                    if(subObj instanceof Array) {\r\n                        result+=parseJSONArray( subObj, it, attrList, jsonObjPath );\r\n                    }\r\n                    else if(subObj instanceof Date) {\r\n                        result+=startTag(subObj, it, attrList, false);\r\n                        result+=subObj.toISOString();\r\n                        result+=endTag(subObj,it);\r\n                    }\r\n                    else {\r\n                        var subObjElementsCnt = jsonXmlElemCount ( subObj );\r\n                        if(subObjElementsCnt > 0 || subObj.__text!=null || subObj.__cdata!=null) {\r\n                            result+=startTag(subObj, it, attrList, false);\r\n                            result+=parseJSONObject(subObj, getJsonPropertyPath(jsonObjPath,it));\r\n                            result+=endTag(subObj,it);\r\n                        }\r\n                        else {\r\n                            result+=startTag(subObj, it, attrList, true);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    result+=startTag(subObj, it, attrList, false);\r\n                    result+=parseJSONTextObject(subObj);\r\n                    result+=endTag(subObj,it);\r\n                }\r\n            }\r\n        }\r\n        result+=parseJSONTextObject(jsonObj);\r\n\r\n        return result;\r\n    }\r\n\r\n    this.parseXmlString = function(xmlDocStr) {\r\n        var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\r\n        if (xmlDocStr === undefined) {\r\n            return null;\r\n        }\r\n        var xmlDoc;\r\n        if (window.DOMParser) {\r\n            var parser=new window.DOMParser();\r\n            var parsererrorNS = null;\r\n            try {\r\n                xmlDoc = parser.parseFromString( xmlDocStr, \"text/xml\" );\r\n                if(xmlDoc.getElementsByTagNameNS(\"*\", \"parsererror\").length > 0) {\r\n                    xmlDoc = null;\r\n                }\r\n            }\r\n            catch(err) {\r\n                xmlDoc = null;\r\n            }\r\n        }\r\n        else {\r\n            // IE :(\r\n            if(xmlDocStr.indexOf(\"<?\")==0) {\r\n                xmlDocStr = xmlDocStr.substr( xmlDocStr.indexOf(\"?>\") + 2 );\r\n            }\r\n            xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\r\n            xmlDoc.async=\"false\";\r\n            xmlDoc.loadXML(xmlDocStr);\r\n        }\r\n        return xmlDoc;\r\n    };\r\n\r\n    this.asArray = function(prop) {\r\n        if (prop === undefined || prop == null)\r\n            return [];\r\n        else\r\n        if(prop instanceof Array)\r\n            return prop;\r\n        else\r\n            return [prop];\r\n    };\r\n\r\n    this.toXmlDateTime = function(dt) {\r\n        if(dt instanceof Date)\r\n            return dt.toISOString();\r\n        else\r\n        if(typeof(dt) === 'number' )\r\n            return new Date(dt).toISOString();\r\n        else\r\n            return null;\r\n    };\r\n\r\n    this.asDateTime = function(prop) {\r\n        if(typeof(prop) == \"string\") {\r\n            return fromXmlDateTime(prop);\r\n        }\r\n        else\r\n            return prop;\r\n    };\r\n\r\n    this.xml2json = function (xmlDoc) {\r\n        return parseDOMChildren ( xmlDoc );\r\n    };\r\n\r\n    this.xml_str2json = function (xmlDocStr) {\r\n        var xmlDoc = this.parseXmlString(xmlDocStr);\r\n        if(xmlDoc!=null)\r\n            return this.xml2json(xmlDoc);\r\n        else\r\n            return null;\r\n    };\r\n\r\n    this.json2xml_str = function (jsonObj) {\r\n        return parseJSONObject ( jsonObj, \"\" );\r\n    };\r\n\r\n    this.json2xml = function (jsonObj) {\r\n        var xmlDocStr = this.json2xml_str (jsonObj);\r\n        return this.parseXmlString(xmlDocStr);\r\n    };\r\n\r\n    this.getVersion = function () {\r\n        return VERSION;\r\n    };\r\n}\r\n\r\nexport default X2JS;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc a base type for matching and converting types in manifest to\r\n * something more useful\r\n * @ignore\r\n */\r\nclass BaseMatcher {\r\n    constructor(test, converter) {\r\n        this._test = test;\r\n        this._converter = converter;\r\n    }\r\n\r\n    get test() {\r\n        return this._test;\r\n    }\r\n\r\n    get converter() {\r\n        return this._converter;\r\n    }\r\n}\r\n\r\nexport default BaseMatcher;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\r\n */\r\nimport BaseMatcher from './BaseMatcher';\r\nimport DashConstants from '../../constants/DashConstants';\r\n\r\nclass StringMatcher extends BaseMatcher {\r\n    constructor() {\r\n        super(\r\n            (attr, nodeName) => {\r\n                const stringAttrsInElements = {\r\n                    [DashConstants.MPD]:                            [ DashConstants.ID, DashConstants.PROFILES ],\r\n                    [DashConstants.PERIOD]:                         [ DashConstants.ID ],\r\n                    [DashConstants.BASE_URL]:                       [ DashConstants.SERVICE_LOCATION, DashConstants.BYTE_RANGE ],\r\n                    [DashConstants.SEGMENT_BASE]:                   [ DashConstants.INDEX_RANGE ],\r\n                    [DashConstants.INITIALIZATION]:                 [ DashConstants.RANGE ],\r\n                    [DashConstants.REPRESENTATION_INDEX]:           [ DashConstants.RANGE ],\r\n                    [DashConstants.SEGMENT_LIST]:                   [ DashConstants.INDEX_RANGE ],\r\n                    [DashConstants.BITSTREAM_SWITCHING]:            [ DashConstants.RANGE ],\r\n                    [DashConstants.SEGMENT_URL]:                    [ DashConstants.MEDIA_RANGE, DashConstants.INDEX_RANGE ],\r\n                    [DashConstants.SEGMENT_TEMPLATE]:               [ DashConstants.INDEX_RANGE, DashConstants.MEDIA, DashConstants.INDEX, DashConstants.INITIALIZATION_MINUS, DashConstants.BITSTREAM_SWITCHING_MINUS ],\r\n                    [DashConstants.ASSET_IDENTIFIER]:               [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.EVENT_STREAM]:                   [ DashConstants.VALUE ],\r\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.PROFILES, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.CONTENT_TYPE ],\r\n                    [DashConstants.FRAME_PACKING]:                  [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.AUDIO_CHANNEL_CONFIGURATION]:    [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.CONTENT_PROTECTION]:             [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.ESSENTIAL_PROPERTY]:             [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.SUPPLEMENTAL_PROPERTY]:          [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.INBAND_EVENT_STREAM]:            [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.ACCESSIBILITY]:                  [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.ROLE]:                           [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.RATING]:                         [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.VIEWPOINT]:                      [ DashConstants.VALUE, DashConstants.ID ],\r\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.CONTENT_TYPE ],\r\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.ID, DashConstants.DEPENDENCY_ID, DashConstants.MEDIA_STREAM_STRUCTURE_ID ],\r\n                    [DashConstants.SUBSET]:                         [ DashConstants.ID ],\r\n                    [DashConstants.METRICS]:                        [ DashConstants.METRICS_MINUS ],\r\n                    [DashConstants.REPORTING]:                      [ DashConstants.VALUE, DashConstants.ID ]\r\n                };\r\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\r\n                    let attrNames = stringAttrsInElements[nodeName];\r\n                    if (attrNames !== undefined) {\r\n                        return attrNames.indexOf(attr.name) >= 0;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            str => String(str)\r\n        );\r\n    }\r\n}\r\n\r\nexport default StringMatcher;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc matches and converts xs:duration to seconds\r\n */\r\nimport BaseMatcher from './BaseMatcher';\r\nimport Constants from '../../../streaming/constants/Constants';\r\nimport DashConstants from '../../constants/DashConstants';\r\n\r\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\r\n\r\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\r\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\r\nconst SECONDS_IN_DAY = 24 * 60 * 60;\r\nconst SECONDS_IN_HOUR = 60 * 60;\r\nconst SECONDS_IN_MIN = 60;\r\n\r\nclass DurationMatcher extends BaseMatcher {\r\n    constructor() {\r\n        super(\r\n            attr => {\r\n                const attributeList = [\r\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\r\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\r\n                    DashConstants.MAX_SUBSEGMENT_DURATION, DashConstants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\r\n                    Constants.START_TIME, DashConstants.DURATION\r\n                ];\r\n                const len = attributeList.length;\r\n\r\n                for (let i = 0; i < len; i++) {\r\n                    if (attr.nodeName === attributeList[i]) {\r\n                        return durationRegex.test(attr.value);\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            },\r\n            str => {\r\n                //str = \"P10Y10M10DT10H10M10.1S\";\r\n                const match = durationRegex.exec(str);\r\n                let result = (parseFloat(match[3] || 0) * SECONDS_IN_YEAR +\r\n                    parseFloat(match[5] || 0) * SECONDS_IN_MONTH +\r\n                    parseFloat(match[7] || 0) * SECONDS_IN_DAY +\r\n                    parseFloat(match[9] || 0) * SECONDS_IN_HOUR +\r\n                    parseFloat(match[11] || 0) * SECONDS_IN_MIN +\r\n                    parseFloat(match[13] || 0));\r\n\r\n                if (match[1] !== undefined) {\r\n                    result = -result;\r\n                }\r\n\r\n                return result;\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default DurationMatcher;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc matches and converts xs:datetime to Date\r\n */\r\nimport BaseMatcher from './BaseMatcher';\r\n\r\nconst SECONDS_IN_MIN = 60;\r\nconst MINUTES_IN_HOUR = 60;\r\nconst MILLISECONDS_IN_SECONDS = 1000;\r\n\r\nconst datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/;\r\n\r\nclass DateTimeMatcher extends BaseMatcher {\r\n    constructor() {\r\n        super(\r\n            attr => datetimeRegex.test(attr.value),\r\n            str => {\r\n                const match = datetimeRegex.exec(str);\r\n                let utcDate;\r\n\r\n                // If the string does not contain a timezone offset different browsers can interpret it either\r\n                // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\r\n                // all browsers\r\n                utcDate = Date.UTC(\r\n                    parseInt(match[1], 10),\r\n                    parseInt(match[2], 10) - 1, // months start from zero\r\n                    parseInt(match[3], 10),\r\n                    parseInt(match[4], 10),\r\n                    parseInt(match[5], 10),\r\n                    (match[6] && parseInt(match[6], 10) || 0),\r\n                    (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0);\r\n\r\n                // If the date has timezone offset take it into account as well\r\n                if (match[9] && match[10]) {\r\n                    const timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\r\n                    utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\r\n                }\r\n\r\n                return new Date(utcDate);\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default DateTimeMatcher;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Matches and converts xs:numeric to float\r\n */\r\nimport BaseMatcher from './BaseMatcher';\r\n\r\nconst numericRegex = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/;\r\n\r\nclass NumericMatcher extends BaseMatcher {\r\n    constructor() {\r\n        super(\r\n            attr => numericRegex.test(attr.value),\r\n            str => parseFloat(str)\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumericMatcher;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Matches and converts any ISO 639 language tag to BCP-47 language tags\r\n */\r\nimport BaseMatcher from './BaseMatcher';\r\nimport DashConstants from '../../constants/DashConstants';\r\nimport bcp47Normalize from 'bcp-47-normalize';\r\n\r\nclass LangMatcher extends BaseMatcher {\r\n    constructor() {\r\n        super(\r\n            (attr, nodeName) => {\r\n                const stringAttrsInElements = {\r\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.LANG ],\r\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.LANG ],\r\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.LANG ],\r\n                    [DashConstants.LABEL]:                          [ DashConstants.LANG ],\r\n                    [DashConstants.GROUP_LABEL]:                    [ DashConstants.LANG ]\r\n                    // still missing from 23009-1: Preselection@lang, ProgramInformation@lang\r\n                };\r\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\r\n                    let attrNames = stringAttrsInElements[nodeName];\r\n                    if (attrNames !== undefined) {\r\n                        return attrNames.indexOf(attr.name) >= 0;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            str => {\r\n                let lang = bcp47Normalize(str);\r\n                if (lang) {\r\n                    return lang;\r\n                }\r\n                return String(str);\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport default LangMatcher;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc a property belonging to a MapNode\r\n * @ignore\r\n */\r\n\r\nclass CommonProperty {\r\n    constructor(name) {\r\n        const getDefaultMergeForName =\r\n              (n) => n && n.length && n.charAt(0) === n.charAt(0).toUpperCase();\r\n\r\n        this._name = name;\r\n        this._merge = getDefaultMergeForName(name);\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get merge() {\r\n        return this._merge;\r\n    }\r\n}\r\n\r\nexport default CommonProperty;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc a node at some level in a ValueMap\r\n */\r\nimport CommonProperty from './CommonProperty';\r\n\r\nclass MapNode {\r\n    constructor(name, properties, children) {\r\n        this._name = name || '';\r\n        this._properties = [];\r\n        this._children = children || [];\r\n\r\n        if (Array.isArray(properties)) {\r\n            properties.forEach(p => {\r\n                this._properties.push(new CommonProperty(p));\r\n            });\r\n        }\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get children() {\r\n        return this._children;\r\n    }\r\n\r\n    get properties() {\r\n        return this._properties;\r\n    }\r\n}\r\n\r\nexport default MapNode;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc a RepresentationBaseValuesMap type for input to objectiron\r\n */\r\nimport MapNode from './MapNode';\r\nimport DashConstants from '../../constants/DashConstants';\r\n\r\nclass RepresentationBaseValuesMap extends MapNode {\r\n    constructor() {\r\n        const commonProperties = [\r\n            DashConstants.PROFILES, DashConstants.WIDTH, DashConstants.HEIGHT, DashConstants.SAR, DashConstants.FRAMERATE, DashConstants.AUDIO_SAMPLING_RATE, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.MAXIMUM_SAP_PERIOD, DashConstants.START_WITH_SAP, DashConstants.MAX_PLAYOUT_RATE, DashConstants.CODING_DEPENDENCY, DashConstants.SCAN_TYPE, DashConstants.FRAME_PACKING, DashConstants.AUDIO_CHANNEL_CONFIGURATION, DashConstants.CONTENT_PROTECTION, DashConstants.ESSENTIAL_PROPERTY, DashConstants.ESSENTIAL_PROPERTY+'_asArray', DashConstants.SUPPLEMENTAL_PROPERTY, DashConstants.INBAND_EVENT_STREAM\r\n        ];\r\n\r\n        super(DashConstants.ADAPTATION_SET, commonProperties, [\r\n            new MapNode(DashConstants.REPRESENTATION, commonProperties, [\r\n                new MapNode(DashConstants.SUB_REPRESENTATION, commonProperties)\r\n            ])\r\n        ]);\r\n    }\r\n}\r\n\r\nexport default RepresentationBaseValuesMap;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc a SegmentValuesMap type for input to objectiron\r\n */\r\nimport MapNode from './MapNode';\r\nimport DashConstants from '../../constants/DashConstants';\r\n\r\nclass SegmentValuesMap extends MapNode {\r\n    constructor() {\r\n        const commonProperties = [\r\n            DashConstants.SEGMENT_BASE, DashConstants.SEGMENT_TEMPLATE, DashConstants.SEGMENT_LIST\r\n        ];\r\n\r\n        super(DashConstants.PERIOD, commonProperties, [\r\n            new MapNode(DashConstants.ADAPTATION_SET, commonProperties, [\r\n                new MapNode(DashConstants.REPRESENTATION, commonProperties)\r\n            ])\r\n        ]);\r\n    }\r\n}\r\n\r\nexport default SegmentValuesMap;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\nimport ObjectIron from './objectiron';\r\nimport X2JS from '../../../externals/xml2json';\r\nimport StringMatcher from './matchers/StringMatcher';\r\nimport DurationMatcher from './matchers/DurationMatcher';\r\nimport DateTimeMatcher from './matchers/DateTimeMatcher';\r\nimport NumericMatcher from './matchers/NumericMatcher';\r\nimport LangMatcher from './matchers/LangMatcher';\r\nimport RepresentationBaseValuesMap from './maps/RepresentationBaseValuesMap';\r\nimport SegmentValuesMap from './maps/SegmentValuesMap';\r\n\r\nfunction DashParser(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const debug = config.debug;\r\n\r\n    let instance,\r\n        logger,\r\n        matchers,\r\n        converter,\r\n        objectIron;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        matchers = [\r\n            new DurationMatcher(),\r\n            new DateTimeMatcher(),\r\n            new NumericMatcher(),\r\n            new LangMatcher(),\r\n            new StringMatcher()// last in list to take precedence over NumericMatcher\r\n        ];\r\n\r\n        converter = new X2JS({\r\n            escapeMode: false,\r\n            attributePrefix: '',\r\n            arrayAccessForm: 'property',\r\n            emptyNodeForm: 'object',\r\n            stripWhitespaces: false,\r\n            enableToStringFunc: true,\r\n            ignoreRoot: false,\r\n            matchers: matchers\r\n        });\r\n\r\n        objectIron = ObjectIron(context).create({\r\n            adaptationset: new RepresentationBaseValuesMap(),\r\n            period: new SegmentValuesMap()\r\n        });\r\n    }\r\n\r\n    function getMatchers() {\r\n        return matchers;\r\n    }\r\n\r\n    function getIron() {\r\n        return objectIron;\r\n    }\r\n\r\n    function parse(data) {\r\n        let manifest;\r\n        const startTime = window.performance.now();\r\n\r\n        manifest = converter.xml_str2json(data);\r\n\r\n        if (!manifest) {\r\n            throw new Error('parsing the manifest failed');\r\n        }\r\n\r\n        const jsonTime = window.performance.now();\r\n\r\n        // handle full MPD and Patch ironing separately\r\n        if (manifest.Patch) {\r\n            manifest = manifest.Patch; // drop root reference\r\n            // apply iron to patch operations individually\r\n            if (manifest.add_asArray) {\r\n                manifest.add_asArray.forEach((operand) => objectIron.run(operand));\r\n            }\r\n            if (manifest.replace_asArray) {\r\n                manifest.replace_asArray.forEach((operand) => objectIron.run(operand));\r\n            }\r\n            // note that we don't need to iron remove as they contain no children\r\n        } else {\r\n            manifest = manifest.MPD; // drop root reference\r\n            objectIron.run(manifest);\r\n        }\r\n\r\n        const ironedTime = window.performance.now();\r\n        logger.info('Parsing complete: ( xml2json: ' + (jsonTime - startTime).toPrecision(3) + 'ms, objectiron: ' + (ironedTime - jsonTime).toPrecision(3) + 'ms, total: ' + ((ironedTime - startTime) / 1000).toPrecision(3) + 's)');\r\n\r\n        manifest.protocol = 'DASH';\r\n\r\n        return manifest;\r\n    }\r\n\r\n    instance = {\r\n        parse: parse,\r\n        getMatchers: getMatchers,\r\n        getIron: getIron\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nDashParser.__dashjs_factory_name = 'DashParser';\r\nexport default FactoryMaker.getClassFactory(DashParser);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport OfflineConstants from './constants/OfflineConstants';\r\nimport OfflineStream from './OfflineStream';\r\nimport OfflineIndexDBManifestParser from './utils/OfflineIndexDBManifestParser';\r\nimport OfflineErrors from './errors/OfflineErrors';\r\nimport DashParser from '../dash/parser/DashParser';\r\n\r\nfunction OfflineDownload(config) {\r\n    config = config || {};\r\n\r\n    const context = this.context;\r\n    const manifestLoader = config.manifestLoader;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const abrController = config.abrController;\r\n    const playbackController = config.playbackController;\r\n    const adapter = config.adapter;\r\n    const dashMetrics = config.dashMetrics;\r\n    const timelineConverter = config.timelineConverter;\r\n    const offlineStoreController = config.offlineStoreController;\r\n    const manifestId = config.id;\r\n    const eventBus = config.eventBus;\r\n    const errHandler = config.errHandler;\r\n    const events = config.events;\r\n    const errors = config.errors;\r\n    const settings = config.settings;\r\n    const debug = config.debug;\r\n    const manifestUpdater = config.manifestUpdater;\r\n    const baseURLController = config.baseURLController;\r\n    const segmentBaseController = config.segmentBaseController;\r\n    const constants = config.constants;\r\n    const dashConstants = config.dashConstants;\r\n    const urlUtils = config.urlUtils;\r\n\r\n    let instance,\r\n        logger,\r\n        _manifestURL,\r\n        _offlineURL,\r\n        _xmlManifest,\r\n        _streams,\r\n        _manifest,\r\n        _isDownloadingStatus,\r\n        _isComposed,\r\n        _representationsToUpdate,\r\n        _indexDBManifestParser,\r\n        _progressionById,\r\n        _progression,\r\n        _status;\r\n\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        manifestUpdater.initialize();\r\n        _streams = [];\r\n        _isDownloadingStatus = false;\r\n        _isComposed = false;\r\n        _progressionById = {};\r\n        _progression = 0;\r\n        _status = undefined;\r\n    }\r\n\r\n    function getId() {\r\n        return manifestId;\r\n    }\r\n\r\n    function getOfflineUrl() {\r\n        return _offlineURL;\r\n    }\r\n\r\n    function getManifestUrl() {\r\n        return _manifestURL;\r\n    }\r\n\r\n    function getStatus() {\r\n        return _status;\r\n    }\r\n\r\n    function setInitialState(state) {\r\n        _offlineURL = state.url;\r\n        _progression = state.progress;\r\n        _manifestURL = state.originalUrl;\r\n        _status = state.status;\r\n    }\r\n\r\n    /**\r\n     * Download a stream, from url of manifest\r\n     * @param {string} url\r\n     * @instance\r\n     */\r\n    function downloadFromUrl(url) {\r\n        _manifestURL = url;\r\n        _offlineURL = `${OfflineConstants.OFFLINE_SCHEME}://${manifestId}`;\r\n        _status = OfflineConstants.OFFLINE_STATUS_CREATED;\r\n        setupOfflineEvents();\r\n        let offlineManifest = {\r\n            'fragmentStore': manifestId,\r\n            'status': _status,\r\n            'manifestId': manifestId,\r\n            'url': _offlineURL,\r\n            'originalURL': url\r\n        };\r\n        return createOfflineManifest(offlineManifest);\r\n    }\r\n\r\n    function initDownload() {\r\n        manifestLoader.load(_manifestURL);\r\n        _isDownloadingStatus = true;\r\n    }\r\n\r\n    function setupOfflineEvents() {\r\n        eventBus.on(events.MANIFEST_UPDATED, onManifestUpdated, instance);\r\n        eventBus.on(events.ORIGINAL_MANIFEST_LOADED, onOriginalManifestLoaded, instance);\r\n        setupIndexedDBEvents();\r\n    }\r\n\r\n    function setupIndexedDBEvents() {\r\n        eventBus.on(events.ERROR, onError, instance);\r\n    }\r\n\r\n    function isDownloading() {\r\n        return _isDownloadingStatus;\r\n    }\r\n\r\n    function onManifestUpdated(e) {\r\n        if (_isComposed) {\r\n            return;\r\n        }\r\n        if (!e.error) {\r\n            try {\r\n                _manifest = e.manifest;\r\n            } catch (err) {\r\n                _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n                errHandler.error({\r\n                    code: OfflineErrors.OFFLINE_ERROR,\r\n                    message: err.message,\r\n                    data: {\r\n                        id: manifestId,\r\n                        status: _status\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function onDownloadingStarted(e) {\r\n        if (e.id !== manifestId) {\r\n            return;\r\n        }\r\n        if (!e.error && manifestId !== null) {\r\n            _status = OfflineConstants.OFFLINE_STATUS_STARTED;\r\n            offlineStoreController.setDownloadingStatus(manifestId, _status).then(function () {\r\n                eventBus.trigger(events.OFFLINE_RECORD_STARTED, {\r\n                    id: manifestId,\r\n                    message: 'Downloading started for this stream !'\r\n                });\r\n            });\r\n        } else {\r\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n            errHandler.error({\r\n                code: OfflineErrors.OFFLINE_ERROR,\r\n                message: 'Cannot start download ',\r\n                data: {\r\n                    id: manifestId,\r\n                    status: _status,\r\n                    error: e.error\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function OnStreamProgression(stream, downloaded, available) {\r\n\r\n        _progressionById[stream.getStreamInfo().id] = {\r\n            downloaded,\r\n            available\r\n        };\r\n\r\n        let segments = 0;\r\n        let allSegments = 0;\r\n        let waitForAllProgress;\r\n        for (var property in _progressionById) {\r\n            if (_progressionById.hasOwnProperty(property)) {\r\n                if (_progressionById[property] === null) {\r\n                    waitForAllProgress = true;\r\n                } else {\r\n                    segments += _progressionById[property].downloaded;\r\n                    allSegments += _progressionById[property].available;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!waitForAllProgress) {\r\n            // all progression have been started, we can compute global progression\r\n            _progression = segments / allSegments;\r\n\r\n            // store progression\r\n            offlineStoreController.getManifestById(manifestId)\r\n                .then((item) => {\r\n                    item.progress = _progression;\r\n                    return updateOfflineManifest(item);\r\n                });\r\n        }\r\n    }\r\n\r\n    function onDownloadingFinished(e) {\r\n        if (e.id !== manifestId) {\r\n            return;\r\n        }\r\n        if (!e.error && manifestId !== null) {\r\n            _status = OfflineConstants.OFFLINE_STATUS_FINISHED;\r\n            offlineStoreController.setDownloadingStatus(manifestId, _status)\r\n                .then(function () {\r\n                    eventBus.trigger(events.OFFLINE_RECORD_FINISHED, {\r\n                        id: manifestId,\r\n                        message: 'Downloading has been successfully completed for this stream !'\r\n                    });\r\n                    resetDownload();\r\n                });\r\n        } else {\r\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n            errHandler.error({\r\n                code: OfflineErrors.OFFLINE_ERROR,\r\n                message: 'Error finishing download ',\r\n                data: {\r\n                    id: manifestId,\r\n                    status: _status,\r\n                    error: e.error\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function onManifestUpdateNeeded(e) {\r\n        if (e.id !== manifestId) {\r\n            return;\r\n        }\r\n\r\n        _representationsToUpdate = e.representations;\r\n\r\n        if (_representationsToUpdate.length > 0) {\r\n            _indexDBManifestParser.parse(_xmlManifest, _representationsToUpdate).then(function (parsedManifest) {\r\n                if (parsedManifest !== null && manifestId !== null) {\r\n                    offlineStoreController.getManifestById(manifestId)\r\n                        .then((item) => {\r\n                            item.manifest = parsedManifest;\r\n                            return updateOfflineManifest(item);\r\n                        })\r\n                        .then(function () {\r\n                            for (let i = 0, ln = _streams.length; i < ln; i++) {\r\n                                _streams[i].startOfflineStreamProcessors();\r\n                            }\r\n                        });\r\n                } else {\r\n                    throw 'falling parsing offline manifest';\r\n                }\r\n            }).catch(function (err) {\r\n                throw err;\r\n            });\r\n        }\r\n    }\r\n\r\n    function composeStreams() {\r\n        try {\r\n            adapter.updatePeriods(_manifest);\r\n            baseURLController.initialize(_manifest);\r\n            const streamsInfo = adapter.getStreamsInfo();\r\n            if (streamsInfo.length === 0) {\r\n                _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n                errHandler.error({\r\n                    code: OfflineErrors.OFFLINE_ERROR,\r\n                    message: 'Cannot download - no streams',\r\n                    data: {\r\n                        id: manifestId,\r\n                        status: _status\r\n                    }\r\n                });\r\n            }\r\n            for (let i = 0, ln = streamsInfo.length; i < ln; i++) {\r\n                const streamInfo = streamsInfo[i];\r\n                let stream = OfflineStream(context).create({\r\n                    id: manifestId,\r\n                    callbacks: {\r\n                        started: onDownloadingStarted,\r\n                        progression: OnStreamProgression,\r\n                        finished: onDownloadingFinished,\r\n                        updateManifestNeeded: onManifestUpdateNeeded\r\n                    },\r\n                    constants: constants,\r\n                    dashConstants: dashConstants,\r\n                    eventBus: eventBus,\r\n                    events: events,\r\n                    errors: errors,\r\n                    settings: settings,\r\n                    debug: debug,\r\n                    errHandler: errHandler,\r\n                    mediaPlayerModel: mediaPlayerModel,\r\n                    abrController: abrController,\r\n                    playbackController: playbackController,\r\n                    dashMetrics: dashMetrics,\r\n                    baseURLController: baseURLController,\r\n                    timelineConverter: timelineConverter,\r\n                    adapter: adapter,\r\n                    segmentBaseController: segmentBaseController,\r\n                    offlineStoreController: offlineStoreController\r\n                });\r\n                _streams.push(stream);\r\n\r\n                // initialize stream and get downloadable representations\r\n                stream.initialize(streamInfo);\r\n                _progressionById[streamInfo.id] = null;\r\n            }\r\n            _isComposed = true;\r\n        } catch (e) {\r\n            logger.info(e);\r\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n            errHandler.error({\r\n                code: OfflineErrors.OFFLINE_ERROR,\r\n                message: e.message,\r\n                data: {\r\n                    id: manifestId,\r\n                    status: _status,\r\n                    error: e.error\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function getMediaInfos() {\r\n        _streams.forEach(stream => {\r\n            stream.getMediaInfos();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Init databsse to store fragments\r\n     * @param {number} manifestId\r\n     * @instance\r\n     */\r\n    function createFragmentStore(manifestId) {\r\n        return offlineStoreController.createFragmentStore(manifestId);\r\n    }\r\n\r\n    /**\r\n     * Store in database the string representation of offline manifest (with only downloaded representations)\r\n     * @param {object} offlineManifest\r\n     * @instance\r\n     */\r\n    function createOfflineManifest(offlineManifest) {\r\n        return offlineStoreController.createOfflineManifest(offlineManifest);\r\n    }\r\n\r\n    /**\r\n     * Store in database the string representation of offline manifest (with only downloaded representations)\r\n     * @param {object} offlineManifest\r\n     * @instance\r\n     */\r\n    function updateOfflineManifest(offlineManifest) {\r\n        return offlineStoreController.updateOfflineManifest(offlineManifest);\r\n    }\r\n\r\n    /**\r\n     * Triggered when manifest is loaded from internet.\r\n     * @param {Object[]} e\r\n     */\r\n    function onOriginalManifestLoaded(e) {\r\n        // unregister form event\r\n        eventBus.off(events.ORIGINAL_MANIFEST_LOADED, onOriginalManifestLoaded, instance);\r\n\r\n        _xmlManifest = e.originalManifest;\r\n\r\n        if (_manifest.type === dashConstants.DYNAMIC) {\r\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n            errHandler.error({\r\n                code: OfflineErrors.OFFLINE_ERROR,\r\n                message: 'Cannot handle DYNAMIC manifest',\r\n                data: {\r\n                    id: manifestId,\r\n                    status: _status\r\n                }\r\n            });\r\n            logger.error('Cannot handle DYNAMIC manifest');\r\n\r\n            return;\r\n        }\r\n\r\n        if (_manifest.Period_asArray.length > 1) {\r\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n            errHandler.error({\r\n                code: OfflineErrors.OFFLINE_ERROR,\r\n                message: 'MultiPeriod manifest are not yet supported',\r\n                data: {\r\n                    id: manifestId,\r\n                    status: _status\r\n                }\r\n            });\r\n            logger.error('MultiPeriod manifest are not yet supported');\r\n\r\n            return;\r\n        }\r\n\r\n        // save original manifest (for resume)\r\n\r\n        // initialize offline streams\r\n        composeStreams(_manifest);\r\n\r\n        // get MediaInfos\r\n        getMediaInfos();\r\n\r\n        eventBus.trigger(events.STREAMS_COMPOSED);\r\n    }\r\n\r\n    function initializeAllMediasInfoList(selectedRepresentations) {\r\n        for (let i = 0; i < _streams.length; i++) {\r\n            _streams[i].initializeAllMediasInfoList(selectedRepresentations);\r\n        }\r\n    }\r\n\r\n    function getSelectedRepresentations(mediaInfos) {\r\n        let rep = {};\r\n        rep[constants.VIDEO] = [];\r\n        rep[constants.AUDIO] = [];\r\n        rep[constants.TEXT] = [];\r\n\r\n        // selectedRepresentations.video.forEach(item => {\r\n        //     ret[constants.VIDEO].push(item.id);\r\n        // });\r\n        // selectedRepresentations.audio.forEach(item => {\r\n        //     ret[constants.AUDIO].push(item.id);\r\n        // });\r\n        // selectedRepresentations.text.forEach(item => {\r\n        //     ret[item.type].push(item.id);\r\n        // });\r\n\r\n        mediaInfos.forEach(mediaInfo => {\r\n            mediaInfo.bitrateList.forEach(bitrate => {\r\n                rep[mediaInfo.type].push(bitrate.id);\r\n            });\r\n        });\r\n        return rep;\r\n    }\r\n\r\n    function startDownload(mediaInfos) {\r\n        try {\r\n            let rep = getSelectedRepresentations(mediaInfos);\r\n\r\n            offlineStoreController.saveSelectedRepresentations(manifestId, rep)\r\n                .then(() => {\r\n                    return createFragmentStore(manifestId);\r\n                })\r\n                .then(() => {\r\n                    return generateOfflineManifest(rep);\r\n                })\r\n                .then(function () {\r\n                    initializeAllMediasInfoList(rep);\r\n                });\r\n        } catch (err) {\r\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\r\n            errHandler.error({\r\n                code: OfflineErrors.OFFLINE_ERROR,\r\n                message: err.message,\r\n                data: {\r\n                    id: manifestId,\r\n                    status: _status\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the parser used to convert original manifest in offline manifest\r\n     * Creates a JSON object that will be stored in database\r\n     * @param {Object[]} selectedRepresentations\r\n     * @instance\r\n     */\r\n    function generateOfflineManifest(selectedRepresentations) {\r\n        _indexDBManifestParser = OfflineIndexDBManifestParser(context).create({\r\n            manifestId: manifestId,\r\n            allMediaInfos: selectedRepresentations,\r\n            debug: debug,\r\n            dashConstants: dashConstants,\r\n            constants: constants,\r\n            urlUtils: urlUtils\r\n        });\r\n\r\n        return _indexDBManifestParser.parse(_xmlManifest).then(function (parsedManifest) {\r\n            if (parsedManifest !== null) {\r\n                return offlineStoreController.getManifestById(manifestId)\r\n                    .then((item) => {\r\n                        item.originalURL = _manifest.url;\r\n                        item.originalManifest = _xmlManifest;\r\n                        item.manifest = parsedManifest;\r\n                        return updateOfflineManifest(item);\r\n                    });\r\n            } else {\r\n                return Promise.reject('falling parsing offline manifest');\r\n            }\r\n        }).catch(function (err) {\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Stops downloading of fragments\r\n     * @instance\r\n     */\r\n    function stopDownload() {\r\n        if (manifestId !== null && isDownloading()) {\r\n            for (let i = 0, ln = _streams.length; i < ln; i++) {\r\n                _streams[i].stopOfflineStreamProcessors();\r\n            }\r\n\r\n            // remove streams\r\n            _streams = [];\r\n\r\n            _isComposed = false;\r\n\r\n            _status = OfflineConstants.OFFLINE_STATUS_STOPPED;\r\n            // update status\r\n            offlineStoreController.setDownloadingStatus(manifestId, _status).then(function () {\r\n                eventBus.trigger(events.OFFLINE_RECORD_STOPPED, {\r\n                    sender: this,\r\n                    id: manifestId,\r\n                    status: _status,\r\n                    message: 'Downloading has been stopped for this stream !'\r\n                });\r\n                _isDownloadingStatus = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete an offline manifest (and all of its data)\r\n     * @instance\r\n     */\r\n    function deleteDownload() {\r\n        stopDownload();\r\n    }\r\n\r\n    /**\r\n     * Resume download of a stream\r\n     * @instance\r\n     */\r\n    function resumeDownload() {\r\n        if (isDownloading()) {\r\n            return;\r\n        }\r\n\r\n        _isDownloadingStatus = true;\r\n\r\n        let selectedRepresentations;\r\n\r\n        offlineStoreController.getManifestById(manifestId)\r\n            .then((item) => {\r\n                let parser = DashParser(context).create({ debug: debug });\r\n                _manifest = parser.parse(item.originalManifest);\r\n\r\n                composeStreams(_manifest);\r\n\r\n                selectedRepresentations = item.selected;\r\n\r\n                eventBus.trigger(events.STREAMS_COMPOSED);\r\n\r\n                return createFragmentStore(manifestId);\r\n            })\r\n            .then(() => {\r\n                initializeAllMediasInfoList(selectedRepresentations);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Compute the progression of download\r\n     * @instance\r\n     */\r\n    function getDownloadProgression() {\r\n        return Math.round(_progression * 100);\r\n    }\r\n\r\n    /**\r\n     * Reset events listeners\r\n     * @instance\r\n     */\r\n    function resetDownload() {\r\n        for (let i = 0, ln = _streams.length; i < ln; i++) {\r\n            _streams[i].reset();\r\n        }\r\n        _indexDBManifestParser = null;\r\n        _isDownloadingStatus = false;\r\n        _streams = [];\r\n        eventBus.off(events.MANIFEST_UPDATED, onManifestUpdated, instance);\r\n        eventBus.off(events.ORIGINAL_MANIFEST_LOADED, onOriginalManifestLoaded, instance);\r\n        resetIndexedDBEvents();\r\n    }\r\n\r\n    function onError(e) {\r\n        if (e.error.code === OfflineErrors.INDEXEDDB_QUOTA_EXCEED_ERROR ||\r\n            e.error.code === OfflineErrors.INDEXEDDB_INVALID_STATE_ERROR) {\r\n            stopDownload();\r\n        }\r\n    }\r\n\r\n    function resetIndexedDBEvents() {\r\n        eventBus.on(events.ERROR, onError, instance);\r\n    }\r\n\r\n    /**\r\n     * Reset\r\n     * @instance\r\n     */\r\n    function reset() {\r\n        if (isDownloading()) {\r\n            resetDownload();\r\n        }\r\n        baseURLController.reset();\r\n        manifestUpdater.reset();\r\n    }\r\n\r\n    instance = {\r\n        reset: reset,\r\n        getId: getId,\r\n        getOfflineUrl: getOfflineUrl,\r\n        getManifestUrl: getManifestUrl,\r\n        getStatus: getStatus,\r\n        setInitialState: setInitialState,\r\n        initDownload: initDownload,\r\n        downloadFromUrl: downloadFromUrl,\r\n        startDownload: startDownload,\r\n        stopDownload: stopDownload,\r\n        resumeDownload: resumeDownload,\r\n        deleteDownload: deleteDownload,\r\n        getDownloadProgression: getDownloadProgression,\r\n        isDownloading: isDownloading,\r\n        resetDownload: resetDownload\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nOfflineDownload.__dashjs_factory_name = 'OfflineDownload';\r\nexport default dashjs.FactoryMaker.getClassFactory(OfflineDownload); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport IndexDBStore from '../storage/IndexDBStore';\r\n\r\nfunction IndexDBOfflineLoader(config) {\r\n    config = config || {};\r\n    const context = this.context;\r\n    const urlUtils = config.urlUtils;\r\n    const constants = config.constants;\r\n    const dashConstants = config.dashConstants;\r\n\r\n    let instance,\r\n        indexDBStore;\r\n\r\n    function setup() {\r\n        indexDBStore = IndexDBStore(context).getInstance();\r\n    }\r\n\r\n    function getManifestId (url) {\r\n        let myURL = urlUtils.removeHostname(url);\r\n        var parts = myURL.split('/');\r\n        return parts[0];\r\n    }\r\n    /**\r\n     * Load manifest or fragment from indexeddb database\r\n     * @param {object} config configuration of request\r\n     */\r\n    function load(config) {\r\n        if (config.request) {\r\n            let manifestId = getManifestId(config.request.url);\r\n            if (manifestId % 1 === 0) {\r\n                if (\r\n                    config.request.mediaType === constants.AUDIO ||\r\n                    config.request.mediaType === constants.VIDEO ||\r\n                    config.request.mediaType === constants.TEXT ||\r\n                    config.request.mediaType === constants.MUXED ||\r\n                    config.request.mediaType === constants.IMAGE\r\n                ) {\r\n                    let suffix = config.request.type === 'InitializationSegment' ? 'init' : config.request.index;\r\n                    let key = config.request.representationId + '_' + suffix;\r\n                    indexDBStore.getFragmentByKey(manifestId, key).then(function (fragment) {\r\n                        config.success(fragment, null, config.request.url, constants.ARRAY_BUFFER);\r\n                    }).catch(function (err) {\r\n                        config.error(err);\r\n                    });\r\n                } else if (config.request.type === dashConstants.MPD) {\r\n                    indexDBStore.getManifestById(manifestId).then(function (item) {\r\n                        indexDBStore.createFragmentStore(item.fragmentStore);\r\n                        config.success(item.manifest, null, config.request.url, constants.XML);\r\n                    }).catch(function (err) {\r\n                        config.error(config.request, 404, err);\r\n                    });\r\n                }\r\n            } else {\r\n                config.error(config.request, null, 'MediaType can not be found');\r\n            }\r\n        }\r\n    }\r\n\r\n    function abort() {\r\n        // nothing to do\r\n    }\r\n\r\n    setup();\r\n\r\n    instance = {\r\n        load: load,\r\n        abort: abort\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nIndexDBOfflineLoader.__dashjs_factory_name = 'IndexDBOfflineLoader';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(IndexDBOfflineLoader); /* jshint ignore:line */\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport OfflineConstants from '../constants/OfflineConstants';\r\n\r\nfunction OfflineUrlUtils() {\r\n\r\n    function setup() {\r\n    }\r\n\r\n    function getRegex() {\r\n        return OfflineConstants.OFFLINE_URL_REGEX;\r\n    }\r\n\r\n    /*\r\n     * -------------------\r\n     * SPECIFIC BEHAVIOUR\r\n     * -------------------\r\n     */\r\n    function removeHostname(url) {\r\n        return url.replace(/(^\\w+:|^)\\/\\//, '');\r\n    }\r\n\r\n    function isRelative() {\r\n        return false;\r\n    }\r\n\r\n    function resolve(url, baseUrl) {\r\n        if (baseUrl.charAt(baseUrl.length - 1 ) !== '/') {\r\n            baseUrl = baseUrl.concat('/');\r\n        }\r\n        return baseUrl + url;\r\n    }\r\n\r\n    setup();\r\n    const instance = {\r\n        getRegex:           getRegex,\r\n        isRelative:         isRelative,\r\n        removeHostname:     removeHostname,\r\n        resolve:            resolve\r\n    };\r\n    return instance;\r\n}\r\n\r\nOfflineUrlUtils.__dashjs_factory_name = 'OfflineUrlUtils';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(OfflineUrlUtils); /* jshint ignore:line */\r\n","import EventsBase from './../../core/events/EventsBase';\r\n/**\r\n * These are offline events that should be sent to the player level.\r\n * @class\r\n */\r\nclass OfflineEvents extends EventsBase {\r\n    constructor () {\r\n        super();\r\n\r\n        /**\r\n        * Triggered when all mediaInfo has been loaded\r\n        * @event OfflineEvents#OFFLINE_RECORD_LOADEDMETADATA\r\n        */\r\n        this.OFFLINE_RECORD_LOADEDMETADATA = 'public_offlineRecordLoadedmetadata';\r\n\r\n        /**\r\n        * Triggered when a record is initialized and download is started\r\n        * @event OfflineEvents#OFFLINE_RECORD_STARTED\r\n        */\r\n        this.OFFLINE_RECORD_STARTED = 'public_offlineRecordStarted';\r\n\r\n        /**\r\n        * Triggered when the user stop downloading a record\r\n        * @event OfflineEvents#OFFLINE_RECORD_STOPPED\r\n        */\r\n        this.OFFLINE_RECORD_STOPPED = 'public_offlineRecordStopped';\r\n\r\n        /**\r\n        * Triggered when all record has been downloaded\r\n        * @event OfflineEvents#OFFLINE_RECORD_FINISHED\r\n        */\r\n        this.OFFLINE_RECORD_FINISHED = 'public_offlineRecordFinished';\r\n    }\r\n}\r\n\r\nlet offlineEvents = new OfflineEvents();\r\nexport default offlineEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass OfflineDownload {\r\n    constructor() {\r\n        this.id = null;\r\n        this.url = null;\r\n        this.originalUrl = null;\r\n        this.status = null;\r\n        this.progress = null;\r\n    }\r\n}\r\n\r\nexport default OfflineDownload;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport OfflineConstants from '../constants/OfflineConstants';\r\nimport OfflineStoreController from './OfflineStoreController';\r\nimport OfflineDownload from '../OfflineDownload';\r\nimport IndexDBOfflineLoader from '../net/IndexDBOfflineLoader';\r\nimport OfflineUrlUtils from '../utils/OfflineUrlUtils';\r\nimport OfflineEvents from '../events/OfflineEvents';\r\nimport OfflineErrors from '../errors/OfflineErrors';\r\nimport OfflineRecord from '../vo/OfflineDownloadVo';\r\n\r\n/**\r\n * @module OfflineController\r\n * @param {Object} config - dependencies\r\n * @description Provides access to offline stream recording and playback functionality. This module can be accessed using the MediaPlayer API getOfflineController()\r\n */\r\nfunction OfflineController(config) {\r\n\r\n    const context = this.context;\r\n    const errHandler = config.errHandler;\r\n    const events = config.events;\r\n    const errors = config.errors;\r\n    const settings = config.settings;\r\n    const eventBus = config.eventBus;\r\n    const debug = config.debug;\r\n    const manifestLoader = config.manifestLoader;\r\n    const manifestModel = config.manifestModel;\r\n    const mediaPlayerModel = config.mediaPlayerModel;\r\n    const abrController = config.abrController;\r\n    const playbackController = config.playbackController;\r\n    const dashMetrics = config.dashMetrics;\r\n    const timelineConverter = config.timelineConverter;\r\n    const segmentBaseController = config.segmentBaseController;\r\n    const adapter = config.adapter;\r\n    const manifestUpdater = config.manifestUpdater;\r\n    const baseURLController = config.baseURLController;\r\n    const schemeLoaderFactory = config.schemeLoaderFactory;\r\n    const constants = config.constants;\r\n    const dashConstants = config.dashConstants;\r\n    const urlUtils = config.urlUtils;\r\n\r\n    let instance,\r\n        downloads,\r\n        logger,\r\n        offlineStoreController,\r\n        offlineUrlUtils;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        offlineStoreController = OfflineStoreController(context).create({\r\n            eventBus: config.eventBus,\r\n            errHandler: errHandler\r\n        });\r\n        offlineUrlUtils = OfflineUrlUtils(context).getInstance();\r\n        urlUtils.registerUrlRegex(offlineUrlUtils.getRegex(), offlineUrlUtils);\r\n        schemeLoaderFactory.registerLoader(OfflineConstants.OFFLINE_SCHEME, IndexDBOfflineLoader);\r\n\r\n        downloads = [];\r\n    }\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n        DOWNLOAD LIST FUNCTIONS\r\n    ---------------------------------------------------------------------------\r\n    */\r\n    function getDownloadFromId(id) {\r\n        let download = downloads.find((item) => {\r\n            return item.getId() === id;\r\n        });\r\n        return download;\r\n    }\r\n\r\n    function createDownloadFromId(id) {\r\n        let download;\r\n        download = getDownloadFromId(id);\r\n\r\n        if (!download) {\r\n            // create download controller\r\n            download = OfflineDownload(context).create({\r\n                id: id,\r\n                eventBus: eventBus,\r\n                events: events,\r\n                errors: errors,\r\n                settings: settings,\r\n                manifestLoader: manifestLoader,\r\n                manifestModel: manifestModel,\r\n                mediaPlayerModel: mediaPlayerModel,\r\n                manifestUpdater: manifestUpdater,\r\n                baseURLController: baseURLController,\r\n                abrController: abrController,\r\n                playbackController: playbackController,\r\n                adapter: adapter,\r\n                dashMetrics: dashMetrics,\r\n                timelineConverter: timelineConverter,\r\n                errHandler: errHandler,\r\n                segmentBaseController: segmentBaseController,\r\n                offlineStoreController: offlineStoreController,\r\n                debug: debug,\r\n                constants: constants,\r\n                dashConstants: dashConstants,\r\n                urlUtils: urlUtils\r\n            });\r\n\r\n            downloads.push(download);\r\n        }\r\n\r\n        return download;\r\n    }\r\n\r\n    function createDownloadFromStorage(offline) {\r\n        let download = getDownloadFromId(offline.manifestId);\r\n\r\n        if (!download) {\r\n            download = createDownloadFromId(offline.manifestId);\r\n            let status = offline.status;\r\n            if (status === OfflineConstants.OFFLINE_STATUS_STARTED) {\r\n                status = OfflineConstants.OFFLINE_STATUS_STOPPED;\r\n            }\r\n\r\n            download.setInitialState({\r\n                url: offline.url,\r\n                progress: offline.progress,\r\n                originalUrl: offline.originalURL,\r\n                status: status\r\n            });\r\n        }\r\n\r\n        return download;\r\n    }\r\n\r\n    function removeDownloadFromId(id) {\r\n        return new Promise(function (resolve, reject) {\r\n            let download = getDownloadFromId(id);\r\n            let waitForStatusChanged = false;\r\n            if (download) {\r\n                //is download running?\r\n                if (download.isDownloading()) {\r\n                    //register status changed event\r\n                    waitForStatusChanged = true;\r\n                    const downloadStopped = function () {\r\n                        eventBus.off(events.OFFLINE_RECORD_STOPPED, downloadStopped, instance);\r\n                        return offlineStoreController.deleteDownloadById(id).then(function () {\r\n                            resolve();\r\n                        }).catch(function (err) {\r\n                            reject(err);\r\n                        });\r\n                    };\r\n                    eventBus.on(events.OFFLINE_RECORD_STOPPED, downloadStopped, instance);\r\n                }\r\n                download.deleteDownload();\r\n                let index = downloads.indexOf(download);\r\n                downloads.splice(index, 1);\r\n            }\r\n\r\n            if (!waitForStatusChanged) {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    function generateManifestId() {\r\n        let timestamp = new Date().getTime();\r\n        return timestamp;\r\n    }\r\n\r\n    /*\r\n    ---------------------------------------------------------------------------\r\n\r\n        OFFLINE CONTROLLER API\r\n\r\n    ---------------------------------------------------------------------------\r\n    */\r\n\r\n    /**\r\n     * Loads records from storage\r\n     * This methods has to be called first, to be sure that all downloads have been loaded\r\n     *\r\n     * @return {Promise} asynchronously resolved\r\n     * @memberof module:OfflineController\r\n     */\r\n    function loadRecordsFromStorage() {\r\n        return new Promise(function (resolve, reject) {\r\n            offlineStoreController.getAllManifests().then((items) => {\r\n                items.manifests.forEach((offline) => {\r\n                    createDownloadFromStorage(offline);\r\n                });\r\n\r\n                resolve();\r\n            }).catch((e) => {\r\n                logger.error('Failed to load downloads ' + e);\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all records from storage\r\n     *\r\n     * @return {Promise} asynchronously resolved with records\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function getAllRecords() {\r\n        let records = [];\r\n        downloads.forEach((download) => {\r\n            const record = new OfflineRecord();\r\n            record.id = download.getId();\r\n            record.progress = download.getDownloadProgression();\r\n            record.url = download.getOfflineUrl();\r\n            record.originalUrl = download.getManifestUrl();\r\n            record.status = download.getStatus();\r\n            records.push(record);\r\n        });\r\n        return records;\r\n    }\r\n\r\n    /**\r\n     * Create a new content record in storage and download manifest from url\r\n     *\r\n     * @param {string} manifestURL - the content manifest url\r\n     * @return {Promise} asynchronously resolved with record identifier\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function createRecord(manifestURL) {\r\n        return new Promise(function (resolve, reject) {\r\n            let id = generateManifestId();\r\n\r\n            // create download controller\r\n            let download = createDownloadFromId(id);\r\n\r\n            download.downloadFromUrl(manifestURL).then(() => {\r\n                download.initDownload();\r\n                resolve(id);\r\n            })\r\n                .catch((e) => {\r\n                    logger.error('Failed to download ' + e);\r\n                    removeDownloadFromId(id).then(function () {\r\n                        reject(e);\r\n                    });\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Start downloading the record with selected tracks representations\r\n     *\r\n     * @param {string} id - record identifier\r\n     * @param {MediaInfo[]} mediaInfos - the selected tracks representations\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function startRecord(id, mediaInfos) {\r\n        let download = getDownloadFromId(id);\r\n        if (download) {\r\n            download.startDownload(mediaInfos);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stop downloading of the record\r\n     *\r\n     * @param {string} id - record identifier\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function stopRecord(id) {\r\n        let download = getDownloadFromId(id);\r\n        if (download) {\r\n            download.stopDownload();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resume downloading of the record\r\n     *\r\n     * @param {string} id - record identifier\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function resumeRecord(id) {\r\n        let download = getDownloadFromId(id);\r\n        if (download) {\r\n            download.resumeDownload();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes a record from storage\r\n     *\r\n     * @param {string} id - record identifier\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function deleteRecord(id) {\r\n        return removeDownloadFromId(id).then(function () {\r\n            return offlineStoreController.deleteDownloadById(id);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Get download progression of a record\r\n     *\r\n     * @param {string} id - record identifier\r\n     * @return {number} percentage progression\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function getRecordProgression(id) {\r\n        let download = getDownloadFromId(id);\r\n        if (download) {\r\n            return download.getDownloadProgression();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Reset all records\r\n     * @memberof module:OfflineController\r\n     * @instance\r\n     */\r\n    function resetRecords() {\r\n        downloads.forEach((download) => {\r\n            download.resetDownload();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset\r\n     * @instance\r\n     */\r\n    function reset() {\r\n        resetRecords();\r\n        schemeLoaderFactory.unregisterLoader(OfflineConstants.OFFLINE_SCHEME);\r\n    }\r\n\r\n    instance = {\r\n        loadRecordsFromStorage: loadRecordsFromStorage,\r\n        createRecord: createRecord,\r\n        startRecord: startRecord,\r\n        stopRecord: stopRecord,\r\n        resumeRecord: resumeRecord,\r\n        deleteRecord: deleteRecord,\r\n        getRecordProgression: getRecordProgression,\r\n        getAllRecords: getAllRecords,\r\n        resetRecords: resetRecords,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nOfflineController.__dashjs_factory_name = 'OfflineController';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(OfflineController); /* jshint ignore:line */\r\nfactory.events = OfflineEvents;\r\nfactory.errors = OfflineErrors;\r\ndashjs.FactoryMaker.updateClassFactory(OfflineController.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport OfflineController from './controllers/OfflineController';\r\n\r\n// Shove both of these into the global scope\r\nvar context = (typeof window !== 'undefined' && window) || global;\r\n\r\nvar dashjs = context.dashjs;\r\nif (!dashjs) {\r\n    dashjs = context.dashjs = {};\r\n}\r\n\r\ndashjs.OfflineController = OfflineController;\r\n\r\nexport default dashjs;\r\nexport { OfflineController };\r\n"],"names":["root","factory","exports","module","define","amd","self","check","filter","tags","ranges","range","leftIndex","next","left","cast","right","matches","rightIndex","length","toLowerCase","push","undefined","values","name","value","Error","basicFilter","tag","indexOf","extendedFilter","split","lookup","index","lastIndexOf","charAt","slice","bcp47","match","fields","defaults","many","options","key","settings","schema","parse","String","stringify","from","replace","to","remove","field","add","Object","assign","emptyExtraFields","join","extensions","sort","compareSingleton","warning","own","call","script","toUpperCase","region","hasOwnProperty","collator","Intl","Collator","variants","privateuse","irregular","regular","removed","object","current","result","item","list","concat","compare","singleton","alphanumeric","alphabetical","decimal","normal","start","groups","offset","language","extendedLanguageSubtags","source","normalize","charCodeAt","fail","code","reason","forgiving","ISOBoxer","arrayBuffer","ISOFile","type","parser","ISOBox","prototype","_boxProcessors","parent","pos","newBox","create","append","createBox","version","flags","Utils","dataViewToString","dataView","encoding","impliedEncoding","TextDecoder","decode","a","i","byteLength","c","getUint8","fromCharCode","utf8ToByteArray","string","u","TextEncoder","encode","appendBox","box","_offset","_cursor","_root","_raw","_parent","boxes","splice","parseBuffer","addBoxProcessor","createFile","createFullBox","Cursor","initialOffset","this","DataView","fetch","fetchAll","returnEarly","_sweep","write","getLength","bytes","Uint8Array","_rawo","buffer","_parseBox","byteOffset","_boxContainers","_procField","size","_parsing","_readField","_writeField","_procFieldArray","_procFullBox","_procEntries","fn","_procSubEntries","entry","_procEntryField","_procSubBoxes","_readUint","_readInt","_readTemplate","_readTerminatedString","_readString","_readData","_readUTF8String","getInt8","getInt16","getInt32","s1","s2","Math","pow","getUint16","getUint32","str","char","data","_incomplete","largesize","_parseContainerBox","_data","_parseFullBox","_writeData","_writeInt","setInt8","setInt16","setInt32","floor","setUint32","_writeUint","setUint8","setUint16","_writeString","_writeTerminatedString","_writeTemplate","pre","post","Array","set","_writeUTF8String","entry_count","nbCompatibleBrands","DataSize","sample_count","reference_count","reference","reference_type","referenced_size","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegment","ranges_count","subsample_count","subsample","reserved","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entry","sample","isArray","keyList","keys","hasProp","equal","b","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","XmlEntities","Html4Entities","Html5Entities","AllHtmlEntities","HTML_ALPHA","HTML_CODES","alphaIndex","numIndex","s","entity","chr","parseInt","substr","isNaN","strLength","alpha","encodeNonUTF","cc","encodeNonASCII","ENTITIES","charIndex","_results","charInfo","e","chars","addChar","chr2","createIndexes","ALPHA_INDEX","CHAR_INDEX","CHAR_S_INDEX","strLenght","character","t","n","r","o","f","l","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","g","window","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryCatch","status","out","constructor","error","all","iterable","resolved","allResolver","outValue","race","response","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","matchedEdge","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","ready","initPromises","ignoreErrors","j","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","advance","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","readAsArrayBuffer","JSON","deserialize","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","webSQLStorage","dbInfoPromise","description","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","assertPath","path","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","process","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","base","_format","ret","delimiter","win32","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MAJOR","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","CHROMIUM_OS","MAC_OS","enumerize","enums","has","str1","str2","lowerize","trim","rgxMapper","ua","arrays","q","regex","props","exec","strMapper","map","windowsVersionMap","regexes","browser","cpu","device","engine","EDGE","os","UAParser","getResult","_navigator","_ua","_uach","userAgentData","_rgxmap","mergedRegexes","_isSelfNav","getBrowser","_browser","brave","isBrave","getCPU","_cpu","getDevice","_device","mobile","standalone","maxTouchPoints","getEngine","_engine","getOS","_os","getUA","setUA","CPU","DEVICE","ENGINE","OS","$","jQuery","Zepto","prop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","getter","__esModule","d","definition","defineProperty","enumerable","globalThis","Function","OfflineConstants","init","OFFLINE_SCHEME","OFFLINE_URL_REGEX","OFFLINE_STATUS_CREATED","OFFLINE_STATUS_STARTED","OFFLINE_STATUS_STOPPED","OFFLINE_STATUS_FINISHED","OFFLINE_STATUS_ERROR","localforage","require","entities","IndexDBStore","manifestStore","fragmentStores","getManifestById","id","getAllManifests","manifests","manifestId","manifest","updateManifest","dropAll","getFragmentByKey","fragmentStore","storeFragment","fragmentId","fragmentData","storeManifest","saveSelectedRepresentations","selected","createFragmentStore","log","setDownloadingStatus","newStatus","setRepresentationCurrentState","representationId","downloaded","getRepresentationCurrentState","getCurrentHigherManifestId","higherManifestId","dropFragmentStore","deleteDownloadById","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory","ErrorsBase","errors","override","publicOnly","OfflineErrors","OFFLINE_ERROR","INDEXEDDB_QUOTA_EXCEED_ERROR","INDEXEDDB_INVALID_STATE_ERROR","INDEXEDDB_NOT_READABLE_ERROR","INDEXEDDB_NOT_FOUND_ERROR","INDEXEDDB_NETWORK_ERROR","INDEXEDDB_DATA_ERROR","INDEXEDDB_TRANSACTION_INACTIVE_ERROR","INDEXEDDB_NOT_ALLOWED_ERROR","INDEXEDDB_NOT_SUPPORTED_ERROR","INDEXEDDB_VERSION_ERROR","INDEXEDDB_TIMEOUT_ERROR","INDEXEDDB_ABORT_ERROR","INDEXEDDB_UNKNOWN_ERROR","OfflineStoreController","indexDBStore","context","errHandler","manageDOMError","message","createOfflineManifest","updateOfflineManifest","getInstance","getClassFactory","HTTPRequest","tcpid","url","actualurl","trequest","tresponse","responsecode","interval","trace","cmsd","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","CONTENT_STEERING_TYPE","OTHER_TYPE","FragmentRequest","action","ACTION_DOWNLOAD","startTime","NaN","mediaStartTime","mediaType","mediaInfo","duration","timescale","serviceLocation","requestStartDate","firstByteDate","requestEndDate","quality","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","ACTION_COMPLETE","singletonContexts","singletonFactories","classFactories","getSingletonInstance","className","getFactoryByName","factoriesArray","updateFactory","merge","classConstructor","classInstance","extensionObject","extension","getClassName","childInstance","setSingletonInstance","deleteSingletonInstances","getSingletonFactoryByName","updateSingletonFactory","getClassFactoryByName","updateClassFactory","EventsBase","events","evt","MediaPlayerEvents","AST_IN_FUTURE","BASE_URLS_UPDATED","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","ERROR","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADING_STARTED","MANIFEST_LOADING_FINISHED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","THROUGHPUT_MEASUREMENT_STORED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_VOLUME_CHANGED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","ADAPTATION_SET_REMOVED_NO_CAPABILITIES","CONTENT_STEERING_REQUEST_COMPLETED","INBAND_PRFT","MANAGED_MEDIA_SOURCE_START_STREAMING","MANAGED_MEDIA_SOURCE_END_STREAMING","indexRange","mediaRange","media","replacementTime","replacementNumber","presentationStartTime","representation","zeroPadToLength","numStr","minStrLength","replaceIDForTemplate","v","replaceTokenForTemplate","token","startPos","endPos","formatTagPos","specifier","width","paddedValue","tokenLen","formatTagLen","getSegment","timelineConverter","presentationEndTime","isDynamic","segmentIndex","seg","Segment","calcAvailabilityStartTimeFromPresentationTime","calcAvailabilityEndTimeFromPresentationTime","calcWallTimeForSegment","startNumber","isSegmentAvailable","segment","voPeriod","adaptation","period","isFinite","availabilityTimeOffset","refTime","getClientReferenceTime","getIndexBasedSegment","segmentDuration","parseFloat","toFixed","calcMediaTimeFromPresentationTime","getTimeBasedSegment","time","fTimescale","tManifest","scaledTime","scaledDuration","calcPresentationTimeFromMediaTime","DashConstants","BASE_URL","SEGMENT_BASE","SEGMENT_TEMPLATE","SEGMENT_LIST","SEGMENT_URL","SEGMENT_TIMELINE","SEGMENT_PROFILES","ADAPTATION_SET","REPRESENTATION","REPRESENTATION_INDEX","SUB_REPRESENTATION","INITIALIZATION","INITIALIZATION_MINUS","MPD","PERIOD","ASSET_IDENTIFIER","EVENT_STREAM","ID","PROFILES","SERVICE_LOCATION","RANGE","INDEX","MEDIA","BYTE_RANGE","INDEX_RANGE","MEDIA_RANGE","VALUE","CONTENT_TYPE","MIME_TYPE","BITSTREAM_SWITCHING","BITSTREAM_SWITCHING_MINUS","CODECS","DEPENDENCY_ID","MEDIA_STREAM_STRUCTURE_ID","METRICS","METRICS_MINUS","REPORTING","WIDTH","HEIGHT","SAR","FRAMERATE","AUDIO_SAMPLING_RATE","MAXIMUM_SAP_PERIOD","START_WITH_SAP","MAX_PLAYOUT_RATE","CODING_DEPENDENCY","SCAN_TYPE","FRAME_PACKING","AUDIO_CHANNEL_CONFIGURATION","CONTENT_PROTECTION","ESSENTIAL_PROPERTY","SUPPLEMENTAL_PROPERTY","SUPPLEMENTAL_PROPERTY_ASARRAY","INBAND_EVENT_STREAM","PRODUCER_REFERENCE_TIME","INBAND","ACCESSIBILITY","ROLE","RATING","CONTENT_COMPONENT","SUBSET","LANG","VIEWPOINT","VIEWPOINT_ASARRAY","ROLE_ASARRAY","REPRESENTATION_ASARRAY","PRODUCERREFERENCETIME_ASARRAY","ACCESSIBILITY_ASARRAY","AUDIOCHANNELCONFIGURATION_ASARRAY","CONTENTPROTECTION_ASARRAY","MAIN","DYNAMIC","STATIC","MEDIA_PRESENTATION_DURATION","MINIMUM_UPDATE_PERIOD","CODEC_PRIVATE_DATA","BANDWITH","SOURCE_URL","TIMESCALE","DURATION","START_NUMBER","PRESENTATION_TIME_OFFSET","AVAILABILITY_START_TIME","AVAILABILITY_END_TIME","TIMESHIFT_BUFFER_DEPTH","MAX_SEGMENT_DURATION","PRESENTATION_TIME","MIN_BUFFER_TIME","MAX_SUBSEGMENT_DURATION","START","AVAILABILITY_TIME_OFFSET","AVAILABILITY_TIME_COMPLETE","CENC_DEFAULT_KID","DVB_PRIORITY","DVB_WEIGHT","SUGGESTED_PRESENTATION_DELAY","SERVICE_DESCRIPTION","SERVICE_DESCRIPTION_SCOPE","SERVICE_DESCRIPTION_LATENCY","SERVICE_DESCRIPTION_PLAYBACK_RATE","SERVICE_DESCRIPTION_OPERATING_QUALITY","SERVICE_DESCRIPTION_OPERATING_BANDWIDTH","PATCH_LOCATION","PATCH_LOCATION_AS_ARRAY","LOCATION","LOCATION_AS_ARRAY","PUBLISH_TIME","ORIGINAL_PUBLISH_TIME","ORIGINAL_MPD_ID","WALL_CLOCK_TIME","LABEL","GROUP_LABEL","CONTENT_STEERING","CONTENT_STEERING_AS_ARRAY","DEFAULT_SERVICE_LOCATION","QUERY_BEFORE_START","CLIENT_REQUIREMENT","TTL","CONTENT_STEERING_RESPONSE","RELOAD_URI","PATHWAY_PRIORITY","PATHWAY_CLONES","BASE_ID","URI_REPLACEMENT","HOST","PARAMS","PRODUCER_REFERENCE_TIME_TYPE","ENCODER","CAPTURED","APPLICATION","SEGMENT_ALIGNMENT","SUB_SEGMENT_ALIGNMENT","CLIENT_DATA_REPORTING","CLIENT_DATA_REPORTING_AS_ARRAY","CMCD_PARAMETERS","CMCD_PARAMETERS_AS_ARRAY","SERVICE_LOCATIONS","ADAPTATION_SETS","DashHandler","logger","lastSegment","isDynamicManifest","mediaHasFinished","eventBus","debug","urlUtils","streamInfo","segmentsController","baseURLController","getType","resetInitialSettings","_setRequestUrl","request","destination","baseURL","queryParams","isRelative","_getRequestForSegment","bandwidth","mpd","Period_asArray","AdaptationSet_asArray","Representation_asArray","unescapeDollarsInTemplate","availabilityTimeComplete","adaptationIndex","getSegmentRequestForTime","segmentInfoType","getSegmentByTime","_getRequest","indexToRequest","getSegmentByIndex","_onDynamicToStatic","getCurrentIndex","getInitRequest","initialization","_generateInitRequest","getNextSegmentRequest","getNextSegmentRequestIdempotent","getStreamId","getStreamInfo","getValidTimeAheadOfTargetTime","targetThreshold","currentUpperTime","min","adjustedTime","targetRequest","upperRequest","requestEndTime","initialize","isLastSegmentRequested","bufferingTime","mediaFinishedInformation","numberOfSegments","nextPeriodId","mediaTimeOfLastSignaledSegment","repeatSegmentRequest","reset","off","getLogger","on","Constants","STREAM","VIDEO","AUDIO","TEXT","MUXED","IMAGE","STPP","TTML","VTT","WVTT","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_L2A","ABR_STRATEGY_LoLP","ABR_STRATEGY_THROUGHPUT","ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA","ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING","ABR_FETCH_THROUGHPUT_CALCULATION_AAST","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","CMCD_MODE_QUERY","CMCD_MODE_HEADER","CMCD_AVAILABLE_KEYS","CMCD_AVAILABLE_REQUESTS","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","CC1","CC3","UTF8","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_DVB_LL_SCHEME","SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","FILE_LOADER_TYPES","FETCH","XHR","RepresentationController","realAdaptation","updating","voAvailableRepresentations","currentRepresentationInfo","currentVoRepresentation","abrController","dashMetrics","playbackController","dashConstants","adapter","isUpdating","getCurrentRepresentation","_updateRepresentation","currentRep","hasInitialization","hasSegments","promises","updateInitData","updateSegmentData","_onInitLoaded","fragments","segments","_onSegmentsLoaded","getMediaFinishedInformation","repInfo","voRepresentation","manifestUpdateInfo","getCurrentManifestUpdate","alreadyAdded","representationInfo","addManifestUpdateRepresentationInfo","ln","isAllRepresentationsUpdated","setPlaybackQuality","dvrInfo","getCurrentDVRInfo","updateManifestUpdateInfo","latency","getCurrentRepresentationSwitch","_addRepresentationSwitch","endDataUpdate","_onRepresentationUpdated","checkConfig","now","currentRepresentation","currentVideoTimeMs","addRepresentationSwitch","trigger","streamId","numberOfRepresentations","getRepresentationForQuality","DATA_UPDATE_COMPLETED","_setCurrentVoRepresentation","convertRepresentationToRepresentationInfo","onManifestValidityChanged","newDuration","getData","updateData","newRealAdaptation","availableRepresentations","isFragmented","getCurrentRepresentationInfo","prepareQualityChange","newQuality","FRAGMENT_MODEL_LOADING","FRAGMENT_MODEL_EXECUTED","FRAGMENT_MODEL_FAILED","FragmentModel","executedRequests","loadingRequests","fragmentLoader","isFragmentLoaded","isLoaded","some","req1","req2","isEqualInit","isEqualComplete","getRequestThreshold","removeExecutedRequestsBeforeTime","threshold","removeExecutedRequestsInTimeRange","getRequestForTime","addSchedulingInfoMetrics","addSchedulingInfo","addRequestsQueue","onLoadingCompleted","sender","onLoadingInProgress","onLoadingAborted","getRequests","states","filteredRequests","forEach","requests","getRequestsForState","filterRequests","isFragmentLoadedOrPending","removeExecutedRequestsAfterTime","syncExecutedRequestsWithBufferedRange","bufferedRanges","streamDuration","abortRequests","abort","executeRequest","load","loadCurrentFragment","LOADING_COMPLETED","LOADING_DATA_PROGRESS","LOADING_ABANDONED","addExecutedRequest","FRAGMENT_MODEL_CANCELED","modifyRequest","httpRequest","requestModifier","method","headers","credentials","withCredentials","RequestModifier","modifyRequestURL","modifyRequestHeader","XHRLoader","cfg","requestStartTime","xhr","XMLHttpRequest","setRequestHeader","header","onend","onprogress","progress","ontimeout","timeout","send","dest","copy","empty","mixin","src","clone","params","modifiedUrl","URL","param","searchParams","href","headerStr","headerPairs","ilen","headerPair","dt","random","hash","originalUrl","targetUrl","original","protocol","origin","relativePath","pathname","startIndexOffset","uaString","EventBus","getHandlerIdx","listener","scope","idx","priority","handler","inserted","payload","filters","EVENT_PRIORITY_LOW","EVENT_PRIORITY_HIGH","Events","CoreEvents","ATTEMPT_BACKGROUND_SYNC","BUFFERING_COMPLETED","BUFFER_CLEARED","BYTES_APPENDED_END_FRAGMENT","BUFFER_REPLACEMENT_STARTED","CHECK_FOR_EXISTENCE_COMPLETED","CMSD_STATIC_HEADER","CURRENT_TRACK_CHANGED","INBAND_EVENTS","INITIAL_STREAM_SWITCH","INIT_FRAGMENT_LOADED","INIT_FRAGMENT_NEEDED","INTERNAL_MANIFEST_LOADED","ORIGINAL_MANIFEST_LOADED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","MEDIA_FRAGMENT_NEEDED","QUOTA_EXCEEDED","SEGMENT_LOCATION_BLACKLIST_ADD","SEGMENT_LOCATION_BLACKLIST_CHANGED","SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD","SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED","SERVICE_LOCATION_LOCATION_BLACKLIST_ADD","SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED","SET_FRAGMENTED_TEXT_AFTER_DISABLED","SET_NON_FRAGMENTED_TEXT","SOURCE_BUFFER_ERROR","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_REQUESTING_COMPLETED","TEXT_TRACKS_QUEUE_INITIALIZED","TIME_SYNCHRONIZATION_COMPLETED","UPDATE_TIME_SYNC_OFFSET","URL_RESOLUTION_FAILED","VIDEO_CHUNK_RECEIVED","WALLCLOCK_TIME_UPDATED","XLINK_ELEMENT_LOADED","XLINK_READY","SEEK_TARGET","SETTING_UPDATED_LIVE_DELAY","SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT","SETTING_UPDATED_CATCHUP_ENABLED","SETTING_UPDATED_PLAYBACK_RATE_MIN","SETTING_UPDATED_PLAYBACK_RATE_MAX","LOG_LEVEL_FATAL","LOG_LEVEL_ERROR","LOG_LEVEL_WARNING","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","Debug","showLogTimestamp","showCalleeName","logFn","getLogFn","bind","fatal","doLog","level","_this","logTime","logLevel","dispatchEvent","setLogTimestampVisible","setCalleeNameVisible","LOG_LEVEL_NONE","Settings","DISPATCH_KEY_MAP","defaultSettings","streaming","abandonLoadTimeout","wallclockTimeUpdateInterval","manifestUpdateRetryInterval","cacheInitSegments","applyServiceDescription","applyProducerReferenceTime","applyContentSteering","applyCMCDParameters","eventControllerRefreshDelay","enableManifestDurationMismatchFix","parseInbandPrft","enableManifestTimescaleMismatchFix","capabilities","filterUnsupportedEssentialProperties","useMediaCapabilitiesApi","timeShiftBuffer","calcFromSegmentTimeline","fallbackToSegmentTimeline","metrics","maxListDepth","delay","liveDelayFragmentCount","liveDelay","useSuggestedPresentationDelay","protection","keepProtectionMediaKeys","ignoreEmeEncryptedEvent","detectPlayreadyMessageFormat","enableSeekDecorrelationFix","fastSwitchEnabled","flushBufferAtTrackSwitch","reuseExistingSourceBuffers","bufferPruningInterval","bufferToKeep","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","initialBufferLevel","stableBufferTime","longFormContentDurationThreshold","stallThreshold","useAppendWindow","setStallState","avoidCurrentTimeRangePruning","useChangeTypeForTrackSwitch","mediaSourceDurationInfinity","resetSourceBuffersForTrackSwitch","gaps","jumpGaps","jumpLargeGaps","smallGapLimit","enableSeekFix","enableStallFix","stallSeek","utcSynchronization","enabled","useManifestDateHeaderTimeSource","backgroundAttempts","timeBetweenSyncAttempts","maximumTimeBetweenSyncAttempts","minimumTimeBetweenSyncAttempts","timeBetweenSyncAttemptsAdjustmentFactor","maximumAllowedDrift","enableBackgroundSyncAfterSegmentDownloadError","defaultTimingSource","scheme","scheduling","defaultTimeout","lowLatencyTimeout","scheduleWhilePaused","text","defaultEnabled","extendSegmentedCues","webvtt","customRenderingEnabled","liveCatchup","maxDrift","playbackRate","max","playbackBufferMin","lastBitrateCachingInfo","ttl","lastMediaSettingsCachingInfo","saveLastMediaSettingsForCurrentStreamingSession","cacheLoadThresholds","video","audio","trackSwitchMode","selectionModeForInitialTrack","fragmentRequestTimeout","fragmentRequestProgressTimeout","manifestRequestTimeout","retryIntervals","retryAttempts","abr","movingAverageMethod","ABRStrategy","additionalAbrRules","insufficientBufferRule","switchHistoryRule","droppedFramesRule","abandonRequestsRule","abrRulesParameters","graceTimeThreshold","abandonMultiplier","minLengthToAverage","bandwidthSafetyFactor","useDefaultABRRules","useDeadTimeLatency","limitBitrateByPortal","usePixelRatioInLimitBitrateByPortal","maxBitrate","minBitrate","maxRepresentationRatio","initialBitrate","initialRepresentationRatio","autoSwitchBitrate","fetchThroughputCalculationMode","cmcd","sid","cid","rtp","rtpSafetyFactor","enabledKeys","includeInRequests","applyMb","etpWeightRatio","recoverAttempts","mediaErrorDecode","mixinSettings","update","settingsObj","FetchLoader","lowLatencyThroughputModel","boxParser","abortController","Headers","AbortController","signal","reqOptions","calculationMode","requestTime","throughputCapacityDelayMS","getThroughputCapacityDelayMS","getCurrentBufferLevel","markBeforeFetch","statusText","responseURL","ok","responseHeaders","body","event","loaded","total","stream","measurement","totalBytes","bytesReceived","signaledFirstByte","remaining","markA","markB","tee","forMeasure","forConsumer","getReader","read","processFetch","done","chunkDownloadDurationMS","chunkBytes","chunkDownloadTimeRelativeMS","kbps","round","bufferLevel","fetchDuration","bytesAllChunks","reduce","prev","curr","addMeasurement","lengthComputable","getEstimatedDownloadDurationMS","downloadedData","startTimeData","endTimeData","lastChunkWasFinished","processResult","calculatedThroughput","calculatedTime","datum","datumE","dataE","chunkThroughputs","shortDurationBytesReceived","shortDurationStartTime","chunkDownloadTime","ts","cumulatedChunkDownloadTime","calculateThroughputByChunkData","calculateDownloadedTime","concatTypedArray","findLastTopIsoBoxCompleted","found","performance","boxesInfo","lastCompletedOffset","subarray","noTrace","avgTimeDistance","distance","cancel","setup","MetricsReportingEvents","METRICS_INITIALISATION_COMPLETE","BECAME_REPORTING_PLAYER","CMCD_DATA_GENERATED","Representation","codecs","mimeType","codecPrivateData","presentationTimeOffset","MSETimeOffset","height","scanType","maxPlayoutRate","frameRate","Period","DEFAULT_ID","suggestedPresentationDelay","Number","POSITIVE_INFINITY","timeShiftBufferDepth","maxSegmentDuration","publishTime","minimumUpdatePeriod","mediaPresentationDuration","schemeIdUri","presentationTime","messageData","eventStream","presentationTimeDelta","BaseURL","weight","dvb_priority","dvb_weight","DEFAULT_DVB_PRIORITY","DEFAULT_DVB_WEIGHT","adaptionSet","inband","applicationScheme","wallClockTime","UTCTiming","defaultServiceLocation","defaultServiceLocationArray","queryBeforeStart","serverUrl","clientRequirement","DescriptorType","ObjectUtils","areEqual","obj1","obj2","deepEqual","DefaultURLUtils","resolveFunction","schemeRegex","httpUrlRegex","httpsUrlRegex","originRegex","nativeURLResolver","baseUrl","dumbURLResolver","baseUrlParseFunc","parseBaseUrl","isPathAbsolute","parseOrigin","isSchemeRelative","parseScheme","joinChar","slashIndex","isHTTPURL","isHTTPS","removeHostname","URLUtils","defaultURLUtils","regexUtils","internalCall","functionName","utils","getUtils","registerUrlRegex","Errors","MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE","XLINK_LOADER_LOADING_FAILURE_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_CODE","TIME_SYNC_FAILED_ERROR_CODE","FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE","URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE","APPEND_ERROR_CODE","REMOVE_ERROR_CODE","DATA_UPDATE_FAILED_ERROR_CODE","CAPABILITY_MEDIASOURCE_ERROR_CODE","CAPABILITY_MEDIAKEYS_ERROR_CODE","DOWNLOAD_ERROR_ID_MANIFEST_CODE","DOWNLOAD_ERROR_ID_SIDX_CODE","DOWNLOAD_ERROR_ID_CONTENT_CODE","DOWNLOAD_ERROR_ID_INITIALIZATION_CODE","DOWNLOAD_ERROR_ID_XLINK_CODE","MANIFEST_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_NOSTREAMS_CODE","TIMED_TEXT_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_MULTIPLEXED_CODE","MEDIASOURCE_TYPE_UNSUPPORTED_CODE","MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE","XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE","SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE","SEGMENTS_UNAVAILABLE_ERROR_MESSAGE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","TIME_SYNC_FAILED_ERROR_MESSAGE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE","URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE","APPEND_ERROR_MESSAGE","REMOVE_ERROR_MESSAGE","DATA_UPDATE_FAILED_ERROR_MESSAGE","CAPABILITY_MEDIASOURCE_ERROR_MESSAGE","CAPABILITY_MEDIAKEYS_ERROR_MESSAGE","TIMED_TEXT_ERROR_MESSAGE_PARSE","MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE","bitrate","tilesHor","tilesVert","widthPerTile","heightPerTile","templateUrl","IsoBox","boxData","isComplete","earliest_presentation_time","first_offset","references","subsegment_duration","scheme_id_uri","presentation_time_delta","presentation_time","event_duration","message_data","sequence_number","entries","base_data_offset","sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","baseMediaDecodeTime","first_sample_flags","data_offset","samples","sample_size","sample_duration","sample_composition_time_offset","reference_track_ID","ntp_timestamp_sec","ntp_timestamp_frac","media_time","IsoFile","parsedIsoFile","getBoxes","convertToDashIsoBox","getBox","setData","getLastBox","BoxParser","fileStart","parsedFile","dashIsoFile","parseUint32","parseIsoBoxType","types","IsoBoxSearchInfo","boxInfo","boxSize","boxType","getMediaTimescaleFromMoov","ab","isoFile","mdhdBox","getSamplesInfo","sampleList","lastSequenceNumber","totalDuration","numSequences","sampleDuration","sampleCount","sampleSize","sampleDts","m","dataOffset","moofBoxes","mfhdBoxes","subsIndex","nextSubsSample","moofBox","trafBoxes","getChildBoxes","trafBox","tfhdBox","getChildBox","tfdtBox","trunBoxes","subsBoxes","trunBox","sampleData","subsBox","sample_delta","subSizes","subsamples","subsample_size","findInitRange","initRange","ftyp","moov","parsePayload","TimelineSegmentsGetter","iterateSegments","iterFunc","frag","repeat","SegmentTemplate","SegmentList","timeline","SegmentTimeline","SegmentURL_asArray","relativeIdx","breakIterator","S_asArray","_calculateRepeatCountForNegativeR","nextFrag","repeatEndTime","availabilityEnd","dvrWindow","ceil","lastSegmentTime","requestedTime","requiredMediaTime","scaledMediaTime","toPrecision","availableSegments","TemplateSegmentsGetter","template","periodTime","calcPeriodRelativeTimeFromMpdRelativeTime","ListSegmentsGetter","offsetToSubtract","relativeIndex","SegmentBaseGetter","epsilon","ft","fd","getIndexByTime","SegmentsController","getters","segmentBaseController","getSegmentsGetter","getSegmentBaseInitSegment","getSegmentList","THUMBNAILS_SCHEME_ID_URIS","ThumbnailTracks","tracks","dashHandler","currentTrackIndex","loader","_createTrack","useSegmentBase","track","ThumbnailTrackInfo","essentialProperties","vars","cache","getIsDynamic","_normalizeSegments","readThumbnail","cached","el","ss","imageUrl","createObjectURL","_handleUpdatedSegmentData","buildTemplateUrl","getTracks","addTracks","getMediaInfoForType","voReps","getVoRepresentations","rep","setTrackByIndex","getCurrentTrack","getCurrentTrackIndex","getThumbnailRequestForTime","currentVoRep","CMCDParameters","serviceLocations","serviceLocationsArray","adaptationSets","adaptationSetsArray","DashManifestModel","BASE64","isInteger","getIsTypeOf","getEssentialPropertiesForRepresentation","ContentComponent_asArray","contentType","mimeTypeRegEx","getIsFragmented","getIsVideo","getIsText","getIsImage","processAdaptation","getRealAdaptations","periodIndex","getRealPeriods","realRepresentation","EssentialProperty_asArray","calcSegmentDuration","segmentTimeline","s0","getPeriodId","realPeriod","getEventStreams","inbandStreams","eventStreams","EventStream","getBaseURLsFromElement","node","baseUrls","BaseURL_asArray","baseUri","earlyReturn","__text","_createContentSteeringInstance","ContentSteering","getProducerReferenceTimesForAdaptation","prtArray","prtsForAdaptation","prt","ProducerReferenceTime","getLanguageForAdaptation","lang","getViewpointForAdaptation","viewpoint","getRolesForAdaptation","role","getAccessibilityForAdaptation","accessibility","getAudioChannelConfigurationForAdaptation","audioChanCfg","getAudioChannelConfigurationForRepresentation","getAdaptationForIndex","realAdaptations","getIndexForAdaptation","getAdaptationForId","getAdaptationsForType","adaptations","getRealPeriodForIndex","realPeriods","getCodec","addResolutionInfo","codec","getSelectionPriority","realAdaption","selectionPriority","getMimeType","getKID","getLabelsForAdaptation","Label_asArray","labelArray","getContentProtectionData","ContentProtection_asArray","getId","hasProfile","profile","profiles","getDuration","MAX_SAFE_INTEGER","MAX_VALUE","getBandwidth","getManifestUpdatePeriod","latencyOfLastUpdate","getPublishTime","getRepresentationCount","getBitrateListForAdaptation","processedRealAdaptation","getRepresentationFor","getRepresentationsForAdaptation","voAdaptation","segmentInfo","presentationOffset","voRepresentations","periodArray","getRealAdaptationFor","SegmentBase","Initialization","sourceURL","getAdaptationsForPeriod","voAdaptationSet","realAdaptationSet","voAdaptations","AdaptationSet","getRegularPeriods","voPeriods","realPreviousPeriod","voPreviousPeriod","periodEnd","DashJSError","getEndTimeForLastPeriod","getMpd","Mpd","loadedTime","getEventsForPeriod","EventStream_asArray","Event_asArray","currentMpdEvent","Event","calculatedPresentationTime","Signal","Binary","decodeArray","__cdata","getEventStreamForAdaptationSet","adaptationArray","InbandEventStream_asArray","getEventStreamForRepresentation","representationArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","utcTiming","getRepresentationSortFunction","getContentSteering","getLocation","MpdLocation","getPatchLocation","PatchLocation","getSuggestedPresentationDelay","getAvailabilityStartTime","getServiceDescriptions","serviceDescriptions","ServiceDescription_asArray","sd","operatingQuality","operatingBandwidth","contentSteering","clientDataReporting","referenceId","maxQualityDifference","ClientDataReporting","getSegmentAlignment","getSubSegmentAlignment","getSupplementalPropertiesForAdaptation","supplementalProperties","SupplementalProperty_asArray","sp","getSupplementalPropertiesAsArrayForAdaptation","supp","getSupplementalPropertiesForRepresentation","getSupplementalPropertiesAsArrayForRepresentation","setConfig","CmcdModel","dashManifestModel","internalData","serviceDescriptionController","streamProcessors","_lastMediaTypeRequest","_isStartup","_bufferLevelStarved","_initialMediaRequestsDone","_resetInitialSettings","pr","nor","st","sf","_updateStreamProcessors","_onPeriodSwitchComplete","streamController","getStreamController","getActiveStream","activeStream","getProcessors","_copyParameters","parameterNames","copiedData","isCmcdEnabled","cmcdParameters","getCmcdParametersFromManifest","_canBeEnabled","enabledRequests","defaultAvailableRequests","invalidRequests","_checkIncludeInRequests","defaultAvailableKeys","enabledCMCDKeys","invalidKeys","_checkAvailableKeys","serviceDescription","getServiceDescriptionSettings","_applyWhitelistByKeys","_getCmcdData","mediatype","includeInRequestsArray","find","filtersTypes","_isIncludedInRequestFilter","_getGenericCmcdData","ot","_getCmcdDataForMediaSegment","su","_getCmcdDataForInitSegment","_getCmcdDataForOther","_getCmcdDataForLicense","_getCmcdDataForSteering","_initForMediaType","encodedBitrate","bitrateList","_getBitrateByRequest","_getObjectDurationByRequest","mtp","getThroughputHistory","getSafeAverageThroughput","_getMeasuredThroughputByType","dl","_getDeadlineByType","bl","_getBufferLevelByType","tb","getTopBitrateInfoFor","_getTopBitrateByType","nextRequest","streamProcessor","probeNextRequest","_probeNextRequest","getPlaybackRate","currentBufferLevel","minBandwidth","_calculateRtp","encodeURIComponent","nrr","br","bs","contentID","sessionID","_onPlaybackRateChanged","_onManifestLoaded","_onBufferLevelStateChanged","_onPlaybackSeeked","_buildFinalString","cmcdData","localeCompare","cmcdString","acc","getQueryParameter","filteredCmcdData","_applyWhitelist","finalPayloadString","getHeaderParameters","cmcdObjectHeader","cmcdRequestHeader","cmcdStatusHeader","cmcdSessionHeader","CMSD_STATIC","CMSD_DYNAMIC","CMSD_RESPONSE_FIELD_BASENAME","CMSD_STATIC_RESPONSE_FIELD_NAME","CMSD_DYNAMIC_RESPONSE_FIELD_NAME","OBJECT_TYPES","PERSISTENT_PARAMS","MEDIATYPE_TO_OBJECTTYPE","integerRegex","CmsdModel","_staticParamsDict","_dynamicParamsDict","_clearParams","_parseParameterValue","_parseCMSDStatic","items","substrs","_parseCMSDDynamic","_mediaTypetoObjectType","_getParamValueForObjectType","paramsType","otParams","streamParams","parseResponseHeaders","staticParams","dynamicParams","static","dynamic","getMaxBitrate","getEstimatedThroughput","getResponseDelay","getRoundTripTime","ClientDataReportingModel","adaptationSetIncluded","adaptationSet","serviceLocationIncluded","requestType","LowLatencyThroughputModel","measurements","createBufferLevelTrendFunction","chunkMeasurements","sumX","sumY","sumXY","sumXSq","N","isBufferSafeAndStable","lastMeasurements","lastBitrate","aveBufferLevelLastSegements","bufferLevelAtSegmentEnd","abs","bufferLevelAtSegmentStart","fetchDownloadDurationMS","requestTimeMS","bitrateEntry","repId","adjustedAvailabilityStartTimeMS","segDurationMS","chunksDurationMS","segmentBytes","getEstimatedBufferLevel","shift","currentBufferLevelMS","lastThreeMeasurements","lastMeasurement","lastChunkRelativeTimeMS","isBufferStable","selectedOptimisticFactor","chunkAvailablePeriod","chunkBytesBBLE","chunkDownloadtimeMSBBLE","chunkCount","chunk","downloadThroughput","estimatedDownloadtimeMS","nextHigherBitrate","checkParameterType","parameter","PRIORITY","DEFAULT","STRONG","WEAK","SwitchRequest","getPriority","NO_CHANGE","MetricsConstants","TCP_CONNECTION","HTTP_REQUEST","TRACK_SWITCH","BUFFER_LEVEL","ABANDON_LOAD","ALLOW_LOAD","BUFFER_STATE","DVR_INFO","DROPPED_FRAMES","SCHEDULING_INFO","REQUESTS_QUEUE","MANIFEST_UPDATE","MANIFEST_UPDATE_STREAM_INFO","MANIFEST_UPDATE_TRACK_INFO","PLAY_LIST","DVB_ERRORS","HTTP_REQUEST_DVB_REPORTING_TYPE","ThroughputRule","getMaxIndex","rulesContext","switchRequest","getMediaInfo","getMediaType","currentBufferState","getCurrentBufferState","scheduleController","getScheduleController","getAbrController","manifestInfo","throughputHistory","throughput","getAverageLatency","useBufferOccupancyABR","getAbandonmentStateFor","getQualityForBitrate","setTimeToLoadDelay","InsufficientBufferRule","bufferStateDict","ignoreCount","_onPlaybackSeeking","_onBytesAppended","fragmentDuration","getRepresentationInfo","lowLatencyEnabled","shouldIgnore","getPlaybackController","getLowLatencyModeEnabled","getAverageThroughput","AbandonRequestsRule","fragmentDict","abandonDict","throughputArray","mediaPlayerModel","shouldAbandon","getCurrentRequest","getStableBufferTime","fragmentInfo","firstByteTime","elapsedTime","storeLastRequestThroughputByType","totalSampledValue","measuredBandwidthInKbps","estimatedTimeOfDownload","bytesRemaining","getBitrateList","minQuality","getMinAllowedIndexFor","getQualityFor","fragmentID","rule","DroppedFramesRule","droppedFramesHistory","getDroppedFramesHistory","dfh","getFrameHistory","droppedFrames","totalFrames","maxIndex","droppedVideoFrames","totalVideoFrames","SwitchHistoryRule","switchRequestHistory","getSwitchHistory","switchRequests","getSwitchRequests","drops","noDrops","dropSize","MINIMUM_BUFFER_S","BolaRule","bolaStateDict","calculateBolaParameters","bitrates","utilities","highestUtilityIndex","highestIndex","uIndex","bufferTime","gp","Vp","clearBolaStateOnSeek","bolaState","placeholderBuffer","mostAdvancedSegmentStart","lastSegmentWasReplacement","lastSegmentStart","lastSegmentDurationS","lastSegmentRequestTimeMs","lastSegmentFinishTimeMs","checkBolaStateStableBufferTime","effectiveBufferLevel","maxBufferLevelForQuality","minBufferLevelForQuality","qBitrate","qUtility","iBitrate","iUtility","onBufferEmpty","stateDict","onPlaybackSeeking","onMediaFragmentLoaded","lastQuality","checkNewSegment","onMetricAdded","metric","bufferAtLastSegmentRequest","maxEffectiveBufferForLastSegment","maxPlaceholderBuffer","onQualityChangeRequested","abrQuality","onFragmentLoadingAbandoned","wantEffectiveBufferLevel","initialState","utilitiesFromBitrates","getInitialBolaState","getBolaState","safeThroughput","nowMs","lastCallTimeMs","updatePlaceholderBuffer","bitrateCount","score","getQualityFromBufferLevel","qualityForThroughput","delayS","getMaxAllowedIndexFor","L2ARule","l2AStateDict","l2AParameterDict","_clearL2AStateOnSeek","l2AState","lastSegmentUrl","l2aState","_onMediaFragmentLoaded","l2AParameters","_checkNewSegment","_onMetricAdded","L2AState","segment_request_start_s","segment_download_finish_s","_onQualityChangeRequested","_dotmultiplication","arr1","arr2","sumdot","vl","sqrt","useL2AABR","currentPlaybackRate","getVideoModel","w","prev_w","Q","B_target","_initializeL2AParameters","_getInitialL2AState","_getL2AState","l2AParameter","diff1","throughputMeasureTime","getCurrentHttpRequest","downloadBytes","lastthroughput","currentHttpRequest","V","sign","bget","ii","tmpsum","tmax","euclideanProjection","temp","LearningAbrController","somBitrateNeurons","bitrateNormalizationFactor","latencyNormalizationFactor","weights","sortedCenters","weightSelectionMode","_getMaxThroughput","maxThroughput","neuron","_getDistance","sum","_updateNeurons","winnerNeuron","somElements","somNeuron","neuronDistance","rebuffer","_updateNeuronState","exp","neighbourHood","getNextQuality","bufferSize","currentQualityIndex","dynamicWeightsSelector","currentLatency","currentBuffer","currentThroughput","bitrateVector","magnitude","qualityIndex","switch","centers","randomDataSet","dataArray","_getRandomData","distanceWeights","nextPoint","maxDistance","currentPoint","minDistance","leastSimilarIndex","minIndex","_getInitialKmeansPlusPlusCenters","_getSomBitrateNeurons","throughputNormalized","currentNeuron","downloadTime","getSegmentDuration","getMinBuffer","maxSuitableBitrate","_getDownShiftNeuron","neuronCount","weightCount","W","upperBound","_getXavierWeights","_randomWeightSelection","weightVector","findWeightVector","_dynamicWeightSelection","somNeuronState","somData","nextBuffer","getNextBufferWithBitrate","isBufferLow","bitrateSwitch","bitrateReward","bitrateSwitchPenalty","rebufferPenalty","latencyPenalty","playbackSpeedPenalty","bitrateWSum","bitrateSwitchWSum","rebufferWSum","latencyWSum","playbackSpeedWSum","totalQoe","LoLpQoeEvaluator","voPerSegmentQoeInfo","maxBitrateKbps","minBitrateKbps","_createQoeInfo","fragmentType","qoeInfo","QoeInfo","penalty","_logMetricsInQoeInfo","rebufferTime","playbackSpeed","latencyRange","setupPerSegmentQoe","sDuration","maxBrKbps","minBrKbps","logSegmentMetrics","segmentBitrate","segmentRebufferTime","currentPlaybackSpeed","getPerSegmentQoe","calculateSingleUseQoe","singleUseQoeInfo","LoLpWeightSelector","weightOptions","previousLatency","targetLatency","bufferMin","qoeEvaluator","getNextBuffer","bitrateToDownload","neurons","currentRebuffer","maxQoE","winnerWeights","winnerBitrate","deltaLatency","weightsObj","weightedRebuffer","weightedLatency","totalQoE","nextLatency","_checkConstraints","generate","perm","currLen","currPerm","val","LoLPRule","learningController","currentQuality","bufferStateVO","getCurrentLiveLatency","useLoLPABR","currentBitrateKbps","lastFragmentDownloadTime","QUALITY_SWITCH_RULES","ABANDON_FRAGMENT_RULES","ABRRulesCollection","qualitySwitchRules","abandonFragmentRules","customParametersModel","_getRulesWithChange","srArray","sr","getMinSwitchRequest","newSwitchReq","getAbrCustomRules","rules","getMaxQuality","shouldAbandonFragment","forceAbandon","getQualitySwitchRules","CustomParametersModel","utcTimingSources","xhrWithCredentials","licenseRequestFilters","licenseResponseFilters","customCapabilitiesFilters","customInitialTrackSelectionFunction","customAbrRules","_unregisterFilter","_findAbrCustomRuleIndex","rulename","addUTCTimingSource","removeUTCTimingSource","vo","getCustomInitialTrackSelectionFunction","setCustomInitialTrackSelectionFunction","customFunc","resetCustomInitialTrackSelectionFunction","getLicenseResponseFilters","getLicenseRequestFilters","getCustomCapabilitiesFilters","registerCustomCapabilitiesFilter","registerLicenseResponseFilter","registerLicenseRequestFilter","unregisterCustomCapabilitiesFilter","unregisterLicenseResponseFilter","unregisterLicenseRequestFilter","addAbrCustomRule","removeAllAbrCustomRule","removeAbrCustomRule","clearDefaultUTCTimingSources","restoreDefaultUTCTimingSources","defaultUtcTimingSource","setXHRWithCredentialsForType","getXHRWithCredentialsForType","useCreds","default","HTTPLoader","delayedRequests","retryRequests","downloadErrorToRequestTypeMap","cmcdModel","cmsdModel","clientDataReportingModel","requestTimeout","internalLoad","remainingAttempts","traces","firstProgress","needFailureReport","lastTraceTime","lastTraceReceivedCount","progressTimeout","fileLoaderType","addHttpRequestMetric","success","responseUrl","responseStatus","getAllResponseHeaders","addHttpRequest","handleLoaded","addManifestUpdate","clearTimeout","getRetryAttemptsForType","retryRequest","getRetryIntervalsForType","complete","currentServiceLocation","currentAdaptationSetId","cmcdMode","additionalQueryParameter","cmcdQueryParameter","_getAdditionalQueryParameter","currentTime","timeoutMessage","percentageComplete","delayedRequest","delayTimeout","SchemeLoaderFactory","schemeLoaderMap","unregisterAllLoader","getLoader","startsWith","registerLoader","unregisterLoader","URLLoader","schemeLoaderFactory","loaderFactory","constants","HeadRequest","checkForExistenceOnly","FragmentLoader","urlLoader","checkForExistence","report","exists","headRequest","errorText","OfflineStreamProcessor","indexHandler","representationController","fragmentModel","downloadedSegments","isInitialized","isStopped","offlineStoreController","completedCb","callbacks","completed","progressCb","progression","onFragmentLoadingCompleted","isInit","suffix","fragmentName","download","onStreamRequestingCompleted","stop","getAvailableSegmentsNumber","_mediaInfo","findIndex","updateRepresentation","getRepresentationController","getRepresentationId","setCurrentIndex","OfflineStream","offlineStreamProcessors","startedOfflineStreamProcessors","finishedOfflineStreamProcessors","representationsToUpdate","allMediasInfosList","progressionById","startedCb","started","progressionCb","finishedCb","finished","updateManifestNeeded","createOfflineStreamProcessorFor","allMediaInfoForType","getAllMediaInfoForType","createStreamProcessor","onStreamCompleted","onStreamProgression","waitForAllProgress","allSegments","property","onDataUpdateCompleted","representations","startOfflineStreamProcessors","checkIfAllOfflineStreamProcessorsStarted","stopOfflineStreamProcessors","initStreamInfo","getMediaInfos","mediaInfos","OFFLINE_RECORD_LOADEDMETADATA","initializeAllMediasInfoList","mediasInfoList","initializeMedia","deactivate","Entities","OfflineIndexDBManifestParser","DOM","allMediaInfos","editBaseURLAttribute","currentMPD","basesURL","getElementsByTagName","innerHTML","nodeName","adaptationsSet","getFragmentId","getBestRepresentationId","browsePeriods","periods","browseAdaptationsSet","currentPeriod","currentAdaptationSet","currentAdaptationType","findAdaptationType","findAndKeepOnlySelectedRepresentations","findRepresentations","deleteSegmentBase","segmentList","editSegmentListAttributes","segmentTemplate","getSegmentTemplate","editSegmentTemplateAttributes","selectedRep","addSegmentTemplateAttributes","findMimeType","testMimeType","getAttribute","elements","segmentBase","segmentsTemplates","setAttribute","segmentLists","initialisation","segmentURLs","segmentUrl","segmentTemplateElement","S","segmentTimelineElement","changedDuration","getDurationChangeArray","repeatValue","addSegmentTimelineElements","adaptationType","bestRepresentation","idxFragId","XMLDoc","DOMParser","parseFromString","manifestEncoded","XMLSerializer","serializeToString","encodeManifest","ObjectIron","mappers","mergeValues","parentItem","childItem","mapProperties","child","parentValue","childValue","mapItem","children","len2","childNode","run","periodMapper","adaptationSetMapper","adaptationset","escapeMode","attributePrefix","arrayAccessForm","emptyNodeForm","enableToStringFunc","arrayAccessFormPaths","skipEmptyTextNodesForObj","stripWhitespaces","datetimeAccessFormPaths","useDoubleQuotes","xmlElementsFilter","jsonPropertiesFilter","keepCData","ignoreRoot","getNodeLocalName","nodeLocalName","localName","baseName","escapeXmlChars","checkInStdFiltersArrayForm","stdFiltersArrayForm","filterPath","toArrayAccessForm","childName","fromXmlDateTime","bits","secondBits","setHours","setMilliseconds","offsetMinutes","setMinutes","getMinutes","getTimezoneOffset","UTC","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","checkXmlElementsFilter","childType","childPath","parseDOMChildren","nodeType","nodeChildren","childNodes","cidx","__cnt","__children","aidx","attributes","attr","value2","ml","matchers","matchobj","converter","nodePrefix","prefix","getNodePrefix","__prefix","fullPath","checkFromXmlDateTimePaths","nodeValue","startTag","jsonObj","attrList","closed","resultStr","attrName","attrVal","endTag","elementName","jsonXmlSpecialElem","jsonObjField","jsonXmlElemCount","elementsCnt","it","checkJsonObjPropertiesFilter","propertyName","jsonObjPath","parseJSONAttributes","ait","parseJSONTextObject","jsonTxtObj","parseJSONTextAttrs","getJsonPropertyPath","jsonPropName","parseJSONArray","jsonArrRoot","jsonArrObj","arIdx","parseJSONObject","subObj","toISOString","parseXmlString","xmlDocStr","xmlDoc","ActiveXObject","getElementsByTagNameNS","async","loadXML","asArray","toXmlDateTime","asDateTime","xml2json","xml_str2json","json2xml_str","json2xml","getVersion","BaseMatcher","_test","_converter","StringMatcher","stringAttrsInElements","attrNames","durationRegex","DurationMatcher","attributeList","datetimeRegex","DateTimeMatcher","utcDate","timezoneOffset","numericRegex","NumericMatcher","LangMatcher","bcp47Normalize","CommonProperty","_name","_merge","MapNode","_properties","_children","RepresentationBaseValuesMap","commonProperties","SegmentValuesMap","DashParser","objectIron","jsonTime","Patch","add_asArray","operand","replace_asArray","ironedTime","getMatchers","getIron","X2JS","OfflineDownload","_manifestURL","_offlineURL","_xmlManifest","_streams","_manifest","_isDownloadingStatus","_isComposed","_representationsToUpdate","_indexDBManifestParser","_progressionById","_progression","_status","manifestLoader","manifestUpdater","isDownloading","onManifestUpdated","onDownloadingStarted","OFFLINE_RECORD_STARTED","OnStreamProgression","available","onDownloadingFinished","OFFLINE_RECORD_FINISHED","resetDownload","onManifestUpdateNeeded","parsedManifest","composeStreams","updatePeriods","streamsInfo","getStreamsInfo","offlineManifest","onOriginalManifestLoaded","originalManifest","selectedRepresentations","stopDownload","OFFLINE_RECORD_STOPPED","getOfflineUrl","getManifestUrl","getStatus","setInitialState","initDownload","downloadFromUrl","startDownload","getSelectedRepresentations","originalURL","resumeDownload","deleteDownload","getDownloadProgression","IndexDBOfflineLoader","fragment","OfflineUrlUtils","getRegex","OfflineEvents","OfflineController","downloads","offlineUrlUtils","manifestModel","getDownloadFromId","createDownloadFromId","removeDownloadFromId","waitForStatusChanged","downloadStopped","resetRecords","loadRecordsFromStorage","offline","createDownloadFromStorage","createRecord","manifestURL","startRecord","stopRecord","resumeRecord","deleteRecord","getRecordProgression","getAllRecords","records","record","OfflineRecord"],"sourceRoot":""}