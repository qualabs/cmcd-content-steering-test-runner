{"version":3,"file":"dash.protection.debug.js","mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMjF;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,iBAAYyH,KAAZ,EAAmBlmB,GAAnB,EAAwB;AAAA;;AACpB,OAAKkmB,KAAL,GAAaA,KAAb;AACA,OAAKlmB,GAAL,GAAWA,GAAX;AACH;;AAGL,+DAAeye,OAAf;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;IACMkF;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,yBAAY7a,SAAZ,EAAuBkhB,eAAvB,EAAwC;AAAA;;AACpC,OAAKlhB,SAAL,GAAiBA,SAAjB;AACA,OAAKkhB,eAAL,GAAuBA,eAAvB;AACH;;AAGL,+DAAerG,eAAf;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;IACMxX;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,gCAAY8H,iBAAZ,EAA+BC,iBAA/B,EAAkDI,qBAAlD,EAAyEC,eAAzE,EAA0FqY,YAA1F,EAAwG;AAAA;;AACpG,OAAKC,aAAL,GAAqB,CAAE,MAAF,CAArB;;AACA,MAAI5Y,iBAAiB,IAAIA,iBAAiB,CAACzU,MAA3C,EAAmD;AAC/C,SAAKyU,iBAAL,GAAyBA,iBAAzB;AACH;;AACD,MAAIC,iBAAiB,IAAIA,iBAAiB,CAAC1U,MAA3C,EAAmD;AAC/C,SAAK0U,iBAAL,GAAyBA,iBAAzB;AACH;;AACD,OAAKI,qBAAL,GAA6BA,qBAA7B;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AACA,OAAKqY,YAAL,GAAoBA,YAApB;AACH;;AAGL,+DAAezgB,sBAAf;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMG;AACF;AACJ;AACA;AACA;AACA;AACI,wBAAY5M,GAAZ,EAAiB2Z,MAAjB,EAAyB1B,YAAzB,EAAuCpX,OAAvC,EAAgDuV,eAAhD,EAAiEjB,WAAjE,EAA8EjD,SAA9E,EAAyFrI,IAAzF,EAA+F;AAAA;;AAE3F;AACR;AACA;AACQ,OAAK7J,GAAL,GAAWA,GAAX;AAEA;AACR;AACA;;AACQ,OAAK2Z,MAAL,GAAcA,MAAd;AAEA;AACR;AACA;;AACQ,OAAK1B,YAAL,GAAoBA,YAApB;AAEA;AACR;AACA;;AACQ,OAAKpX,OAAL,GAAeA,OAAf;AAEA;AACR;AACA;;AACQ,OAAKuV,eAAL,GAAuBA,eAAvB;AAEA;AACR;AACA;;AACQ,OAAKjB,WAAL,GAAmBA,WAAnB;AAEA;AACR;AACA;;AACQ,OAAKjD,SAAL,GAAiBA,SAAjB;AAEA;AACR;AACA;;AACQ,OAAKrI,IAAL,GAAYA,IAAZ;AACH;;AAGL,+DAAe+C,cAAf;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;IACMC;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,yBAAY7M,GAAZ,EAAiBa,OAAjB,EAA0BgJ,IAA1B,EAAgC;AAAA;;AAE5B;AACR;AACA;AACQ,OAAK7J,GAAL,GAAWA,GAAX;AAEA;AACR;AACA;;AACQ,OAAKa,OAAL,GAAeA,OAAf;AAEA;AACR;AACA;;AACQ,OAAKgJ,IAAL,GAAYA,IAAZ;AACH;;AAGL,+DAAegD,eAAf;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACML;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,yBAAYgZ,WAAZ,EAAyB4H,UAAzB,EAAqC;AAAA;;AACjC,OAAK5H,WAAL,GAAmBA,WAAnB;AACA,OAAK4H,UAAL,GAAkBA,UAAlB;AACH;;AAGL,+DAAe5gB,eAAf;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMuX;AACF;AACJ;AACA;AACA;AACA;AACI,iBAAY1a,QAAZ,EAAsB+S,YAAtB,EAAoC;AAAA;;AAChC,OAAK/S,QAAL,GAAgBA,QAAhB;AACA,OAAK+S,YAAL,GAAoBA,YAApB;AACH;;AAGL,+DAAe2H,OAAf;;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;IACMpX,cACF,qBAAYia,IAAZ,EAAkBhU,OAAlB,EAA2B/I,IAA3B,EAAiC;AAAA;;AAC7B,OAAK+c,IAAL,GAAYA,IAAI,IAAI,IAApB;AACA,OAAKhU,OAAL,GAAeA,OAAO,IAAI,IAA1B;AACA,OAAK/I,IAAL,GAAYA,IAAI,IAAI,IAApB;AACH;;AAGL,+DAAe8C,WAAf;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;IACMG;AACF;AACJ;AACA;AACI,uBAAc;AAAA;;AACV;AACR;AACA;AACA;AACQ,OAAKugB,KAAL,GAAa,IAAb;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,OAAKtY,IAAL,GAAY,IAAZ;AACA;AACR;AACA;AACA;;AACQ,OAAK/U,GAAL,GAAW,IAAX;AACA;AACR;AACA;AACA;;AACQ,OAAKstB,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,KAAL,GAAa,IAAb;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,SAAL,GAAiB,IAAjB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,YAAL,GAAoB,IAApB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,KAAL,GAAa,EAAb;AACA;AACR;AACA;AACA;;AACQ,OAAKC,IAAL,GAAY,IAAZ;AAEA;AACR;AACA;AACA;;AACQ,OAAKC,OAAL,GAAe,IAAf;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,cAAL,GAAsB,IAAtB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,gBAAL,GAAwB,IAAxB;AACA;AACR;AACA;AACA;;AACQ,OAAKC,gBAAL,GAAwB,IAAxB;AACA;AACR;AACA;;AACQ,OAAKC,eAAL,GAAuB,IAAvB;AACH;AAGL;AACA;AACA;AACA;;;IACMC;AACF;AACJ;AACA;AACI,4BAAc;AAAA;;AACV;AACR;AACA;AACA;AACQ,OAAK9uB,CAAL,GAAS,IAAT;AACA;AACR;AACA;AACA;;AACQ,OAAK+uB,CAAL,GAAS,IAAT;AACA;AACR;AACA;AACA;;AACQ,OAAKC,CAAL,GAAS,EAAT;AACH;;AAGLzhB,WAAW,CAAC0hB,GAAZ,GAAkB,KAAlB;AACA1hB,WAAW,CAAC2hB,IAAZ,GAAmB,MAAnB;AACA3hB,WAAW,CAAC4hB,QAAZ,GAAuB,KAAvB;AACA5hB,WAAW,CAAC6hB,oBAAZ,GAAmC,gBAAnC;AACA7hB,WAAW,CAAC8hB,iBAAZ,GAAgC,uBAAhC;AACA9hB,WAAW,CAAC+hB,kBAAZ,GAAiC,cAAjC;AACA/hB,WAAW,CAACgiB,kBAAZ,GAAiC,cAAjC;AACAhiB,WAAW,CAACiiB,gCAAZ,GAA+C,2BAA/C;AACAjiB,WAAW,CAACkiB,8BAAZ,GAA6C,qBAA7C;AACAliB,WAAW,CAACmiB,kBAAZ,GAAiC,cAAjC;AACAniB,WAAW,CAAC4L,OAAZ,GAAsB,SAAtB;AACA5L,WAAW,CAACoiB,qBAAZ,GAAoC,iBAApC;AACApiB,WAAW,CAACqiB,UAAZ,GAAyB,OAAzB;;;;;;;;;;;;ACrLA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,YAAY;AACZ;AACA,sCAAsC;AACtC;AACA;AACA,UAAU;AACV;AACA;AACA,iDAAiD;AACjD;AACA,YAAY;AACZ;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA,MAAM;AACN,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,8DAA8D;;AAE9D;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;AChhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8CAA8C,GAAG;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sDAAsD;AACtD;;AAEA,sBAAsB;AACtB;;AAEA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,IAAI;AACtC;;AAEA,8CAA8C;AAC9C;;AAEA,uBAAuB;AACvB;;AAEA,+BAA+B,0CAA0C;AACzE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD,IAAI,WAAW,IAAI;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,sBAAsB,SAAS;AAC/B;AACA,kCAAkC;AAClC;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;;AAEA;AACA,wDAAwD,EAAE;AAC1D;AACA,wCAAwC;AACxC,4BAA4B,IAAI;AAChC;;AAEA;AACA,gCAAgC,EAAE,WAAW,EAAE;AAC/C,iBAAiB;AACjB;AACA;AACA,wBAAwB,qBAAqB,IAAI,cAAc;AAC/D;AACA;AACA,wBAAwB,KAAK,EAAE;AAC/B;AACA;;AAEA;AACA,eAAe;AACf,0BAA0B,EAAE;AAC5B;;AAEA;AACA;AACA,wBAAwB,EAAE,iBAAiB;AAC3C;;AAEA;AACA,2BAA2B,EAAE,UAAU;AACvC;;AAEA;AACA;AACA;AACA,qCAAqC,IAAI;AACzC;AACA,gCAAgC,IAAI;AACpC;;AAEA;AACA,gCAAgC,EAAE,gBAAgB,EAAE,GAAG,aAAa,IAAI;AACxE;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA,6DAA6D,EAAE,WAAW,EAAE;AAC5E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,eAAe,IAAI;AACzC;;AAEA;AACA,gCAAgC,EAAE,WAAW,EAAE,yDAAyD,IAAI;AAC5G;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,EAAE,YAAY,EAAE;AACtC;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,IAAI,IAAI;;AAE7B;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA,sBAAsB;AACtB;;AAEA;AACA,sBAAsB;AACtB,yBAAyB,GAAG;AAC5B;AACA;AACA;AACA,eAAe,0BAA0B,IAAI;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,IAAI;AACtC,gCAAgC,EAAE;AAClC,gCAAgC,IAAI;AACpC;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA,sBAAsB,EAAE;AACxB;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,yCAAyC,EAAE;AAC3C;AACA,uBAAuB,IAAI;AAC3B;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,sBAAsB;AACtB;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,sBAAsB,EAAE;AACxB;AACA,qCAAqC;AACrC;AACA;AACA,+CAA+C,WAAW,IAAI,IAAI;AAClE;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,sBAAsB,QAAQ,IAAI;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,IAAI,cAAc;AAC1C;AACA,wBAAwB,IAAI;AAC5B;AACA,8BAA8B;AAC9B;AACA,+BAA+B;AAC/B;AACA,8BAA8B,IAAI,EAAE;AACpC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,IAAI;AAC7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA,wBAAwB,IAAI,6BAA6B;AACzD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,sBAAsB;AACtB;AACA,0CAA0C;AAC1C;AACA,4DAA4D,SAAS;AACrE;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA,qBAAqB,YAAY;;AAEjC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,+BAA+B,IAAI,mCAAmC,IAAI;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAa;AACzB;AACA;AACA,QAAQ,gBAAgB;AACxB,MAAM;AACN;AACA,YAAY,UAAc,kBAAkB,wBAAU;AACtD,YAAY,mCAAO;AACnB;AACA,aAAa;AAAA,kGAAC;AACd,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;UCj7BD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;;;;;WCAA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;AC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","sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/constants/ProtectionConstants.js","webpack://dashjs/./src/streaming/protection/CommonEncryption.js","webpack://dashjs/./src/streaming/protection/ProtectionEvents.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionController.js","webpack://dashjs/./src/streaming/protection/controllers/ProtectionKeyController.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemPlayReady.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemW3CClearKey.js","webpack://dashjs/./src/streaming/protection/drm/KeySystemWidevine.js","webpack://dashjs/./src/streaming/protection/errors/ProtectionErrors.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_01b.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_21Jan2015.js","webpack://dashjs/./src/streaming/protection/models/ProtectionModel_3Feb2014.js","webpack://dashjs/./src/streaming/protection/servers/ClearKey.js","webpack://dashjs/./src/streaming/protection/servers/DRMToday.js","webpack://dashjs/./src/streaming/protection/servers/PlayReady.js","webpack://dashjs/./src/streaming/protection/servers/Widevine.js","webpack://dashjs/./src/streaming/protection/vo/ClearKeyKeySet.js","webpack://dashjs/./src/streaming/protection/vo/KeyMessage.js","webpack://dashjs/./src/streaming/protection/vo/KeyPair.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemAccess.js","webpack://dashjs/./src/streaming/protection/vo/KeySystemConfiguration.js","webpack://dashjs/./src/streaming/protection/vo/LicenseRequest.js","webpack://dashjs/./src/streaming/protection/vo/LicenseResponse.js","webpack://dashjs/./src/streaming/protection/vo/MediaCapability.js","webpack://dashjs/./src/streaming/protection/vo/NeedKey.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/ua-parser-js/src/ua-parser.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/amd options","webpack://dashjs/webpack/runtime/compat get default export","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/webpack/runtime/make namespace object","webpack://dashjs/./src/streaming/protection/Protection.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(self, function() {\nreturn ","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @module FactoryMaker\r\n * @ignore\r\n */\r\nconst FactoryMaker = (function () {\r\n\r\n    let instance;\r\n    let singletonContexts = [];\r\n    const singletonFactories = {};\r\n    const classFactories = {};\r\n\r\n    function extend(name, childInstance, override, context) {\r\n        if (!context[name] && childInstance) {\r\n            context[name] = {\r\n                instance: childInstance,\r\n                override: override\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this method from your extended object.  this.factory is injected into your object.\r\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\r\n     * will return the video model for use in the extended object.\r\n     *\r\n     * @param {Object} context - injected into extended object as this.context\r\n     * @param {string} className - string name found in all dash.js objects\r\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\r\n     * @returns {*} Context aware instance of specified singleton name.\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function getSingletonInstance(context, className) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                return obj.instance;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\r\n     *\r\n     * @param {Object} context\r\n     * @param {string} className\r\n     * @param {Object} instance\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function setSingletonInstance(context, className, instance) {\r\n        for (const i in singletonContexts) {\r\n            const obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                singletonContexts[i].instance = instance;\r\n                return;\r\n            }\r\n        }\r\n        singletonContexts.push({\r\n            name: className,\r\n            context: context,\r\n            instance: instance\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use this method to remove all singleton instances associated with a particular context.\r\n     *\r\n     * @param {Object} context\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function deleteSingletonInstances(context) {\r\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Factories storage Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function getFactoryByName(name, factoriesArray) {\r\n        return factoriesArray[name];\r\n    }\r\n\r\n    function updateFactory(name, factory, factoriesArray) {\r\n        if (name in factoriesArray) {\r\n            factoriesArray[name] = factory;\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Class Factories Management\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateClassFactory(name, factory) {\r\n        updateFactory(name, factory, classFactories);\r\n    }\r\n\r\n    function getClassFactoryByName(name) {\r\n        return getFactoryByName(name, classFactories);\r\n    }\r\n\r\n    function getClassFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\r\n\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    create: function () {\r\n                        return merge(classConstructor, context, arguments);\r\n                    }\r\n                };\r\n            };\r\n\r\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n        return factory;\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    // Singleton Factory MAangement\r\n\r\n    /*------------------------------------------------------------------------------------------*/\r\n\r\n    function updateSingletonFactory(name, factory) {\r\n        updateFactory(name, factory, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactoryByName(name) {\r\n        return getFactoryByName(name, singletonFactories);\r\n    }\r\n\r\n    function getSingletonFactory(classConstructor) {\r\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\r\n        if (!factory) {\r\n            factory = function (context) {\r\n                let instance;\r\n                if (context === undefined) {\r\n                    context = {};\r\n                }\r\n                return {\r\n                    getInstance: function () {\r\n                        // If we don't have an instance yet check for one on the context\r\n                        if (!instance) {\r\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\r\n                        }\r\n                        // If there's no instance on the context then create one\r\n                        if (!instance) {\r\n                            instance = merge(classConstructor, context, arguments);\r\n                            singletonContexts.push({\r\n                                name: classConstructor.__dashjs_factory_name,\r\n                                context: context,\r\n                                instance: instance\r\n                            });\r\n                        }\r\n                        return instance;\r\n                    }\r\n                };\r\n            };\r\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\r\n        }\r\n\r\n        return factory;\r\n    }\r\n\r\n    function merge(classConstructor, context, args) {\r\n\r\n        let classInstance;\r\n        const className = classConstructor.__dashjs_factory_name;\r\n        const extensionObject = context[className];\r\n\r\n        if (extensionObject) {\r\n\r\n            let extension = extensionObject.instance;\r\n\r\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\r\n\r\n                classInstance = classConstructor.apply({context}, args);\r\n                extension = extension.apply({\r\n                    context,\r\n                    factory: instance,\r\n                    parent: classInstance\r\n                }, args);\r\n\r\n                for (const prop in extension) {\r\n                    if (classInstance.hasOwnProperty(prop)) {\r\n                        classInstance[prop] = extension[prop];\r\n                    }\r\n                }\r\n\r\n            } else { //replace parent object completely with new object. Same as dijon.\r\n\r\n                return extension.apply({\r\n                    context,\r\n                    factory: instance\r\n                }, args);\r\n\r\n            }\r\n        } else {\r\n            // Create new instance of the class\r\n            classInstance = classConstructor.apply({context}, args);\r\n        }\r\n\r\n        // Add getClassName function to class instance prototype (used by Debug)\r\n        classInstance.getClassName = function () {return className;};\r\n\r\n        return classInstance;\r\n    }\r\n\r\n    instance = {\r\n        extend: extend,\r\n        getSingletonInstance: getSingletonInstance,\r\n        setSingletonInstance: setSingletonInstance,\r\n        deleteSingletonInstances: deleteSingletonInstances,\r\n        getSingletonFactory: getSingletonFactory,\r\n        getSingletonFactoryByName: getSingletonFactoryByName,\r\n        updateSingletonFactory: updateSingletonFactory,\r\n        getClassFactory: getClassFactory,\r\n        getClassFactoryByName: getClassFactoryByName,\r\n        updateClassFactory: updateClassFactory\r\n    };\r\n\r\n    return instance;\r\n\r\n}());\r\n\r\nexport default FactoryMaker;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\n\r\nimport path from 'path-browserify'\r\nimport { UAParser } from 'ua-parser-js'\r\n\r\nclass Utils {\r\n    static mixin(dest, source, copy) {\r\n        let s;\r\n        let empty = {};\r\n        if (dest) {\r\n            for (let name in source) {\r\n                if (source.hasOwnProperty(name)) {\r\n                    s = source[name];\r\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\r\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\r\n                            dest[name] = Utils.mixin(dest[name], s, copy);\r\n                        } else {\r\n                            dest[name] = copy(s);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dest;\r\n    }\r\n\r\n    static clone(src) {\r\n        if (!src || typeof src !== 'object') {\r\n            return src; // anything\r\n        }\r\n        let r;\r\n        if (src instanceof Array) {\r\n            // array\r\n            r = [];\r\n            for (let i = 0, l = src.length; i < l; ++i) {\r\n                if (i in src) {\r\n                    r.push(Utils.clone(src[i]));\r\n                }\r\n            }\r\n        } else {\r\n            r = {};\r\n        }\r\n        return Utils.mixin(r, src, Utils.clone);\r\n    }\r\n\r\n    static addAditionalQueryParameterToUrl(url, params) {\r\n        try {\r\n            if (!params || params.length === 0) {\r\n                return url;\r\n            }\r\n\r\n            let modifiedUrl = new URL(url);\r\n\r\n            params.forEach((param) => {\r\n                if (param.key && param.value) {\r\n                    modifiedUrl.searchParams.set(param.key, param.value);\r\n                }\r\n            });\r\n\r\n            return modifiedUrl.href;\r\n\r\n\r\n        } catch (e) {\r\n            return url;\r\n        }\r\n    }\r\n\r\n    static parseHttpHeaders(headerStr) {\r\n        let headers = {};\r\n        if (!headerStr) {\r\n            return headers;\r\n        }\r\n\r\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\r\n        // which send a string starting with a \"\\n\" character\r\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\r\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\r\n            let headerPair = headerPairs[i];\r\n            let index = headerPair.indexOf('\\u003a\\u0020');\r\n            if (index > 0) {\r\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    static generateUuid() {\r\n        let dt = new Date().getTime();\r\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            const r = (dt + Math.random() * 16) % 16 | 0;\r\n            dt = Math.floor(dt / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n\r\n    static generateHashCode(string) {\r\n        let hash = 0;\r\n\r\n        if (string.length === 0) {\r\n            return hash;\r\n        }\r\n\r\n        for (let i = 0; i < string.length; i++) {\r\n            const chr = string.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    /**\r\n     * Compares both urls and returns a relative url (target relative to original)\r\n     * @param {string} originalUrl\r\n     * @param {string} targetUrl\r\n     * @return {string|*}\r\n     */\r\n    static getRelativeUrl(originalUrl, targetUrl) {\r\n        try {\r\n            const original = new URL(originalUrl);\r\n            const target = new URL(targetUrl);\r\n\r\n            // Unify the protocol to compare the origins\r\n            original.protocol = target.protocol;\r\n            if (original.origin !== target.origin) {\r\n                return targetUrl;\r\n            }\r\n\r\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\r\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\r\n\r\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\r\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\r\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\r\n\r\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\r\n            if (target.pathname.length < relativePath.length) {\r\n                return target.pathname;\r\n            }\r\n            return relativePath;\r\n        } catch (e) {\r\n            return targetUrl\r\n        }\r\n    }\r\n\r\n    static parseUserAgent(ua = null) {\r\n        try {\r\n            const uaString = ua === null ? typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '' : '';\r\n\r\n            return UAParser(uaString);\r\n        }\r\n        catch(e) {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks for existence of \"http\" or \"https\" in a string\r\n     * @param string\r\n     * @returns {boolean}\r\n     */\r\n    static stringHasProtocol(string) {\r\n        return (/(http(s?)):\\/\\//i.test(string))\r\n    }\r\n}\r\n\r\nexport default Utils;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass ErrorsBase {\r\n    extend (errors, config) {\r\n        if (!errors) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const err in errors) {\r\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\r\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\r\n            this[err] = errors[err];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Constants declaration\r\n * @class\r\n * @ignore\r\n * @hideconstructor\r\n */\r\nclass Constants {\r\n\r\n    init() {\r\n        /**\r\n         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STREAM = 'stream';\r\n\r\n        /**\r\n         *  @constant {string} VIDEO Video media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VIDEO = 'video';\r\n\r\n        /**\r\n         *  @constant {string} AUDIO Audio media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.AUDIO = 'audio';\r\n\r\n        /**\r\n         *  @constant {string} TEXT Text media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TEXT = 'text';\r\n\r\n        /**\r\n         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MUXED = 'muxed';\r\n\r\n        /**\r\n         *  @constant {string} IMAGE Image media type\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.IMAGE = 'image';\r\n\r\n        /**\r\n         *  @constant {string} STPP STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.STPP = 'stpp';\r\n\r\n        /**\r\n         *  @constant {string} TTML STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TTML = 'ttml';\r\n\r\n        /**\r\n         *  @constant {string} VTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.VTT = 'vtt';\r\n\r\n        /**\r\n         *  @constant {string} WVTT STTP Subtitles format\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.WVTT = 'wvtt';\r\n\r\n        /**\r\n         *  @constant {string} Content Steering\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CONTENT_STEERING = 'contentSteering';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_BOLA = 'abrBola';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_L2A = 'abrL2A';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_LoLP = 'abrLoLP';\r\n\r\n        /**\r\n         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA = 'abrFetchThroughputCalculationDownloadedData';\r\n\r\n        /**\r\n         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING = 'abrFetchThroughputCalculationMoofParsing';\r\n\r\n        /**\r\n        *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_AAST Throughput calculation based on adjusted availability start time in low latency mode\r\n        *  @memberof Constants#\r\n        *  @static\r\n        */\r\n        this.ABR_FETCH_THROUGHPUT_CALCULATION_AAST = 'abrFetchThroughputCalculationAAST';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_DEFAULT = 'liveCatchupModeDefault';\r\n\r\n        /**\r\n         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.LIVE_CATCHUP_MODE_LOLP = 'liveCatchupModeLoLP';\r\n\r\n        /**\r\n         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\r\n\r\n        /**\r\n         *  @constant {string} EWMA Exponential moving average\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MOVING_AVERAGE_EWMA = 'ewma';\r\n\r\n        /**\r\n         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.BAD_ARGUMENT_ERROR = 'Invalid Arguments';\r\n\r\n        /**\r\n         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_FIRST_TRACK = 'firstTrack';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY = 'highestEfficiency';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\r\n\r\n        /**\r\n         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY = 'highestSelectionPriority';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_QUERY = 'query';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_MODE_HEADER = 'header';\r\n\r\n        /**\r\n         *  @constant {string} CMCD_AVAILABLE_KEYS specifies all the availables keys for CDCD metrics.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_AVAILABLE_KEYS = ['br', 'd', 'ot', 'tb', 'bl', 'dl', 'mtp', 'nor', 'nrr', 'su', 'bs', 'rtp', 'cid', 'pr', 'sf', 'sid', 'st', 'v'];\r\n\r\n        /**\r\n         *  @constant {string} CMCD_AVAILABLE_REQUESTS specifies all the availables requests type for CDCD metrics.\r\n         *  @memberof Constants#\r\n         *  @static\r\n         */\r\n        this.CMCD_AVAILABLE_REQUESTS = ['segment','mpd','xlink','steering'];\r\n\r\n        this.INITIALIZE = 'initialize';\r\n        this.TEXT_SHOWING = 'showing';\r\n        this.TEXT_HIDDEN = 'hidden';\r\n        this.CC1 = 'CC1';\r\n        this.CC3 = 'CC3';\r\n        this.UTF8 = 'utf-8';\r\n        this.SCHEME_ID_URI = 'schemeIdUri';\r\n        this.START_TIME = 'starttime';\r\n        this.SERVICE_DESCRIPTION_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:scope:2019';\r\n        this.SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME = 'urn:dvb:dash:lowlatency:critical:2019';\r\n        this.XML = 'XML';\r\n        this.ARRAY_BUFFER = 'ArrayBuffer';\r\n        this.DVB_REPORTING_URL = 'dvb:reportingUrl';\r\n        this.DVB_PROBABILITY = 'dvb:probability';\r\n        this.VIDEO_ELEMENT_READY_STATES = {\r\n            HAVE_NOTHING: 0,\r\n            HAVE_METADATA: 1,\r\n            HAVE_CURRENT_DATA: 2,\r\n            HAVE_FUTURE_DATA: 3,\r\n            HAVE_ENOUGH_DATA: 4\r\n        };\r\n        this.FILE_LOADER_TYPES = {\r\n            FETCH: 'fetch_loader',\r\n            XHR: 'xhr_loader'\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nconst constants = new Constants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Protection Constants declaration\r\n * @class\r\n * @ignore\r\n */\r\nclass ProtectionConstants {\r\n\r\n    init () {\r\n        this.CLEARKEY_KEYSTEM_STRING = 'org.w3.clearkey';\r\n        this.WIDEVINE_KEYSTEM_STRING = 'com.widevine.alpha';\r\n        this.PLAYREADY_KEYSTEM_STRING = 'com.microsoft.playready';\r\n        this.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING = 'com.microsoft.playready.recommendation';\r\n        this.INITIALIZATION_DATA_TYPE_CENC = 'cenc';\r\n        this.INITIALIZATION_DATA_TYPE_KEYIDS = 'keyids'\r\n        this.INITIALIZATION_DATA_TYPE_WEBM = 'webm'\r\n    }\r\n\r\n    constructor () {\r\n        this.init();\r\n    }\r\n}\r\n\r\nlet constants = new ProtectionConstants();\r\nexport default constants;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nconst LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\r\n    attributes: ['Laurl', 'laurl'],\r\n    prefixes: ['clearkey', 'dashif']\r\n};\r\n\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass CommonEncryption {\r\n    /**\r\n     * Find and return the ContentProtection element in the given array\r\n     * that indicates support for MPEG Common Encryption\r\n     *\r\n     * @param {Array} cpArray array of content protection elements\r\n     * @returns {Object|null} the Common Encryption content protection element or\r\n     * null if one was not found\r\n     */\r\n    static findCencContentProtection(cpArray) {\r\n        let retVal = null;\r\n        for (let i = 0; i < cpArray.length; ++i) {\r\n            let cp = cpArray[i];\r\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\r\n                (cp.value.toLowerCase() === 'cenc' || cp.value.toLowerCase() === 'cbcs'))\r\n                retVal = cp;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Returns just the data portion of a single PSSH\r\n     *\r\n     * @param {ArrayBuffer} pssh - the PSSH\r\n     * @return {ArrayBuffer} data portion of the PSSH\r\n     */\r\n    static getPSSHData(pssh) {\r\n        let offset = 8; // Box size and type fields\r\n        let view = new DataView(pssh);\r\n\r\n        // Read version\r\n        let version = view.getUint8(offset);\r\n\r\n        offset += 20; // Version (1), flags (3), system ID (16)\r\n\r\n        if (version > 0) {\r\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\r\n        }\r\n\r\n        offset += 4; // Data size\r\n        return pssh.slice(offset);\r\n    }\r\n\r\n    /**\r\n     * Returns the PSSH associated with the given key system from the concatenated\r\n     * list of PSSH boxes in the given initData\r\n     *\r\n     * @param {KeySystem} keySystem the desired\r\n     * key system\r\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\r\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\r\n     * or null if a valid association could not be found.\r\n     */\r\n    static getPSSHForKeySystem(keySystem, initData) {\r\n        let psshList = CommonEncryption.parsePSSHList(initData);\r\n        if (keySystem && psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\r\n            return psshList[keySystem.uuid.toLowerCase()];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parse a standard common encryption PSSH which contains a simple\r\n     * base64-encoding of the init data\r\n     *\r\n     * @param {Object} cpData the ContentProtection element\r\n     * @param {BASE64} BASE64 reference\r\n     * @returns {ArrayBuffer|null} the init data or null if not found\r\n     */\r\n    static parseInitDataFromContentProtection(cpData, BASE64) {\r\n        if ('pssh' in cpData) {\r\n\r\n            // Remove whitespaces and newlines from pssh text\r\n            cpData.pssh.__text = cpData.pssh.__text.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, '');\r\n\r\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\r\n     *\r\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\r\n     * CDM as initialization data when CommonEncryption content is detected\r\n     * @returns {Object|Array} an object that has a property named according to each of\r\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\r\n     * and a ArrayBuffer (the entire PSSH box) as the property value\r\n     */\r\n    static parsePSSHList(data) {\r\n\r\n        if (data === null || data === undefined)\r\n            return [];\r\n\r\n        let dv = new DataView(data.buffer || data); // data.buffer first for Uint8Array support\r\n        let done = false;\r\n        let pssh = {};\r\n\r\n        // TODO: Need to check every data read for end of buffer\r\n        let byteCursor = 0;\r\n        while (!done) {\r\n\r\n            let size,\r\n                nextBox,\r\n                version,\r\n                systemID;\r\n            let boxStart = byteCursor;\r\n\r\n            if (byteCursor >= dv.buffer.byteLength)\r\n                break;\r\n\r\n            /* Box size */\r\n            size = dv.getUint32(byteCursor);\r\n            nextBox = byteCursor + size;\r\n            byteCursor += 4;\r\n\r\n            /* Verify PSSH */\r\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor += 4;\r\n\r\n            /* Version must be 0 or 1 */\r\n            version = dv.getUint8(byteCursor);\r\n            if (version !== 0 && version !== 1) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor++;\r\n\r\n            byteCursor += 3; /* skip flags */\r\n\r\n            // 16-byte UUID/SystemID\r\n            systemID = '';\r\n            let i, val;\r\n            for (i = 0; i < 4; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 4;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 6; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 6;\r\n\r\n            systemID = systemID.toLowerCase();\r\n\r\n            /* PSSH Data Size */\r\n            byteCursor += 4;\r\n\r\n            /* PSSH Data */\r\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\r\n            byteCursor = nextBox;\r\n        }\r\n\r\n        return pssh;\r\n    }\r\n\r\n    static getLicenseServerUrlFromMediaInfo(mediaInfo, schemeIdUri) {\r\n        try {\r\n\r\n            if (!mediaInfo || mediaInfo.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            let i = 0;\r\n            let licenseServer = null;\r\n\r\n            while (i < mediaInfo.length && !licenseServer) {\r\n                const info = mediaInfo[i];\r\n\r\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\r\n                    const targetProtectionData = info.contentProtection.filter((cp) => {\r\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdUri;\r\n                    });\r\n\r\n                    if (targetProtectionData && targetProtectionData.length > 0) {\r\n                        let j = 0;\r\n                        while (j < targetProtectionData.length && !licenseServer) {\r\n                            const ckData = targetProtectionData[j];\r\n                            let k = 0;\r\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\r\n                                let l = 0;\r\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\r\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\r\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\r\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\r\n                                        licenseServer = ckData[attribute].__text;\r\n                                    }\r\n                                    l += 1;\r\n                                }\r\n                                k += 1;\r\n                            }\r\n                            j += 1;\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return licenseServer;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default CommonEncryption;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase';\r\n\r\n/**\r\n * @class\r\n */\r\nclass ProtectionEvents extends EventsBase {\r\n    /**\r\n     * @description Public facing external events to be used when including protection package.\r\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\r\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         *\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one decryption keys has changed\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key has been added\r\n         *\r\n         * @constant\r\n         * @deprecated The latest versions of the EME specification no longer\r\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\r\n         * is preferred.\r\n         * @event ProtectionEvents#KEY_ADDED\r\n         */\r\n        this.KEY_ADDED = 'public_keyAdded';\r\n        /**\r\n         * Event ID for events delivered when an error is encountered by the CDM\r\n         * while processing a license server response message\r\n         * @event ProtectionEvents#KEY_ERROR\r\n         */\r\n        this.KEY_ERROR = 'public_keyError';\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         * @event ProtectionEvents#KEY_MESSAGE\r\n         */\r\n        this.KEY_MESSAGE = 'public_keyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session close\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\r\n         */\r\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key sessions creation\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CREATED\r\n         */\r\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session removal\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\r\n         */\r\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one or more\r\n         * decryption keys has changed\r\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\r\n         */\r\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system access procedure\r\n         * has completed\r\n         * @event ProtectionEvents#KEY_SYSTEM_ACCESS_COMPLETE\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\r\n         */\r\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a license request procedure\r\n         * has completed\r\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\r\n         */\r\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\r\n\r\n        /**\r\n         * Sending a license rquest\r\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\r\n         */\r\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\r\n\r\n        /**\r\n         * Event ID for needkey/encrypted events\r\n         * @ignore\r\n         */\r\n        this.NEED_KEY = 'needkey';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is detected and created.\r\n         * @event ProtectionEvents#PROTECTION_CREATED\r\n         */\r\n        this.PROTECTION_CREATED = 'public_protectioncreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is destroyed.\r\n         * @event ProtectionEvents#PROTECTION_DESTROYED\r\n         */\r\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new server certificate has\r\n         * been delivered to the CDM\r\n         * @ignore\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the process of shutting down\r\n         * a protection set has completed\r\n         * @ignore\r\n         */\r\n        this.TEARDOWN_COMPLETE = 'protectionTeardownComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a HTMLMediaElement has been\r\n         * associated with the protection set\r\n         * @ignore\r\n         */\r\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\r\n\r\n        /**\r\n         * Triggered when the key session has been updated successfully\r\n         * @ignore\r\n         */\r\n        this.KEY_SESSION_UPDATED = 'public_keySessionUpdated';\r\n    }\r\n}\r\n\r\nlet protectionEvents = new ProtectionEvents();\r\nexport default protectionEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport MediaCapability from '../vo/MediaCapability';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport LicenseRequest from '../vo/LicenseRequest';\r\nimport LicenseResponse from '../vo/LicenseResponse';\r\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\r\nimport Utils from '../../../core/Utils';\r\nimport Constants from '../../constants/Constants';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nconst NEEDKEY_BEFORE_INITIALIZE_RETRIES = 5;\r\nconst NEEDKEY_BEFORE_INITIALIZE_TIMEOUT = 500;\r\n\r\nconst LICENSE_SERVER_REQUEST_RETRIES = 3;\r\nconst LICENSE_SERVER_REQUEST_RETRY_INTERVAL = 1000;\r\nconst LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT = 8000;\r\n\r\n/**\r\n * @module ProtectionController\r\n * @description Provides access to media protection information and functionality.  Each\r\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\r\n * which encapsulates a set of protection information (EME APIs, selected key system,\r\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\r\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\r\n * functionality provided in {@link ProtectionKeyController}.\r\n * @todo ProtectionController does almost all of its tasks automatically after init() is\r\n * called.  Applications might want more control over this process and want to go through\r\n * each step manually (key system selection, session creation, session maintenance).\r\n * This module can be accessed using the MediaPlayer API getProtectionController()\r\n * @param {Object} config\r\n */\r\n\r\nfunction ProtectionController(config) {\r\n\r\n    config = config || {};\r\n    const protectionKeyController = config.protectionKeyController;\r\n    let protectionModel = config.protectionModel;\r\n    const eventBus = config.eventBus;\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const BASE64 = config.BASE64;\r\n    const constants = config.constants;\r\n    let needkeyRetries = [];\r\n    const cmcdModel = config.cmcdModel;\r\n    const settings = config.settings;\r\n    const customParametersModel = config.customParametersModel;\r\n\r\n    let instance,\r\n        logger,\r\n        pendingKeySessionsToHandle,\r\n        mediaInfoArr,\r\n        protDataSet,\r\n        sessionType,\r\n        robustnessLevel,\r\n        selectedKeySystem,\r\n        keySystemSelectionInProgress,\r\n        licenseXhrRequest,\r\n        licenseRequestRetryTimeout;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        pendingKeySessionsToHandle = [];\r\n        mediaInfoArr = [];\r\n        sessionType = 'temporary';\r\n        robustnessLevel = '';\r\n        licenseXhrRequest = null;\r\n        licenseRequestRetryTimeout = null;\r\n        eventBus.on(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\r\n        eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\r\n    }\r\n\r\n    function checkConfig() {\r\n        if (!eventBus || !eventBus.hasOwnProperty('on') || !protectionKeyController || !protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize this protection system for a given media type.\r\n     *\r\n     * @param {StreamInfo} [mediaInfo] Media information\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function initializeForMedia(mediaInfo) {\r\n        // Not checking here if a session for similar KS/KID combination is already created\r\n        // because still don't know which keysystem will be selected.\r\n        // Once Keysystem is selected and before creating the session, we will do that check\r\n        // so we create the strictly necessary DRM sessions\r\n        if (!mediaInfo) {\r\n            throw new Error('mediaInfo can not be null or undefined');\r\n        }\r\n\r\n        checkConfig();\r\n\r\n        mediaInfoArr.push(mediaInfo);\r\n    }\r\n\r\n    /**\r\n     * Once all mediaInfo objects have been added to our mediaInfoArray we can select a key system or check if the kid has changed and we need to trigger a new license request\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function handleKeySystemFromManifest() {\r\n        if (!mediaInfoArr || mediaInfoArr.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let supportedKeySystems = [];\r\n        mediaInfoArr.forEach((mInfo) => {\r\n            const currentKs = protectionKeyController.getSupportedKeySystemsFromContentProtection(mInfo.contentProtection, protDataSet, sessionType);\r\n            // We assume that the same key systems are signaled for each AS. We can use the first entry we found\r\n            if (currentKs.length > 0) {\r\n                if (supportedKeySystems.length === 0) {\r\n                    supportedKeySystems = currentKs;\r\n                }\r\n                // Save config for creating key session once we selected a key system\r\n                pendingKeySessionsToHandle.push(currentKs);\r\n            }\r\n        })\r\n\r\n        if (supportedKeySystems && supportedKeySystems.length > 0) {\r\n            _selectKeySystemOrUpdateKeySessions(supportedKeySystems, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Selects a key system if we dont have any one yet. Otherwise we use the existing key system and trigger a new license request if the initdata has changed\r\n     * @param {array} supportedKs\r\n     * @private\r\n     */\r\n    function _handleKeySystemFromPssh(supportedKs) {\r\n        pendingKeySessionsToHandle.push(supportedKs);\r\n        _selectKeySystemOrUpdateKeySessions(supportedKs, false);\r\n    }\r\n\r\n    /**\r\n     * Select the key system or update one of our existing key sessions\r\n     * @param {array} supportedKs\r\n     * @param {boolean} fromManifest\r\n     * @private\r\n     */\r\n    function _selectKeySystemOrUpdateKeySessions(supportedKs, fromManifest) {\r\n        // First time, so we need to select a key system\r\n        if (!selectedKeySystem && !keySystemSelectionInProgress) {\r\n            _selectInitialKeySystem(supportedKs, fromManifest);\r\n        }\r\n\r\n        // We already selected a key system. We only need to trigger a new license exchange if the init data has changed\r\n        else if (selectedKeySystem) {\r\n            _handleKeySessions();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * We do not have a key system yet. Select one\r\n     * @param {array} supportedKs\r\n     * @param {boolean} fromManifest\r\n     * @private\r\n     */\r\n    function _selectInitialKeySystem(supportedKs, fromManifest) {\r\n        if (!keySystemSelectionInProgress) {\r\n            keySystemSelectionInProgress = true;\r\n            const requestedKeySystems = [];\r\n\r\n            // Reorder key systems according to priority order provided in protectionData\r\n            supportedKs = supportedKs.sort((ksA, ksB) => {\r\n                let indexA = (protDataSet && protDataSet[ksA.ks.systemString] && protDataSet[ksA.ks.systemString].priority >= 0) ? protDataSet[ksA.ks.systemString].priority : supportedKs.length;\r\n                let indexB = (protDataSet && protDataSet[ksB.ks.systemString] && protDataSet[ksB.ks.systemString].priority >= 0) ? protDataSet[ksB.ks.systemString].priority : supportedKs.length;\r\n                return indexA - indexB;\r\n            });\r\n\r\n            // Add all key systems to our request list since we have yet to select a key system\r\n            for (let i = 0; i < supportedKs.length; i++) {\r\n                const keySystemConfiguration = _getKeySystemConfiguration(supportedKs[i]);\r\n                requestedKeySystems.push({\r\n                    ks: supportedKs[i].ks,\r\n                    configs: [keySystemConfiguration],\r\n                    protData: supportedKs[i].protData\r\n                });\r\n            }\r\n\r\n            let keySystemAccess;\r\n\r\n            protectionModel.requestKeySystemAccess(requestedKeySystems)\r\n                .then((event) => {\r\n                    keySystemAccess = event.data;\r\n                    let selectedSystemString = keySystemAccess.mksa && keySystemAccess.mksa.selectedSystemString ? keySystemAccess.mksa.selectedSystemString : keySystemAccess.keySystem.systemString;\r\n                    logger.info('DRM: KeySystem Access Granted for system string (' + selectedSystemString + ')!  Selecting key system...');\r\n                    return protectionModel.selectKeySystem(keySystemAccess);\r\n                })\r\n                .then((keySystem) => {\r\n                    selectedKeySystem = keySystem;\r\n                    keySystemSelectionInProgress = false;\r\n\r\n                    if (!protectionModel) {\r\n                        return;\r\n                    }\r\n\r\n                    eventBus.trigger(events.KEY_SYSTEM_SELECTED, { data: keySystemAccess });\r\n\r\n                    // Set server certificate from protData\r\n                    const protData = _getProtDataForKeySystem(selectedKeySystem);\r\n                    if (protData && protData.serverCertificate && protData.serverCertificate.length > 0) {\r\n                        protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);\r\n                    }\r\n\r\n                    _handleKeySessions();\r\n                })\r\n                .catch((event) => {\r\n                    selectedKeySystem = null;\r\n                    keySystemSelectionInProgress = false;\r\n                    if (!fromManifest) {\r\n                        eventBus.trigger(events.KEY_SYSTEM_SELECTED, {\r\n                            data: null,\r\n                            error: new DashJSError(ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, ProtectionErrors.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + 'Error selecting key system! -- ' + event.error)\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If we have already selected a key system we only need to create a new key session and issue a new license request if the init data has changed.\r\n     * @private\r\n     */\r\n    function _handleKeySessions() {\r\n        // Create key sessions for the different AdaptationSets\r\n        let ksIdx;\r\n        for (let i = 0; i < pendingKeySessionsToHandle.length; i++) {\r\n            for (ksIdx = 0; ksIdx < pendingKeySessionsToHandle[i].length; ksIdx++) {\r\n                if (selectedKeySystem === pendingKeySessionsToHandle[i][ksIdx].ks) {\r\n                    const current = pendingKeySessionsToHandle[i][ksIdx]\r\n                    _loadOrCreateKeySession(current)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        pendingKeySessionsToHandle = [];\r\n    }\r\n\r\n    /**\r\n     * Loads an existing key session if we already have a session id. Otherwise we create a new key session\r\n     * @param {object} keySystemInfo\r\n     * @private\r\n     */\r\n    function _loadOrCreateKeySession(keySystemInfo) {\r\n        // Clearkey\r\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\r\n            // For Clearkey: if parameters for generating init data was provided by the user, use them for generating\r\n            // initData and overwrite possible initData indicated in encrypted event (EME)\r\n            if (keySystemInfo.protData && keySystemInfo.protData.hasOwnProperty('clearkeys') && Object.keys(keySystemInfo.protData.clearkeys).length !== 0) {\r\n                const initData = { kids: Object.keys(keySystemInfo.protData.clearkeys) };\r\n                keySystemInfo.initData = new TextEncoder().encode(JSON.stringify(initData));\r\n            }\r\n        }\r\n\r\n        // Reuse existing KeySession\r\n        if (keySystemInfo.sessionId) {\r\n            // Load MediaKeySession with sessionId\r\n            loadKeySession(keySystemInfo);\r\n        }\r\n\r\n        // Create a new KeySession\r\n        else if (keySystemInfo.initData !== null) {\r\n            // Create new MediaKeySession with initData\r\n            createKeySession(keySystemInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads a key session with the given session ID from persistent storage.  This essentially creates a new key session\r\n     *\r\n     * @param {object} ksInfo\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @ignore\r\n     */\r\n    function loadKeySession(keySystemInfo) {\r\n        checkConfig();\r\n        protectionModel.loadKeySession(keySystemInfo);\r\n    }\r\n\r\n    /**\r\n     * Create a new key session associated with the given initialization data from the MPD or from the PSSH box in the media\r\n     * For the latest version of the EME a request is generated. Once this request is ready we get notified via the INTERNAL_KEY_MESSAGE event\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {Uint8Array} cdmData the custom data to provide to licenser\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @ignore\r\n     */\r\n    function createKeySession(keySystemInfo) {\r\n        const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, keySystemInfo ? keySystemInfo.initData : null);\r\n\r\n        if (initDataForKS) {\r\n\r\n            // Check for duplicate key id\r\n            if (_isKeyIdDuplicate(keySystemInfo.keyId)) {\r\n                return;\r\n            }\r\n\r\n            // Check for duplicate initData\r\n            if (_isInitDataDuplicate(initDataForKS)) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                keySystemInfo.initData = initDataForKS;\r\n                protectionModel.createKeySession(keySystemInfo);\r\n            } catch (error) {\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + error.message)\r\n                });\r\n            }\r\n        } else if (keySystemInfo && keySystemInfo.initData) {\r\n            protectionModel.createKeySession(keySystemInfo);\r\n        } else {\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Selected key system is ' + (selectedKeySystem ? selectedKeySystem.systemString : null) + '.  needkey/encrypted event contains no initData corresponding to that key system!')\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the protectionData for a specific keysystem as specified by the application.\r\n     * @param {object} keySystem\r\n     * @return {object | null}\r\n     * @private\r\n     */\r\n    function _getProtDataForKeySystem(keySystem) {\r\n        if (keySystem) {\r\n            const keySystemString = keySystem.systemString;\r\n\r\n            if (protDataSet) {\r\n                return (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes all entries from the mediaInfoArr\r\n     */\r\n    function clearMediaInfoArray() {\r\n        mediaInfoArr = [];\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps) {\r\n        checkConfig();\r\n        return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType);\r\n    }\r\n\r\n    /**\r\n     * Checks if a session has already created for the provided key id\r\n     * @param {string} keyId\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    function _isKeyIdDuplicate(keyId) {\r\n\r\n        if (!keyId) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const sessions = protectionModel.getSessions();\r\n            for (let i = 0; i < sessions.length; i++) {\r\n                if (sessions[i].getKeyId() === keyId) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the provided init data is equal to one of the existing init data values\r\n     * @param {any} initDataForKS\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    function _isInitDataDuplicate(initDataForKS) {\r\n\r\n        if (!initDataForKS) {\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            const currentInitData = protectionModel.getAllInitData();\r\n            for (let i = 0; i < currentInitData.length; i++) {\r\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\r\n                    logger.debug('DRM: Ignoring initData because we have already seen it!');\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the given key session from persistent storage and closes the session\r\n     * as if {@link ProtectionController#closeKeySession}\r\n     * was called\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionRemoved\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function removeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.removeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Closes the key session and releases all associated decryption keys.  These\r\n     * keys will no longer be available for decrypting media\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionClosed\r\n     * @ignore\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        checkConfig();\r\n        protectionModel.closeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Sets a server certificate for use by the CDM when signing key messages\r\n     * intended for a particular license server.  This will fire\r\n     * an error event if a key system has not yet been selected.\r\n     *\r\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\r\n     * certificate\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#ServerCertificateUpdated\r\n     */\r\n    function setServerCertificate(serverCertificate) {\r\n        checkConfig();\r\n        protectionModel.setServerCertificate(serverCertificate);\r\n    }\r\n\r\n    /**\r\n     * Associate this protection system with the given HTMLMediaElement.  This\r\n     * causes the system to register for needkey/encrypted events from the given\r\n     * element and provides a destination for setting of MediaKeys\r\n     *\r\n     * @param {HTMLMediaElement} element the media element to which the protection\r\n     * system should be associated\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setMediaElement(element) {\r\n        checkConfig();\r\n        if (element) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.on(events.NEED_KEY, _onNeedKey, instance);\r\n        } else if (element === null) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.off(events.NEED_KEY, _onNeedKey, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\r\n     * \"persistent-license\".  Default is \"temporary\".\r\n     *\r\n     * @param {string} value the session type\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setSessionType(value) {\r\n        sessionType = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\r\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\r\n     *\r\n     * @param {string} level the robustness level\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setRobustnessLevel(level) {\r\n        robustnessLevel = level;\r\n    }\r\n\r\n    /**\r\n     * Attach KeySystem-specific data to use for license acquisition with EME\r\n     *\r\n     * @param {Object} data an object containing property names corresponding to\r\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\r\n     * being instances of {@link ProtectionData}\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function setProtectionData(data) {\r\n        protDataSet = data;\r\n        protectionKeyController.setProtectionData(data);\r\n    }\r\n\r\n    /**\r\n     * Stop method is called when current playback is stopped/resetted.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function stop() {\r\n        _abortLicenseRequest();\r\n        if (protectionModel) {\r\n            protectionModel.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroys all protection data associated with this protection set.  This includes\r\n     * deleting all key sessions. In the case of persistent key sessions, the sessions\r\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\r\n     * associated with a HTMLMediaElement, it will be detached from that element.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @ignore\r\n     */\r\n    function reset() {\r\n        eventBus.off(events.INTERNAL_KEY_MESSAGE, _onKeyMessage, instance);\r\n        eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED, _onKeyStatusChanged, instance);\r\n\r\n        checkConfig();\r\n\r\n        _abortLicenseRequest();\r\n\r\n        setMediaElement(null);\r\n\r\n        selectedKeySystem = null;\r\n        keySystemSelectionInProgress = false;\r\n\r\n        if (protectionModel) {\r\n            protectionModel.reset();\r\n            protectionModel = null;\r\n        }\r\n\r\n        needkeyRetries.forEach(retryTimeout => clearTimeout(retryTimeout));\r\n        needkeyRetries = [];\r\n\r\n        mediaInfoArr = [];\r\n        pendingKeySessionsToHandle = [];\r\n    }\r\n\r\n    /**\r\n     * Returns an object corresponding to the EME MediaKeySystemConfiguration dictionary\r\n     * @param {object} keySystem\r\n     * @return {KeySystemConfiguration}\r\n     * @private\r\n     */\r\n    function _getKeySystemConfiguration(keySystemData) {\r\n        const protData = keySystemData.protData;\r\n        const audioCapabilities = [];\r\n        const videoCapabilities = [];\r\n        const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\r\n        const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\r\n        const ksSessionType = keySystemData.sessionType;\r\n        const distinctiveIdentifier = (protData && protData.distinctiveIdentifier) ? protData.distinctiveIdentifier : 'optional';\r\n        const persistentState = (protData && protData.persistentState) ? protData.persistentState : (ksSessionType === 'temporary') ? 'optional' : 'required';\r\n\r\n        mediaInfoArr.forEach((media) => {\r\n            if (media.type === constants.AUDIO) {\r\n                audioCapabilities.push(new MediaCapability(media.codec, audioRobustness));\r\n            } else if (media.type === constants.VIDEO) {\r\n                videoCapabilities.push(new MediaCapability(media.codec, videoRobustness));\r\n            }\r\n        });\r\n\r\n        return new KeySystemConfiguration(\r\n            audioCapabilities, videoCapabilities, distinctiveIdentifier,\r\n            persistentState,\r\n            [ksSessionType]);\r\n    }\r\n\r\n    /**\r\n     * Event handler for when the status of the key has changed\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onKeyStatusChanged(e) {\r\n        if (e.error) {\r\n            eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: null, error: e.error });\r\n        } else {\r\n            logger.debug('DRM: key status = ' + e.status);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the key message event. Once we have a key message we can issue a license request\r\n     * @param {object} e\r\n     * @private\r\n     */\r\n    function _onKeyMessage(e) {\r\n        logger.debug('DRM: onKeyMessage');\r\n\r\n        // Dispatch event to applications indicating we received a key message\r\n        const keyMessage = e.data;\r\n        eventBus.trigger(events.KEY_MESSAGE, { data: keyMessage });\r\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        const message = keyMessage.message;\r\n        const sessionToken = keyMessage.sessionToken;\r\n        const protData = _getProtDataForKeySystem(selectedKeySystem);\r\n        const licenseServerModelInstance = protectionKeyController.getLicenseServerModelInstance(selectedKeySystem, protData, messageType);\r\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\r\n\r\n        // Ensure message from CDM is not empty\r\n        if (!message || message.byteLength === 0) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Message not destined for license server\r\n        if (!licenseServerModelInstance) {\r\n            logger.debug('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionId());\r\n            _sendLicenseRequestCompleteEvent(eventData);\r\n            return;\r\n        }\r\n\r\n        // Perform any special handling for ClearKey\r\n        if (protectionKeyController.isClearKey(selectedKeySystem)) {\r\n            const clearkeys = protectionKeyController.processClearKeyLicenseRequest(selectedKeySystem, protData, message);\r\n            if (clearkeys && clearkeys.keyPairs && clearkeys.keyPairs.length > 0) {\r\n                logger.debug('DRM: ClearKey license request handled by application!');\r\n                _sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken, clearkeys);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // In all other cases we have to make a license request\r\n        _issueLicenseRequest(keyMessage, licenseServerModelInstance, protData);\r\n    }\r\n\r\n    /**\r\n     * Notify other classes that the license request was completed\r\n     * @param {object} data\r\n     * @param {object} error\r\n     * @private\r\n     */\r\n    function _sendLicenseRequestCompleteEvent(data, error) {\r\n        eventBus.trigger(events.LICENSE_REQUEST_COMPLETE, { data: data, error: error });\r\n    }\r\n\r\n    /**\r\n     * Start issuing a license request\r\n     * @param {object} keyMessage\r\n     * @param {object} licenseServerData\r\n     * @param {object} protData\r\n     * @private\r\n     */\r\n    function _issueLicenseRequest(keyMessage, licenseServerData, protData) {\r\n        const sessionToken = keyMessage.sessionToken;\r\n        const messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        const eventData = { sessionToken: sessionToken, messageType: messageType };\r\n        const keySystemString = selectedKeySystem ? selectedKeySystem.systemString : null;\r\n\r\n        // Determine license server URL\r\n        let url = _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData);\r\n\r\n        // Ensure valid license server URL\r\n        if (!url) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));\r\n            return;\r\n        }\r\n\r\n        // Set optional XMLHttpRequest headers from protection data and message\r\n        const reqHeaders = {};\r\n        let withCredentials = false;\r\n        if (protData) {\r\n            _updateHeaders(reqHeaders, protData.httpRequestHeaders);\r\n        }\r\n        const message = keyMessage.message;\r\n        const headersFromMessage = selectedKeySystem.getRequestHeadersFromMessage(message);\r\n        _updateHeaders(reqHeaders, headersFromMessage);\r\n\r\n        Object.keys(reqHeaders).forEach((key) => {\r\n            if ('authorization' === key.toLowerCase()) {\r\n                withCredentials = true;\r\n            }\r\n        });\r\n\r\n        // Overwrite withCredentials property from protData if present\r\n        if (protData && typeof protData.withCredentials == 'boolean') {\r\n            withCredentials = protData.withCredentials;\r\n        }\r\n\r\n        const onLoad = function (xhr) {\r\n            if (!protectionModel) {\r\n                return;\r\n            }\r\n\r\n            if (xhr.status >= 200 && xhr.status <= 299) {\r\n                const responseHeaders = Utils.parseHttpHeaders(xhr.getAllResponseHeaders ? xhr.getAllResponseHeaders() : null);\r\n                let licenseResponse = new LicenseResponse(xhr.responseURL, responseHeaders, xhr.response);\r\n                const licenseResponseFilters = customParametersModel.getLicenseResponseFilters();\r\n                _applyFilters(licenseResponseFilters, licenseResponse)\r\n                    .then(() => {\r\n                        const licenseMessage = licenseServerData.getLicenseMessage(licenseResponse.data, keySystemString, messageType);\r\n                        if (licenseMessage !== null) {\r\n                            _sendLicenseRequestCompleteEvent(eventData);\r\n                            protectionModel.updateKeySession(sessionToken, licenseMessage);\r\n                        } else {\r\n                            _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\r\n                        }\r\n                    });\r\n            } else {\r\n                _reportError(xhr, eventData, keySystemString, messageType, licenseServerData);\r\n            }\r\n        };\r\n\r\n        const onAbort = function (xhr) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR aborted. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const onError = function (xhr) {\r\n            _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n                ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR error. status is \"' +\r\n                xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState));\r\n        };\r\n\r\n        const reqPayload = selectedKeySystem.getLicenseRequestFromMessage(message);\r\n        const reqMethod = licenseServerData.getHTTPMethod(messageType);\r\n        const responseType = licenseServerData.getResponseType(keySystemString, messageType);\r\n        const timeout = protData && !isNaN(protData.httpTimeout) ? protData.httpTimeout : LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;\r\n        const sessionId = sessionToken.getSessionId() || null;\r\n\r\n        let licenseRequest = new LicenseRequest(url, reqMethod, responseType, reqHeaders, withCredentials, messageType, sessionId, reqPayload);\r\n        const retryAttempts = !isNaN(settings.get().streaming.retryAttempts[HTTPRequest.LICENSE]) ? settings.get().streaming.retryAttempts[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRIES;\r\n        const licenseRequestFilters = customParametersModel.getLicenseRequestFilters();\r\n        _applyFilters(licenseRequestFilters, licenseRequest)\r\n            .then(() => {\r\n                _doLicenseRequest(licenseRequest, retryAttempts, timeout, onLoad, onAbort, onError);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience\r\n     * @param {object} request\r\n     * @param {number} retriesCount\r\n     * @param {number} timeout\r\n     * @param {function} onLoad\r\n     * @param {function} onAbort\r\n     * @param {function} onError\r\n     * @private\r\n     */\r\n    function _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError) {\r\n        const xhr = new XMLHttpRequest();\r\n        const cmcdParameters = cmcdModel.getCmcdParametersFromManifest();\r\n\r\n        if (cmcdModel.isCmcdEnabled()) {\r\n            const cmcdMode = cmcdParameters.mode ? cmcdParameters.mode : settings.get().streaming.cmcd.mode;\r\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\r\n                const cmcdParams = cmcdModel.getQueryParameter({\r\n                    url: request.url,\r\n                    type: HTTPRequest.LICENSE\r\n                });\r\n\r\n                if (cmcdParams) {\r\n                    request.url = Utils.addAditionalQueryParameterToUrl(request.url, [cmcdParams]);\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.open(request.method, request.url, true);\r\n        xhr.responseType = request.responseType;\r\n        xhr.withCredentials = request.withCredentials;\r\n        if (timeout > 0) {\r\n            xhr.timeout = timeout;\r\n        }\r\n        for (const key in request.headers) {\r\n            xhr.setRequestHeader(key, request.headers[key]);\r\n        }\r\n\r\n        if (cmcdModel.isCmcdEnabled()) {\r\n            const cmcdMode = cmcdParameters.mode ? cmcdParameters.mode : settings.get().streaming.cmcd.mode;\r\n            if (cmcdMode === Constants.CMCD_MODE_HEADER) {\r\n                const cmcdHeaders = cmcdModel.getHeaderParameters({\r\n                    url: request.url,\r\n                    type: HTTPRequest.LICENSE\r\n                });\r\n\r\n                if (cmcdHeaders) {\r\n                    for (const header in cmcdHeaders) {\r\n                        let value = cmcdHeaders[header];\r\n                        if (value) {\r\n                            xhr.setRequestHeader(header, value);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const _retryRequest = function () {\r\n            // fail silently and retry\r\n            retriesCount--;\r\n            const retryInterval = !isNaN(settings.get().streaming.retryIntervals[HTTPRequest.LICENSE]) ? settings.get().streaming.retryIntervals[HTTPRequest.LICENSE] : LICENSE_SERVER_REQUEST_RETRY_INTERVAL;\r\n            licenseRequestRetryTimeout = setTimeout(function () {\r\n                _doLicenseRequest(request, retriesCount, timeout, onLoad, onAbort, onError);\r\n            }, retryInterval);\r\n        };\r\n\r\n        xhr.onload = function () {\r\n            licenseXhrRequest = null;\r\n            if (this.status >= 200 && this.status <= 299 || retriesCount <= 0) {\r\n                onLoad(this);\r\n            } else {\r\n                logger.warn('License request failed (' + this.status + '). Retrying it... Pending retries: ' + retriesCount);\r\n                _retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.ontimeout = xhr.onerror = function () {\r\n            licenseXhrRequest = null;\r\n            if (retriesCount <= 0) {\r\n                onError(this);\r\n            } else {\r\n                logger.warn('License request network request failed . Retrying it... Pending retries: ' + retriesCount);\r\n                _retryRequest();\r\n            }\r\n        };\r\n\r\n        xhr.onabort = function () {\r\n            onAbort(this);\r\n        };\r\n\r\n        // deprecated, to be removed\r\n        eventBus.trigger(events.LICENSE_REQUEST_SENDING, {\r\n            url: request.url,\r\n            headers: request.headers,\r\n            payload: request.data,\r\n            sessionId: request.sessionId\r\n        });\r\n\r\n        licenseXhrRequest = xhr;\r\n        xhr.send(request.data);\r\n    }\r\n\r\n    /**\r\n     * Aborts license request\r\n     * @private\r\n     */\r\n    function _abortLicenseRequest() {\r\n        if (licenseXhrRequest) {\r\n            licenseXhrRequest.onloadend = licenseXhrRequest.onerror = licenseXhrRequest.onprogress = undefined; //Ignore events from aborted requests.\r\n            licenseXhrRequest.abort();\r\n            licenseXhrRequest = null;\r\n        }\r\n\r\n        if (licenseRequestRetryTimeout) {\r\n            clearTimeout(licenseRequestRetryTimeout);\r\n            licenseRequestRetryTimeout = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the url of the license server\r\n     * @param {object} protData\r\n     * @param {string} messageType\r\n     * @param {object} sessionToken\r\n     * @param {object} keyMessage\r\n     * @param {object} licenseServerData\r\n     * @return {*}\r\n     * @private\r\n     */\r\n    function _getLicenseServerUrl(protData, messageType, sessionToken, keyMessage, licenseServerData) {\r\n        let url = null;\r\n        const message = keyMessage.message;\r\n\r\n        // Check if the url is defined by the application\r\n        if (protData && protData.serverURL) {\r\n            const serverURL = protData.serverURL;\r\n            if (typeof serverURL === 'string' && serverURL !== '') {\r\n                url = serverURL;\r\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\r\n                url = serverURL[messageType];\r\n            }\r\n        }\r\n\r\n        // This is the old way of providing the url\r\n        else if (protData && protData.laURL && protData.laURL !== '') {\r\n            url = protData.laURL;\r\n        }\r\n\r\n        // No url provided by the app. Check the manifest and the pssh\r\n        else {\r\n            // Check for url defined in the manifest\r\n            url = CommonEncryption.getLicenseServerUrlFromMediaInfo(mediaInfoArr, selectedKeySystem.schemeIdURI);\r\n\r\n            // In case we are not using Clearky we can still get a url from the pssh.\r\n            if (!url && !protectionKeyController.isClearKey(selectedKeySystem)) {\r\n                const psshData = CommonEncryption.getPSSHData(sessionToken.initData);\r\n                url = selectedKeySystem.getLicenseServerURLFromInitData(psshData);\r\n\r\n                // Still no url, check the keymessage\r\n                if (!url) {\r\n                    url = keyMessage.laURL;\r\n                }\r\n            }\r\n        }\r\n        // Possibly update or override the URL based on the message\r\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Add new headers to the existing ones\r\n     * @param {array} reqHeaders\r\n     * @param {object} headers\r\n     * @private\r\n     */\r\n    function _updateHeaders(reqHeaders, headers) {\r\n        if (headers) {\r\n            for (const key in headers) {\r\n                reqHeaders[key] = headers[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reports an error that might have occured during the license request\r\n     * @param {object} xhr\r\n     * @param {object} eventData\r\n     * @param {string} keySystemString\r\n     * @param {string} messageType\r\n     * @param {object} licenseServerData\r\n     * @private\r\n     */\r\n    function _reportError(xhr, eventData, keySystemString, messageType, licenseServerData) {\r\n        let errorMsg = 'NONE';\r\n        let data = null;\r\n\r\n        if (xhr.response) {\r\n            errorMsg = licenseServerData.getErrorResponse(xhr.response, keySystemString, messageType);\r\n            data = {\r\n                serverResponse: xhr.response || null,\r\n                responseCode: xhr.status || null,\r\n                responseText: xhr.statusText || null\r\n            }\r\n        }\r\n\r\n        _sendLicenseRequestCompleteEvent(eventData, new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,\r\n            ProtectionErrors.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + keySystemString + ' update, XHR complete. status is \"' +\r\n            xhr.statusText + '\" (' + xhr.status + '), readyState is ' + xhr.readyState + '.  Response is ' + errorMsg,\r\n            data\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Applies custom filters defined by the application\r\n     * @param {array} filters\r\n     * @param {object} param\r\n     * @return {Promise<void>|*}\r\n     * @private\r\n     */\r\n    function _applyFilters(filters, param) {\r\n        if (!filters) return Promise.resolve();\r\n        return filters.reduce((prev, next) => {\r\n            return prev.then(() => {\r\n                return next(param);\r\n            });\r\n        }, Promise.resolve());\r\n    }\r\n\r\n    /**\r\n     * Event handler for \"needkey\" and \"encrypted\" events\r\n     * @param {object} event\r\n     * @param {number} retry\r\n     * @private\r\n     */\r\n    function _onNeedKey(event, retry) {\r\n        if (!settings.get().streaming.protection.ignoreEmeEncryptedEvent) {\r\n            logger.debug('DRM: onNeedKey');\r\n\r\n            // Ignore non-cenc initData\r\n            if (event.key.initDataType !== 'cenc') {\r\n                logger.warn('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\r\n                return;\r\n            }\r\n\r\n            if (mediaInfoArr.length === 0) {\r\n                logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');\r\n                retry = typeof retry === 'undefined' ? 1 : retry + 1;\r\n                if (retry < NEEDKEY_BEFORE_INITIALIZE_RETRIES) {\r\n                    needkeyRetries.push(setTimeout(() => {\r\n                        _onNeedKey(event, retry);\r\n                    }, NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\r\n            // Convert to ArrayBuffer\r\n            let abInitData = event.key.initData;\r\n            if (ArrayBuffer.isView(abInitData)) {\r\n                abInitData = abInitData.buffer;\r\n            }\r\n\r\n            // If key system has already been selected and initData already seen, then do nothing\r\n            if (selectedKeySystem) {\r\n                const initDataForKS = CommonEncryption.getPSSHForKeySystem(selectedKeySystem, abInitData);\r\n                if (initDataForKS) {\r\n                    // Check for duplicate initData\r\n                    if (_isInitDataDuplicate(initDataForKS)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            logger.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\r\n\r\n            const supportedKs = protectionKeyController.getSupportedKeySystemsFromSegmentPssh(abInitData, protDataSet, sessionType);\r\n            if (supportedKs.length === 0) {\r\n                logger.debug('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\r\n                return;\r\n            }\r\n\r\n            _handleKeySystemFromPssh(supportedKs);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all available key systems\r\n     * @return {array}\r\n     */\r\n    function getKeySystems() {\r\n        return protectionKeyController ? protectionKeyController.getKeySystems() : [];\r\n    }\r\n\r\n    /**\r\n     * Sets all available key systems\r\n     * @param {array} keySystems\r\n     */\r\n    function setKeySystems(keySystems) {\r\n        if (protectionKeyController) {\r\n            protectionKeyController.setKeySystems(keySystems);\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initializeForMedia,\r\n        clearMediaInfoArray,\r\n        handleKeySystemFromManifest,\r\n        createKeySession,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        setMediaElement,\r\n        setSessionType,\r\n        setRobustnessLevel,\r\n        setProtectionData,\r\n        getSupportedKeySystemsFromContentProtection,\r\n        getKeySystems,\r\n        setKeySystems,\r\n        stop,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nProtectionController.__dashjs_factory_name = 'ProtectionController';\r\nexport default FactoryMaker.getClassFactory(ProtectionController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from './../CommonEncryption';\r\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\r\nimport KeySystemW3CClearKey from './../drm/KeySystemW3CClearKey';\r\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\r\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\r\nimport DRMToday from './../servers/DRMToday';\r\nimport PlayReady from './../servers/PlayReady';\r\nimport Widevine from './../servers/Widevine';\r\nimport ClearKey from './../servers/ClearKey';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\n/**\r\n * @module ProtectionKeyController\r\n * @ignore\r\n * @description Media protection key system functionality that can be modified/overridden by applications\r\n */\r\nfunction ProtectionKeyController() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        debug,\r\n        logger,\r\n        keySystems,\r\n        BASE64,\r\n        settings,\r\n        clearkeyKeySystem,\r\n        clearkeyW3CKeySystem;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.debug) {\r\n            debug = config.debug;\r\n            logger = debug.getLogger(instance);\r\n        }\r\n\r\n        if (config.BASE64) {\r\n            BASE64 = config.BASE64;\r\n        }\r\n\r\n        if(config.settings) {\r\n            settings = config.settings\r\n        }\r\n    }\r\n\r\n    function initialize() {\r\n        keySystems = [];\r\n\r\n        let keySystem;\r\n\r\n        // PlayReady\r\n        keySystem = KeySystemPlayReady(context).getInstance({BASE64: BASE64, settings: settings});\r\n        keySystems.push(keySystem);\r\n\r\n        // Widevine\r\n        keySystem = KeySystemWidevine(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n\r\n        // ClearKey\r\n        keySystem = KeySystemClearKey(context).getInstance({BASE64: BASE64});\r\n        keySystems.push(keySystem);\r\n        clearkeyKeySystem = keySystem;\r\n\r\n        // W3C ClearKey\r\n        keySystem = KeySystemW3CClearKey(context).getInstance({BASE64: BASE64, debug: debug});\r\n        keySystems.push(keySystem);\r\n        clearkeyW3CKeySystem = keySystem;\r\n    }\r\n\r\n    /**\r\n     * Returns a prioritized list of key systems supported\r\n     * by this player (not necessarily those supported by the\r\n     * user agent)\r\n     *\r\n     * @returns {Array.<KeySystem>} a prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystems() {\r\n        return keySystems;\r\n    }\r\n\r\n    /**\r\n     * Sets the prioritized list of key systems to be supported\r\n     * by this player.\r\n     *\r\n     * @param {Array.<KeySystem>} newKeySystems the new prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function setKeySystems(newKeySystems) {\r\n        keySystems = newKeySystems;\r\n    }\r\n\r\n    /**\r\n     * Returns the key system associated with the given key system string\r\n     * name (i.e. 'org.w3.clearkey')\r\n     *\r\n     * @param {string} systemString the system string\r\n     * @returns {KeySystem|null} the key system\r\n     * or null if no supported key system is associated with the given key\r\n     * system string\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystemBySystemString(systemString) {\r\n        for (let i = 0; i < keySystems.length; i++) {\r\n            if (keySystems[i].systemString === systemString) {\r\n                return keySystems[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the given key system is ClearKey.  This is\r\n     * necessary because the EME spec defines ClearKey and its method\r\n     * for providing keys to the key session; and this method has changed\r\n     * between the various API versions.  Our EME-specific ProtectionModels\r\n     * must know if the system is ClearKey so that it can format the keys\r\n     * according to the particular spec version.\r\n     *\r\n     * @param {Object} keySystem the key\r\n     * @returns {boolean} true if this is the ClearKey key system, false\r\n     * otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function isClearKey(keySystem) {\r\n        return (keySystem === clearkeyKeySystem || keySystem === clearkeyW3CKeySystem);\r\n    }\r\n\r\n    /**\r\n     * Check equality of initData array buffers.\r\n     *\r\n     * @param {ArrayBuffer} initData1 - first initData\r\n     * @param {ArrayBuffer} initData2 - second initData\r\n     * @returns {boolean} true if the initData arrays are equal in size and\r\n     * contents, false otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function initDataEquals(initData1, initData2) {\r\n        if (initData1.byteLength === initData2.byteLength) {\r\n            let data1 = new Uint8Array(initData1);\r\n            let data2 = new Uint8Array(initData2);\r\n\r\n            for (let j = 0; j < data1.length; j++) {\r\n                if (data1[j] !== data2[j]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @param {string} default session type\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps, protDataSet, sessionType) {\r\n        let cp, ks, ksIdx, cpIdx;\r\n        let supportedKS = [];\r\n\r\n        if (cps) {\r\n            const cencContentProtection = CommonEncryption.findCencContentProtection(cps);\r\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n                ks = keySystems[ksIdx];\r\n\r\n                // Get protection data that applies for current key system\r\n                const protData = _getProtDataForKeySystem(ks.systemString, protDataSet);\r\n\r\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\r\n                    cp = cps[cpIdx];\r\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\r\n                        // Look for DRM-specific ContentProtection\r\n                        let initData = ks.getInitData(cp, cencContentProtection);\r\n\r\n                        supportedKS.push({\r\n                            ks: keySystems[ksIdx],\r\n                            keyId: cp.keyId,\r\n                            initData: initData,\r\n                            protData: protData,\r\n                            cdmData: ks.getCDMData(protData ? protData.cdmData : null),\r\n                            sessionId: _getSessionId(protData, cp),\r\n                            sessionType: _getSessionType(protData, sessionType)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns key systems supported by this player for the given PSSH\r\n     * initializationData. Key systems are returned in priority order\r\n     * (highest priority first)\r\n     *\r\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\r\n     * supported by the content\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @param {string} default session type\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromSegmentPssh(initData, protDataSet, sessionType) {\r\n        let supportedKS = [];\r\n        let pssh = CommonEncryption.parsePSSHList(initData);\r\n        let ks, keySystemString;\r\n\r\n        for (let ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n            ks = keySystems[ksIdx];\r\n            keySystemString = ks.systemString;\r\n\r\n            // Get protection data that applies for current key system\r\n            const protData = _getProtDataForKeySystem(keySystemString, protDataSet);\r\n\r\n            if (ks.uuid in pssh) {\r\n                supportedKS.push({\r\n                    ks: ks,\r\n                    initData: pssh[ks.uuid],\r\n                    protData: protData,\r\n                    cdmData: ks.getCDMData(protData ? protData.cdmData : null),\r\n                    sessionId: _getSessionId(protData),\r\n                    sessionType: _getSessionType(protData, sessionType)\r\n                });\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns the license server implementation data that should be used for this request.\r\n     *\r\n     * @param {KeySystem} keySystem the key system\r\n     * associated with this license request\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\r\n     * request.  Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @returns {LicenseServer|null} the license server\r\n     * implementation that should be used for this request or null if the player should not\r\n     * pass messages of the given type to a license server\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     *\r\n     */\r\n    function getLicenseServerModelInstance(keySystem, protData, messageType) {\r\n\r\n        // Our default server implementations do not do anything with \"license-release\" or\r\n        // \"individualization-request\" messages, so we just send a success event\r\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\r\n            return null;\r\n        }\r\n\r\n        let licenseServerData = null;\r\n        if (protData && protData.hasOwnProperty('drmtoday')) {\r\n            licenseServerData = DRMToday(context).getInstance({BASE64: BASE64});\r\n        } else if (keySystem.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\r\n            licenseServerData = Widevine(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.PLAYREADY_KEYSTEM_STRING) {\r\n            licenseServerData = PlayReady(context).getInstance();\r\n        } else if (keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING) {\r\n            licenseServerData = ClearKey(context).getInstance();\r\n        }\r\n\r\n        return licenseServerData;\r\n    }\r\n\r\n    /**\r\n     * Allows application-specific retrieval of ClearKey keys.\r\n     *\r\n     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {ArrayBuffer} message the key message from the CDM\r\n     * @return {ClearKeyKeySet|null} the clear keys associated with\r\n     * the request or null if no keys can be returned by this function\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function processClearKeyLicenseRequest(clearkeyKeySystem, protData, message) {\r\n        try {\r\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\r\n        } catch (error) {\r\n            logger.error('Failed to retrieve clearkeys from ProtectionData');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function setProtectionData(protectionDataSet) {\r\n        var getProtectionData = function (keySystemString) {\r\n            var protData = null;\r\n            if (protectionDataSet) {\r\n                protData = (keySystemString in protectionDataSet) ? protectionDataSet[keySystemString] : null;\r\n            }\r\n            return protData;\r\n        };\r\n\r\n        for (var i = 0; i < keySystems.length; i++) {\r\n            var keySystem = keySystems[i];\r\n            if (keySystem.hasOwnProperty('init')) {\r\n                keySystem.init(getProtectionData(keySystem.systemString));\r\n            }\r\n        }\r\n    }\r\n\r\n    function _getProtDataForKeySystem(systemString, protDataSet) {\r\n        if (!protDataSet) return null;\r\n        return (systemString in protDataSet) ? protDataSet[systemString] : null;\r\n    }\r\n\r\n    function _getSessionId(protData, cp) {\r\n        // Get sessionId from protectionData or from manifest (ContentProtection)\r\n        if (protData && protData.sessionId) {\r\n            return protData.sessionId;\r\n        } else if (cp && cp.sessionId) {\r\n            return cp.sessionId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function _getSessionType(protData, sessionType) {\r\n        return (protData && protData.sessionType) ? protData.sessionType : sessionType;\r\n    }\r\n\r\n    instance = {\r\n        initialize,\r\n        setProtectionData,\r\n        isClearKey,\r\n        initDataEquals,\r\n        getKeySystems,\r\n        setKeySystems,\r\n        getKeySystemBySystemString,\r\n        getSupportedKeySystemsFromContentProtection,\r\n        getSupportedKeySystemsFromSegmentPssh,\r\n        getLicenseServerModelInstance,\r\n        processClearKeyLicenseRequest,\r\n        setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemClearKey(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionData} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp, cencContentProtection) {\r\n        try {\r\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n\r\n            if (!initData && cencContentProtection) {\r\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\r\n                const data = { kids: [cencDefaultKid] };\r\n                initData = new TextEncoder().encode(JSON.stringify(data));\r\n            }\r\n\r\n            return initData;\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\r\n        try {\r\n            let kid = cencDefaultKid.replace(/-/g, '');\r\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\r\n                return String.fromCharCode(parseInt(a, 16));\r\n            }).join(''));\r\n            return kid.replace(/=/g, '')\r\n                .replace(/\\//g, '_')\r\n                .replace(/\\+/g, '-');\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        // Set content type to application/json by default\r\n        return {\r\n            'Content-Type': 'application/json'\r\n        };\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return JSON.stringify(JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message))));\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData,\r\n        getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady DRM\r\n *\r\n * @class\r\n * @implements KeySystem\r\n */\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\r\nconst systemString = ProtectionConstants.PLAYREADY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\nconst PRCDMData = '<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';\r\n\r\nfunction KeySystemPlayReady(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    let messageFormat = 'utf-16';\r\n    const BASE64 = config.BASE64;\r\n    const settings = config.settings;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray') || !BASE64.hasOwnProperty('decodeArray') ) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(message) {\r\n        let msg,\r\n            xmlDoc;\r\n        const headers = {};\r\n        const parser = new DOMParser();\r\n\r\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\r\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\r\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\r\n                headers['Content-Type'] = 'text/xml; charset=utf-8';\r\n                return headers;\r\n            }\r\n        }\r\n\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        const headerNameList = xmlDoc.getElementsByTagName('name');\r\n        const headerValueList = xmlDoc.getElementsByTagName('value');\r\n        for (let i = 0; i < headerNameList.length; i++) {\r\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\r\n        }\r\n        // Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\r\n        // this is NOT w3c conform and license servers may reject the request!\r\n        // -> rename it to proper w3c definition!\r\n        if (headers.hasOwnProperty('Content')) {\r\n            headers['Content-Type'] = headers.Content;\r\n            delete headers.Content;\r\n        }\r\n        // Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)\r\n        // or if the message contains directly the challenge itself (Ex: LG SmartTVs)\r\n        if (!headers.hasOwnProperty('Content-Type')) {\r\n            headers['Content-Type'] = 'text/xml; charset=utf-8';\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        let licenseRequest = null;\r\n        const parser = new DOMParser();\r\n\r\n        if (settings && settings.get().streaming.protection.detectPlayreadyMessageFormat) {\r\n            // If message format configured/defaulted to utf-16 AND number of bytes is odd, assume 'unwrapped' raw CDM message.\r\n            if (messageFormat === 'utf-16' && message && message.byteLength % 2 === 1) {\r\n                return message;\r\n            }\r\n        }\r\n\r\n        const dataview = (messageFormat === 'utf-16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        checkConfig();\r\n        const msg = String.fromCharCode.apply(null, dataview);\r\n        const xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        if (xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]) {\r\n            const Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\r\n            if (Challenge) {\r\n                licenseRequest = BASE64.decode(Challenge);\r\n            }\r\n        } else {\r\n            // The message from CDM is not a wrapped message as on IE11 and Edge,\r\n            // thus it contains direclty the challenge itself\r\n            // (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)\r\n            return message;\r\n        }\r\n\r\n        return licenseRequest;\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(initData) {\r\n        if (initData) {\r\n            const data = new DataView(initData);\r\n            const numRecords = data.getUint16(4, true);\r\n            let offset = 6;\r\n            const parser = new DOMParser();\r\n\r\n            for (let i = 0; i < numRecords; i++) {\r\n                // Parse the PlayReady Record header\r\n                const recordType = data.getUint16(offset, true);\r\n                offset += 2;\r\n                const recordLength = data.getUint16(offset, true);\r\n                offset += 2;\r\n                if (recordType !== 0x0001) {\r\n                    offset += recordLength;\r\n                    continue;\r\n                }\r\n\r\n                const recordData = initData.slice(offset, offset + recordLength);\r\n                const record = String.fromCharCode.apply(null, new Uint16Array(recordData));\r\n                const xmlDoc = parser.parseFromString(record, 'application/xml');\r\n\r\n                // First try <LA_URL>\r\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\r\n                    const laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\r\n                    if (laurl) {\r\n                        return laurl;\r\n                    }\r\n                }\r\n\r\n                // Optionally, try <LUI_URL>\r\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\r\n                    const luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\r\n                    if (luiurl) {\r\n                        return luiurl;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getInitData(cpData) {\r\n        // * desc@ getInitData\r\n        // *   generate PSSH data from PROHeader defined in MPD file\r\n        // *   PSSH format:\r\n        // *   size (4)\r\n        // *   box type(PSSH) (8)\r\n        // *   Protection SystemID (16)\r\n        // *   protection system data size (4) - length of decoded PROHeader\r\n        // *   decoded PROHeader data from MPD file\r\n        const PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\r\n        const playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\r\n\r\n        let byteCursor = 0;\r\n        let uint8arraydecodedPROHeader = null;\r\n\r\n        let PROSize,\r\n            PSSHSize,\r\n            PSSHBoxBuffer,\r\n            PSSHBox,\r\n            PSSHData;\r\n\r\n        checkConfig();\r\n        if (!cpData) {\r\n            return null;\r\n        }\r\n        // Handle common encryption PSSH\r\n        if ('pssh' in cpData) {\r\n            return CommonEncryption.parseInitDataFromContentProtection(cpData, BASE64);\r\n        }\r\n        // Handle native MS PlayReady ContentProtection elements\r\n        if ('pro' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\r\n        }\r\n        else if ('prheader' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n        PROSize = uint8arraydecodedPROHeader.length;\r\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\r\n\r\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\r\n\r\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\r\n        PSSHData = new DataView(PSSHBoxBuffer);\r\n\r\n        PSSHData.setUint32(byteCursor, PSSHSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(PSSHBoxType, byteCursor);\r\n        byteCursor += PSSHBoxType.length;\r\n\r\n        PSSHBox.set(playreadySystemID, byteCursor);\r\n        byteCursor += playreadySystemID.length;\r\n\r\n        PSSHData.setUint32(byteCursor, PROSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\r\n        byteCursor += PROSize;\r\n\r\n        return PSSHBox.buffer;\r\n    }\r\n\r\n    /**\r\n     * It seems that some PlayReady implementations return their XML-based CDM\r\n     * messages using UTF16, while others return them as UTF8.  Use this function\r\n     * to modify the message format to expect when parsing CDM messages.\r\n     *\r\n     * @param {string} format the expected message format.  Either \"utf-8\" or \"utf-16\".\r\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\r\n     */\r\n    function setPlayReadyMessageFormat(format) {\r\n        if (format !== 'utf-8' && format !== 'utf-16') {\r\n            throw new Error('Specified message format is not one of \"utf-8\" or \"utf-16\"');\r\n        }\r\n        messageFormat = format;\r\n    }\r\n\r\n    /**\r\n     * Get Playready Custom data\r\n     */\r\n    function getCDMData(_cdmData) {\r\n        let customData,\r\n            cdmData,\r\n            cdmDataBytes,\r\n            i;\r\n\r\n        checkConfig();\r\n        if (!_cdmData) return null;\r\n\r\n        // Convert custom data into multibyte string\r\n        customData = [];\r\n        for (i = 0; i < _cdmData.length; ++i) {\r\n            customData.push(_cdmData.charCodeAt(i));\r\n            customData.push(0);\r\n        }\r\n        customData = String.fromCharCode.apply(null, customData);\r\n\r\n        // Encode in Base 64 the custom data string\r\n        customData = BASE64.encode(customData);\r\n\r\n        // Initialize CDM data with Base 64 encoded custom data\r\n        // (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)\r\n        cdmData = PRCDMData.replace('%CUSTOMDATA%', customData);\r\n\r\n        // Convert CDM data into multibyte characters\r\n        cdmDataBytes = [];\r\n        for (i = 0; i < cdmData.length; ++i) {\r\n            cdmDataBytes.push(cdmData.charCodeAt(i));\r\n            cdmDataBytes.push(0);\r\n        }\r\n\r\n        return new Uint8Array(cdmDataBytes).buffer;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData,\r\n        setPlayReadyMessageFormat\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\r\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemW3CClearKey(config) {\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n    const logger = config.debug.getLogger(instance);\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionDataSet} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        let clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            const keyPairs = [];\r\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\r\n                const clearkeyID = jsonMsg.kids[i];\r\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n\r\n            logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getCDMData: getCDMData,\r\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemW3CClearKey.__dashjs_factory_name = 'KeySystemW3CClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey); /* jshint ignore:line */\r\n\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Google Widevine DRM\r\n *\r\n * @class\r\n * @implements MediaPlayer.dependencies.protection.KeySystem\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\r\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemWidevine(config) {\r\n\r\n    config = config || {};\r\n    let instance;\r\n    const BASE64 = config.BASE64;\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage( /*message*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\r\n        return null;\r\n    }\r\n\r\n    function getCDMData(/*cdmData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid,\r\n        schemeIdURI,\r\n        systemString,\r\n        getInitData,\r\n        getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData,\r\n        getCDMData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ErrorsBase from '../../../core/errors/ErrorsBase';\r\n\r\n/**\r\n * @class\r\n */\r\nclass ProtectionErrors extends ErrorsBase {\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         *  Generid key Error code\r\n         */\r\n        this.MEDIA_KEYERR_CODE = 100;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\r\n        /**\r\n         *  Error code returned by keyerror api for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\r\n\r\n        /**\r\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\r\n        /**\r\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\r\n        /**\r\n         *  Error code returned when License server certificate has not been successfully updated\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\r\n        /**\r\n         *  Error code returned when license validity has expired\r\n         */\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\r\n        /**\r\n         *  Error code returned when no licenser url is defined\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\r\n        /**\r\n         *  Error code returned when key system access is denied\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\r\n        /**\r\n         *  Error code returned when key session has not been successfully created\r\n         */\r\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\r\n        /**\r\n         *  Error code returned when license request failed after a keymessage event has been triggered\r\n         */\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\r\n\r\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\r\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\r\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\r\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\r\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\r\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\r\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\r\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\r\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\r\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\r\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\r\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\r\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\r\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\r\n    }\r\n}\r\n\r\nlet protectionErrors = new ProtectionErrors();\r\nexport default protectionErrors;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Initial implementation of EME\r\n *\r\n * Implemented by Google Chrome prior to v36\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\n\r\nfunction ProtectionModel_01b(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n    const errHandler = config.errHandler;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        protectionKeyController,\r\n\r\n        // With this version of the EME APIs, sessionIds are not assigned to\r\n        // sessions until the first key message is received.  We are assuming\r\n        // that in the case of multiple sessions, key messages will be received\r\n        // in the order that generateKeyRequest() is called.\r\n        // Holding spot for newly-created sessions until we determine whether or\r\n        // not the CDM supports sessionIds\r\n        pendingSessions,\r\n\r\n        // List of sessions that have been initialized.  Only the first position will\r\n        // be used in the case that the CDM does not support sessionIds\r\n        sessions,\r\n\r\n        // Not all CDMs support the notion of sessionIds.  Without sessionIds\r\n        // there is no way for us to differentiate between sessions, therefore\r\n        // we must only allow a single session.  Once we receive the first key\r\n        // message we can set this flag to determine if more sessions are allowed\r\n        moreSessionsAllowed,\r\n\r\n        // This is our main event handler for all desired HTMLMediaElement events\r\n        // related to EME.  These events are translated into our API-independent\r\n        // versions of the same events\r\n        eventHandler;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        pendingSessions = [];\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            closeKeySession(sessions[i]);\r\n        }\r\n        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < pendingSessions.length; i++) {\r\n            retVal.push(pendingSessions[i].initData);\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions.concat(pendingSessions);\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            let ve = videoElement;\r\n            if (!ve) { // Must have a video element to do this capability tests\r\n                ve = document.createElement('video');\r\n            }\r\n\r\n            // Try key systems in order, first one with supported key system configuration\r\n            // is used\r\n            let found = false;\r\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n                const configs = ksConfigurations[ksIdx].configs;\r\n                let supportedAudio = null;\r\n                let supportedVideo = null;\r\n\r\n                // Try key system configs in order, first one with supported audio/video\r\n                // is used\r\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                    //let audios = configs[configIdx].audioCapabilities;\r\n                    const videos = configs[configIdx].videoCapabilities;\r\n                    // Look for supported video container/codecs\r\n                    if (videos && videos.length !== 0) {\r\n                        supportedVideo = []; // Indicates that we have a requested video config\r\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                            if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\r\n                                supportedVideo.push(videos[videoIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // No supported audio or video in this configuration OR we have\r\n                    // requested audio or video configuration that is not supported\r\n                    if ((!supportedAudio && !supportedVideo) ||\r\n                        (supportedAudio && supportedAudio.length === 0) ||\r\n                        (supportedVideo && supportedVideo.length === 0)) {\r\n                        continue;\r\n                    }\r\n\r\n                    // This configuration is supported\r\n                    found = true;\r\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig)\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                    resolve({ data: keySystemAccess });\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\r\n                reject({ error: errorMessage });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystem = keySystemAccess.keySystem;\r\n        return Promise.resolve(keySystem);\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement) {\r\n            return;\r\n        }\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n\r\n            // Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs\r\n            for (var i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            sessions = [];\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.keyerror, eventHandler);\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            videoElement.addEventListener(api.keymessage, eventHandler);\r\n            videoElement.addEventListener(api.keyadded, eventHandler);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        }\r\n    }\r\n\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Determine if creating a new session is allowed\r\n        if (moreSessionsAllowed || sessions.length === 0) {\r\n            const newSession = { // Implements SessionToken\r\n                sessionId: null,\r\n                keyId: ksInfo.keyId,\r\n                initData: ksInfo.initData,\r\n\r\n                getKeyId: function () {\r\n                    return this.keyId;\r\n                },\r\n\r\n                getSessionId: function () {\r\n                    return this.sessionId;\r\n                },\r\n\r\n                getExpirationTime: function () {\r\n                    return NaN;\r\n                },\r\n\r\n                getSessionType: function () {\r\n                    return 'temporary';\r\n                }\r\n            };\r\n            pendingSessions.push(newSession);\r\n\r\n            // Send our request to the CDM\r\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(ksInfo.initData));\r\n\r\n            return newSession;\r\n\r\n        } else {\r\n            throw new Error('Multiple sessions not allowed!');\r\n        }\r\n\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const sessionId = sessionToken.sessionId;\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the CDM\r\n            videoElement[api.addKey](keySystem.systemString,\r\n                new Uint8Array(message), new Uint8Array(sessionToken.initData), sessionId);\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            for (let i = 0; i < message.keyPairs.length; i++) {\r\n                videoElement[api.addKey](keySystem.systemString,\r\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionId);\r\n            }\r\n        }\r\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the CDM\r\n        try {\r\n            videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionId);\r\n        } catch (error) {\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\r\n                data: null,\r\n                error: 'Error closing session (' + sessionToken.sessionId + ') ' + error.message\r\n            });\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\r\n    }\r\n\r\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\r\n    }\r\n\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\r\n    }\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                let sessionToken = null;\r\n                switch (event.type) {\r\n                    case api.needkey:\r\n                        let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                        eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        break;\r\n\r\n                    case api.keyerror:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let code = ProtectionErrors.MEDIA_KEYERR_CODE;\r\n                            let msg = '';\r\n                            switch (event.errorCode.code) {\r\n                                case 1:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_UNKNOWN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - ' + ProtectionErrors.MEDIA_KEYERR_UNKNOWN_MESSAGE;\r\n                                    break;\r\n                                case 2:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_CLIENT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_CLIENT - ' + ProtectionErrors.MEDIA_KEYERR_CLIENT_MESSAGE;\r\n                                    break;\r\n                                case 3:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_SERVICE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_SERVICE - ' + ProtectionErrors.MEDIA_KEYERR_SERVICE_MESSAGE;\r\n                                    break;\r\n                                case 4:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_OUTPUT_CODE;\r\n                                    msg += 'MEDIA_KEYERR_OUTPUT - ' + ProtectionErrors.MEDIA_KEYERR_OUTPUT_MESSAGE;\r\n                                    break;\r\n                                case 5:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_CODE;\r\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - ' + ProtectionErrors.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;\r\n                                    break;\r\n                                case 6:\r\n                                    code = ProtectionErrors.MEDIA_KEYERR_DOMAIN_CODE;\r\n                                    msg += 'MEDIA_KEYERR_DOMAIN - ' + ProtectionErrors.MEDIA_KEYERR_DOMAIN_MESSAGE;\r\n                                    break;\r\n                            }\r\n                            msg += '  System Code = ' + event.systemCode;\r\n                            // TODO: Build error string based on key error\r\n                            eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(code, msg, sessionToken) });\r\n                        } else {\r\n                            logger.error('No session token found for key error');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keyadded:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            logger.debug('DRM: Key added.');\r\n                            eventBus.trigger(events.KEY_ADDED, { data: sessionToken });//TODO not sure anything is using sessionToken? why there?\r\n                        } else {\r\n                            logger.debug('No session token found for key added');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keymessage:\r\n                        // If this CDM does not support session IDs, we will be limited\r\n                        // to a single session\r\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\r\n\r\n                        // SessionIDs supported\r\n                        if (moreSessionsAllowed) {\r\n                            // Attempt to find an uninitialized token with this sessionId\r\n                            sessionToken = findSessionByID(sessions, event.sessionId);\r\n                            if (!sessionToken && pendingSessions.length > 0) {\r\n\r\n                                // This is the first message for our latest session, so set the\r\n                                // sessionId and add it to our list\r\n                                sessionToken = pendingSessions.shift();\r\n                                sessions.push(sessionToken);\r\n                                sessionToken.sessionId = event.sessionId;\r\n\r\n                                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n                            }\r\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\r\n                            sessionToken = pendingSessions.shift();\r\n                            sessions.push(sessionToken);\r\n\r\n                            if (pendingSessions.length !== 0) {\r\n                                errHandler.error(new DashJSError(ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_CODE, ProtectionErrors.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));\r\n                            }\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n\r\n                            // For ClearKey, the spec mandates that you pass this message to the\r\n                            // addKey method, so we always save it to the token since there is no\r\n                            // way to tell which key system is in use\r\n                            sessionToken.keyMessage = message;\r\n                            eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(sessionToken, message, event.defaultURL) });\r\n\r\n                        } else {\r\n                            logger.warn('No session token found for key message');\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to retrieve the stored session token based on a given\r\n     * sessionId value\r\n     *\r\n     * @param {Array} sessionArray - the array of sessions to search\r\n     * @param {*} sessionId - the sessionId to search for\r\n     * @returns {*} the session token with the given sessionId\r\n     */\r\n    function findSessionByID(sessionArray, sessionId) {\r\n        if (!sessionId || !sessionArray) {\r\n            return null;\r\n        } else {\r\n            const len = sessionArray.length;\r\n            for (let i = 0; i < len; i++) {\r\n                if (sessionArray[i].sessionId == sessionId) {\r\n                    return sessionArray[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function removeEventListeners() {\r\n        videoElement.removeEventListener(api.keyerror, eventHandler);\r\n        videoElement.removeEventListener(api.needkey, eventHandler);\r\n        videoElement.removeEventListener(api.keymessage, eventHandler);\r\n        videoElement.removeEventListener(api.keyadded, eventHandler);\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        createKeySession,\r\n        updateKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        stop: reset,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Most recent EME implementation\r\n *\r\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nconst SYSTEM_STRING_PRIORITY = {};\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = [ProtectionConstants.PLAYREADY_KEYSTEM_STRING, ProtectionConstants.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING];\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = [ProtectionConstants.WIDEVINE_KEYSTEM_STRING];\r\nSYSTEM_STRING_PRIORITY[ProtectionConstants.CLEARKEY_KEYSTEM_STRING] = [ProtectionConstants.CLEARKEY_KEYSTEM_STRING];\r\n\r\nfunction ProtectionModel_21Jan2015(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n\r\n    let instance,\r\n        logger,\r\n        keySystem,\r\n        videoElement,\r\n        mediaKeys,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        keySystem = null;\r\n        videoElement = null;\r\n        mediaKeys = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        const numSessions = sessions.length;\r\n        let session;\r\n\r\n        if (numSessions !== 0) {\r\n            // Called when we are done closing a session.  Success or fail\r\n            const done = function (session) {\r\n                removeSession(session);\r\n                if (sessions.length === 0) {\r\n                    if (videoElement) {\r\n                        videoElement.removeEventListener('encrypted', eventHandler);\r\n                        videoElement.setMediaKeys(null).then(function () {\r\n                            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                        });\r\n                    } else {\r\n                        eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n                    }\r\n                }\r\n            };\r\n            for (let i = 0; i < numSessions; i++) {\r\n                session = sessions[i];\r\n                (function (s) {\r\n                    _closeKeySessionInternal(session)\r\n                    done(s);\r\n                })(session);\r\n            }\r\n        } else {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        }\r\n    }\r\n\r\n    function stop() {\r\n        // Close and remove not usable sessions\r\n        let session;\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            session = sessions[i];\r\n            if (!session.getUsable()) {\r\n                _closeKeySessionInternal(session)\r\n                removeSession(session);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i].initData) {\r\n                retVal.push(sessions[i].initData);\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            _requestKeySystemAccessInternal(ksConfigurations, 0, resolve, reject);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Initializes access to a key system. Once we found a valid configuration we get a mediaKeySystemAccess object\r\n     * @param ksConfigurations\r\n     * @param idx\r\n     * @param resolve\r\n     * @param reject\r\n     * @private\r\n     */\r\n    function _requestKeySystemAccessInternal(ksConfigurations, idx, resolve, reject) {\r\n\r\n        // In case requestMediaKeySystemAccess is not available we can not proceed and dispatch an error\r\n        if (navigator.requestMediaKeySystemAccess === undefined ||\r\n            typeof navigator.requestMediaKeySystemAccess !== 'function') {\r\n            const msg = 'Insecure origins are not allowed';\r\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: msg });\r\n            reject({ error: msg });\r\n            return;\r\n        }\r\n\r\n        // If a systemStringPriority is defined by the application we use these values. Otherwise we use the default system string\r\n        // This is useful for DRM systems such as Playready for which multiple system strings are possible for instance com.microsoft.playready and com.microsoft.playready.recommendation\r\n        const protDataSystemStringPriority = ksConfigurations[idx].protData && ksConfigurations[idx].protData.systemStringPriority ? ksConfigurations[idx].protData.systemStringPriority : null;\r\n        const configs = ksConfigurations[idx].configs;\r\n        const currentKeySystem = ksConfigurations[idx].ks;\r\n        let systemString = currentKeySystem.systemString;\r\n\r\n        // Use the default values in case no values are provided by the application\r\n        const systemStringsToApply = protDataSystemStringPriority ? protDataSystemStringPriority : SYSTEM_STRING_PRIORITY[systemString] ? SYSTEM_STRING_PRIORITY[systemString] : [systemString];\r\n\r\n        // Check all the available system strings and the available configurations for support\r\n        _checkAccessForKeySystem(systemStringsToApply, configs)\r\n            .then((mediaKeySystemAccess) => {\r\n                const configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\r\n                    mediaKeySystemAccess.getConfiguration() : null;\r\n                const keySystemAccess = new KeySystemAccess(currentKeySystem, configuration);\r\n\r\n                keySystemAccess.mksa = mediaKeySystemAccess;\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                resolve({ data: keySystemAccess });\r\n            })\r\n            .catch((e) => {\r\n                if (idx + 1 < ksConfigurations.length) {\r\n                    _requestKeySystemAccessInternal(ksConfigurations, idx + 1, resolve, reject);\r\n                } else {\r\n                    const errorMessage = 'Key system access denied! ';\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage + e.message });\r\n                    reject({ error: errorMessage + e.message });\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * For a specific key system: Iterate over the possible system strings and resolve once a valid configuration was found\r\n     * @param {array} systemStringsToApply\r\n     * @param {object} configs\r\n     * @return {Promise}\r\n     * @private\r\n     */\r\n    function _checkAccessForKeySystem(systemStringsToApply, configs) {\r\n        return new Promise((resolve, reject) => {\r\n            _checkAccessForSystemStrings(systemStringsToApply, configs, 0, resolve, reject);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Recursively iterate over the possible system strings until a supported configuration is found or we ran out of options\r\n     * @param {array} systemStringsToApply\r\n     * @param {object} configs\r\n     * @param {number} idx\r\n     * @param {function} resolve\r\n     * @param {function} reject\r\n     * @private\r\n     */\r\n    function _checkAccessForSystemStrings(systemStringsToApply, configs, idx, resolve, reject) {\r\n        const systemString = systemStringsToApply[idx];\r\n\r\n        logger.debug(`Requesting key system access for system string ${systemString}`);\r\n\r\n        navigator.requestMediaKeySystemAccess(systemString, configs)\r\n            .then((mediaKeySystemAccess) => {\r\n                mediaKeySystemAccess.selectedSystemString = systemString;\r\n                resolve(mediaKeySystemAccess);\r\n            })\r\n            .catch((e) => {\r\n                if (idx + 1 < systemStringsToApply.length) {\r\n                    _checkAccessForSystemStrings(systemStringsToApply, configs, idx + 1, resolve, reject);\r\n                } else {\r\n                    reject(e);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Selects a key system by creating the mediaKeys and adding them to the video element\r\n     * @param keySystemAccess\r\n     * @return {Promise<unknown>}\r\n     */\r\n    function selectKeySystem(keySystemAccess) {\r\n        return new Promise((resolve, reject) => {\r\n            keySystemAccess.mksa.createMediaKeys()\r\n                .then((mkeys) => {\r\n                    keySystem = keySystemAccess.keySystem;\r\n                    mediaKeys = mkeys;\r\n                    if (videoElement) {\r\n                        return videoElement.setMediaKeys(mediaKeys)\r\n                    } else {\r\n                        return Promise.resolve();\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    resolve(keySystem);\r\n                })\r\n                .catch(function () {\r\n                    reject({ error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\r\n                });\r\n        })\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys) {\r\n                videoElement.setMediaKeys(null);\r\n            }\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener('encrypted', eventHandler);\r\n            if (videoElement.setMediaKeys && mediaKeys) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(serverCertificate) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not set server certificate until you have selected a key system');\r\n        }\r\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\r\n            logger.info('DRM: License server certificate successfully updated.');\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);\r\n        }).catch(function (error) {\r\n            eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED, { error: new DashJSError(ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, ProtectionErrors.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + error.name) });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a key session, a session token and initialize a request by calling generateRequest\r\n     * @param ksInfo\r\n     */\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        const session = mediaKeys.createSession(ksInfo.sessionType);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n\r\n        // The \"keyids\" type is used for Clearkey when keys are provided directly in the protection data and a request to a license server is not needed\r\n        const dataType = keySystem.systemString === ProtectionConstants.CLEARKEY_KEYSTEM_STRING && (ksInfo.initData || (ksInfo.protData && ksInfo.protData.clearkeys)) ? ProtectionConstants.INITIALIZATION_DATA_TYPE_KEYIDS : ProtectionConstants.INITIALIZATION_DATA_TYPE_CENC;\r\n\r\n        session.generateRequest(dataType, ksInfo.initData).then(function () {\r\n            logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n        }).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Error generating key request -- ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        // Send our request to the key session\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            message = message.toJWK();\r\n        }\r\n        session.update(message)\r\n            .then(() => {\r\n                eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n            })\r\n            .catch(function (error) {\r\n                eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, 'Error sending update() message! ' + error.name, sessionToken) });\r\n            });\r\n    }\r\n\r\n    function loadKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not load sessions until you have selected a key system');\r\n        }\r\n\r\n        const sessionId = ksInfo.sessionId;\r\n\r\n        // Check if session Id is not already loaded or loading\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessionId === sessions[i].sessionId) {\r\n                logger.warn('DRM: Ignoring session ID because we have already seen it!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const session = mediaKeys.createSession(ksInfo.sessionType);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n        // Load persisted session data into our newly created session object\r\n        session.load(sessionId).then(function (success) {\r\n            if (success) {\r\n                logger.debug('DRM: Session loaded.  SessionID = ' + sessionToken.getSessionId());\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n            } else {\r\n                removeSession(sessionToken);\r\n                eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                    data: null,\r\n                    error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session! Invalid Session ID (' + sessionId + ')')\r\n                });\r\n            }\r\n        }).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CREATED, {\r\n                data: null,\r\n                error: new DashJSError(ProtectionErrors.KEY_SESSION_CREATED_ERROR_CODE, ProtectionErrors.KEY_SESSION_CREATED_ERROR_MESSAGE + 'Could not load session (' + sessionId + ')! ' + error.name)\r\n            });\r\n        });\r\n    }\r\n\r\n    function removeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        session.remove().then(function () {\r\n            logger.debug('DRM: Session removed.  SessionID = ' + sessionToken.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, { data: sessionToken.getSessionId() });\r\n        }, function (error) {\r\n            eventBus.trigger(events.KEY_SESSION_REMOVED, {\r\n                data: null,\r\n                error: 'Error removing session (' + sessionToken.getSessionId() + '). ' + error.name\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the key session\r\n        _closeKeySessionInternal(sessionToken).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, {\r\n                data: null,\r\n                error: 'Error closing session (' + sessionToken.getSessionId() + ') ' + error.name\r\n            });\r\n        });\r\n    }\r\n\r\n    function _closeKeySessionInternal(sessionToken) {\r\n        if (!sessionToken || !sessionToken.session) {\r\n            return Promise.resolve;\r\n        }\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener('keystatuseschange', sessionToken);\r\n        session.removeEventListener('message', sessionToken);\r\n\r\n        // Send our request to the key session\r\n        return session.close();\r\n    }\r\n\r\n    // This is our main event handler for all desired HTMLMediaElement events\r\n    // related to EME.  These events are translated into our API-independent\r\n    // versions of the same events\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'encrypted':\r\n                        if (event.initData) {\r\n                            let initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, event.initDataType) });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    function removeSession(token) {\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === token) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function parseKeyStatus(args) {\r\n        // Edge and Chrome implement different version of keystatues, param are not on same order\r\n        let status, keyId;\r\n        if (args && args.length > 0) {\r\n            if (args[0]) {\r\n                if (typeof args[0] === 'string') {\r\n                    status = args[0];\r\n                } else {\r\n                    keyId = args[0];\r\n                }\r\n            }\r\n\r\n            if (args[1]) {\r\n                if (typeof args[1] === 'string') {\r\n                    status = args[1];\r\n                } else {\r\n                    keyId = args[1];\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            status: status,\r\n            keyId: keyId\r\n        };\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(session, ksInfo) {\r\n        const token = { // Implements SessionToken\r\n            session: session,\r\n            keyId: ksInfo.keyId,\r\n            initData: ksInfo.initData,\r\n            sessionId: ksInfo.sessionId,\r\n            sessionType: ksInfo.sessionType,\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'keystatuseschange':\r\n                        eventBus.trigger(events.KEY_STATUSES_CHANGED, { data: this });\r\n                        event.target.keyStatuses.forEach(function () {\r\n                            let keyStatus = parseKeyStatus(arguments);\r\n                            switch (keyStatus.status) {\r\n                                case 'expired':\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, { error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE) });\r\n                                    break;\r\n                                default:\r\n                                    eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED, keyStatus);\r\n                                    break;\r\n                            }\r\n                        });\r\n                        break;\r\n\r\n                    case 'message':\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, undefined, event.messageType) });\r\n                        break;\r\n                }\r\n            },\r\n\r\n            getKeyId: function () {\r\n                return this.keyId;\r\n            },\r\n\r\n            getSessionId: function () {\r\n                return session.sessionId;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return this.sessionType;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return session.expiration;\r\n            },\r\n\r\n            getKeyStatuses: function () {\r\n                return session.keyStatuses;\r\n            },\r\n\r\n            getUsable: function () {\r\n                let usable = false;\r\n                session.keyStatuses.forEach(function () {\r\n                    let keyStatus = parseKeyStatus(arguments);\r\n                    if (keyStatus.status === 'usable') {\r\n                        usable = true;\r\n                    }\r\n                });\r\n                return usable;\r\n            }\r\n        };\r\n\r\n        // Add all event listeners\r\n        session.addEventListener('keystatuseschange', token);\r\n        session.addEventListener('message', token);\r\n\r\n        // Register callback for session closed Promise\r\n        session.closed.then(() => {\r\n            removeSession(token);\r\n            logger.debug('DRM: Session closed.  SessionID = ' + token.getSessionId());\r\n            eventBus.trigger(events.KEY_SESSION_CLOSED, { data: token.getSessionId() });\r\n        });\r\n\r\n        // Add to our session list\r\n        sessions.push(token);\r\n\r\n        return token;\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        setServerCertificate,\r\n        createKeySession,\r\n        updateKeySession,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        closeKeySession,\r\n        stop,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\r\n *\r\n * Implemented by Internet Explorer 11 (Windows 8.1)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\n\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport DashJSError from '../../vo/DashJSError';\r\nimport ProtectionErrors from '../errors/ProtectionErrors';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\n\r\nfunction ProtectionModel_3Feb2014(config) {\r\n\r\n    config = config || {};\r\n    const context = this.context;\r\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    const events = config.events;\r\n    const debug = config.debug;\r\n    const api = config.api;\r\n\r\n    let instance,\r\n        logger,\r\n        videoElement,\r\n        keySystem,\r\n        mediaKeys,\r\n        keySystemAccess,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        logger = debug.getLogger(instance);\r\n        videoElement = null;\r\n        keySystem = null;\r\n        mediaKeys = null;\r\n        keySystemAccess = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        try {\r\n            for (let i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            if (videoElement) {\r\n                videoElement.removeEventListener(api.needkey, eventHandler);\r\n            }\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\r\n        } catch (error) {\r\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\r\n        }\r\n    }\r\n\r\n    function getAllInitData() {\r\n        const retVal = [];\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function getSessions() {\r\n        return sessions;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        return new Promise((resolve, reject) => {\r\n            // Try key systems in order, first one with supported key system configuration\r\n            // is used\r\n            let found = false;\r\n            for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n                const systemString = ksConfigurations[ksIdx].ks.systemString;\r\n                const configs = ksConfigurations[ksIdx].configs;\r\n                let supportedAudio = null;\r\n                let supportedVideo = null;\r\n\r\n                // Try key system configs in order, first one with supported audio/video\r\n                // is used\r\n                for (let configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                    const audios = configs[configIdx].audioCapabilities;\r\n                    const videos = configs[configIdx].videoCapabilities;\r\n\r\n                    // Look for supported audio container/codecs\r\n                    if (audios && audios.length !== 0) {\r\n                        supportedAudio = []; // Indicates that we have a requested audio config\r\n                        for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\r\n                            if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\r\n                                supportedAudio.push(audios[audioIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Look for supported video container/codecs\r\n                    if (videos && videos.length !== 0) {\r\n                        supportedVideo = []; // Indicates that we have a requested video config\r\n                        for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                            if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\r\n                                supportedVideo.push(videos[videoIdx]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // No supported audio or video in this configuration OR we have\r\n                    // requested audio or video configuration that is not supported\r\n                    if ((!supportedAudio && !supportedVideo) ||\r\n                        (supportedAudio && supportedAudio.length === 0) ||\r\n                        (supportedVideo && supportedVideo.length === 0)) {\r\n                        continue;\r\n                    }\r\n\r\n                    // This configuration is supported\r\n                    found = true;\r\n                    const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                    const ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                    const keySystemAccess = new KeySystemAccess(ks, ksConfig);\r\n                    eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: keySystemAccess });\r\n                    resolve({ data: keySystemAccess });\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                const errorMessage = 'Key system access denied! -- No valid audio/video content configurations detected!';\r\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: errorMessage });\r\n                reject({ error: errorMessage });\r\n            }\r\n        })\r\n    }\r\n\r\n    function selectKeySystem(ksAccess) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\r\n                keySystem = ksAccess.keySystem;\r\n                keySystemAccess = ksAccess;\r\n                if (videoElement) {\r\n                    setMediaKeys();\r\n                }\r\n                resolve(keySystem);\r\n            } catch (error) {\r\n                reject({ error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\r\n            }\r\n        })\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener(api.needkey, eventHandler);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            if (mediaKeys) {\r\n                setMediaKeys();\r\n            }\r\n        }\r\n    }\r\n\r\n    function createKeySession(ksInfo) {\r\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Use the first video capability for the contentType.\r\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\r\n\r\n        // If player is trying to playback Audio only stream - don't error out.\r\n        let capabilities = null;\r\n\r\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\r\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\r\n        }\r\n\r\n        if (capabilities === null) {\r\n            throw new Error('Can not create sessions for unknown content types.');\r\n        }\r\n\r\n        const contentType = capabilities.contentType;\r\n        const session = mediaKeys.createSession(contentType, new Uint8Array(ksInfo.initData), ksInfo.cdmData ? new Uint8Array(ksInfo.cdmData) : null);\r\n        const sessionToken = createSessionToken(session, ksInfo);\r\n\r\n        // Add all event listeners\r\n        session.addEventListener(api.error, sessionToken);\r\n        session.addEventListener(api.message, sessionToken);\r\n        session.addEventListener(api.ready, sessionToken);\r\n        session.addEventListener(api.close, sessionToken);\r\n\r\n        // Add to our session list\r\n        sessions.push(sessionToken);\r\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionId());\r\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        const session = sessionToken.session;\r\n\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the key session\r\n            session.update(new Uint8Array(message));\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            session.update(new Uint8Array(message.toJWK()));\r\n        }\r\n        eventBus.trigger(events.KEY_SESSION_UPDATED);\r\n    }\r\n\r\n    /**\r\n     * Close the given session and release all associated keys.  Following\r\n     * this call, the sessionToken becomes invalid\r\n     *\r\n     * @param {Object} sessionToken - the session token\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        const session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener(api.error, sessionToken);\r\n        session.removeEventListener(api.message, sessionToken);\r\n        session.removeEventListener(api.ready, sessionToken);\r\n        session.removeEventListener(api.close, sessionToken);\r\n\r\n        // Remove from our session list\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === sessionToken) {\r\n                sessions.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Send our request to the key session\r\n        session[api.release]();\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */\r\n    }\r\n\r\n    function loadKeySession(/*ksInfo*/) { /* Not supported */\r\n    }\r\n\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */\r\n    }\r\n\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        if (event.initData) {\r\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    // IE11 does not let you set MediaKeys until it has entered a certain\r\n    // readyState, so we need this logic to ensure we don't set the keys\r\n    // too early\r\n    function setMediaKeys() {\r\n        let boundDoSetKeys = null;\r\n        const doSetKeys = function () {\r\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\r\n            videoElement[api.setMediaKeys](mediaKeys);\r\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\r\n        };\r\n        if (videoElement.readyState >= 1) {\r\n            doSetKeys();\r\n        } else {\r\n            boundDoSetKeys = doSetKeys.bind(this);\r\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\r\n        }\r\n\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(keySession, ksInfo) {\r\n        return {\r\n            // Implements SessionToken\r\n            session: keySession,\r\n            keyId: ksInfo.keyId,\r\n            initData: ksInfo.initData,\r\n\r\n            getKeyId: function () {\r\n                return this.keyId;\r\n            },\r\n\r\n            getSessionId: function () {\r\n                return this.session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return NaN;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return 'temporary';\r\n            },\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case api.error:\r\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\r\n                        eventBus.trigger(events.KEY_ERROR, { error: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\r\n                        break;\r\n                    case api.message:\r\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\r\n                        break;\r\n                    case api.ready:\r\n                        logger.debug('DRM: Key added.');\r\n                        eventBus.trigger(events.KEY_ADDED);\r\n                        break;\r\n\r\n                    case api.close:\r\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionId());\r\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionId() });\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData,\r\n        getSessions,\r\n        requestKeySystemAccess,\r\n        selectKeySystem,\r\n        setMediaElement,\r\n        createKeySession,\r\n        updateKeySession,\r\n        closeKeySession,\r\n        setServerCertificate,\r\n        loadKeySession,\r\n        removeKeySession,\r\n        stop: reset,\r\n        reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\r\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CableLabs ClearKey license server implementation\r\n *\r\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\r\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\n\r\nfunction ClearKey() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /* message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr*/) {\r\n        return 'json';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        if (!serverResponse.hasOwnProperty('keys')) {\r\n            return null;\r\n        }\r\n        let keyPairs = [];\r\n        for (let i = 0; i < serverResponse.keys.length; i++) {\r\n            let keypair = serverResponse.keys[i];\r\n            let keyid = keypair.kid.replace(/=/g, '');\r\n            let key = keypair.k.replace(/=/g, '');\r\n\r\n            keyPairs.push(new KeyPair(keyid, key));\r\n        }\r\n        return new ClearKeyKeySet(keyPairs);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nClearKey.__dashjs_factory_name = 'ClearKey';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CastLabs DRMToday License Server implementation\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\n\r\nimport ProtectionConstants from '../../constants/ProtectionConstants';\r\n\r\nfunction DRMToday(config) {\r\n\r\n    config = config || {};\r\n    const BASE64 = config.BASE64;\r\n\r\n    const keySystems = {};\r\n    keySystems[ProtectionConstants.WIDEVINE_KEYSTEM_STRING] = {\r\n        responseType: 'json',\r\n        getLicenseMessage: function (response) {\r\n            return BASE64.decodeArray(response.license);\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return response;\r\n        }\r\n    };\r\n    keySystems[ProtectionConstants.PLAYREADY_KEYSTEM_STRING] = {\r\n        responseType: 'arraybuffer',\r\n        getLicenseMessage: function (response) {\r\n            return response;\r\n        },\r\n        getErrorResponse: function (response) {\r\n            return String.fromCharCode.apply(null, new Uint8Array(response));\r\n        }\r\n    };\r\n\r\n    let instance;\r\n\r\n    function checkConfig() {\r\n        if (!BASE64 || !BASE64.hasOwnProperty('decodeArray')) {\r\n            throw new Error('Missing config parameter(s)');\r\n        }\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].responseType;\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\r\n        checkConfig();\r\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDRMToday.__dashjs_factory_name = 'DRMToday';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(DRMToday); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/* global escape: true */\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\n/**\r\n * Microsoft PlayReady Test License Server\r\n *\r\n * For testing content that uses the PlayReady test server at\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n * @ignore\r\n */\r\n\r\nfunction PlayReady() {\r\n\r\n    let instance;\r\n\r\n    const soap = 'http://schemas.xmlsoap.org/soap/envelope/';\r\n\r\n    function uintToString(arrayBuffer) {\r\n        const encodedString = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\r\n        const decodedString = decodeURIComponent(escape(encodedString));\r\n        return decodedString;\r\n    }\r\n\r\n    function parseServerResponse(serverResponse) {\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n\r\n            if (fault) {\r\n                return null;\r\n            }\r\n        }\r\n        return serverResponse;\r\n    }\r\n\r\n    function parseErrorResponse(serverResponse) {\r\n        let faultstring = '';\r\n        let statusCode = '';\r\n        let message = '';\r\n        let idStart = -1;\r\n        let idEnd = -1;\r\n\r\n        if (window.DOMParser) {\r\n            const stringResponse = uintToString(serverResponse);\r\n            const parser = new window.DOMParser();\r\n            const xmlDoc = parser.parseFromString(stringResponse, 'text/xml');\r\n            const envelope = xmlDoc ? xmlDoc.getElementsByTagNameNS(soap, 'Envelope')[0] : null;\r\n            const body = envelope ? envelope.getElementsByTagNameNS(soap, 'Body')[0] : null;\r\n            const fault = body ? body.getElementsByTagNameNS(soap, 'Fault')[0] : null;\r\n            const detail = fault ? fault.getElementsByTagName('detail')[0] : null;\r\n            const exception = detail ? detail.getElementsByTagName('Exception')[0] : null;\r\n            let node = null;\r\n\r\n            if (fault === null) {\r\n                return stringResponse;\r\n            }\r\n\r\n            node = fault.getElementsByTagName('faultstring')[0].firstChild;\r\n            faultstring = node ? node.nodeValue : null;\r\n\r\n            if (exception !== null) {\r\n                node = exception.getElementsByTagName('StatusCode')[0];\r\n                statusCode = node ? node.firstChild.nodeValue : null;\r\n                node = exception.getElementsByTagName('Message')[0];\r\n                message = node ? node.firstChild.nodeValue : null;\r\n                idStart = message ? message.lastIndexOf('[') + 1 : -1;\r\n                idEnd = message ? message.indexOf(']') : -1;\r\n                message = message ? message.substring(idStart, idEnd) : '';\r\n            }\r\n        }\r\n\r\n        let errorString = `code: ${statusCode}, name: ${faultstring}`;\r\n        if (message) {\r\n            errorString += `, message: ${message}`;\r\n        }\r\n\r\n        return errorString;\r\n    }\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseServerResponse.call(this, serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return parseErrorResponse.call(this, serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nPlayReady.__dashjs_factory_name = 'PlayReady';\r\nexport default FactoryMaker.getSingletonFactory(PlayReady); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @ignore\r\n */\r\nfunction Widevine() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage,\r\n        getHTTPMethod,\r\n        getResponseType,\r\n        getLicenseMessage,\r\n        getErrorResponse\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nWidevine.__dashjs_factory_name = 'Widevine';\r\nexport default dashjs.FactoryMaker.getSingletonFactory(Widevine); /* jshint ignore:line */\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\r\n *  type\r\n * @ignore\r\n */\r\nclass ClearKeyKeySet {\r\n    /**\r\n     * @param {Array.<KeyPair>} keyPairs\r\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\r\n     * or 'temporary'.  Can also be null or undefined.\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyPairs, type) {\r\n        if (type && type !== 'persistent' && type !== 'temporary')\r\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\r\n        this.keyPairs = keyPairs;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Convert this key set to its JSON Web Key (JWK) representation\r\n     *\r\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\r\n     */\r\n    toJWK() {\r\n        let i;\r\n        let numKeys = this.keyPairs.length;\r\n        let jwk = {keys: []};\r\n\r\n        for (i = 0; i < numKeys; i++) {\r\n            let key = {\r\n                kty: 'oct',\r\n                alg: 'A128KW',\r\n                kid: this.keyPairs[i].keyID,\r\n                k: this.keyPairs[i].key\r\n            };\r\n            jwk.keys.push(key);\r\n        }\r\n        if (this.type) {\r\n            jwk.type = this.type;\r\n        }\r\n        let jwkString = JSON.stringify(jwk);\r\n        const len = jwkString.length;\r\n\r\n        // Convert JSON string to ArrayBuffer\r\n        let buf = new ArrayBuffer(len);\r\n        let bView = new Uint8Array(buf);\r\n        for (i = 0; i < len; i++)\r\n            bView[i] = jwkString.charCodeAt(i);\r\n        return buf;\r\n    }\r\n}\r\n\r\nexport default ClearKeyKeySet;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc EME-independent KeyMessage\r\n * @ignore\r\n */\r\nclass KeyMessage {\r\n    /**\r\n     * @param {SessionToken} sessionToken the session\r\n     * to which the key message is associated\r\n     * @param {ArrayBuffer} message the key message\r\n     * @param {string} defaultURL license acquisition URL provided by the CDM\r\n     * @param {string} messageType Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @class\r\n     */\r\n    constructor(sessionToken, message, defaultURL, messageType) {\r\n        this.sessionToken = sessionToken;\r\n        this.message = message;\r\n        this.defaultURL = defaultURL;\r\n        this.messageType = messageType ? messageType : 'license-request';\r\n    }\r\n}\r\n\r\nexport default KeyMessage;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\r\n * @ignore\r\n */\r\nclass KeyPair {\r\n    /**\r\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\r\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyID, key) {\r\n        this.keyID = keyID;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport default KeyPair;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Creates a new key system access token.  Represents a valid key system for\r\n * given piece of content and key system requirements.  Used to initialize license\r\n * acquisition operations.\r\n * @ignore\r\n */\r\nclass KeySystemAccess {\r\n    /**\r\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\r\n     * @param {KeySystemConfiguration} ksConfiguration the\r\n     * subset of configurations passed to the key system access request that are supported\r\n     * by this user agent\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keySystem, ksConfiguration) {\r\n        this.keySystem = keySystem;\r\n        this.ksConfiguration = ksConfiguration;\r\n    }\r\n}\r\n\r\nexport default KeySystemAccess;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc Represents a set of configurations that describe the capabilities desired for\r\n *  support by a given CDM\r\n * @ignore\r\n */\r\nclass KeySystemConfiguration {\r\n    /**\r\n     * @param {Array.<MediaCapability>} audioCapabilities array of\r\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {Array.<MediaCapability>} videoCapabilities array of\r\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\r\n     * One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {string} persistentState desired support for persistent storage of\r\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {Array.<string>} sessionTypes List of session types that must\r\n     * be supported by the key system\r\n     * @class\r\n     */\r\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\r\n        this.initDataTypes = [ 'cenc' ];\r\n        if (audioCapabilities && audioCapabilities.length) {\r\n            this.audioCapabilities = audioCapabilities;\r\n        }\r\n        if (videoCapabilities && videoCapabilities.length) {\r\n            this.videoCapabilities = videoCapabilities;\r\n        }\r\n        this.distinctiveIdentifier = distinctiveIdentifier;\r\n        this.persistentState = persistentState;\r\n        this.sessionTypes = sessionTypes;\r\n    }\r\n}\r\n\r\nexport default KeySystemConfiguration;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license request\r\n * @ignore\r\n */\r\nclass LicenseRequest {\r\n    /**\r\n     * Defines a license request\r\n     *\r\n     * @class\r\n     */\r\n    constructor(url, method, responseType, headers, withCredentials, messageType, sessionId, data) {\r\n\r\n        /**\r\n         * The license request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTTP method\r\n         */\r\n        this.method = method;\r\n\r\n        /**\r\n         * The HTTP response type\r\n         */\r\n        this.responseType = responseType;\r\n\r\n        /**\r\n         * The HTP request headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * Wether request is done using credentials (cross-site cookies)\r\n         */\r\n        this.withCredentials = withCredentials;\r\n\r\n        /**\r\n         * The license request message type (see https://www.w3.org/TR/encrypted-media/#dom-mediakeymessagetype)\r\n         */\r\n        this.messageType = messageType;\r\n\r\n        /**\r\n         * The corresponding EME session ID\r\n         */\r\n        this.sessionId = sessionId;\r\n\r\n        /**\r\n         * The license request data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseRequest;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Defines a license response\r\n */\r\nclass LicenseResponse {\r\n    /**\r\n     * Defines a license response\r\n     *\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(url, headers, data) {\r\n\r\n        /**\r\n         * The url that was loaded, that can be redirected from original request url\r\n         */\r\n        this.url = url;\r\n\r\n        /**\r\n         * The HTP response headers\r\n         */\r\n        this.headers = headers;\r\n\r\n        /**\r\n         * The license response data\r\n         */\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport default LicenseResponse;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc A media capability\r\n * @ignore\r\n */\r\nclass MediaCapability {\r\n    /**\r\n     * @param {string} contentType MIME type and codecs (RFC6386)\r\n     * @param {string} robustness\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(contentType, robustness) {\r\n        this.contentType = contentType;\r\n        this.robustness = robustness;\r\n    }\r\n}\r\n\r\nexport default MediaCapability;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc NeedKey\r\n * @ignore\r\n */\r\nclass NeedKey {\r\n    /**\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {string} initDataType initialization data type\r\n     * @class\r\n     */\r\n    constructor(initData, initDataType) {\r\n        this.initData = initData;\r\n        this.initDataType = initDataType;\r\n    }\r\n}\r\n\r\nexport default NeedKey;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass DashJSError {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default DashJSError;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\r\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\r\n * by Metrics Reporting code.\r\n * @ignore\r\n */\r\nclass HTTPRequest {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Identifier of the TCP connection on which the HTTP request was sent.\r\n         * @public\r\n         */\r\n        this.tcpid = null;\r\n        /**\r\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\r\n         * The type of the request:\r\n         * - MPD\r\n         * - XLink expansion\r\n         * - Initialization Fragment\r\n         * - Index Fragment\r\n         * - Media Fragment\r\n         * - Bitstream Switching Fragment\r\n         * - other\r\n         * @public\r\n         */\r\n        this.type = null;\r\n        /**\r\n         * The original URL (before any redirects or failures)\r\n         * @public\r\n         */\r\n        this.url = null;\r\n        /**\r\n         * The actual URL requested, if different from above\r\n         * @public\r\n         */\r\n        this.actualurl = null;\r\n        /**\r\n         * The contents of the byte-range-spec part of the HTTP Range header.\r\n         * @public\r\n         */\r\n        this.range = null;\r\n        /**\r\n         * Real-Time | The real time at which the request was sent.\r\n         * @public\r\n         */\r\n        this.trequest = null;\r\n        /**\r\n         * Real-Time | The real time at which the first byte of the response was received.\r\n         * @public\r\n         */\r\n        this.tresponse = null;\r\n        /**\r\n         * The HTTP response code.\r\n         * @public\r\n         */\r\n        this.responsecode = null;\r\n        /**\r\n         * The duration of the throughput trace intervals (ms), for successful requests only.\r\n         * @public\r\n         */\r\n        this.interval = null;\r\n        /**\r\n         * Throughput traces, for successful requests only.\r\n         * @public\r\n         */\r\n        this.trace = [];\r\n        /**\r\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\r\n         * @public\r\n         */\r\n        this.cmsd = null;\r\n\r\n        /**\r\n         * Type of stream (\"audio\" | \"video\" etc..)\r\n         * @public\r\n         */\r\n        this._stream = null;\r\n        /**\r\n         * Real-Time | The real time at which the request finished.\r\n         * @public\r\n         */\r\n        this._tfinish = null;\r\n        /**\r\n         * The duration of the media requests, if available, in seconds.\r\n         * @public\r\n         */\r\n        this._mediaduration = null;\r\n        /**\r\n         * The media segment quality\r\n         * @public\r\n         */\r\n        this._quality = null;\r\n        /**\r\n         * all the response headers from request.\r\n         * @public\r\n         */\r\n        this._responseHeaders = null;\r\n        /**\r\n         * The selected service location for the request. string.\r\n         * @public\r\n         */\r\n        this._serviceLocation = null;\r\n        /**\r\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\r\n         */\r\n        this._fileLoaderType = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\r\n * @ignore\r\n */\r\nclass HTTPRequestTrace {\r\n    /**\r\n     * @class\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Real-Time | Measurement stream start.\r\n         * @public\r\n         */\r\n        this.s = null;\r\n        /**\r\n         * Measurement stream duration (ms).\r\n         * @public\r\n         */\r\n        this.d = null;\r\n        /**\r\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\r\n         * @public\r\n         */\r\n        this.b = [];\r\n    }\r\n}\r\n\r\nHTTPRequest.GET = 'GET';\r\nHTTPRequest.HEAD = 'HEAD';\r\nHTTPRequest.MPD_TYPE = 'MPD';\r\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\r\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\r\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\r\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\r\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\r\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\r\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\r\nHTTPRequest.LICENSE = 'license';\r\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\r\nHTTPRequest.OTHER_TYPE = 'other';\r\n\r\nexport {HTTPRequest, HTTPRequestTrace};\r\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.37\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.37',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // Heytap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 ' + BROWSER]], [\n            /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 ' + BROWSER], VERSION], [                    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i,                                             // Links\n            /panasonic;(viera)/i                                                // Panasonic Viera\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,                             // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2| pro)?)/i                                                // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ProtectionController from './controllers/ProtectionController';\r\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\r\nimport ProtectionEvents from './ProtectionEvents';\r\nimport ProtectionErrors from './errors/ProtectionErrors';\r\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\r\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\r\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\r\n\r\nconst APIS_ProtectionModel_01b = [\r\n    // Un-prefixed as per spec\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'generateKeyRequest',\r\n        addKey: 'addKey',\r\n        cancelKeyRequest: 'cancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        keyerror: 'keyerror',\r\n        keyadded: 'keyadded',\r\n        keymessage: 'keymessage'\r\n    },\r\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'webkitGenerateKeyRequest',\r\n        addKey: 'webkitAddKey',\r\n        cancelKeyRequest: 'webkitCancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'webkitneedkey',\r\n        keyerror: 'webkitkeyerror',\r\n        keyadded: 'webkitkeyadded',\r\n        keymessage: 'webkitkeymessage'\r\n    }\r\n];\r\n\r\nconst APIS_ProtectionModel_3Feb2014 = [\r\n    // Un-prefixed as per spec\r\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'setMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        error: 'keyerror',\r\n        message: 'keymessage',\r\n        ready: 'keyadded',\r\n        close: 'keyclose'\r\n    },\r\n    // MS-prefixed (IE11, Windows 8.1)\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'msSetMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MSMediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n        // Events\r\n        needkey: 'msneedkey',\r\n        error: 'mskeyerror',\r\n        message: 'mskeymessage',\r\n        ready: 'mskeyadded',\r\n        close: 'mskeyclose'\r\n    }\r\n];\r\n\r\nfunction Protection() {\r\n    let instance;\r\n    const context = this.context;\r\n\r\n    /**\r\n     * Create a ProtectionController and associated ProtectionModel for use with\r\n     * a single piece of content.\r\n     *\r\n     * @param {Object} config\r\n     * @return {ProtectionController} protection controller\r\n     *\r\n     */\r\n    function createProtectionSystem(config) {\r\n        let controller = null;\r\n\r\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64, settings: config.settings });\r\n        protectionKeyController.initialize();\r\n\r\n        let protectionModel = _getProtectionModel(config);\r\n\r\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\r\n            controller = ProtectionController(context).create({\r\n                protectionModel: protectionModel,\r\n                protectionKeyController: protectionKeyController,\r\n                eventBus: config.eventBus,\r\n                debug: config.debug,\r\n                events: config.events,\r\n                BASE64: config.BASE64,\r\n                constants: config.constants,\r\n                cmcdModel: config.cmcdModel,\r\n                customParametersModel: config.customParametersModel,\r\n                settings: config.settings\r\n            });\r\n            config.capabilities.setEncryptedMediaSupported(true);\r\n        }\r\n        return controller;\r\n    }\r\n\r\n    function _getProtectionModel(config) {\r\n        const debug = config.debug;\r\n        const logger = debug.getLogger(instance);\r\n        const eventBus = config.eventBus;\r\n        const errHandler = config.errHandler;\r\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\r\n\r\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\r\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\r\n            return ProtectionModel_21Jan2015(context).create({\r\n                debug: debug,\r\n                eventBus: eventBus,\r\n                events: config.events\r\n            });\r\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\r\n            return ProtectionModel_3Feb2014(context).create({\r\n                debug: debug,\r\n                eventBus: eventBus,\r\n                events: config.events,\r\n                api: _getAPI(videoElement, APIS_ProtectionModel_3Feb2014)\r\n            });\r\n        } else if (_getAPI(videoElement, APIS_ProtectionModel_01b)) {\r\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\r\n            return ProtectionModel_01b(context).create({\r\n                debug: debug,\r\n                eventBus: eventBus,\r\n                errHandler: errHandler,\r\n                events: config.events,\r\n                api: _getAPI(videoElement, APIS_ProtectionModel_01b)\r\n            });\r\n        } else {\r\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function _getAPI(videoElement, apis) {\r\n        for (let i = 0; i < apis.length; i++) {\r\n            const api = apis[i];\r\n            // detect if api is supported by browser\r\n            // check only first function in api -> should be fine\r\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\r\n                continue;\r\n            }\r\n\r\n            return api;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        createProtectionSystem\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtection.__dashjs_factory_name = 'Protection';\r\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\r\nfactory.events = ProtectionEvents;\r\nfactory.errors = ProtectionErrors;\r\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\r\nexport default factory;\r\n"],"names":["FactoryMaker","instance","singletonContexts","singletonFactories","classFactories","extend","name","childInstance","override","context","getSingletonInstance","className","i","obj","setSingletonInstance","push","deleteSingletonInstances","filter","x","getFactoryByName","factoriesArray","updateFactory","factory","updateClassFactory","getClassFactoryByName","getClassFactory","classConstructor","__dashjs_factory_name","undefined","create","merge","arguments","updateSingletonFactory","getSingletonFactoryByName","getSingletonFactory","getInstance","args","classInstance","extensionObject","extension","apply","parent","prop","hasOwnProperty","getClassName","path","UAParser","Utils","dest","source","copy","s","empty","mixin","src","r","Array","l","length","clone","url","params","modifiedUrl","URL","forEach","param","key","value","searchParams","set","href","e","headerStr","headers","headerPairs","trim","split","ilen","headerPair","index","indexOf","substring","dt","Date","getTime","uuid","replace","c","Math","random","floor","toString","string","hash","chr","charCodeAt","originalUrl","targetUrl","original","target","protocol","origin","relativePath","relative","pathname","substr","lastIndexOf","startIndexOffset","ua","uaString","navigator","userAgent","toLowerCase","test","ErrorsBase","errors","config","publicOnly","err","EventsBase","events","evt","Constants","init","STREAM","VIDEO","AUDIO","TEXT","MUXED","IMAGE","STPP","TTML","VTT","WVTT","CONTENT_STEERING","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_L2A","ABR_STRATEGY_LoLP","ABR_STRATEGY_THROUGHPUT","ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA","ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING","ABR_FETCH_THROUGHPUT_CALCULATION_AAST","LIVE_CATCHUP_MODE_DEFAULT","LIVE_CATCHUP_MODE_LOLP","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","BAD_ARGUMENT_ERROR","MISSING_CONFIG_ERROR","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","TRACK_SELECTION_MODE_FIRST_TRACK","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","TRACK_SELECTION_MODE_WIDEST_RANGE","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","CMCD_MODE_QUERY","CMCD_MODE_HEADER","CMCD_AVAILABLE_KEYS","CMCD_AVAILABLE_REQUESTS","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","CC1","CC3","UTF8","SCHEME_ID_URI","START_TIME","SERVICE_DESCRIPTION_DVB_LL_SCHEME","SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","VIDEO_ELEMENT_READY_STATES","HAVE_NOTHING","HAVE_METADATA","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","FILE_LOADER_TYPES","FETCH","XHR","constants","ProtectionConstants","CLEARKEY_KEYSTEM_STRING","WIDEVINE_KEYSTEM_STRING","PLAYREADY_KEYSTEM_STRING","PLAYREADY_RECOMMENDATION_KEYSTEM_STRING","INITIALIZATION_DATA_TYPE_CENC","INITIALIZATION_DATA_TYPE_KEYIDS","INITIALIZATION_DATA_TYPE_WEBM","LICENSE_SERVER_MANIFEST_CONFIGURATIONS","attributes","prefixes","CommonEncryption","cpArray","retVal","cp","schemeIdUri","pssh","offset","view","DataView","version","getUint8","getUint32","slice","keySystem","initData","psshList","parsePSSHList","cpData","BASE64","__text","decodeArray","buffer","data","dv","done","byteCursor","size","nextBox","systemID","boxStart","byteLength","val","mediaInfo","licenseServer","info","contentProtection","targetProtectionData","j","ckData","k","attribute","prefix","__prefix","ProtectionEvents","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_STATUS_CHANGED","KEY_ADDED","KEY_ERROR","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_CREATED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","KEY_SYSTEM_SELECTED","LICENSE_REQUEST_COMPLETE","LICENSE_REQUEST_SENDING","NEED_KEY","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","KEY_SESSION_UPDATED","protectionEvents","MediaCapability","KeySystemConfiguration","ProtectionErrors","DashJSError","LicenseRequest","LicenseResponse","HTTPRequest","NEEDKEY_BEFORE_INITIALIZE_RETRIES","NEEDKEY_BEFORE_INITIALIZE_TIMEOUT","LICENSE_SERVER_REQUEST_RETRIES","LICENSE_SERVER_REQUEST_RETRY_INTERVAL","LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT","ProtectionController","protectionKeyController","protectionModel","eventBus","debug","needkeyRetries","cmcdModel","settings","customParametersModel","logger","pendingKeySessionsToHandle","mediaInfoArr","protDataSet","sessionType","robustnessLevel","selectedKeySystem","keySystemSelectionInProgress","licenseXhrRequest","licenseRequestRetryTimeout","setup","getLogger","on","_onKeyMessage","_onKeyStatusChanged","checkConfig","Error","initializeForMedia","handleKeySystemFromManifest","supportedKeySystems","mInfo","currentKs","getSupportedKeySystemsFromContentProtection","_selectKeySystemOrUpdateKeySessions","_handleKeySystemFromPssh","supportedKs","fromManifest","_selectInitialKeySystem","_handleKeySessions","requestedKeySystems","sort","ksA","ksB","indexA","ks","systemString","priority","indexB","keySystemConfiguration","_getKeySystemConfiguration","configs","protData","keySystemAccess","requestKeySystemAccess","then","event","selectedSystemString","mksa","selectKeySystem","trigger","_getProtDataForKeySystem","serverCertificate","setServerCertificate","error","KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE","KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE","ksIdx","current","_loadOrCreateKeySession","keySystemInfo","isClearKey","Object","keys","clearkeys","kids","TextEncoder","encode","JSON","stringify","sessionId","loadKeySession","createKeySession","initDataForKS","getPSSHForKeySystem","_isKeyIdDuplicate","keyId","_isInitDataDuplicate","KEY_SESSION_CREATED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_MESSAGE","message","keySystemString","clearMediaInfoArray","cps","sessions","getSessions","getKeyId","currentInitData","getAllInitData","initDataEquals","removeKeySession","sessionToken","closeKeySession","setMediaElement","element","_onNeedKey","off","setSessionType","setRobustnessLevel","level","setProtectionData","stop","_abortLicenseRequest","reset","retryTimeout","clearTimeout","keySystemData","audioCapabilities","videoCapabilities","audioRobustness","videoRobustness","ksSessionType","distinctiveIdentifier","persistentState","media","type","codec","status","keyMessage","messageType","licenseServerModelInstance","getLicenseServerModelInstance","eventData","_sendLicenseRequestCompleteEvent","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE","getSessionId","processClearKeyLicenseRequest","keyPairs","updateKeySession","_issueLicenseRequest","licenseServerData","_getLicenseServerUrl","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE","reqHeaders","withCredentials","_updateHeaders","httpRequestHeaders","headersFromMessage","getRequestHeadersFromMessage","onLoad","xhr","responseHeaders","parseHttpHeaders","getAllResponseHeaders","licenseResponse","responseURL","response","licenseResponseFilters","getLicenseResponseFilters","_applyFilters","licenseMessage","getLicenseMessage","_reportError","onAbort","MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE","statusText","readyState","onError","reqPayload","getLicenseRequestFromMessage","reqMethod","getHTTPMethod","responseType","getResponseType","timeout","isNaN","httpTimeout","licenseRequest","retryAttempts","get","streaming","LICENSE","licenseRequestFilters","getLicenseRequestFilters","_doLicenseRequest","request","retriesCount","XMLHttpRequest","cmcdParameters","getCmcdParametersFromManifest","isCmcdEnabled","cmcdMode","mode","cmcd","cmcdParams","getQueryParameter","addAditionalQueryParameterToUrl","open","method","setRequestHeader","cmcdHeaders","getHeaderParameters","header","_retryRequest","retryInterval","retryIntervals","setTimeout","onload","warn","ontimeout","onerror","onabort","payload","send","onloadend","onprogress","abort","serverURL","laURL","getLicenseServerUrlFromMediaInfo","schemeIdURI","psshData","getPSSHData","getLicenseServerURLFromInitData","getServerURLFromMessage","errorMsg","getErrorResponse","serverResponse","responseCode","responseText","filters","Promise","resolve","reduce","prev","next","retry","protection","ignoreEmeEncryptedEvent","initDataType","abInitData","ArrayBuffer","isView","String","fromCharCode","Uint8Array","getSupportedKeySystemsFromSegmentPssh","getKeySystems","setKeySystems","keySystems","KeySystemClearKey","KeySystemW3CClearKey","KeySystemWidevine","KeySystemPlayReady","DRMToday","PlayReady","Widevine","ClearKey","ProtectionKeyController","clearkeyKeySystem","clearkeyW3CKeySystem","setConfig","initialize","newKeySystems","getKeySystemBySystemString","initData1","initData2","data1","data2","cpIdx","supportedKS","cencContentProtection","findCencContentProtection","getInitData","cdmData","getCDMData","_getSessionId","_getSessionType","getClearKeysFromProtectionData","protectionDataSet","getProtectionData","dashjs","KeyPair","ClearKeyKeySet","protectionData","clearkeySet","jsonMsg","parse","clearkeyID","clearkey","parseInitDataFromContentProtection","cencDefaultKid","cencDefaultKidToBase64Representation","kid","btoa","match","map","a","parseInt","join","PRCDMData","messageFormat","msg","xmlDoc","parser","DOMParser","detectPlayreadyMessageFormat","dataview","Uint16Array","parseFromString","headerNameList","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","Challenge","decode","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","pro","prheader","setUint32","setPlayReadyMessageFormat","format","_cdmData","customData","cdmDataBytes","MEDIA_KEYERR_CODE","MEDIA_KEYERR_UNKNOWN_CODE","MEDIA_KEYERR_CLIENT_CODE","MEDIA_KEYERR_SERVICE_CODE","MEDIA_KEYERR_OUTPUT_CODE","MEDIA_KEYERR_HARDWARECHANGE_CODE","MEDIA_KEYERR_DOMAIN_CODE","MEDIA_KEY_MESSAGE_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","MEDIA_KEYERR_UNKNOWN_MESSAGE","MEDIA_KEYERR_CLIENT_MESSAGE","MEDIA_KEYERR_SERVICE_MESSAGE","MEDIA_KEYERR_OUTPUT_MESSAGE","MEDIA_KEYERR_HARDWARECHANGE_MESSAGE","MEDIA_KEYERR_DOMAIN_MESSAGE","MEDIA_KEY_MESSAGE_ERROR_MESSAGE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","protectionErrors","NeedKey","KeyMessage","KeySystemAccess","ProtectionModel_01b","api","errHandler","videoElement","pendingSessions","moreSessionsAllowed","eventHandler","createEventHandler","removeEventListeners","concat","ksConfigurations","reject","ve","document","createElement","found","supportedAudio","supportedVideo","configIdx","videos","videoIdx","canPlayType","contentType","ksConfig","errorMessage","mediaElement","addEventListener","keyerror","needkey","keymessage","keyadded","ksInfo","newSession","getExpirationTime","NaN","getSessionType","generateKeyRequest","addKey","keyID","cancelKeyRequest","handleEvent","findSessionByID","code","errorCode","systemCode","shift","defaultURL","sessionArray","len","removeEventListener","SYSTEM_STRING_PRIORITY","ProtectionModel_21Jan2015","mediaKeys","numSessions","session","removeSession","setMediaKeys","_closeKeySessionInternal","getUsable","_requestKeySystemAccessInternal","idx","requestMediaKeySystemAccess","protDataSystemStringPriority","systemStringPriority","currentKeySystem","systemStringsToApply","_checkAccessForKeySystem","mediaKeySystemAccess","configuration","getConfiguration","_checkAccessForSystemStrings","createMediaKeys","mkeys","createSession","createSessionToken","dataType","generateRequest","toJWK","update","load","success","remove","close","token","splice","parseKeyStatus","keyStatuses","keyStatus","expiration","getKeyStatuses","usable","closed","ProtectionModel_3Feb2014","audios","audioIdx","window","MediaKeys","isTypeSupported","ksAccess","capabilities","ksConfiguration","ready","release","boundDoSetKeys","doSetKeys","bind","keySession","errorStr","destinationURL","keypair","keyid","license","keySystemStr","soap","uintToString","arrayBuffer","encodedString","decodedString","decodeURIComponent","escape","parseServerResponse","stringResponse","envelope","getElementsByTagNameNS","body","fault","parseErrorResponse","faultstring","statusCode","idStart","idEnd","detail","exception","node","firstChild","errorString","call","numKeys","jwk","kty","alg","jwkString","buf","bView","sessionTypes","initDataTypes","robustness","tcpid","actualurl","range","trequest","tresponse","responsecode","interval","trace","cmsd","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","HTTPRequestTrace","d","b","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INIT_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","CONTENT_STEERING_TYPE","OTHER_TYPE","APIS_ProtectionModel_01b","APIS_ProtectionModel_3Feb2014","Protection","createProtectionSystem","controller","_getProtectionModel","setEncryptedMediaSupported","videoModel","getElement","onencrypted","_getAPI","apis"],"sourceRoot":""}